Platform	Java core dump in gtk_ctree_get_node_info This is happening on Redhat 7.2, GTK GA driver (WSWB build).  The JRE dies via a java core dump when TreeItem.getExpanded is called within a dispose listener on the TreeItem.  Possibly GEF is doing something wrong here,  but this code does work on Win32 and it seems SWT should at least be throwing a SWTException instead of core dumping. " main " (TID:0x100519D8, sys_thread_t:0x8058C88, state:R, native ID:0x400)  prio=5 at org.eclipse.swt.internal.gtk.OS.gtk_ctree_get_node_info(Native  Method) at org.eclipse.swt.widgets.TreeItem.getExpanded(TreeItem.java:291)  at com.ibm.etools.gef.editparts.AbstractTreeEditPart$1.widgetDisposed (AbstractTreeEditPart.java:132)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:98)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code))  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:821) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:811)  at org.eclipse.swt.widgets.Widget.releaseWidget(Widget.java:723) at org.eclipse.swt.widgets.Item.releaseWidget(Item.java:135)  at org.eclipse.swt.widgets.TreeItem.releaseWidget(TreeItem.java:413) at org.eclipse.swt.widgets.Tree.removeAll(Tree.java:859)  at com.ibm.etools.gef.ui.parts.RootTreeEditPart.setContents (RootTreeEditPart.java:81)  at com.ibm.etools.gef.ui.parts.AbstractEditPartViewer.setContents (AbstractEditPartViewer.java:326)    Hopefully, this is the relevant piece of the core dump.  If you need more, please let me know.  ----------------------- PID: 1777   ----- Native Stack ----- Diagnostics_Impl at 40016BAB in libxhpi.so  dgGenerateJavacore at 401226B9 in libjvm.so abortJVM at 401B33F1 in libjvm.so sysUnwindSignalCatchFrame at  4021680F in libhpi.so sysSignalCatchHandler at 402168A1 in libhpi.so intrDispatch at  402170BA in libhpi.so intrDispatchMD at 4021731C in libhpi.s abort at 4202A7D2 in ja  intrDispatch at 402170BA in libhpi.so intrDispatchMD at 4021731C in libhpi.s  Java_org_eclipse_swt_internal_gtk_OS_gtk_1ctree_1get_1node_1info at 42F99F89 in libswt-pi-gtk-2047.so  ?? L0_invokevirtual_quick__ at 40182EB6 in libjvm.so  L0_invokeinterface_quick__ at 4018333E in libjvm.so ?? -------------------------------------------------------- Fixed in the new 2.0-based widgets.
Platform	[Import/Export] Import existing project wizard doesn't copy Build: F1  The " import existing project " wizard doesn't copy the contents of the  projects. I can see cases where I would not want to copy the contents, so there should be  an option in the wizard page that says: [x] Copy the projects into the workspace This is by design. If you wish to copy then import from file system - the  exisiting project wizard is specifically there to handle cases where you want to look at an exisiting project without creating extra resources. This is counter-intuitive since all of the other import features actually copy the data.  I have  found that I am often peforming this operation when I migrate to a newer version of Eclipse.  I create a new workspace, import all of the new plugins, and then I want to import a plugin that I have  written that is in a different workspace.  I was seriously confused when I found out that the contents of the plugin were not copied alongside the rest of the plugins that I had  imported. Like I said before, I think we should consider an option to copy the resources.  This  will make this import wizard feel more like the other import wizards. The problem here is our use of this wizard in the import dialogs - it is  really meant for users who want to use a project outside of thier workspace - the file import is designed for those who wish to copy in.  We might want to consider a better name for the entry in the import dialog. I think many users would find the " import ( & copy) an existing project " feature to be useful.  Seth,  Luc, and I have all been burnt with this, here's the (lossy) scenario.  1. Import existing project from another workspace. 2. Delete the other workspace. 3. Code is  gone. Renaming the existing wizard could prevent users from banging their heads against the  monitor, but the fact that three of us tried to use this feature makes me think that we all want to use it, but can't because of its current limitations.  As I see it, here is the chain of problems: 1. The file system import does not import projects.  You can import contents of a project into a _pre-existing_ project, but you cannot import a project like you can using the  project import wizard. 2. The import project wizard feels like it should make up for this  limitation. 3. The import project wizard doesn't tell the user that is is just linking to a  project. Since other import wizards actually copy data, my gut feel is that the import  project wizard should do so by default.  It should have a check box to turn the copy off, however, it should be copy by default.  This would make the wizard behave more consitently with the other  wizards.  If the user does turn the copy off, a (huge, blinking, construction orange) notification should indicate to the user what they are doing so that they don't delete code.     At a minimum, the wizard should be modified to notify the user that the code hasn't been  copied. Should add a note to the current page describing this. A copying import wizard  is a potential enhancement. Argh. I just got owned by this too. This isn't an enhancement, it's a bug. The  UI is totally misleading. An item for adding an external project to the workbench without copying the  contents may be useful, but we need an explicit action for that case. The existing UI describes the feature that everyone here wants - importing an  existing project INTO the workspace. Jed's solution to the problem (the " [x] Copy... " checkbox) seems like a good  solution. The problem here was the struggle between real estate and making it clear. It  is really somewhere between the New and Import Wizards - it is not creating anything and it is not importing either. The fact that it's not doing what it says ( " importing anything " ) is what makes  this a " lose all of your work " kind of problem. How would it lose all of your work? You are not deleting anything.  You are after a different kind of import wizard here. This wizard is for allowing you to use a project that has been placed outside of your workspace  in a case where you don't want to copy.  What you want is to import and entire project into your workspace - essentially the same functionality as creating the project and then importing  it's entire contents from somewhere.  The current functionality is very useful and was created in response to user requests (I use it all of the time myself). Changing it is not the answer -  adding another import wizard is. However point taken about it being not clear enough - it needs some sort of  note to make this clearer. The user can loose work the following way:  1. Import project from other location. 2. Delete  other location. Since the user has ' imported ' the project, they assume that it is safe to  delete the old location. The name ' import ' implies ' copy into ' .  All of the other wizards copy  their input into the workspace.  This is the only one that doesn ' t.  If the user has used any of the  other wizards, they are going to assume that this one works this way as well.  Even if they haven't  used any of the other import wizards, they are going to assume that this wizard copies, simply based off of the name.  I agree that in its current state this wizard is useful.  I do not want to loose the current functionality.  Once I learned its quirks I was able to use it  effectively. However, I want to change the default functionality to something that is in  line with the philosophy of the rest of the wizards.  If a " power user " wants to leave the project  outside of the workspace, but reference it they should be able to, but the average user is not going to understand the situation and is eventually going to burn themselves. Yes, the semantics of the " Import Existing Project " is misleading and needs to  be improved. No work is going to happen on this item until the improved project layout support plan item has been completed as setting up projects in eclipse  is going to have to be revisted anyway. Also note, that PDE used to have the same behavior and suffered from similiar  usability issues and they changed their import to always copy as well. Upping the priority to P2 to reflect this. At a minimum we need to add a clarifying description in the wizard that this  does not copy, for M4. We should also consider adding a checkbox for copy vs. reference. If copy is not checked, we should still show a warning message. The problem with copy is that java does not have support for copy - the best  we can do is create and move contents but other file properties are lost so you are in fact not copying when you import (See Bug 17523). We should avoid  the use of the word " copy " anywhere due to this issue.  I agree that we should make the message clearer for M4. Any suggested wording? The " copy " checkbox could just do whatever the FileSystem import wizard does. Somehow or other, the FileSystem import wizard gets it right. Actually it doesn't (see Bug 17523) but nowhere do we say that we are copying  anything for im port. This *is* Bug 17523. :) Must be Friday :- > ... see Bug 2106 and Bug 25387 Changed message to   Create a new Project from an Eclipse project in the file system. This does not copy the project to the workspace. The labeling of this feature in the import dialog is still (in 3.1M4) a major  usability bug. I believe it is quite natural to believe a function maked " Import  - > Existing project into Workspace " will do just that. To most people importing  implies copying, but this function only creates a reference. How about changing the label to something like " create reference to existing project " . The severity  of bug should be upped to critical, as it encourages users to lose data: " I've  now created a copy, so it's save to delete the original... " Boom, there goes all  your work :( I'm aware of the message at the top stating that this will _not_ copy the data,  but many users will not read it, as it is already " obvious " what it does.  As you may already have guessed, it happened to me... :( We are hopefully going to add copy support to the Import Existing project  feature at some point as part of our general improvment of this support. *** Bug 102452 has been marked as a duplicate of this bug. *** Patch to allow importing of projects copying files.  There is also code in this patch that will not allow importing of projects with the same name that already exist in the workspace.  This problem was raised in several other bug reports, but the main one is bug 80833. Added test for new import feature. Tod, can you check this patch?  And also apply the second patch for the added  test to the test suite? Patches and test suites released to HEAD for build > 20051025 Marking this one Fixed. verified in 20051101 About UI and messages - I would like to suggest one minor fixup for the " Import - > Existing Projects into Workspace " wizard.  On the Import wizard window, at the stage where I Select the wizard, the description for " Existing Projects into Workspace " says:  Create new projects from an archive file or directory. This does not copy the project into the workspace.  Well, that's not correct if you import from a Zip file -- it certainly does copy the project into the workspace in that case!  Here's a possible rewording:  Create new projects from an archive file (files are copied) or directory (no files are copied).  Thanks for listening. What build are you using?  That message has changed.
Platform	StyledText - bidi - Win2K/XP support Because System.getProperty( " file.encoding " ) returns the user locale, StyledText will not work properly when the user locale == English and the system locale ==  Hebrew/Arabic on a bidi machine.  In this instance, the keyboard language will not be automatically set as the user cursors/moves around the text.  For  example, you could have a hebrew string and put the cursor in the middle of it and the keyboard will not change to hebrew.  I'm sure this will be unacceptable to the bidi folks.  I guess the question is  whether or not they run under this configuration (English machine, English user locale).  They can always set their user locale to Hebrew to work around the  problem. We can do what Control.getCodePage() does (package method that we cannot  access) to figure out the current code page and use this value instead of the " file.encoding " if a fix is necessary.  Or if the IBM JRE decides to do the  right thing in this instance, this will not be a problem. Ultimately we should look into using GCP.  One thing to investigate is when the  type of LOCALNUMBER is returned.  If that is just in Arabic mode, we can use GCP.  If not, we can't (won't have anyway to distinguish between ARABIC and  HEBREW). J9 2.0 also returns the user locale when querying the file.encoding system  property. See [Bug 20965] for comments about isBidiPlatform test. Renaming PR to use for tracking Win2K/XP bidi issues. *** Bug 21421 has been marked as a duplicate of this bug. *** There are four variables that affect bidi on Win2K/XP platforms:  - user locale, this is the locale answered by System.getProperty ( " file.encoding " ) - installed languages, list from Regional Options - system locale, the locale answered by OS.GetACP, set as default in Regional  Options - input locales, list of the installed keyboard languages  Ideally, the isBidiPlatform test should check the list of installed languages to see if a bidi locale is included.  API we would need (I think) would be  EnumSystemCodePages and EnumCodePagesProc.  In lieu of this API, we could use the following check to cover most of configurations:  isBidiPlatform() if (fileEncoding == bidi code page) return true;    if (GetACP == bidi code page) return true; if (keyboard languages includes bidi language) return true;    return false; This test would not handle the case where Hebrew and English locales are  installed, user locale is English, system default locate is English, and only English keyboard language installed. Sent McQ email seeing what he wants to do regarding how to test for  isBidiPlatform. Regarding automatic keyboard setting.  Win2k/XP will allow multiple bidi and  non-bidi languages in one document.  We can only support correct keyboard setting for a document containing 1 bidi language and 1 non-bidi language.  We  do not know the language of the characters - just whether or not the character is bidi, so we cannot distinguish between multiple bidi languages or multiple  non-bidi languages.  Changed the setKeyboard code to work with this limitation in mind - keyboard is not set if in bidi mode and move to a bidi char, keyboard  is not set if in non-bidi mode and move to non-bidi char, keyboard set to first bidi language when setting to bidi and first non-bidi language when setting to  non-bidi. Released keyboard changes.  Setting the keyboard language is now based on the  installed keyboard languages, not System.getProperty( " file.encoding " ).  Using  the system property causes problems on Win2K since the user locale does not have to be hebrew/arabic in order to have hebrew/arabick keyboard language  installed. Talked with SQ about making Control > > getCodePage() protected, but cannot do  this since getCodePage() returns different type of value on Windows (int) vs. Linux (String).  Suggestion is to copy the code and provide the needed  functionality in BidiUtil. See bug 21696 for Unicode RTF transfer issues. Released changes to use enumSystemCodePages to test for bidi platform and  changed bidi caret processing to work based on installed keyboard languages (e.g., bidi R/L caret only used when bidi keyboard language installed). Issue of RTF copy still opened.  Will update [Bug 21696] to address this issue. EnumSystemCodePages not returning what we want.  It returns code pages for  languages that are not installed.  Need to change isBidiPlatform test. Put back original test which looks at the installed keyboard languages.  Also  need to change the method to look at GetACP value and user locale (System.fileEncoding) value.    Also need to investigate [Bug 22060] .  Even though bidi language not installed,  shouldn't be getting an ArrayIndexOutOfBounds. May be able to use the following API to get the languages that are actually set  for the system.  Need to talk to Silenio though about the fact that it's only  supported on Win2K/XP. That API is based on the list we call system locales. It returns one of the  values below.  This would be worth trying out. It's only supported in Win2k and  higher which is all we need. I don't know how the SWT library would handle this  for other windows platforms (they could just return without doing anything). LGRPID_WESTERN_EUROPE LGRPID_CENTRAL_EUROPE LGRPID_ARABIC LGRPID_ARMENIAN LGRPID_BALTIC LGRPID_CYRILLIC LGRPID_GEORGIAN LGRPID_GREEK LGRPID_HEBREW LGRPID_INDIC LGRPID_JAPANESE LGRPID_KOREAN LGRPID_SIMPLIFIED_CHINESE LGRPID_TRADITIONAL_CHINESE LGRPID_THAI LGRPID_TURKISH LGRPID_VIETNAMESE The API is EnumSystemLanguageGroups Tried EnumUILanguages, which seemed promising, but doesn't return what we need. EnumSystemLanguageGroups does the trick.  Need to change the isBidiPlatform  test to use this API.  Also need to consider NT & 98, which don't support this  API. Fixed
JDT	Concurrent modification updating classpath Build 20020521 (F1)  I cannot reproduce this, but I got an error in my log file while running the PDE " Update Classpath... " action on a plugin.xml file.  It was a  ConcurrentModificationException in ClassFileDocumentProvider. It is quite likely that I had several class file editors open on classes in the same  project that was having its claspath updated.  In any case, I couldn't  reproduce, so perhaps it is a time-sensitive interaction with a reconciler thread.  Stack attached. it would be good to understand how this could happen.  However, ClassFileDocumentProvider.fireInputChanged should follow the standard listener pattern to copy the listeners to create a snapshot before notifying  listeners. *** Bug 18420 has been marked as a duplicate of this bug. *** ClassFileDocumentProvider uses robust iterator in F2. Verified in code that fireInputChanged used robust iterators  Verified on F3
Platform	< wizard > should know the whole path of < category > Having < wizard > element in my plugin.xml, one should write the whole category  path to its attribute " category " like   category= " cat1/cat2/cat3 " What for?  cat3 always knows its parent category, cat2 knows its parent category and so on. From your design wizard writer should always know the whole category chain. Is  it always possible? Is it convinuent? Is it necessary? NO!!!! *** This bug has been marked as a duplicate of 2664 ***
Platform	[Team] Local history improvement Hello, Like  a previous request, I focus onto a JBuilder6.0 feature (which exist s in  Eclipse) which is nicely implemented from my point of view I'm also a every day  user of Eclipse ;-) ). I found the history presentation very synthetic and more useable than in Eclipse. It is hard to describe, but you can maybe take a look to the history panned view onto a java class file for instance.  I've also to admit thare are many feature in Eclpse about the local history  that exists in Eclipse and not in JBuilder. But I think also we can make a nice merge of the two implementations ;-) Best regards Xavier Will investigate post 2.0. Reopening There are no specific suggestionsin this bug so I'm closing. If you have  specific suggestions, then you may log them.
Platform	First column in table is always left aligned (was TableColumn bug) Table SWT widget. Two columns added, not tested with more. With TableLayout, I  don't know if it's relevant.  I use new TableColumn(parent, SWT.CENTER) on both columns and only the second aligns properly, the first stays on the left. Please enter your test case which shows the problem. Will not fix for R2.0. Post 2.0. Re-opening bug reports for review. To augment the original bug report, I can never change the alignment of the  first column, regardless of number of columns. In other tests, not only can the first column's alignment not be changed, but  all the even-numbered columns(!) have the same problem. This is a serious bug, though you can workaround part of it by laying out the  text in each cell manually.  However, you can't fix the column heading. Oops - I'm afraid comment 4 was premature:  the problem is with (a) the first  column, which can never be aligned other than left, and (b) any column with an image in the column header!  Removing the image from the label enables proper  aligning in these other columns.  Sorry about the inaccurate comment #4. I have this problem also and can not make the first column to allign to the  center, so i'll try to hide it and to make one more column On Windows, the platform will not allow you to change teh alignment of the  first column. From MSDN: " If a column is added to a list-view control with index 0 (the leftmost  column) and with LVCFMT_RIGHT or LVCFMT_CENTER specified, the text is not right-aligned or centered. The text in the index 0 column is left-aligned.  Therefore if you keep inserting columns with index 0, the text in all columns are left-aligned. If you want the first column to be right-aligned or centered  you can make a dummy column, then insert one or more columns with index 1 or higher and specify the alignment you require. Finally delete the dummy column. " Assigning to Steve to consider building the dummy column technique into SWT. We won't be working around this one. *** Bug 114846 has been marked as a duplicate of this bug. *** *** Bug 134000 has been marked as a duplicate of this bug. *** *** Bug 151342 has been marked as a duplicate of this bug. ***
Platform	StyledText  - copy-from text edit feature I used a text editor a long time ago that had a very useful feature that I'll call " copy-from " for lack of a better term. Here's the  description:  I'm editing text. While holding down some special key (Ctrl or  Ctrl-Shift or something), I select some text elsewhere in my window. Selecting this other text does NOT change the current type-in point. When I let up on the  special key that I've been holding down, the selected text gets copied to the current type-in point. That's it.  The reason this is so handy, especially for programming:  There are often times when I want to copy some text into the current place where I'm typing and the thing I want to copy is right there just two lines up from where I am. For example, a local variable name. To do this currently, I can either just type the text or I can go select the text to be copied (thus losing my type-in point), copy it to the clipboard, then carefully click back in the place where I just was and paste from the clipboard. This is usually more trouble than it is worth and I end up just typing the text again. The copy-from  feature can be a big typing time-saver. kai please comment, give prio or move to later. Same as the ET++ text support. Post 2.0. StyledText is owned by SWT StyledText is owned by SWT moving there for consideration. See included patch. Will consider post 2.0 Look at change. Should be able to cancel the special copy. Otherwise sounds like a good idea to  me. Knut, how do you envision cancelling working?  You can simply cancel the  operation by not selecting something. Agree, clicking somewhere to remove the selection should cancel the operation. That way you can change the selection as often you want while CTRL is pressed and canceling would be pretty intuitive. The code should check whether there's  anything to insert though. I want to be sure you know: I already wrote the code for this (and have been  happily - well, mostly happily - using it for several weeks). I attached it to this request. So you can try it out and see how it " feels " . One thing I would  change: the code I attached usually leaves the type-in point at the beginning of the inserted text instead of the end - it would be much better at the end.  Thanks. Yes, I think both Lynne and I were refering to the way your code works now.  Aside from formatting (we like to keep a consistent coding style within a given compilation unit) the code looks fine.  I don't think we need the ctrlIsDown flag though. The mouse down event has the  stateMask set to CTRL in this scenario. I agree about placing the caret after the copied text. I like the feature and it couldn't be implemented by the application (vs.  adding it to StyledText) because the regular StyledText mouse handling would always run in addition to any application behavior. I considered the risk of  breaking apps that implement their own special mouse select features on top of StyledText (like dragging the selection to cut/copy text). However, I don't  think this would even be possible for the same reason. I vote for committing the feature after making the changes I mention above.  Aside: Which version of StyledText did you base your fix on? Knowing this would make comparing the change easier. StyledText has changed a lot since May. " Which version of StyledText did you base your fix on? " Yes, well, what a good  question. I apologize - I didn't actually keep track of that. It appears that I  made the edit on 10 May 2002 and the other files " around it " (that I did not  change - such as TextChangingEvent.java and TextChangeListener.java) are dated 6 May 2002. The plugin directories have " _1.9.0 " in the file names. It appears  to be from just before release F3. I tried to find StyledText.java in the CVS repos (via the web) and I cannot even find it now! Anyway, hope that helps  some. Released fix.  Will be in > 20020908 build. When I use this feature with no text selected (just a single type-in point), it  works perfectly. But when I have some text selected and use this new feature, then the type-in point ends up in a strange place. Here's a more complete  description: 1. Select some text.  2. Press and hold down the Control key. 3. Select some other text.  4. Let up on the Control key. = > The text selected in #1 is replaced by the text selected in #3 (as desired),  BUT the type-in point now is not immediately after the just-inserted text - instead it is several characters further out. The problem is obviously this line of code in StyledText.handleKeyUp(Event): setSelection(getSelection().x + toCopy.length());  I'm not sure how it should be changed, but it doesn't seem to difficult to  figure out (I don't have all the eclipse sources installed, or I would take a  few minutes to figure it out). Maybe it needs to look at pasteToLocation to see if it is between two chars or if it is several selected chars. Fixed the above case.  Lee, will you please pick up next build and make sure  the behavior is as you expect.  Thanks... We've gotten one complaint about this behavior.  May have to back it out or  make it configurable behavior.  Reopening. Oh, please, please don't back it out! I love this feature. At least make it a  configurable option.  Question:  Has this feature been advertised/documented? I think once programmers have used it a bit, they'll love it (hey, call me  biased). Fixed the complaint by clearing pasteToLocation whenever a key is pressed.   This should not affect what you expect from the behavior.  Leaving this open though.  Some visual indication of this special mode might be useful.  Also  need to check some weird selection behavior that is occurring.  Do the following:  1. Type the following into the widget: This is Line 1. This is Line 2. This is Line 3.  2. Put the cursor at the end of Line 3. 3. Press the CTRL key.  Swipe the first line from right to left and leave the  cursor outside of the widget. 4. With the mouse button still down, release the CTRL key.  You see slow motion  selection occurring.  Autoscrolling is coming into play. We might also consider doing the special copy of CTRL-SHIFT to make it a little  harder to do (i.e., to lessen accidentally invoking the mode). I think we should only consider changing the keystroke when we get further  complaints about accidental invocation. Your fix should handle most cases. If people randomly press ctrl while mouse selecting they will just have  a " hint " that there's a new feature. Also, if we add visual indication they will know that something special is happening when pressing ctrl while mouse selecting. We could leave the caret at  the insert location instead of putting it at the end of the selection as a visual hint. Lynne, regarding the posts on 9-11 and 9-13 (the type-in point ends up in a  strange place when replacing text):  I finally picked up a new build (I have M1 now), but it still doesn't seem to do the right thing. Try replacing a small  amount of text with a larger amount of text - the type-in point doesn't end up  right after the just-inserted text, instead it is way out to the right. Lee, the scenario you noted works fine for me.  Can you give me a specific  example?  I've tried replacing small amounts of text with larger amounts of  text various ways and the behavior works.  For example these two scenarios work fine:  Type " This is a very, very, very, very, very long sentence. " Select " a " . Ctrl-Select " very, very, very, very, very long sentence " .  Type " This is a very, very, very, very, very long sentence. " Select " long " . Ctrl-Select " This is a very, very, very, very, very " . Oh how embarrassing - sorry, sorry. I was inadvertently still using the  previous build of eclipse! It indeed works fine. Thanks! Backed out the change.  See [Bug 23899].  The feature request leads to unacceptable behavior.  Sorry Lee, but we see no way to implement this feature  and correctly support the case in 23899. Crap. Pardon me, but I really really like this feature and I think lots of  other people would like it too if they knew about it and tried it. In fact, the problem described in 23899 is only a problem because he is using ordinary  copy/paste so heavily. With this new copy-from feature, I find myself using ordinary copy/paste much less often than before. I gotta say: ordinary  copy/paste is a pain! Nevertheless, I do see the problem.  Can't we just put  this new copy-from feature on a Preferences check box (with default turned off?). Pleeeease? Pretty please? :-) Or another thought - put this new copy-from feature on the Alt key or Control- Shift or.... You could lobby JFace to put it in as a customizable option.  We do not think  this should be done at the StyledText level.  Note that we were able to successfully implement the behavior on top of the StyledText widget.  I've  attached the code for how we did this.  I guess our point is that it would probably be best to do this on top of the StyledText widget, not internal to it.
JDT	Code Assist - void method are proposed in assignment 1) create class X. public class X { int foo1;    void foo2(){ int i;       i = foo < cursor > } } 2) do ctrl+space at cusror location. foo2() is not a valid suggestion. Fixed. Verified.
JDT	Second target incorrectly breaks on conditional Using source and same conditional breakpoint as in bug 13414, launch a debug  target.  It correctly flys along. Hit F9 This target incorrectly hits the conditional breakpoint. Following logged on starting second target: java.lang.NullPointerException at  org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.getContext (Instruction.java:44)  at org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.getVM (Instruction.java:48) at  org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.newValue (Instruction.java:89)  at org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.pushNewValue (Instruction.java:85) at  org.eclipse.jdt.internal.debug.eval.ast.instructions.BinaryOperator.executeBinar y(BinaryOperator.java:95)  at org.eclipse.jdt.internal.debug.eval.ast.instructions.BinaryOperator.execute (BinaryOperator.java:32) at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute (Interpreter.java:30) at  org.eclipse.jdt.internal.debug.eval.ast.instructions.InstructionSequence.evaluat e(InstructionSequence.java:43)  at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$2.run (ASTEvaluationEngine.java:207) at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation (JDIThread.java:542) at  org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvaluationThr ead.doEvaluation(ASTEvaluationEngine.java:212)  at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1.run (ASTEvaluationEngine.java:172) at java.lang.Thread.run(Thread.java:484) *** Bug 13419 has been marked as a duplicate of this bug. *** The problem here is our instruction caching in conditional breakpoints. We were just caching the compiled expression (ICompiledExpression) once per breakpoint. This meant that multiple targets (and multiple threads) were operating on the same instruction sequence (oops!). The fix is to cache the instructions by thread. Fixed. JavaLineBreakpoint now caches compiled expressions on a per-thread basis. Please verify. Verified.
Platform	Resource history marks head version, not loaded version build 20021018  - did a sync on org.eclipse.ui - browsing a change to EditorsPreferencePage, it shows v1.4 on the left side  (loaded in my workspace), and v1.6 on the right side (the head version) - Show in Resource History - v1.6 is marked with a star, not v1.4 I find this confusing.  It would be more valuable to indicate which version I  have loaded. I assume the most recent version is the one in head, so I don't need that to be  marked specially.  I guess this doesn't hold for split-stream development  though.  Perhaps two different markers are necessary. Is this still happening for you?  I may have been resolved by an earlier fix, because I don't see it happen  anymore.  Here is what I did to test: In workspace WS1, I created a project with a class, and released it as 1.1.   Now, I brought that into another workspace, WS2.  In WS2, I made a change, which I released as 1.2.  (Now HEAD is 1.2)  Next I do a sync in WS1.  On the  left (ws file) is 1.1, on the right (repo file) is 1.2.  I do " show in  resource history " .  The star is against 1.1.  Is this the same scenario as yours?  Or you are talking about something else? Still a problem.  If I do it directly from the Package Explorer, it's OK.  If I  do if from the Sync view, it tags the head revision. I could reproduce the problem with the following steps.  1) Load a module from HEAD 2) Select a file in the module and load an older revision of it. 3) Compre the module against HEAD. 4) Select the file in the comparison list and choose " Show in Resource History " Attached a patch to fix this bug. Pending patch application by commiter. Apparentley that Bugzilla workflow is not going to work.  Sigh. Released to HEAD
JDT	I don't like pink I find the pink highlighting of brackets very visually distracting. Please let  me select another color. Also, PLEASE PLEASE allow me to TURN OFF the bracket highlighting feature. I  find it distracting in general, and not everyone wants it. Also, if the cursor is on top of the highlighted box, the cursor itself flashes  in a bright green, which is also quite weird. User can trun off bracket matching. Additionally the color is customizable
Platform	SWTException should overwrite printStackTrace(..) (1GLDW6P) Exception that wrap other exception such as ClassNotFoundException,  ExceptionInInitializerError, ExceptionInInitializerError, etc, overwrite the printStackTrace(...) methods to print the wrapped exception.   SWTException should to the same. Because users need to see SWTException.throwable, they are hacking Workbench to do:  if (e instanceof SWTException) { SWTException swt= (SWTException)e;  Throwable t= swt.throwable; if (t != null) {   t.printStackTrace(); } } NOTES: We modified " printStackTrace() " to print the trace for the enclosed exception.  We did not modify the versions of this method which take an argument (i.e. the PrintWriter or PrintStream version) because this would break compatibility  with J2ME.
JDT	Feature: filter static initializers (1GKQHTT) DW (9/27/2001 5:57:43 PM)  from EG: I'd like to have the option to not step into static initializers. This is  similar to not stepping into synthetic methods. I will be done the code review for JDIThread today. You can start on this next week. Done.  Added Java Debug preference to control this feature.  This required  recognizing when a step into had effectively been a no-op, because the step into encountered only filtered code.  In these cases, all VMs seem to put the  instruction pointer back where the step was initiated.  This is confusing to the user, so there is an extra programtic step into in these case to move  forward to the next (unfiltered) line of code. The work to support this feature meant that we could also add a ' filter  constructors ' feature almost for free, so that has also been added. Fixed. Verified.
Platform	Preview pane: Label has wrong size, truncates text I20020521 Created Nevada bookmark Expanded Nevada Selected " Eclipse SDK 200205211339 " In the preview pane is a label that says, in part, " This category contains the various features of the 2002... " . Its sizing is very wrong; it's only wide enough to fit the word " category " , it's split over 8 lines, and everything past " 2002052 " is cut off at the bottom. *** This bug has been marked as a duplicate of 17123 ***
Platform	[CVS UI] Cannot checkin a file modified from a tagged file build 0129  1. Load a project version. 2. Modify/save one of the files. 3. Attempt to checkin the file. You get  cvs server: sticky tag `a1_1 ' for file `test2.java ' is not a branch cvs [server aborted] : correct above errors first!   I don't understand the " correct " workflow.  I can't untag the file locally, not  that that would make sense from a user point of view. What were you trying to do? The only way to modify history is to branch from  the version. This is intended CVS behavior. Maybe what you wanted was to have a branch wizard appear when that error is  shown to help you split from that version? post 2.0 Reopening No work is planned for this item.
Platform	Inconsistencies in SWT example descriptions Build: 20020123  Description: There are a number of ' small ' problems with the SWT examples. They  do not cause any errors, but they could be seen as problems. 1. The description for the paint viewer is incomplete. It ends with " The  Airbrush Tool implementation also " .  2. The description for the text editor refers to a " File " menu, but the only  menu on the text editor is an " Edit " menu.  3. None of the actions for the tool buttons in the file viewer have been implemented.  This is not an error, just an observation.  4. In the address book, the search tool does not search any items that are selected when you do the search. I suppose this is an implementation choice. Fixed 20020418
Platform	Can not edit Working Sets 20020418 1. create a new working set 2. press on details: nothing happens Fixed in > 20020419 *** Bug 14611 has been marked as a duplicate of this bug. ***
Platform	no way to turn border off for linux text widget I cannot turn the border off a text widget in Linux. Brad, GTK or Motif?  Please fix the OS field in this PR. Brad, the OS field in this PR says Windows 2000 but your comments indicate a  problem on Linux.  Can you update this PR to indicate the platform? If this is GTK, we fixed it recently, didn't we? Bug has been fixed on GTK. Motif works fine on Motif too. Closing. cleaning house, verifed
Platform	[Editor Mgmt] Ctrl+Tab does not work in editors with multiple tabs I've been trying to work in WSAD almost exclusively on the keyboard for a few  weeks now.  In my opinion, this is the most vexing defect in the entire application, from an accessibility point of view.    In an editor with multiple tabs (such as the EJB editor, EAR editor, Server configuration editor, etc) it is extremely difficult to change the current tab  which is shown from the keyboard.  It is (usually) possible, but the best way currently available is to press shift+tab repeatedly, until the tabs become the  active field (which is a very subtle visual change.)  Then, the cursor keys are used to select the desired tab and tab is used again to go into the actual  fields of the editor. Ctrl+tab and Shift+Ctrl+tab should cycle through these tabs.  This hotkey is  standard, at least in windows. Another thing- if this winds up being implemented, it should also be used to  switch between views which share a common window.  For example, in the j2ee perspective, the j2ee and navigator view share a window.  The tabs at the  bottom of that window look and feel exactly the same as the tabs at the bottom of an editor, so the hotkey should do the same thing there too. Note that for the particular WSAD views that you mention, you should file a PR  against WSAD, not Eclipse. I'm leaving this PR open for the general complaint about view and editor  switching. Note that in Eclipse 2.0, you can use Ctrl+F6 to switch between editors,  Ctrl+F7 to switch between views, and Ctrl+F8 to switch between perspectives. There have also been changes to TabFolder and CTabFolder in SWT in 2.0, which  should enable Ctrl+Tab switching in multi page editors. Nick Edgar  2002-04-30 11:28 > There have also been changes to TabFolder and CTabFolder in SWT in > 2.0, which should enable Ctrl+Tab switching in multi page editors.  As of 2.1M5 tab-switching only " works " thusly (e.g. in plugin.xml):  * Open the file: comes up in Overview page. Page tabs are (left to right):    Overview Dependencies   Runtime Extensions   Extension Points Source    (Like many users, I mostly want to get to Source ;-) * C-Tab gets me to the first link on the page. To select the tab (i.e.   to outline " Overview " on the tab), one must instead do C-S-Tab. Not   very natural. * With Overview tab selected: one can keyboard-navigate only to   Dependencies, via < right > . < left > doesn't work, and both C-Tab and   C-S-Tab take me onto the page, not to another tab/page. * Though < right > opens the _page_ Dependencies, it does not select the   _tab_ Dependencies. As a result, 2 * < right > does not get me to the   Runtime tab (nor does < right > < left > get me back to Overview). To get   from Overview to Runtime, I must do C-S-Tab < right > C-S-Tab < right > Note that:  - Clicking on a tab does not select it: one must first click on it, then do C-S-Tab.  - There are no accelerator keys for tab/page navigation. - This is not purely a usability issue for me. I need a tool that will   automate regression-testing of my SWT UIs. To date the only I've   found is RobotJ, which is blackbox, which means one wants to avoid mousing whenever possible, due to the brittleness of absolute click-   coordinates. Proposals:  0 Once a user has selected a tab, s/he should be able to select an adjacent tab with a single key/chord.  1 Once a user has selected a tab, s/he should be able to select any other tab by repeatedly using the same key/chord.  2 Tabs should be ring-navigable: if a user has selected the leftmost tab in an editor, s/he should be able to select the rightmost tab   with a single key/chord, and vv. 3 Once a user has selected a tab in an editor with n pages, s/he   should be able to select any other tab via no more than floor(n/2) repetitions of some key/chord.  4 A user should be able to switch an editor page without actually selecting a tab.  5 Tabs should be individually addressable via accelerator keys. this is now a Ctabfolder tabbing behaviour on 3.0 question In 3.0:  Ctrl+PageUp and Ctrl+PageDown work Once focus is on the Tab (Shift+Tab) you can use the arrow keys to get around  (eitor page should not steal focus unless the editor is working hard to do this to you)  0 Once a user has selected a tab, s/he should be able to select an adjacent tab with a single key/chord.  - YES - arrow or Ctrl+PageUp 1 Once a user has selected a tab, s/he should be able to select any   other tab by repeatedly using the same key/chord. - YES  2 Tabs should be ring-navigable: if a user has selected the leftmost tab in an editor, s/he should be able to select the rightmost tab   with a single key/chord, and vv. - YES - CTRL+PageUP and CTRL+PageDown behave like this  3 Once a user has selected a tab in an editor with n pages, s/he should be able to select any other tab via no more than floor(n/2)   repetitions of some key/chord. - YES - isn't this the same as 2?  4 A user should be able to switch an editor page without actually selecting a tab. - Not sure what you mean - the editor showing would not be consistent with the tab selected? - that does not seem right  5 Tabs should be individually addressable via accelerator keys. - mnemonics are supported in CTabFolder but not used by eclipse Marking as fixed in 3.0.    The only thing I can see any more work on is item 5 - using mnemonics. CTabFolder supports mnemonics but eclipse does not use them - MVM? hmm mnemonics per tab?  I don't think that will be a good solution as there  are always different files opened etc..., so remembering the mnemonics and/or avoiding conflicking ones would be difficult.
Platform	Window manipulations block other threads from executing On Win32 platforms (such as Win2k and WinNT), operations such as moving a  scrollbar arm and resizing a window block other threads from executing.  This is not the case on QNX.  In case this is unclear, I have a testcase.  Also, it  should be noted that despite the trivial nature of the test, it represents the kind of issue we have with java.awt.ScrollPane, where we try to repaint a view  as it is scrolling, from the AWT main thread. 1. After the window opens, observe the background color changing between black  and white 2. Try to move the scrollbar's arm up and down - observe that the color  changing thread no longer changes the colors.  That thread will also be blocked if you grab the shell's corner and do some frequent resizing.  On Photon, the  color changes continue to occur. ----- testcase follows --------- import org.eclipse.swt.SWT; import org.eclipse.swt.graphics.Color; import org.eclipse.swt.layout.FillLayout; import org.eclipse.swt.widgets.Canvas; import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Shell;  public class TestSwtScrollEvents { Display display;  Shell shell; Canvas canvas;   public static void main(String[] args) {   TestSwtScrollEvents test = new TestSwtScrollEvents(); test.createWidgets();   test.open(); }   void createWidgets() { display = new Display();   shell = new Shell(display); shell.setLayout(new FillLayout());   canvas = new Canvas(shell, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);  } void open() { shell.pack();   shell.open(); createBackgroundThread();   while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep();   } }   /* * on a background thread change the color of the canvas.   * you should see the canvas switch between black and white * as long as the ui is responsive.   */ void createBackgroundThread() {   // create something to run Runnable runnable = new Runnable() {    Color black = display.getSystemColor(SWT.COLOR_BLACK); Color white = display.getSystemColor(SWT.COLOR_WHITE);    Color background = black; public void run() {     while(!shell.isDisposed()) { // set the background color of the  canvas.  This must // be done on the ui thread      display.syncExec(new Runnable() { public void run() {        canvas.setBackground (background);       } });      // wait .5 second before changing the background color      try { Thread.sleep(500);      } catch (InterruptedException e) {} // toggle color      if (background == black) background = white;      else background = black;     } }   }; // create a new thread for changing the background color and  start it new Thread(runnable).start();  } } There are definate problems with making this work on Windows. The event loop  isn't running when you drag the thumb; windows is calling us directly. Since  we normally run sync blocks in the event loop, they don't get run.  It is annoying behavior though. SN to see if this can be fixed. This has been fixed for all Windows platforms except CE.  The API needed to do  the fix is not available. Since the API is unavailable on CE, does that mean there is no workaround  possible there? BTW... probably makes sense to leave the OS field on this bug report  as " Windows All " to document the state of the original problem so that others  looking for the issue don't skip over this one due to the " CE " designation. The work around would have to use a different mechanism meaning that we would  be able to delete the current work around (don't need two work arounds).  Since the problem now only occurs on WinCE, I want to capture that fact. Fixed > 20020718
Platform	Usability: Launch config dialog should select last launch When the launch configuration dialog is realized, the last launched config should be selected by default. This was fixed last night? Not working? Closed.
Platform	[ExternalTools] Minor: Ant console " steals " focus Filing against UI since it I remember that it takes over the Ant UI plugin.  When running an Ant script with the Ant console then the Ant console becomes active. Since it is an output view only I'd prefer that it just shows up  without taking the focus, so that I stay in the other context. This is how the Console view is shown. Should fix. Not critical for M6. The new external tool support will be using the debug console.  Note: new external tool work is not yet released to the head stream and won't  for a while yet. This has not been fixed and should not have been closed. *** Bug 19755 has been marked as a duplicate of this bug. *** Fixed in ToolUtil. Please verify (Darin W). Verified.
Platform	[GlobalActions] Provide edit menu actions as toolbar buttons Is there any reason why some/most of the actions in the Edit menu are not provided as toolbar buttons? IMHO, the toolbar should include at least: undo, redo, cut, copy, paste and optionally delete.  Don't know much about apps  on other platforms but they are standard issue on almost all Windows apps. If screen real estate is a concern, can they be made into an action set at least, so if somebody is interested to have them on the toolbar, they can chose to do so? Defer for consideration in v3. Reopen for investigation There are currently no plans to work on this feature Closing old bugs.
Platform	Problem with UUID and IP address (1GGRLEK) Veronika complained that after some DHCP changes on her Linux machine, she got the following log when trying to save a file: Log: Wed Jul 11 15:05:43 EDT 2001 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Wed Jul 11 15:05:43 EDT 2001 4 org.eclipse.ui 0 java.lang.ExceptionInInitializerError java.lang.ExceptionInInitializerError: org.eclipse.core.internal.utils.AssertionFailedException: Assertion failed; Local host address cannot be found.. at org.eclipse.core.internal.utils.Assert.isTrue(Assert.java(Compiled Code))  at org.eclipse.core.internal.utils.UniversalUniqueIdentifier.getIPAddress(UniversalUniqueIdentifier.java:180) at org.eclipse.core.internal.utils.UniversalUniqueIdentifier.computeNodeAddress(UniversalUniqueIdentifier.java:130)  at org.eclipse.core.internal.utils.UniversalUniqueIdentifier. < clinit > (UniversalUniqueIdentifier.java:31)  at org.eclipse.core.internal.localstore.BlobStore.addBlob(BlobStore.java:26) at org.eclipse.core.internal.localstore.HistoryStore.addState(HistoryStore.java:107)  at org.eclipse.core.internal.localstore.FileSystemResourceManager.write(FileSystemResourceManager.java:387) at org.eclipse.core.internal.resources.File.internalSetContents(File.java:155)  at org.eclipse.core.internal.resources.File.setContents(File.java:177) at org.eclipse.jdt.internal.core.Buffer.save(Buffer.java:534)  at org.eclipse.jdt.internal.core.Openable.save(Openable.java:375) at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:92)  at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:248) at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:452)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184) at org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1003)  at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:508) at org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:38)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDocument(CompilationUnitDocumentProvider.java:305) at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:433)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$1.execute(CompilationUnitEditor.java:145) at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:59)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184) at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:73)  at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1489) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:193)  at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335) at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:570)  at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:717) at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1169)  at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:398)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:352) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:343)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:642) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:810)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:119) at org.eclipse.core.launcher.Main.run(Main.java:401)  at org.eclipse.core.launcher.Main.main(Main.java:274) Log: Wed Jul 11 15:05:50 EDT 2001 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Wed Jul 11 15:05:50 EDT 2001 4 org.eclipse.ui 0 org/eclipse/core/internal/utils/UniversalUniqueIdentifier java.lang.NoClassDefFoundError: org/eclipse/core/internal/utils/UniversalUniqueIdentifier  at org.eclipse.core.internal.localstore.BlobStore.addBlob(BlobStore.java:26) at org.eclipse.core.internal.localstore.HistoryStore.addState(HistoryStore.java:107)  at org.eclipse.core.internal.localstore.FileSystemResourceManager.write(FileSystemResourceManager.java:387) at org.eclipse.core.internal.resources.File.internalSetContents(File.java:155)  at org.eclipse.core.internal.resources.File.setContents(File.java:177) at org.eclipse.jdt.internal.core.Buffer.save(Buffer.java:534)  at org.eclipse.jdt.internal.core.Openable.save(Openable.java:375) at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:92)  at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:248) at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:452)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184) at org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1003)  at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:508) at org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:38)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDocument(CompilationUnitDocumentProvider.java:305) at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:433)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$1.execute(CompilationUnitEditor.java:145) at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:59)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184) at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:73)  at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1489) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:193)  at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335) at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:570)  at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:717) at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1169)  at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:398)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:352) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:343)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:642) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:810)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:119) at org.eclipse.core.launcher.Main.run(Main.java:401) at org.eclipse.core.launcher.Main.main(Main.java:274) Log: Wed Jul 11 15:13:57 EDT 2001 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Wed Jul 11 15:13:57 EDT 2001 4 org.eclipse.ui 0 org/eclipse/core/internal/utils/UniversalUniqueIdentifier java.lang.NoClassDefFoundError: org/eclipse/core/internal/utils/UniversalUniqueIdentifier at org.eclipse.core.internal.localstore.BlobStore.addBlob(BlobStore.java:26)  at org.eclipse.core.internal.localstore.HistoryStore.addState(HistoryStore.java:107) at org.eclipse.core.internal.localstore.FileSystemResourceManager.write(FileSystemResourceManager.java:387)  at org.eclipse.core.internal.resources.File.internalSetContents(File.java:155) at org.eclipse.core.internal.resources.File.setContents(File.java:177)  at org.eclipse.jdt.internal.core.Buffer.save(Buffer.java:534) at org.eclipse.jdt.internal.core.Openable.save(Openable.java:375)  at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:92) at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:248)  at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:452) at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184)  at org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1003) at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:508)  at org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:38) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDocument(CompilationUnitDocumentProvider.java:305)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:433) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$1.execute(CompilationUnitEditor.java:145)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:59) at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:73) at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1489)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:193) at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)  at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:570) at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:717)  at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1169) at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:398) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:343) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:642)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:810) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:119)  at org.eclipse.core.launcher.Main.run(Main.java:401) at org.eclipse.core.launcher.Main.main(Main.java:274) Log: Wed Jul 11 15:23:25 EDT 2001 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Wed Jul 11 15:23:25 EDT 2001 4 org.eclipse.ui 0 org/eclipse/core/internal/utils/UniversalUniqueIdentifier java.lang.NoClassDefFoundError: org/eclipse/core/internal/utils/UniversalUniqueIdentifier at org.eclipse.core.internal.localstore.BlobStore.addBlob(BlobStore.java:26)  at org.eclipse.core.internal.localstore.HistoryStore.addState(HistoryStore.java:107) at org.eclipse.core.internal.localstore.FileSystemResourceManager.write(FileSystemResourceManager.java:387)  at org.eclipse.core.internal.resources.File.internalSetContents(File.java:155) at org.eclipse.core.internal.resources.File.setContents(File.java:177)  at org.eclipse.jdt.internal.core.Buffer.save(Buffer.java:534) at org.eclipse.jdt.internal.core.Openable.save(Openable.java:375)  at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:92) at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:248)  at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:452) at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184)  at org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1003) at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:508)  at org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:38) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDocument(CompilationUnitDocumentProvider.java:305)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:433) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$1.execute(CompilationUnitEditor.java:145)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:59) at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1184)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:73) at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1489)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:193) at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)  at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:570) at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:717)  at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1169) at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:398) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:343) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:642)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:810) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:119)  at org.eclipse.core.launcher.Main.run(Main.java:401) at org.eclipse.core.launcher.Main.main(Main.java:274) NOTES:  RTP (8/23/01 11:54:47 AM) KD got the same problem on his Linux machine. The stack trace is similar. The real problem is that the user is unable to write its file because the history store is somehow not working (could not create UUID). And it should not prevent the user from saving its file. In this case, history is just a superfluous feature. Saving the file is the user's goal. Fixed for R2_0. Released into HEAD. PRODUCT VERSION:  R0.9 - Linux Fixed in v205. *** Bug 5712 has been marked as a duplicate of this bug. ***
JDT	Refactoring by code change [refactoring] In R1.0 there was the possibility to trigger refactoring by editing the source  code. An example of this: Changing the class name resulted in a query if the source file should be renamed to reflect the change.  Another example: Adding a package statement to a class or changing the package name of a class  resulted in moving the code to that package. If it did not exist, the package was created.  These features were removed in the 2.0 stream. This feature request is for the return of these features. I know that they have  been removed for consistency as not _all_ changes resulted in refactoring. But these features were so helpful and at least the most often used should  return as being possible to initiate by code editing. The now supported way by initiating the refactoring using menues is too tedious.  In my opinion the most often used refactoring features are: changing class name changing/introducing package For 2.0 there will be an autofix mechanism and we are investigating integrating  this smart rename functionality as part of autofix. See the posting from Dirk Baeumer on the newsgroup. Parts of the requested features are no addressed by quick fix. For example if  you change the class name or the package declaration quick fix will offer a corresponding fix to rename the CU or to move the CU to a different package.  Quick fix doesn't trigger a refactoring since this requires more fault tolorant  refactorings (for example the rename refactoring doesn't handle the case that  the CU name and the name of the top level class are different). But the quick fix feature gives you the old behaviour back.  Postponing the request to trigger a full refactoring > 2.0.
Platform	FileViewer example does not have drag and drop On Linux 7.2 the drag and drop functionality of the FileViewer example no  longer works. The drag and drop functionality of the ResourceViewer has also stopped working.  STEPS 1) Open the File Viewer example in Eclipse on Linux 7.2 2) select and entry in either view and attempt to drag it - nothing happens Running using Run- > Eclipse I get the following exception trace  Exception in thread " main " java.lang.ClassNotFoundException: org.eclipse.core.internal.runtime.InternalPlatform at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:755) at java.lang.ClassLoader.loadClass(ClassLoader.java:257)  at org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:914)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:809)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at SlimLauncher.main(SlimLauncher.java:14) Please ignore the previous stack trace. This was for another PR. On Linux (motif) you initiate a drag and drop operation using the middle mouse  button. Tested in 20011220 and it is working. Reviewed with originator and it works for him too.
Platform	DCR: PrintDialog should have get/setPrinterData() methods and nothing else (1GFW99N) Like FontDialog, PrintDialog should have a get/setPrinterData() pair of methods and  nothing else.  None of what the remainder of PrintDialog's API does anything novel  or which cannot be done by inspecting or modifying fields of a PrinterData object. The functionality that we offer is incomplete as well in that not all features of  PrinterData can be set/queried in that manner.  Best to stop the duplication now before it has the chance to fester and grow.   At this stage we have few users of PrintDialog, so we may be able to change this without much harm.  Otherwise, we can provide the get/setPrinterData() pair, then delegate  the old methods to use the embedded PrinterData object, and deprecate them. I doubt this will raise much of a fuss from our users, if any.  NOTES: PRODUCT VERSION:  Build 125 What is the status of this? Pls, mark PR as either FIXED or LATER as  appropriate. All of our dialogs have getters/setters for fields. It is only our data objects that allow direct field access. PrintDialog is consistent with FontDialog, FileDialog, DirectoryDialog,  ColorDialog, and MessageBox. PrintDialog allows get/set access to all fields.  Closing this PR.
JDT	Package view filter inconsistency Build 20020125  When activating a filter in the package view using a working set restrained to one project (e.g. org.eclipse.jdt.core), I can still open an editor on a file  located outside the working set: For example using: Open Type, or a search query.  The opened editor seems orphan since it is not connected to the package view. I am wondering why I am offered units outside the working set at all... the  search scopes used there should restrain to the package view filter in which the operation is performed. Shouldn't it ?  If not, then I guess I should not use working set filters ? It is consistent since the working set filter applies to the Packages view only. You are asking for a more global notion of working sets. However, it will be investigated whether working sets should also become a more  global notion by the Platform UI.
Platform	Export dialog does not populate list if element is preselected If the current selection for export is a file that is in the root of a project  selecting that project the first time in the export dialog won't do anything.  If you select a second time it will. STEPS 1) Create a Project Foo 2) Create a file bar.txt in Foo 3) Select bar.txt 4) Choose export 5) Select Foo in the dialog - no contents 6) CLick off and click again - contents Fixed in build > 20020221 Marking closed
Platform	Outliner: focus causes select causes horizontal scroll Build: F1  Create a java project Create a java package named a.really.longish.name.that.exhibits.the.bug Create a java class named Foo in a.really.longish.name.that.exhibits.the.bug Notice that the outliner selects the package name, and scrolls it.  Now I can't see the icons that help me determine the type of the element. This appears to only happen the first time I open an editor.  I would expect the icons to be displayed as well as the name when the auto selection occurs. This is SWT behaviour. I think it should only scroll horizontally under control of the user as well. You don't need a contrived case like this to see it either.  It happens all  the time, and is quite annoying not to be able to see the icons. This has been reported before. SN, is there anything we can do about  this? I talked to NE and SN. The current behavior *is* the correct windows  behavior. On top of that, there's no API on the native Tree for scrolling in  the X direction. To fix this, we would have to reach into the widget, grab the horizontal scrollbar and send a fake " thumb scroll to zero " event. This is  potentially dangerous, and I'm not really in favor of doing it this late in the  cycle. We also need to try this to see how well it works anyway. I suspect it will  show the shifted position, then scroll to the left each time. ugh. In any case, SN is going to do a quick investigation and see if we can  hack it in. Note: Because the behavior would often be undesirable, we would need  to add a new API " showItemLeftAligned " (or some such) which the UI  would have to be changed to invoke. NE: Is this still something you want? *** Bug 4465 has been marked as a duplicate of this bug. *** *** Bug 4470 has been marked as a duplicate of this bug. *** *** Bug 24566 has been marked as a duplicate of this bug. *** *** Bug 4948 has been marked as a duplicate of this bug. *** (Better late than never) Yes, I still find this annoying.  Perhaps we can look  at it now that 2.0 is out of the way. *** Bug 25861 has been marked as a duplicate of this bug. *** I find this limitation quite annoying in conjunction with the collapse all  action. It should reset the scrollbar to the left. Maybe the following trick would work ? - first click on collapse-all does what it currently does - next click (if nothing to be collapsed further) instead perform the scroll  left Fixed > 20030212  If the fix holds, it's the end of an era.  This Windows feature has been  annoying mankind since the dawn of time.  Knock on wood. Your fix seems to do the trick--nice job!  This has been irritating me for some time (but not quite since the dawn of time).  Out of curiosity, what did you do to fix it? Since the beginning of time ... before SWT, before Java, there were a small  set of operating system " behaviors " that are not bugs but that everyone  hates.  The list just got one smaller. Normally, we don't fix these things because fixing them causes other problems. You'll notice that the Windows Explorer has this bad tree scrolling behavior  so by " fixing " this, we are going against Windows and SWT philosophy.  What did I do to fix it?  Detect if the item top left and bottom left corner of the item was already visible and don't call the scrolling call.  This along  with reaching in and getting the scroll bar, sending a fake scroll left and other horrible and dangerous things.  There was also a problem involving  scrolling when the tree is zero sized.  Check the comments in the code. Watch out for flashing and " item not scrolled into view " bugs.
Platform	BIDI: Arabic chars corrupt using println from Scrapbook To type Arabic words :        1)press right alt+shift. 2)press left alt+shift to return to the English input layer.         3)in the Scenario details ,Arabic words will be written in their equivalent English letters.   Platform(s)       : Win Xp,98,2000,ME,NT Scenario Details: By doing the following steps               1)Right click on the folder Sources -- > New  -- > Other-- > Java-- > ScrapBook Page               2)Fill in a java scrapbook name : " test " 3)Click finish                4)The ScrapBook appears in the navigator view under the folder Sources, And the source of the class is displayed                 in the right panel. 5) write  :       System.out.println( " hojfhv " );               6) All Arabic text is displayed as question marks. Expected Results: Arabic characters appear correctly.  This problem does NOT happen on a Hebrew system (Win2k) and with Hebrew data.  Hebrew text is  displayed properly in the scrapbook edit window and in the console window.   Passing this on from our BiDi testers.  I was unable to find a machine to try and reproduce this on. Not sure what this comment means: " This problem does NOT happen on a Hebrew system  (Win2k) and with Hebrew data.  Hebrew text is displayed properly in the scrapbook edit window  and in the console window. " What problem DOES this problem occur on. Hi Kevin,  According to our testers, it only happens on an Arabic machine, not on a Hebrew machine.  Sorry for the confusion. Paula Problems like this typically occur when the font.properties file is not  appropriate for the locale. I know that a Hebrew specific version of this file was created but I am not certains about Arabic. Without this file the default  (English) fonts would be used and this will definitly cause the behavior you are reporting.   There are a couple ways to check this: - Take a look at the NL fragments and see if the Arabic fragement specifies  a JFace font propeties file. - In the UI preferences page look at the name of the font that is being  used in the page that allows you to change fonts. The feedback from the bidi tester is:   1) Changing fonts from the UI pereferences to Arabic fonts solves the problem. 2) Renaming the font.properties.ar file to font.properties doesn't solve the  problem. Are you sure the jface font properties file were changed? Can you find out what  happened when they tried the checks that were suggested earlier. The BIDI tester closed the defect in our system with the comment: " Can be made to work by choosing fonts or renaming the fonts.properties file. " So, I'm assuming this defect can be closed too.  Thanks for the pointers on how  we could make this work. Kevin, Also, in response to your question " Are you sure the jface font  properties file were changed? Can you find out what happened when they tried the checks that were suggested earlier. " here is what  the BIDI tester wrote: Checking it on win2k with build 12/7:  1) Changing fonts from the UI pereferences to Arabic fonts solves the problem. 2) Renaming the font.properties.ar file to font.properties in the following path  solves the problem. E:\Program Files\IBM\Application  Developer\plugins\com.ibm.etools.server.jdk\jre\lib We need a fix for it to make sure that the font.properties.ar file gets copied  during installation on the original font.properties file in case of Arabic system. Closing based on comments above.
JDT	Exception debugging out of sync JAR and source build 20020527  I'm not sure how I've got this problem but here goes what I think that  happened. Log is attached. In order to develop Ant tasks we cannot provide the tasks together in a plug- in library. They have to be provided in a separate JAR. During development I keep this JAR in my workspace and the source as a normal source folder. Every  time I change a class that belongs to the JAR I have to recompile the JAR before running/debugging. It seems that the exception happened in one of this  times when I forget to recompile the JAR but this is just the theory. I'm not  sure what really happened. The exceptions indicate that the stack frames in our debug model are stale (not  in sync with stack frames on the target). I do not think this has to do with the jar being old. If the jar were not in synch with the source, it would  appear as line numbers not matching up properly (since the debug attributes would not match the current source).  If you have any more insight on when this happens, please add to this bug report. I have a workspace (~60Mb) that reproduces the problem. Just send me a message  saying where you want me to put it and I can anotate this bug with the steps to reproduce. build 20020527 IBM JDK 1.3.0 Windows XP Professional  1) Start the Eclipse with -data c:\eclipse\workspace\bug_17961 and -consolelog 2) Debug the " Ant Workspace " launch configuration 3) A new Eclipse will show up 4) Right click " AntFiles/simpleEcho.xml " Ant script and choose Run Ant... 5) Click Finish 6) The first time it runs fine. Will stop in two breakpoints. Just resume  (click on the " play " button). Works as expected. 7) Repeat (5) and (6) again and you get the exception on the console. I can't reproduce this bug because of a PDE bug (Bug 18305).  Can you tell me how to recreate the launch Ant launch config? To recreate the launch config you just need to:  1) create a new Runtime Workbench 2) Add the -debug and -consolelog options 3) choose the workspace location to be the antworkspace location Leaving open, but after much trial, I have been unable to reproduce the problem. Still unable to reproduce using provided workspace and IBM 1.3.0 VM. Marking  as ' works for me ' . If this is still a problem, please provide an F3 workspace  exhbiting the problem.
Platform	Screen freezes after clicking around I am a newbie to Eclipse. Still in the clicking around phase. This bug report may not be completely accurate, but homefully helpful. I did do the ' Hello World ' example and then:  I was in the Java Browser (??) clicking back and forth between the ' Types ' subwindow and the members subwindow.  Suddenly, the cursor changed to what looked like an upside down resize, with a crosshair in the middle (one ' corner ' upper left and a crosshair in the middle).  I am running Gnome (and GTX Eclipse) and only the cursor would move. Nothing else was clickable.  I logged in through another computer and did a ' ps ax ' and did a ' kill -TERM 13416 ' Doing another ' ps ax ' showed that there were still Eclipse components alive. I then did ' kill -TERM 13417 ' and then a subsequent ' ps ax ' showed all eclipse gone.  The terminal window where I started up Eclipse, showed the following traceback. [root@hoho0 eclipse]# more freeze.bug [root@hoho0 eclipse]# ./eclipse key: /**   Parsing error in parseS_prime - expecting string or | 1 key: /**   Parsing error in parseS_prime - expecting string or | 1 java.lang.NullPointerException  at org.eclipse.emf.codegen.ecore.rose2ecore.RoseUtil.createRoseUnitTreeAndTable(RoseUtil.java:112)  at org.eclipse.emf.codegen.ecore.genmodel.presentation.EMFProjectWizard$13.execute(EMFProjectWizard.java:922)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:64)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1378) at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78) at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:299) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:717) at org.eclipse.emf.codegen.ecore.genmodel.presentation.EMFProjectWizard$RoseModelPage.refreshPathMapTable(EMFProjectWizard.java:995) at org.eclipse.emf.codegen.ecore.genmodel.presentation.EMFProjectWizard$5.widgetSelected(EMFProjectWizard.java:664) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:87)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:844)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1235)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:562) at org.eclipse.jface.window.Window.open(Window.java:542)  at org.eclipse.ui.actions.NewProjectAction.run(NewProjectAction.java:97) at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$000(ActionContributionItem.java:21)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:844)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1235)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)  at org.eclipse.core.launcher.Main.main(Main.java:539) at org.eclipse.core.launcher.Main.main(Main.java:539) Terminated [root@hoho0 eclipse]# We have not seen this behavior with a standard Eclipse install.  If you are able to provide reproducible steps with a clean Eclipse installation, then please reopen.
JDT	IDE not activated when target closed (1GJ8NOD) When I closed the target Eclipse, the host Eclipse window was not activated, even though it was the next window in the order. This prevented me from simply hitting F10 again to relaunch.  NOTES: DW (8/30/01 11:19:09 AM)  Investigate - but I suspect this is not a debugger issue. In 204, when closing the eclipse " target " , the " host " window is now re-activated, and I am able to press F10. Verified.  Works under 204 as described in previous comment. PRODUCT VERSION: 133
JDT	display view code assist cotext should be receiving type The code assist in the display view uses the declaring type as the context for  code assist. It should use the " receiving " type. Thus, methods declared in a  receiving type (subclass) are not shown as valid completions. I believe the code assist API does not allow this (code assit is based on a CU,  not a type). Since the debugger is in a CU (which may not be the receiver, but a super), we get the context of the super/declaring type. Need to attempt to work around this problem. Also critical in variables view Should be able to fix with new code assist API. Fixed in DisplayCompletionProcessor. Please verify. Verified
Platform	[Dialogs] TypeFilterDialog UI and API not same The UI shows the extensions as " *.txt " while the API expects " txt " only. This is confusing. The format of the extension is not specified.  The dialog should be able to tread " *.txt " as input as well and also be able to return " *.txt " (instead or in addition to " txt " ). The input currently handles both by stripping out the prefix if required.  Enter the following extensions bob,*.fred  If you reopen the type selector it will read bob,fred > The input currently handles both by stripping out the prefix if required. Only half true: If I use *.txt as input I would then expect that *.txt is checked in the list and not added to the others extension list. Do you consider to fix this (i.e. that *.txt is checked if I use *.txt as input and if *.txt is part of the list)? I have tried by entering txt and *.txt in the extensions list and in both  cases when I reopen the dialog they select the right entry in the list. Can you give a case where this fails as it is a bug if it does not allow both. I used the patch you attached to the PR and then tested the File Search dialog page: 1. Enter *.txt as file name pattern 2. Press " Browse... " == > " *.txt " appears in the others field instead of selecting " *.txt " in the list Replicated. Thanks for extra steps. Problem was that your version checks labels, ours checks extension. Updated  TypeFilteringDialog to check both. I have still problems using the dialog because the dialog only returns the extension and not the full pattern: I lose information which I can not reconstruct and hence not use the dialog:  Imagine I have the follwoing three patterns as input (in my Search page): *.txt, properties, plugin.xml, testFile First the information that properties is a file gets lost: it is transformed into *.properties and checked in the list. Then what I get back from the dialog is: txt, properties, plugin.xml, testFile I have no chance to tell which one comes from the list and which one comes from the others field. Couldn't you add a new constructor which then deals with input/output as if it were patterns (i.e. don't do any smart things with it)? The problem with changing what the dialog returns is that current users of the  dialog are assuming that they are getting just extensions back so changing what is returned would be a breaking API change.  The input can currently take either extensions or extensions with leading code so the output is the issue. I see two approaches  1) A flag that is used to determine the output mode (i.e. withExtensions or something like that - defualt is false). 2) Some sort of alternative getResult (getResultWithWildcards()) that can give you what you are after.  As I am not a fan of modes within a class (too much room for error) I think the alternative API is the best choice.  Opinions? Agree but the I also need API to SET the input to prevent " properties " being converted to *.properties. Marking closed
JDT	Flags.isDeprecated(IMethod.getFlags()) doesn't work tried with 20020903-I on w2k and linux-gtk:  It seems that the deprecated flag isn't set for IMethod.  ---8 < --- A.java --- public class A { /**   * @deprecated */     public void foo(int value) {} } ---8 < --- B.java --- public class B extends A { /** * @see A#foo(int)      * @depreacated < --- this line is missing      */ public void foo(int value) {} } ---8 < ---  The javadoc for B.foo() was created with " Source :: Add JavaDoc Comment " . It should notice the deprecated flag in A.foo() and add the @deprecated tag to the JavaDoc comment (See use in AddJavaDocStubOperation:86). This belongs to the javadoc generator. Philippe,  I'm using the same code for generating javadocs using auto-indentation and I  don't see an obvious error in using the flags of IMethod. I just added the  example to show you where the problem surfaces. Is there a misunderstanding in how to use these flags? Oh, I see. We will investigate.  Jerome - are we flushing the deprecated flag when applying the bitmask ? Yes, we were flushing the deprecated flag in the SourceElementParser. Fixed. Added regression test CompilationUnitTests.testDeprecatedFlag() Verified.
Platform	Order of Pages in folder is not preserved (1GEAHVY) 1. Arrange the views in a perspective as follows ..   Left side .. Folder with Hierarchy, then Packages Middle .. Editor Area  Right side .. Folder with Outline, then Tasks 2. Bring Packages to top. 3. Bring Tasks to top. 4. Save As " Test " . 5. Close perspective. 6. Open " Test " in same window  Result: Left side .. Folder with Packages, then Hierarchy  Middle .. Editor Area Right side .. Folder with Tasks, then Outline   NOTES: PRODUCT VERSION:  eclpse 0.110 on jdk Lots of changes done since 110 build. It is not a problem anymore.
Platform	Copy a shared project is shared as original project Copy is not the same as original project, for example it has different .project file with different name? Why it appears to be shared? *** This bug has been marked as a duplicate of 24156 ***
Platform	Question about using Netscape 6 A problem has been reported with Help on Linux 7.2 using Netscape 6.2.1.   Instead of displaying the help text only a labeled icon is displayed.  Are there known problems with this configuration? Is this using Eclipse 1.0? Help in Eclipse 1.0 required Netscape 4 to be installed. What is the icon and its label?  Do you have a screen shot of Netscape window  available? HelpDesk System PR: 100314 Jon, I have no idea what the HelpDesk System PR's are. Please post all the  relevant information on bugzilla. Thanks! Apologize for any confusion.  I only posted the HelpDesk number so support had  a cross-reference.  I am still investigating this with customer and will post any relevent information here.  I don't need help at this point.  Thanks. We tested our latest Eclipse 2.1 code, and it appears fine in Netscape 6. Please reopen if you still see a problem.
JDT	inline method - adds unnecessary assignment [refactoring] I-20021016 linux-gtk:  public class Moo { void foo(int a) {     System.out.println(a); }   void goo() { int n= 42;     foo(n); int x= 7; // < --   } }  1. select foo in goo 2. inline method 3. press next 4. observe that the method invocation ' foo(n); ' is replaced by ' int a= n; System.out.println(a); ' This assignment is unnecessary und will go away if the following unrelated statement ( ' int x= 7; ' ) is removed.  I assume this is some sort of conservative strategy to avoid variable name  clashes. changed to enhancement since it's not a bug Fixed in build > I20021218.
JDT	refactoring inside a method hello, I would suggest a feature  we would find useful my colleagues and me, id the ability to refactor inside a method. Example : if we want to change the name of  a variable inside a method, we can up to now do it by using the find-replace feature. But the result is not alsways what we intend :-( It could be useful to  provide the user whith the capability to change in the method all references to this variable or to a méthod.  regards Xavier on the preview page of the refactorning wizard there is a checkboz tree of  changes you can uncheck nodes in the methods that you want no changes in see Adam's comment
JDT	Default focus on " would you like to full build " Build: 200204004  If you change your compiler preferences, you are prompted to recompile.  The default focus on this dialog is " Yes " , it should be " No " .  An absentminded enter could mean many minutes of wasted time. However, doing a rebuild is the right thing to do for the unknowledgeable user.  When they press " No " they export a code with the wrong settings.  I suggest to leave it as is. Some of our users are seeing 20 minute rebuild-all times.  See http://bugs.eclipse.org/bugs/show_bug.cgi?id=11585 I think it is more correct to have yes as default button
JDT	NL: Cannot run with Japanese package Ifyou try and run a class that is in a package with a Japanese name you will  get a ClassNotFoundException. STEPS 1) Create a JavaProject JapaneseTest 2) Create a package in that project with a Japanese name 3) Create a class JapaneseTest in the package with a main method like below /**  * @version  1.0 * @author  */ public class JapaneseTest {   public static void main(String[] args) {   System.out.println( " Test " );  } }  4) Run the class - you will get an error like java.lang.NoClassDefFoundError: ?????/JapaneseTest Exception in thread " main " Need to investigate, see if this is still a problem with launch configs. Cannot even a create .java file underneath a Japanese-named package for reasons outlined in  #13463. The problem still exists but it is nothing to do with the Laucher - it is a  problem I can replicate with the JDK. Please note that the following steps have Japanese characters in them and they  may not be readable in your Locale. STEPS 1) Download the 1.3.1 JDK from www.eclipse.org 2) Upzip it 3) Create a subsdirectory of the bin directory ?Å 4) Compile the code below by entering javac ?Å/Japan.java from the bin directory 5) It will compile. Now try and execute by typing java ?Å.Japan 6) You will get a ClassDefNotFound ???/Japan.java printed to the console Here is the test class  package ?Å; public class Japan {   public static void main(String[] args) {   System.out.println( " ?Å?«?Ð " );  } } Here is the problem report link from Sun.  http://developer.java.sun.com/developer/bugParade/bugs/4475696.html They claim to have it fixed in 1.4 of the Sun VM. Just tried on the may 2002 jdk 1.4.1 from Sun and the problem still exists  there. Tod, since this isn't really a debugger problem, is there a better home for this bug report? Moving to JDT-Core This is a JDK bug, closing invalid. *** Bug 32206 has been marked as a duplicate of this bug. ***
Platform	Should be able to multi-select and " Remove From Preserved " Remove From Preserved only operates on a single selection. It should accept  multiple selections. Same with " Add To Preserved " . Later Fixed. In addition, action to remove saved configuration is preceeded by a  prompt to the user to confirm the deletion.
Platform	Cannot cancel compare request Build 20020226  When comparing my workspace content with remote server content, I selected by mistake a big zip file, and then you miss very much a way to cancel this  comparison request. *** Bug 12158 has been marked as a duplicate of this bug. *** *** This bug has been marked as a duplicate of 273 ***
JDT	Cannot step into message invocation Build 204 + jdtcore patch 204  Running the batch compiler through a Main method, I placed a breakpoint at the beginning of the batch compiler action, and was unable to step inside the compiler code. Steps:  1. Define the following unit to force running the compiler import org.eclipse.jdt.internal.compiler.batch.Main; public class Compile { public static void main(String[] args){ Main.compile( " d:/X.java -verbose -d d:/temp " + " -classpath d:/jdk1.3/jre/lib/rt.jar " );   } }  2. Place a breakpoint at the beginning of the line " Main.compile... " 3. Launch in debug mode (J9)  4. When breakpoint is hit in debugger, step into the message send This goes into the method Main.compile  5. Try to step into the next message send, it will instead step over. Which message send is being missed? Could it be due to step filters?  (@see Preferences- > Debug- > Java Debug Options). Stepping worked as expected  for me, and system classes (the default set of filters) were applied. Stepping into the first statement in the main method, is skipped (since it is a String concat, and is filtered). Then I was in Main.compile initializer for:  private static final char[] CLASS_FILE_EXTENSION = " .class " .toCharArray();  Stepping into this is also skipped due to class filtering (is equivalent to a step over). Tried with J9. I now see the problem - the step into PrintWriter(System.out) is skipped. However, looks like a J9 bug with step filters. When I use the sun VM it works as expected. Verified J9 bug with following simple example: * With a breakpoint on the first line of the main method, stepping into with J9 does a step over, and with Sun VM, it works as expected - ending up in " myMethod " .  import java.io.PrintWriter; public class StepFilter { public static void main(String[] args) { myMethod(new PrintWriter(System.out));  } public static void myMethod(PrintWriter writer) {   writer.println( " Hello World " );   writer.flush(); }  } Mail from J9 team indicates this bug has been fixed for the next release of J9.
Platform	Pin button looks pressed. Build F3-20020612  Make a view a fast view. Make it active. See the pin tool button. It looks checked/pressed. It should not since the view is not pinned. The button is pressed. If you look at the icon closely, you'll see that it's pinned to the shortcut  bar. This is not ideal, but the button should work the same as the Fast View menu  item.
JDT	Display problem in the Variables View Build 20020521 linux-GTK 1. Run the following program in debug mode  public class TestEval { public static void main(String[] args) { String s= " test\ntest " ;     System.out.println( " test " );               // < -- breakpoint here   } }  2. When the breakpoint is hit, go in the Variables view, the way how the text contained by s is displayed is bad. Displaying text with embedded line breaks is always problematic. Boris to  check if there is a problem on our side. If not, forward to debug so that they can consider handling this case specially.  Lower priority. This is a fairly serious problem for the debugger as people put newlines in  Strings in real programs. The argument to TreeItem.setText() should never contain multi-line text. Consider this: tree = new Tree(shell, SWT.SINGLE); item = new TreeItem(tree, SWT.NONE); item.setText( " A\nB " );  // WRONG  This results in cheese on all platforms. The comment about cheese on other platforms is incorrect. The example given " A\nB " displays correctly on other platforms. The newline is replaced with a  block character. SWT-GTK should behave the same way. *** Bug 20407 has been marked as a duplicate of this bug. *** > " A\nB " displays correctly on other platforms. > The newline is replaced with a block character  Did you actually verify this?  I tried it on Windows, Motif and Photon, and it's random from platform to platform.  For example, while on Windows I get a  block character, Photon just concatenates the strings (no visible indication of a line break - that is, AB).  I am not surprized; once again, passing a multi- line string to TreeItem.setText is not supported, and will result in undefined behavior. Note to all: This PR is closed.   SWT does not guarantee any specific behavior for Trees, Tables, Lists, single- line Texts, or any other widget which is designed to hold a single line of  text when text containing line breaks is stored into it. SWT does not scan the contents of strings which it is asked to display. This  is true for both single line and multi-line text content. This is the reason why you must ask for the correct line delimiter to use when storing multi-line  text into a multi-line Text. For single-line text areas, you can _absolutely_not_ rely on the existance of  a " block character " being displayed when there are line terminators in the  text. Please either modify your code to handle this case, or live with the behavior  you are seeing. Reopening to workaround SWT bug. If SWT won't fix this, we (and every other client of their Text widget) need  to scan our strings for newlines. Deferred for post 2.0. Not a stop-ship problem. *** Bug 17727 has been marked as a duplicate of this bug. *** *** Bug 11928 has been marked as a duplicate of this bug. *** Updated our variables view to strip out the following single characters and  replace them with their two character string representations: \b \f \n \r \t \\ Fixed. Please verify. Strange behavior occurs if I attempt to change the value of this " modified " variables. For the String " \nMyTest " An in-place editor displays a different the control characters not " \nMyTest " If I remove the control characters and then type so that the string is  again " \nMyTest " , committing the change results in " \\nMyTest " I don't think there's a good way to solve this problem with an inline editor.  Recommend changing the ChangeVariableValueAction to open a dialog with a multiline text box.  This text box would display the text in its untranslated form. ' Untranslated ' will still be ' formatted ' . What I'd like to see is the content  of the string, rather than how it is formatted. Therefore, I'd like to see the  actual escaped characters ( ' \r ' , ' \n ' , ' \t ' ) to validate that the string is  what I expect it to be. The variables view will continue to render the string with translated control  characters (it's still a single-line text box). Also, you can always expand a  String to see and edit the individual characters. For large formatted strings, I think it's easier to edit the string without  the translation. I'll attach a file (rather than seriously clutter this  report) which demonstrates the difference. I think it's much easier to edit  the second version of the string. Released changes to ChangeVariableValueAction. Instead of using an inline  editor, we now open a dialog. Please verify. Noticed to minor problems: (1) When I press ESC, the dialog does not close. (2) When I close the dialog, the " details " area does not update with the new  contents (but the variables view does). Re-assigning for 2 problems mentioned above. Hitting escape works as expected for me. My dialog is just a modified copy of  InputDialog and I didn't change anything that should affect the ESC key  processing. Can you double-check that it's a problem? Do you have the same  problem in the breakpoint hit count dialog? Fixed details pane updating problem. See above comment on ESC key. Please verify (Darin). Verified problem (2). ESC is still a problem (it works in the hit count dialog  for me, but not the variable value dialog). ESC works if I change the focus from the text area to the dialog (using SHIFT- TAB).
JDT	Show in Packages view has no mnemonic (1GEULE2) Missing mnemonic on sort context menu (sub) items   NOTES: GDA (6/5/01 12:07:32 PM)  defer KUM (7/31/2001 5:45:40 PM)  Fixed. Build 128. verified 203 PRODUCT VERSION:  0.118
Platform	[Bookmarks] Multiple equivalent bookmarks allowed (1GE8HPH) The workbench allows you to bookmark the same file multiple times.  There is no reason or need for this. 1) Open the resource perspective (Perspective- > Open- > 0 Resource) 2) Create a new project 3) Add a file to the project 4) Right-click on the file and select " Add Bookmark " 5) Right-click on the file and select " Add Bookmark " 6) Show the bookmarks view (Perspective- > Show View- > Bookmarks  Notice multiple entries of the same bookmark, they all point to the same file so only one bookmark is really needed.  NOTES: PRODUCT VERSION: jre-win32-Eclipse-SDK-0.110 Defer Reopen for investigation jeff h. seems to think that there is value in creating multiple bookmarks at  the same location: esp. if it is on a file and you choose a name of the bookmark which is significant to the reason you bookmarked it. i think he is  correct. bookmarks support names, so they are similar to tasks in many ways (perhaps too many, but that is another issue). now that you can rename and  sort bookmarks in a table like tasks, i'd like to leave this ' functionality ' in.
Platform	[Viewers] Make other views obey the workbench preference " link nav selection to active editor " If you are in the Java perspective, you are typically using the Package  Explorer view the most. In the resource perspective, the Navigator obeys the workbench preference " Link navigator selection to active editor. " However, the  package explorer view does not obey this preference, and I could not find an equivalent.   It would be nice if there was a global preference that could control this behavior for all the different types of views, including views that are found  in WSAD like the J2EE navigator. See the main Java preference page for the Java specific preferences. Should still consider a global preference. Other plugins could still provide there own finer grained preference if they deem necessary. This preference is no longer exposed.  Each view that can link to the active editor has an option to do so (that is stored per-view).  Marking as wont fix.
Platform	Decorators on Java resources not refreshed after CVS actions Turn on CVS decorators. Create a new Java resource. Perform the Team- > Add action. Note that the little ' tick mark ' for added resources does not appear!  Try the same thing with a new file resource. Note that the little ' tick mark ' for added resources appears immediately. Was bug in JDT Packages view. Fixed in M3.
JDT	cannot drag and drop source folders (1GF7OQL) AK (6/12/01 4:20:48 PM)  i wanted to move a source folder by drag and drop. not possible   however, you can move normal folders no problem NOTES: EG (6/12/2001 4:30:05 AM) source folders can only be moved inside the class path.  JavaModel limiation - readme PRODUCT VERSION:  122 fixed for 207
Platform	Search preference page has no F1 help build GM3  Pressing F1 on the Workbench- > Search preference page does not show any help. Help text was there but not linked with context ID. Fixed. Available in 2.1 builds > 20020805 Verified fixed in build 20021017
JDT	Difficult to tell what is wrong with Launch configuration Create two launch configurations On the config A specify a working directory that does not exist Select the config B, save the changes to config A Select the Main tab of config B Go back to the config A  Debug button is disabled. No indication of what is wrong When a config is selected, if there is tab in error, we should go to that tab. Fixed.  Tabs now show error icons when there are problems.  This is less intrusive than switching  tabs. Please verify. Verified.
Platform	Console scrolling is jerky With Mar 19 integration build, I've been noticing that the Console scrolling is very jerky and slow when large amounts of text are being printed to it.  It looks like it fills a buffer of stderr/stdout data, prints it in one go, pauses, then repeats until no output remains. It can take several seconds to display a few hundred lines of output whereas before it would scroll by smoothly and quickly in a second or so. I'd say this bug has major severity. Debugging performance is way down for me  in the latest stable release (20020321) as I deal with a lot of console log output in my usual work, and I can't think of a workaround for the problem. *** This bug has been marked as a duplicate of 8772 ***
Platform	Extraneous readme for defunct scripting component The defunct scripting component's readme file  eclipse\readme\readme_scripting.html should be retired as well. Invalid defect. Scripting support has been removed.
Platform	Welcome: Workbench User Guide does not show anything by default (1GEUWHF) - from Welcome view, hit Workbench User Guide - it comes up, but nothing interesting is shown - likewise for Java Development User Guide NOTES:  RG (6/5/01 2:51:27 PM) The current help api does not allow us to request anything finer than an info set.  We have requested better api. KH (9/19/2001 2:30:17 PM)   Pls adise when/if better API is available. PRODUCT VERSION: 118 As of next nightly build (20020417) there should be support for a < toc > (like  the Workbench User Guide) to have an optional  attribute " topic " that is the  location of the description topic for the TOC. < toc label= " Workbench User Guide " topic= " path/to/descriptionTopic.html " > .... < /toc > There is also (in the current builds) support for opening a TOC to a specific  topic IHelp.displayHelpResource( " toc=/pluginid/toc.xml & topic=/pluginid/topic.html " )  Preferably, you would just use the first option, i.e. make sure the TOC has a topic attribute and just call IHelp.displayHelpResource( " /pluginid/toc.xml " ),  where toc.xml is the help contribution file for the desired TOC. For Workbench User Guide this will be:  displayHelpResource( " /org.eclipse.platform.doc.user/toc.xml " )  and toc.xml would be .... < toc label= " Workbench User Guide " topic= " define/some/topic/here.html " > < topic label= " Getting Started " > < link toc= " topics_GettingStarted.xml " / > < /topic > ..... < /toc >
Platform	Renaming shared project leads to broken CVS synchronization On project change we catch the event (using ResourceChangeListener) and make an  attempt to determine its CVS repository. Certainly, we use internal API for that:   public static ICVSRepositoryLocation getLocation(IProject project) {   RepositoryProvider provider = RepositoryProvider.getProvider (project);   if (provider == null || !(provider instanceof CVSTeamProvider)) return null;    CVSTeamProvider cvsProvider = (CVSTeamProvider) provider; try {    return cvsProvider.getRemoteLocation(); } catch (CVSException ex) {    // log } catch (Exception ex) {    // log }   return null; }  But we found very strange behaviour in the case when one renames the project. Then, an attempt to get its repository leads to " org.eclipse.core.internal.resources.ResourceException: Resource /A03 does not  exist. " and log shows the message like " The CVS synchronization information for  A03 has become corrupt or does not exist " . And synchronizing does not help. But  after Eclipse restart, our view displays the right picture, hence it could get repository from the project. Which line in the above code is throwing the exception?  Are you asking for the repository provider of the old project name or the new project name?  Since the old project name does not exist after the move, the " resource does not exist " and " sync info does not exist " messages would make  senese. " cvsProvider.getRemoteLocation(); " throws the exception. I am asking the same  IProject object. Ah.  An IProject object is just a handle with a fixed name.  If you rename a  project, then the old project will no longer exist.  This is comparable to the behaviour of java.io.File, for example:  java.io.File oldFile = new File(c:\\temp\\oldFile); java.io.File newFile = new File(c:\\temp\\newFile); oldFile.exists() - > returns true oldFile.renameTo(newFile); oldFile.exists() - > returns false  Therefore, in your case you need to create a new IProject object with the new name, and then ask for its location.  During resource change notification, if  the resource is moved you can obtain the new path using IResourceDelta.getMovedToPath().  Let us know if this works for you. Thank you for the answer a lot. I have investigated the situation in more  detail and can tell you that I made a mistake when said I use the same IProject object. Really, since I use IResourceChangeListener, I receive IResourceDelta.REMOVED and than IResourceDelta.ADDED. For instance, renaming  shared project would result in the following log (format is " < delta kind > : < projname > ( < projobj > ) at < irepository > " ):  REMOVED: G79 (P/G79) at null org.eclipse.team.internal.ccvs.core.CVSException: The CVS synchronization  information for G79 has become corrupt or does not exist at  org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteLocation (CVSWorkspaceRoot.java:194)  at org.eclipse.team.internal.ccvs.core.CVSTeamProvider.getRemoteLocation (CVSTeamProvider.java:496)  at com.exigen.studio.navigator.internal.Adapt.getLocation(Adapt.java:70) at  com.exigen.studio.navigator.internal.NavigatorContentProvider$DeltaVisitor.visit (NavigatorContentProvider.java:171)  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:71)  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:79)  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:52)  at com.exigen.studio.navigator.internal.NavigatorContentProvider$2.run (NavigatorContentProvider.java:259)  at org.eclipse.ui.internal.UIWorkspaceLock.doPendingWork (UIWorkspaceLock.java:53)  at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:23) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:95)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1506) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1294)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335) at org.eclipse.ui.actions.WorkspaceAction.run(WorkspaceAction.java:272)  at org.eclipse.ui.actions.RenameResourceAction.runWithNewPath (RenameResourceAction.java:373)  at org.eclipse.ui.views.navigator.ResourceNavigatorRenameAction.runWithNewPath (ResourceNavigatorRenameAction.java:45) at org.eclipse.ui.actions.RenameResourceAction$7.run (RenameResourceAction.java:400) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:95)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1506) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1294)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432) at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24) ADDED: G80 (P/G80) at null That is, calling " getLocation " method for the " ADDED " project object results in  exception, but the call for " REMOVED " object simply returns null. Thanks for clarifying what you see.  As you noted, you're using internal CVS  plugin methods here so there are no guarantees.  Moving to VCM team for further comment. This has been fixed in both the 2.1 and 2.0.1 branches
Platform	Synchronize whenever TOC view is selected Whenever the user selects the TOC button (to leave the Search view or the Links  view), the navigation should synchronize to the current topic (if it appears in the navigation). This will provide the user with context, even if they don't  use the synch button. If the user had navigation opened in a specific place, this will get lost. We  will not fix this. In general users should be in control of what is happening, if the help is  trying to be too smart it will upset many users.
Platform	Switching tabs in the Preferences dialog locks panel Using the 0517 build:  Steps: 1) Open Preferences 2) Select a category that has a tabbed pane in the panel 3) Select one of the tabs 4) Selecting another category no longer works  (panel is not changed) Note: this behaviour persists until Eclipse is restarted. Closing and re-opening the  Preferences dialog has no effect. No log data is generated. Another note: If you press Ok to close the dialog, when you re-open the dialog the last selected  category is properly displayed, but changing categories still doesn't work. By 0517 I assume you mean the nightly build. I could not reproduce it in the latest from HEAD. There was a bug in this area that was introduced after I-20020515, whereby using the mouse to select a  category gave an NPE.  This has since been fixed. Could this have been the problem? If not, is there anything in the .log file? No error message is generated, and nothing is written to the log file. I'll try the next build and  see if the problem still occurs. This is fixed in the 0517 integration build. Thanks for verifying.
JDT	Type hierarchy missing anonymous binary type if closed Build 20020328  If an anonymous binary type is closed and it is part of a hierarchy, computing this hierarchy fails to include it.  This is because the IndexBasedHierarchyBuilder doesn't create a valid  HierarchyBinaryType: it is created with a ' 0 ' enclosing type name. Fixed by computing the enclosing type name from the resource path.
Platform	Compare does not handle correctly conflicts at same location Build 205 & 206 (20011025)  When a conflict occurred in between a local resource change and some change performed on the server, the compare tool does not allow me to merge changes if they occurred at the same location. Copying from right to left overrides the local change.  AAAAAAAAAAAAAAAAA        AAAAAAAAAAAAAAAAA SOME LOCAL CHANGE < ----- SOME SERVER CHANGE BBBBBBBBBBBBBBBBB        BBBBBBBBBBBBBBBBB CCCCCCCCCCCCCCCCC        CCCCCCCCCCCCCCCCC DDDDDDDDDDDDDDDDD        DDDDDDDDDDDDDDDDD It should not map the server change to the local one, but rather to an empty  line before/after the local one. *** Bug 12207 has been marked as a duplicate of this bug. *** Not for 2.0 This is on the " hot list " of PRs to address for 2.1 based on input from the  other teams. fixed and released for I20030218 *** Bug 23533 has been marked as a duplicate of this bug. *** Checked new behavior, it is definitely better than in the past, however in  following case it is not yet optimal (unclear if optimal is doable): Starting from file:  CCCCCCCC DDDDDDDD EEEEEEEE I perform a local change to add 2 lines (A and B):  AAAAAAAA BBBBBBBB CCCCCCCC DDDDDDDD EEEEEEEE In the meantime, someone did a change on the server file, so as to add 2 lines  Z and B (note that B is the same on server and my local modified file). ZZZZZZZZ BBBBBBBB CCCCCCCC DDDDDDDD EEEEEEEE  when merging, I will end up with twice the D line. AAAAAAAA BBBBBBBB ZZZZZZZZ BBBBBBBB CCCCCCCC DDDDDDDD EEEEEEEE  Not critical though. This is a scenario which is fairly common when we edit our buildnotes file (we always add a leading ' < br > ' on the last PR url listed  before we add one new item to the list, thus we all generated an identical B line.
Platform	[Dialogs] ProgressMonitorDialog won't cancel unless it's forked On ProgressMonitorDialog, there's a method:    public void run(boolean fork, boolean cancelable, IRunnableWithProgress runnable)  If the value of " fork " is false, the dialog cannot be canceled. The cancel button remains enabled and isCanceled() alw ays returns false.   The following code demonstrates this behaviour. (I chose to enable the popup menu extension on one IProject.)   package org.myco.action; import java.lang.reflect.InvocationTargetException;  import org.eclipse.core.resources.IProject; import org.eclipse.core.runtime.IProgressMonitor; import org.eclipse.jdt.core.IJavaProject; import org.eclipse.jface.action.IAction; import org.eclipse.jface.dialogs.ProgressMonitorDialog; import org.eclipse.jface.operation.IRunnableWithProgress; import org.eclipse.jface.viewers.ISelection; import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.MessageBox; import org.eclipse.swt.widgets.Shell; import org.eclipse.ui.IActionDelegate;  public class MyMenuAction implements IActionDelegate { private ISelection _currentSelection = null;  private Shell _shell = null; public MyMenuAction() { super();   Display display = Display.getCurrent(); _shell = (display == null) ? null : display.getActiveShell();  } private void displayMessage(String title, String message, int iIconType) {   MessageBox messageBox = new MessageBox(_shell, org.eclipse.swt.SWT.OK | iIconType | org.eclipse.swt.SWT.APPLICATION_MODAL);   messageBox.setMessage(message); messageBox.setText(title);   messageBox.open(); } public ProgressMonitorDialog getProgressMonitorDialog() {   return new ProgressMonitorDialog(_shell); } private ISelection getCurrentSelection() {   return _currentSelection; } private IProject getSelected() {   ISelection selection = getCurrentSelection(); if ((selection == null) || selection.isEmpty() || !(selection  instanceof IStructuredSelection)) { return null;   } Object element = ((IStructuredSelection)selection).getFirstElement();   if(element instanceof IProject) { return (IProject)element;   } if(element instanceof IJavaProject) { return ((IJavaProject)element).getProject();   } return null; } public void selectionChanged(IAction action, ISelection selection) {   _currentSelection = selection; action.setEnabled(true);  } public void run(IAction action) {   final IProject project = getSelected(); if(project == null) {    displayMessage( " MyMenuAction Title " , " No project  selected " , org.eclipse.swt.SWT.ICON_INFORMATION);    return; } try {    ProgressMonitorDialog dialog = getProgressMonitorDialog(); IRunnableWithProgress runnable = new  IRunnableWithProgress() { public void run(IProgressMonitor monitor) throws  InvocationTargetException, InterruptedException { boolean isCanceled = false;      for(int j=0; j < 100000; j++) {       if(monitor.isCanceled()) { isCanceled = true; System.out.println( " Monitor was cancelled for " + project.getName() + " on  iteration " + j);        break; }       monitor.subTask( " Task " + j);      } if(!isCanceled) { System.out.println( " Monitor was  never cancelled. " );      } }    }; dialog.run(false, true, runnable); // false==!fork,  true==cancelable //   dialog.run(true, true, runnable); // true==fork,  true==cancelable }   catch (InvocationTargetException exc) { exc.printStackTrace();   } catch (InterruptedException exc) {    exc.printStackTrace(); }  } } If you do any work in the UI Thread you will starve the UI - not only will the  cancel button not be responsive but the whole UI won't be.  If you want to make the ProgressMonitor cancellable you will have to do one of the following  1) Do only updating of the progress monitor in the UI Thread and do all of the other work in another Thread 2) fork the process 3) Set cancelable to false  You should only do work in the UI Thread if it is absolutely neccessary and keep in mind that it starves the UI. *** Bug 27687 has been marked as a duplicate of this bug. *** *** Bug 27693 has been marked as a duplicate of this bug. *** If " fork " has to be true for " cancelable " to work, the API should specify so. Added the following to the class comment:  * < p > * Note that not forking the process will result in it running  * in the UI which may starve the UI. The most obvious symptom * of this problem is non responsiveness of the cancel button.  * If you are running within the UI Thread you should do the bluk * of your work in another Thread to prevent starvation.  * It is recommended that fork is set to true in most cases. * < /p > > * Note that not forking the process will result in it running > * in the UI which may starve the UI. The most obvious symptom > * of this problem is non responsiveness of the cancel button. > * ...  Tod: If I understand that right, this comment should also be added to IRunnableContext#run(..), or at least to all of its current implementations. Marking closed
Platform	[CVS UI] If ' Replace with latest from repository ' fails, file is not restored Version: F2. If I select ' Replace with latest from repository ' , and during the replacement a CVS error occurs, the workspace version is gone. It seems that ' Replace... ' deletes the file first, but doesn't check if the replacement really succeeds. Although I can get the workspace version back from local history, for newcomers this will appear as if eclipse corrupts the workspace. Unfortunately, in order to ensure that the " Replace with Latest " works in all  cases we need to do delete any modified local resources before we perform the cvs command. If the Replace with Latest fails, then we are in a corrupted state  and must perform an operation that will retore the local workspace to the proper state. This is true for any remote operation that fails (i.e. If I do  and Update and it fails half way through, I must assume that my local workspace is corrupt and take action to fix it).  Why did the " Replace with Latest " fail? Was it because you couldn't connect? If  this is the case, we should investigating posponing the replace preparation process until after a connection to the server is made. The ' Replace with Latest ' fails with the following error:     edutella: cvs [server aborted] received broken pipe signal     edutella: cvs server: Invalid reply from auth server (wsjxta) looking for (DONE) (Which btw. is a rather cryptical message, especially the ' looking for (DONE) ' part). Interestingly, this error occurs always on the first cvs action I execute from Eclipse after starting it. The same action succeeds the second time. I attribute this to a strange configuration of the cvs server I'm using (cvs.jxta.org).  Couldn't you move the files out of the way instead of deleting them and delete  them after retrieval from repository succeeded? The funny message is given to us by the CVS server (not much we can do there).  It occurs because the Eclipse CVS client sometimes performs multiple commands within a single connection. In this case, we are trying to determine the CVS  server version to ensure compatibility (it only happens on the first connection). The error occurs because servers that run scripts on commands  cannot handle multiple commands within a single connection. I think we need to investigate if we can avoid performing multiple commands in  a single connection in situations that will cause this problem. I think correcting the behavior of Replace With is less important since running  the command again will result in the project being in the proper state and the old contents can also be retrived from local history (although we should  definitely look into it post 2.0). The problem is you can't select ' Replace with ' again because the file is gone :-). Maybe a quick ' solution ' would be to show a message box explaining that the state may be inconsistent and the user can restore deleted files using ' Restore from local history ' . As this seems to happen very seldom, I have lowered the priority to ' normal ' . I agree that a sound solution can and should wait  until post 2.0. I do happen to get this error condition pretty frequently simply because I  can't connect ... because I've lost my " dialup " connection, or the server was  brought down for a nightly backup. So, I'd vote for at least checking if a  connection could be made before deleting local version. Connection is now made before any deletions take place.  Fix released to HEAD
Platform	Can cause NPE: Open Recent... is active when no perspective is open 1. open 2 java files (A and B) 2. close all perspectives 3. Open Recent... (should be diabled) 4. Open file A 5. Open file B == > icons appear in the toolbar  Click next error == > NPE  Log: Wed Mar 20 14:11:39 GMT+01:00 2002 2 org.eclipse.ui 2 Problems occurred when invoking code from plug-in: org.eclipse.ui. java.lang.NullPointerException  at org.eclipse.jdt.internal.ui.text.java.hover.JavaInformationProvider.update(JavaInformationProvider.java:89)  at org.eclipse.jdt.internal.ui.text.java.hover.JavaInformationProvider$EditorWatcher.partActivated(JavaInformationProvider.java:54)  at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:37) at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817)  at org.eclipse.core.runtime.Platform.run(Platform.java:395) at org.eclipse.ui.internal.PartListenerList.firePartAct ivated(PartListenerList.java:35)  at org.eclipse.ui.internal.WWinPartService.partActivated(WWinPartService.java:102) at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:37)  at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817) at org.eclipse.core.runtime.Platform.run(Platform.java:395)  at org.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java:35)  at org.eclipse.ui.internal.WorkbenchPage.firePartActivated(WorkbenchPage.java:696) at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:1683)  at org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:103) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1277)  at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1254) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1246)  at org.eclipse.ui.internal.ReopenEditorMenu.open(ReopenEditorMenu.java:195) at org.eclipse.ui.internal.ReopenEditorMenu$1.widgetSelected(ReopenEditorMenu.java:163) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:698)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:196)  at org.eclipse.core.launcher.Main.run(Main.java:555) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) Log: Wed Mar 20 14:11:40 GMT+01:00 2002 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Wed Mar 20 14:11:40 GMT+01:00 2002 4 org.eclipse.ui 0 java.lang.NullPointerException java.lang.NullPointerException at org.eclipse.jdt.internal.ui.javaeditor.GotoErrorAction.run(GotoErrorAction.java:32) at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:698)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:196)  at org.eclipse.core.launcher.Main.run(Main.java:555) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) Looks like open Recent doesn't handle closed perspectives properly. Moving to Platform UI. Filed a separate bug to protect against this null pointer situation in the  JavaInformationProvider. Replicated in build 20020321 - the Recent Files option should be disabled as  nothing is visible to the user. Fixed in build 20020402. Also made the import and export options enable and  disable like the others in the file menu. Marking closed
JDT	Minor GUI Blooper: Hierarchy refers to Outline view as " outliner " When nothing can be displayed in the hierarchy, it shows the message " Select a  type (for example, in the outliner), and use its... " Elsewhere in Eclipse, this is called the " Outline view " .  A minor nit. FWIW, my preferred wording would be: " A type is not available.  Select a type (for example, from the Outline view) and use its ' Open Type  Hierarchy ' menu choice to display it here. " This is consistent with the Outline view in the same state, and somewhat less  wordy. agreed with the suggested rewording " outliner " sighting Maybe you should scan the source/properties files for all cases of " outliner " ?   Here's another one I happened upon (see attached image).  I know, it's a nit... fixed > 20020305
Platform	[Accessability] Unable to access context menu using keyboard On windows Shft-F10 brings up the context menu.   There seems to be nothing similar on Linux-Gnome Pls investigate. Move to SWT if appropriate SWT has released fixes for this for build > 20020129. Will verify next build. Confirmed fixed in 20020205 Marking closed
Platform	Multiple switch view/editor/perspective dialogs on GTK Build 2.0 release  It is possible to open several of the Switch view/editor/perspective dialogs at once on GTK. The dialogs stack in the centre of the screen, so you can only interact with the top one. The dialogs do not immediately go away when the Ctrl key is released.  To reproduce: 1) Open several views/editors/perspectives so there is something to switch between 2) Rapidly hit Ctrl+F6/F7/F8 many times in random order - This causes multiple dialogs to open and start to stack  This behaviour does not occur on Windows or Linux/Motif. I cannot reproduce this in latest. Please reopen if you have seen this lately.
JDT	Package view filter - would like ability to filter out non-shared projects [package explorer] [filters] Build 2.0  Currently I can filter out binary projects (which is a good feature), but I would also sometimes want to be able to hide non-shared projects (for quickly  selecting them all and perform CVS actions for instance). Also see related bug 21822 This would require an additional plug-in since - JDT does not depend on Team - Team does not depend on JDT AND: the current filter solution is not in Platform component Any suggestion? changing to enhancement See also bug 12965 We need some help from Team Core: Either make the persistent property key plus the team nature ID (for backward compatibility) API or offer an API method like isShared(IProject).  If this is done JDT UI could add a pre-req to org.eclipse.team.core. The API already Exists. RepositoryProvider.getProvider(IProject) returns an  instance of RepositoryProvider if a project is mapped to a repository and null otherwise.   As an aside, I have created bug 30406 which requests a general filter mechanism from Platform UI. I believe this would be helpful as it would allow Team to  define a Shared project filter that could be applied to any resource view. No idea if or when this will happen so you may want to go ahead with the JDT  specific filter. Thought this might be a good feature which can be implemented in no time. Done. Available in builds > N20030129
Platform	[Viewers] Very hard to implement row-based cell editing (1G9ODD7) The platform now allows custom property sheet views linked to the active editor in the similar way to outline view. However, TableViewer API has been simultaneously changed to make this almost impossible.   In the old code, column-related objects (modifiers, cell editors etc.) were grouped into viewer table column objects. It was good and it was object-oriented. The new code scattered that functionality into several method calls (setCellEditors, setProperties etc.). In addition to being a step back (IMHO) because it brings us back into the age of C language, it made it impossible to override ' activateCellEditor ' on the column and provide row-specific cell editors.   NOTES: PRODUCT VERSION:  VAME022 There are no plans to change the current API in this development cycle. Reopened for investigation.   Dejan if you have any more specific requests about changes to TableViewer API, it would be helpful. This is a very old defect. I opened it because I needed a property sheet-like  behaviour in a dialog. Since I opened it, I managed to use the actual property sheet component (and use property descriptors) so I don't need this any more.  You are free to close the defect (although I am still less than 100% happy with the column-related calls described above). Closing based on reporters comments.
Platform	" Run Ant... " starts ntvdm.exe which hangs After selecting a build.xml and clicking " Run Ant... " Eclipse hangs.  By going  to the task manager, you can see that ntvdm.exe is eating around 99% of the cpu cycles continuously.  To continue with " Run Ant " , ntvdm.exe must be manually  terminated. More Info: Then when a task is selected and run, sometimes an error message comes back, " A  problem occurred executing the Ant file.  Reason: Cannot use classic compiler, as it is not available  A common solution is to set the environmental variable  JAVA_HOME to your jdk directory " .  This should not show up as JAVA_HOME is set  to a valid directory. Then when trying to close Eclipse, an error message comes up, " Problems  occurred while trying to save the state of the workbench. " Details: " Problems  occurred during save. " Could you provide more information like build number, VM, machine, OS, etc? Eclipse R1.0 OS: Windows XP Professional (all updates) VM: Sun Java 1.4.0 From the newsgroup:  After replacing ANT 1.4.1 with ANT 1.5 Beta1 the problem was gone. So this is really a problem of ANT in combination with JDK 1.4.0 and  Windows XP. But this leads to the question when ANT 1.5 will be integrated into  eclipse? ;-) Ullrich. Doesn't seem like we can do much about this. Re-visit once Ant 1.5 is no longer in beta. Reopening for investigation now that Ant 1.5 is released. Micah, would you be able to check the next integration build (Oct 29th) now  that eclipse has been upgraded to Ant 1.5.1? Joe can you take a look at this on XP. Please verify that the problem was the combination of 1.4.1 and a 1.4.0 VM. Verified that there is no problem running Ant 1.5.1 with JDK1.4.0 on XP.  Can't actually duplicate the problem on Ant 1.4.1 because of bug 26061.
Platform	[DND] Incorrect javadoc for NavigatorDragAdapter Build 20020924  The javadoc that is generated for NavigatorDragAdapter (look in reference section of online help), looks like this:  void dragFinished(DragSourceEvent event) This implementation of dragFinished does nothing.   void dragSetData(DragSourceEvent event) This implementation of dragSetData does nothing.   void dragStart(DragSourceEvent event) This implementation of dragStart permits the drag operation to    This javadoc is incorrect.  It has been copied from the generic superclass DragSourceAdapter.  I guess we need to override the javadoc for API classes in cases where the implementation differs significantly from the superclass. There are probably many more examples of this throughout the UI. Reassigning to Nick since he is taking ownership of DND. Reassigning bugs in component areas that are changing ownership. Cleaning up defect lists by setting ones without recent traffic to ' REMIND ' . Reopening. I fixed up the javadoc.
JDT	Organize imports discards mandatory single type imports 200209111733  When an explicit type import is added to resolved some ambiguity, organize imports will ignore it, and replace it with an on-demand import if the threshold is reached. e.g. set folding threshold to 2      after using organize import on following 4 files test case, a compiler error will be detected against X.java, since Compiler has now become an  ambiguous type. ---------------------- X.java import a.Compiler; import a.A; import a.B; public class X {  Compiler c; } ---------------------- a/Compiler.java package a; public class Compiler { } ---------------------- a/A.java package a; public class A { } ---------------------- a/B.java package a; public class B { } *** Bug 22915 has been marked as a duplicate of this bug. *** *** Bug 25327 has been marked as a duplicate of this bug. *** support for ambiguity resolving added > 20021120
Platform	Applying a patch The current way how to apply a patch isn't very intuitive. At least it wasn't  for me. Here is what I think could improve it: - there should be an action " Apply Patch " in the team menu. It is hard to    understand that I have to active " Compare Patch " to apply a patch. - the wizard that pops up should guide me through the process of applying the patch.   First page: like the current one. The only thing that suprised me a little bit is the fact that when I create a patch for a folder I have to apply the same     patch to the project. The reason for this is that the index entry is always relative to the project even if I create it for a folder.   Second page to find best patch settings: using check boxes to indicate that a patch item can be applied is strange. I would prefer having a error icon     instead. When selecting an item that can be applied I would like to see that applied patch (compare current source with source that has applied     patch) instead of seeing the content of the patch. If the user checks an item that can't be applied then the Next and Finish button is disabled.   Third page (currently not present): contains an compare editor showing the current source and the source with checked patches applied. I was really     suprised that I got a separate editor for this and the dialog was closed. Best would be if the editor in that dialog would be editable. One the second page there should be a sash between the check box tree viewer  and the compare viewer The third page should show me the *.rej file if produced like the current  compare editor does for 2.1 M5 see #29791, the other items after 2.1 I don't believe any of these comments apply to the current Apply Patch wizard
JDT	Need " Inspect " action in variables view Fixed. Added to Variable and Expression view (as an object contribution). Please verify We should add the keyboard accelerator (Ctrl-Q) to be consistent as well. *** This bug has been marked as a duplicate of 7013 ***
JDT	Cannot delete a launch config using the Delete key It should be possible to delete the selected launch configs in the launch  config dialog using the delete key. Implemented in LaunchConfigurationDialog Please verify (joe) Verified.
Platform	[resources] Problems with daylight savings time? builds 20011018, 20011025. OS: Win98/Win2K We have have problems when client machines are switched during Daylight Savings  Time. This has happened to a bunch of users (all?) on Win98/Win2K and using builds 205/206.  Users of WinXP and Linux seemed to be OK. When the workspace is started, all the resources appear to be out of sync with  the filesystem. After you do a refresh local you are ok. But then you try and synchronize with the CVS repository and all your resources look like they are  outgoing changes. Any resources which are really incoming changes from the server, are marked as conflicts. I've placed a zip file on M:\accounts\johnart\public\target.zip, that contains  the workspace I encountered the problem on.  I reproduced the problem on 20011018 and 20011025 with this workspace.  I'm running FAT32 on Windows 2000. The problem will only affect Windows users with FAT or FAT32 file systems. NTFS  stores the lastmodified timestamp in UTC but FAT stores in local time. So, NTFS users are OK. The exactly same behaviour happens when using java.io.File.lastModified() with  the IBM JDK 1.3 (i.e. works as expected on NTFS and fails on FAT). Problem description and workaround as posted to news.eclipse.org on 2002-04-05. ------------------------ There is a problem with daylight savings time which users may experience.  These issues are outlined below. Who will be affected: ================= Users who run with their workspaces living on FAT file systems and have their  system clocks automatically adjusted for daylight savings time. Problem: ======== Both Core and CVS use the timestamps of the files on disk to represent the  synchronization information (both local and remote) for resources in the workspace. As a result, some users will see strange behaviour after their  local systems have adjusted their clocks for daylight savings time. Symptoms: ========== 1). All resources in the workspace will appear to be out of sync with the  local file system. 2). When synchronizing with the CVS repository, all resources in the workspace  will look like they contain outgoing changes. (a structure compare reveals that they haven't really changed)  Resolution: ========== Work-around for problem #1: Users must perform a " Refresh from Local " on all of their projects in their  workspace. Work-around for problem #2: - In Windows, go into your Date & Time properties, click on " Time Zone " , and  un-check the " Automatically adjust clock for daylight savings changes " check  box. - Apply changes. - Refresh from local on all projects in the workspace - Team - > Synchronize with Repository. Note this should only show the changes  which are " real " - Release your changes. - Change your time zone setting back. - Refresh from local on all projects in the workspace - Replace with - > Latest from Repository See the following link for more info on the problem.   http://support.microsoft.com/default.aspx?scid=kb;EN-US;q129574 Investigate options post-2.0 Reopening for investigation. Either a solution or decision to README. *** Bug 25469 has been marked as a duplicate of this bug. *** *** Bug 26483 has been marked as a duplicate of this bug. *** Marking as README. We are using several Win NT maschines here that run on Eclipse 2.1 and CVS. All  Harddisks are NTFS formatted. We have the same behaviour weekly on one maschine. So I fear the problem is not only DST related.   Andreas Heidrich Please open a new bug report if what you see is not related to daylight savings time.  We don't plan on fixing the DST issue since it's really a problem with FAT32 drives and is not a problem originating in Eclipse or even the java VM. Since all your drives are NTFS, you're likely seeing something else. OK, I will do so. Thanks for the advice. *** Bug 45594 has been marked as a duplicate of this bug. *** *** Bug 45576 has been marked as a duplicate of this bug. *** *** Bug 90114 has been marked as a duplicate of this bug. *** I have created a utility action that will reset the timestamps so the files  are in-sync with CVS. Be warned however that this utility resets the timestamps for any file whose timestamp differs from the sync timestamp by 1  hour. There is a possibility that this could reset a file that is really dirty. Use at your own risk.  To use the action, install the plugin at the URL belog and them run the CVS Util/Fix Timestamps command.  http://dev.eclipse.org/viewcvs/index.cgi/platform-vcm- home/plugins/fixtimestamps.zip *** Bug 90212 has been marked as a duplicate of this bug. ***
JDT	Team menu contributions on types (IType) There is a usability issue in that the team operations are not reachable in  some Java views, since we only show types and not Compilation Units. It is desirable to allow VCM operations on types so that users can version from  the type hiearchy or the type list view. The idea is that a top-level type is considered the same as the Compilation unit. We have done the same trick in  VAME and it worked fine. To achieve this we can change the JavaContributorResourceAdapter to map top- level types to their containing CU. This enables the Team actions on types. This results in the following problems: 1) VCM actions appear but are still disabled. I haven't verified it, but I  suspect that VCM operations don't use the JavaContributorResourceAdapter but  the IResource adapter as a consequence they target the ITypes and not the compilation units. IType returns null when asked for the adapted IResource. As  a consequence the action appears in the menu but it is disabled. One idea would be to introduce an ITeamResourceAdapter that we could implement for Java. It  knows that top level types are mapped to compilation units. 2) You get duplicate menu entries for the local history action contributions.  One corresponds to the Resource actions and the other to the Java aware (structure aware) local history actions. This could be solved by setting " adaptable " to false for the resource compare  actions (org.eclipse.compare/plugin.xml). 2) could also be solved by removing equal actions (at least if in same category)  We should have a solution for 2.0. It is a usability issue for Java Browsing in 20020508
JDT	Debugger randomly disconnects Hi,   While running my test client, I've encountered scenarios in debug mode where  the process disconnects and terminates.  The test client runs fine under the normal run mode.  Is this related to the debugger running on a separate vm? Not enough information in this bug report. What VM & version are you running  on? Is the problem that you disconnect a debug session, and then the target VM dies? Do you have a simple test case to reproduce the problem? Hi Darin,   The VM we are running in uses the Websphere 3.5 fixpack 4 JRE.  What happens is that as we are stepping through the code, the process suddenly terminates.  I  assume that there is a disconnection because in the debug console, there is a " disconnected " descriptor next to the java process that was just running. But what is the JRE - an IBM VM? a Sun VM? and what version is it? Can you do  a " java -version " to get the information. Hi Darin,   Here is the version Classic VM (J2RE 1.2.2 IBM build cn122-20010308 (JIT enabled: jitc)) See bug 1712. Sorry..looks like on further review my comment to see bug 1712 may not be  relevant. Is it possible to test on a newer VM? The one mentioned is old and may have  problems? In fact, I did not think that IBM VMs prior to 1.3 properly supported JDI. I suggest the IBM 1.3.1 VM:   Classic VM (build 1.3.1, J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT enabled: jitc)) It is possible that our fix to bug# 19182 could help with this one. Please re- try with the build of 20020620 (which is not yet available, but should be soon). deferred for post 2.0 investigation. I believe the problem here is the old VM  being used. Can this bug be closed? Is there any more information you can provide? could not replicate...will close ditto marking as works for me
JDT	WSAD hang while setting buildpath Hang while setting buildpath WSAD 4.02 When set up buildpath of one of EJB projects within WSC workspace (36 EJB  projects, 3 wars, let us know if you need the workspace),  WSAD 4.02 hang with the following dump message from java console: Full thread dump Classic VM (J2RE 1.3.0 IBM build cn130-20000622, native  threads): " ModalContext " (TID:0x16146d48, sys_thread_t:0x1e83f1d8, state:R, native  ID:0x748) prio=5 at  org.eclipse.jdt.internal.core.JavaProject.getClasspathEntryErrorMessage (JavaProject.java(Compiled Code))         at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath (JavaProject.java(Compiled Code))         at org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation (SetClasspathOperation.java:73)         at org.eclipse.jdt.internal.core.JavaModelOperation.execute (JavaModelOperation.java:257)         at org.eclipse.jdt.internal.core.JavaModelOperation.run (JavaModelOperation.java:452)         at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1197)         at org.eclipse.jdt.internal.core.JavaModelManager.runOperation (JavaModelManager.java:1021)         at org.eclipse.jdt.internal.core.JavaElement.runOperation (JavaElement.java:508)         at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath (JavaProject.java:1514)         at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath (JavaProject.java(Compiled Code))         at org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.setJavaProjectPro perties(BuildPathsBlock.java(Compiled Code)) at  org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.access$7 (BuildPathsBlock.java:449)         at org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock$2.run (BuildPathsBlock.java:359)         at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute (WorkspaceModifyDelegatingOperation.java:39)         at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64)         at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1197)         at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)         at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) " org.eclipse.jdt.internal.ui.text.JavaReconciler " (TID:0x15f3aa88,  sys_thread_t:0x28928610, state:CW, native ID:0x25c) prio=1 at java.lang.Object.wait(Native Method)         at org.eclipse.jdt.internal.ui.text.JavaReconciler$BackgroundThread.run (JavaReconciler.java(Compiled Code)) " org.eclipse.jdt.internal.ui.text.JavaReconciler " (TID:0x1128e6c8,  sys_thread_t:0x289335c8, state:CW, native ID:0x6e0) prio=1 at java.lang.Object.wait(Native Method)        at  org.eclipse.jdt.internal.ui.text.JavaReconciler$BackgroundThread.run (JavaReconciler.java(Compiled Code)) " Java indexing: org.eclipse.jdt.internal.core.search.indexing.IndexManager " (TID:0x874ddf0, sys_thread_t:0x1ca3c498, state:CW, native ID:0x690) p io=5         at java.lang.Thread.sleep(Native Method) at org.eclipse.jdt.internal.core.search.processing.JobManager.run (JobManager.java(Compiled Code)) at java.lang.Thread.run(Thread.java:498) " Finalizer " (TID:0x8e8708, sys_thread_t:0x829318, state:CW, native  ID:0x59c) prio=8 at java.lang.Object.wait(Native Method)         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled Code))         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled Code))         at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java(Compiled Code)) " Reference Handler " (TID:0x8e8750, sys_thread_t:0x824cd8, state:CW, native  ID:0x598) prio=10 at java.lang.Object.wait(Native Method)         at java.lang.Object.wait(Object.java:421) at java.lang.ref.Reference$ReferenceHandler.run(Reference.java(Compiled  Code)) " Signal dispatcher " (TID:0x8e8798, sys_thread_t:0x821c10, state:R, native  ID:0x5c4) prio=5 " main " (TID:0x8e87e0, sys_thread_t:0x234cb8, state:MW, native ID:0x5b8)  prio=5 at org.eclipse.swt.widgets.Label.WM_ERASEBKGND(Label.java(Compiled  Code)) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled  Code)) at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)         at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java (Compiled Code))         at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))         at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java (Compiled Code))         at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))         at org.eclipse.swt.internal.win32.OS.PeekMessage(Native Method) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java(Compiled Code)) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)         at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335)         at org.eclipse.jdt.internal.ui.preferences.BuildPathsPropertyPage.performOk (BuildPathsPropertyPage.java:116) at org.eclipse.jface.preference.PreferenceDialog.okPressed (PreferenceDialog.java:512) at org.eclipse.jface.preference.PreferenceDialog.buttonPressed (PreferenceDialog.java:166) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:211)         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java (Compiled Code))         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code))         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))         at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code))         at org.eclipse.jface.window.Window.open(Window.java:523) at org.eclipse.ui.dialogs.PropertyDialogAction.run (PropertyDialogAction.java:150) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code)) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code))         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code))         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))         at org.eclipse.ui.internal.Workbench.run(Workbench.java:656) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)         at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)         at org.eclipse.core.launcher.Main.run(Main.java:437) at org.eclipse.core.launcher.Main.main(Main.java:310)  Monitor pool info: Initial monitor count: 32   Minimum number of free monitors before expansion: 5 Pool will next be expanded by: 36   Current total number of monitors: 72 Current number of free monitors: 24  Monitor Pool Dump (inflated object-monitors): sys_mon_t:0x002346b0 infl_mon_t: 0x002342a8:     java.lang.ref.Reference$Lock@8F01E0/8F01E8: < unowned > Waiting to be notified: " Reference Handler " (0x824cd8)   sys_mon_t:0x002346f0 infl_mon_t: 0x002342e8: java.lang.ref.ReferenceQueue$Lock@8EFE30/8EFE38: < unowned > Waiting to be notified: " Finalizer " (0x829318)   sys_mon_t:0x1e837550 infl_mon_t: 0x1e837368: java.lang.Object@11434710/11434718: < unowned > Waiting to be notified: " org.eclipse.jdt.internal.ui.text.JavaReconciler " (0x289335c8)   sys_mon_t:0x1e2d9c40 infl_mon_t: 0x1e96d978: java.lang.Object@15FB3310/15FB3318: < unowned > Waiting to be notified: " org.eclipse.jdt.internal.ui.text.JavaReconciler " (0x28928610)  JVM System Monitor Dump (registered monitors): ACS Heap lock: < unowned > System Heap lock: < unowned > Sleep lock: < unowned > Waiting to be notified: " Java indexing:  org.eclipse.jdt.internal.core.search.indexing.IndexManager " (0x1ca3c498)     Method trace lock: < unowned > UTF8 Cache lock: < unowned > Heap lock: < unowned > Rewrite Code lock: < unowned > Monitor Cache lock: owner " Signal dispatcher " (0x821c10) 1 entry     JNI Pinning lock: < unowned > JNI Global Reference lock: < unowned > Classloader lock: < unowned > Linking class lock: < unowned > Binclass lock: < unowned > Monitor Registry lock: owner " Signal dispatcher " (0x821c10) 1 entry     Thread queue lock: owner " Signal dispatcher " (0x821c10) 1 entry  Thread identifiers (as used in flat monitors): ident 1d " ModalContext " (0x1e83f1d8) ee 0x1e83f008     ident 1f " org.eclipse.jdt.internal.ui.text.JavaReconciler " (0x28928610) ee  0x28928440 ident 28 " org.eclipse.jdt.internal.ui.text.JavaReconciler " (0x289335c8) ee  0x289333f8 ident 6 " Java indexing:  org.eclipse.jdt.internal.core.search.indexing.IndexManager " (0x1ca3c498) ee  0x1ca3c2c8 ident 5 " Finalizer " (0x829318) ee 0x00829148     ident 4 " Reference Handler " (0x824cd8) ee 0x00824b08     ident 3 " Signal dispatcher " (0x821c10) ee 0x00821a40     ident 2 " main " (0x234cb8) ee 0x00234ae8  Java Object Monitor Dump (flat & inflated object-monitors):     java.lang.ref.ReferenceQueue$Lock@8EFE30/8EFE38 locknflags 80000400 Monitor inflated infl_mon 0x002342e8     java.lang.ref.Reference$Lock@8F01E0/8F01E8 locknflags 80000200 Monitor inflated infl_mon 0x002342a8     org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation@B263258/B263260 locknflags 001d0000 Flat locked by threadIdent 1d. Entrycount 1     java.lang.Object@11434710/11434718 locknflags 80002900 Monitor inflated infl_mon 0x1e837368     java.lang.Object@15FB3310/15FB3318 locknflags 80003100 Monitor inflated infl_mon 0x1e96d978 From the stack trace above it looks like a JDT issue. Could a workspace be provided so as to reproduce the problem ? The workspace is large. It might not be sent via email. Do you have a server I  can upload to? Please let me know. Thanks! I could not reproduce the problem with WS Workbench R1.0 build 0.147 (I believe  this corresponds to WSAD 4.02). The only difference I see is that the VM that comes with build 0.147 is J2RE 1.3.0 IBM build cn130-20010502.  Could you please try with this VM version (I don't have your older version J2RE  1.3.0 IBM build cn130-20000622) ? Also just to make sure I understand what you're doing: you changed the build  path of WCExternalCatalog (this project was selected when I started your workspace) but what change did you do? Did you add a new library? Do you know whichbuild/driver was the older version J2RE 1.3.0 IBM build cn130- 20000622? I don't have it.   I have tried to reproduce it on WSAD 4.03, but not successful. What I did: select WCExternalCatalog, right click, select Properties, select  Java Build Path on the left, click on Libraries on the right, delete wcejbimpl.jar - /WebSphereCommerce/lib, click on Add External Jars, add  wcejbimpl.jar from my local drive, click OK button. Sorry, I don't know what build J2RE 1.3.0 IBM build cn130-20000622 corresponds  to. I just saw in the stack trace that you were running it when the hang occured.  If you cannot reproduce the problem (and I cannot either), should we close this bug? I think we can close this defect. If two of us can reproduce it, then we will  open it again. What do you think? How to close the defect in Bugzilla? I will close the one in CMVC. Thanks! Closing.
Platform	Pressing Apply makes tabs disappear (1) New empty workspace (2) Import Junit (3) create a Java launch config for " VectorTest " (4) Debug it (5) Edit configrations (6) Rename the config, and press apply (7) The tabs disappear Fixed in LaunchConfigurationDialog. Please verify. Verified
Platform	[Tasks] There doesn't appear to be a mechanism to assign newly created tasks to a resource/project [Integration build 20020305] Right-click on the task view, and create a new task. This newly created tasks doesn't belong to the current project, and there  dosn't appear to be a way of assigning it to a project. This is an issue  because the user will typically filter the tasks (if there is any significant amount of tasks). So, when filtering by project ( " on any resource in same  project " ) this task won't show up. Moving to Platform/UI for comment. Your observations are correct. The task is assigned owned by the workspace.  Did you consider extending views like theNavigator to have an " add task " menu  item? When a project is selected. Your action could create the marker and associate it with the selected project. This is an interesting feature however we don't have the resources to consider  doing this now. Defer until after 2.0 Reopen to investigate You can assign a task to a resource via Edit- > Add Task... fixed
Platform	Add task should limit suggested message to one line (1GKCWIK) If you have several lines of text selected and then pop up Add Task you are prompted with the contents of the entire selection. As the text box is a single line text this is full of garbage carriage returns and is way to long to be useful.  STEPS 1) Select an entire java file  2) Pop up the menu and select Add Task... 3) You will geta huge selection (and a huge dialog) with the entire contents   NOTES: PRODUCT VERSION: 136 Add Task no longer prompts with a suggestion.
JDT	ClassLoader step filter not very useful The current step filter will only filter java.lang.ClassLoader.  All of the other eclipse class loaders (and any other class loaders) will be stepped into. Of course most people are not debugging that would use Eclipse class loaders.   Kindof a dumb pr. Closing.
Platform	HTTP proxy support Whenever i try to update or connect to the remote CVS server, eclipse is unable  to locate the server. Is this because I am b ehind a HTTP proxy? cuz if thats  the case, I'd like to request for HTTP proxy support. Thank you, Karthikeyan.R *** This bug has been marked as a duplicate of 19258 ***
Platform	Cannot disconnect/reconnect project due to cached CVS info - disconnected a project from CVS - attempted to reconnect it I got a message saying it can't connect because the CVS/ info differs from the  values I typed in. Bug #1: it doesn't say which values Bug #2: even if you delete all your CVS files you will still get this message. You need to shutdown/restart the workbench to get back to being able to connect  the project. You can't explicitly disconnect from a CVS project anymore. *** Bug 8270 has been marked as a duplicate of this bug. *** Fixed, released to HEAD. You can disconnect with two options: 1) leave CVS meta-files intact 2) remove meta-files.
JDT	Adding partial compilation for JAVA In JBuilder or IntelliJ, you could select a file or package and just compile  these selected source. I think this feature is very useful when you develop a team project, you only want to compile your part of code, instead of the whole  project. What do you call a part ? And what if it needs other files which are comprised  in this part ? We do have incremental compilation, which will only compile the set of affected  files (once a first full build has occurred). These products do not have it, which may explain why they provide this kind of feature.  Note that in 2.1, we want to investigate a filtering approach which could allow you to hide some source files from the Java compiler. Would this solve your  problem ? What I mean is when you have a large team project, which couldn't entirely  compiled due to some errors in other team member's code. However, you want to  make sure that your part of code is compiled. Then you could select your package and only compile on that package. The compiler should automatically  compile only the codes which are necessary (including your code and any other code you depend on, but not the whole project). The source filtering may not  work in my case. It is because my code may depend on others code (not all, but part of them).  Thanks for your comment. Tai So a way to exclude some files from the build would do it, wouldn't it ? Duplicate of bug 24127  *** This bug has been marked as a duplicate of 24127 ***
JDT	DCR: Enable/Disable a breakpoint in vertical ruler of Java Editor (1GFQ6DY) Would like to have Enable/Disable a breakpoint in the  menu when I'm over a breakpoint in the  vertical ruler of Java Editor.   NOTES: moved to ' active ' Implementation might require support from the Java editor PRODUCT VERSION:  0.9 The prototype that I have implemented needs access to the IVerticalRuler  (specifically to get at the control of the ruler to register a mouse listener and to make use of the IVerticalRuler#getLineOfLastMouseButtonActivity().  Therefore the support I believe I would need: AbstractTextEditor#getVerticalRuler() is made public OR JavaEditor#getAdaptable(IVerticalRuler.class) returns the IVerticalRuler for that editor. *** Bug 5082 has been marked as a duplicate of this bug. *** Kai is on vacation until the last week of January. I don't want to make API  changes without his approval. Having it for Milestone M3 is not a problem. *** Bug 1735 has been marked as a duplicate of this bug. *** Moved to M5 *** Bug 11492 has been marked as a duplicate of this bug. *** Implemented with the new support in the text editor. Please verify (jared) Verified. (Woohoo!)
Platform	[TM] Incomming deletions under outgoing addition I performed a sync on a project that was deployed to a DAV server. A folder  with contents had been removed from the server. The folder showed as an outgoing addition (wrong) and the files where incoming deletions (correct). This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this  bug is important, feel free to reopen it.
Platform	Launch from New Office Document hangs until Eclipse exits. With Eclipse 20020425 running, user selects ' New Office Document ' from start menu, selects ' Blank Document ' then clicks ok to launch MS Word with a blank document. Word does not launch until Eclipse exits. Same behaviour is seen with 20020430.  No problems with M5. Reproducible for me in 20020425 with Win2K.  I suspect the OLE support in the  UI.  Moving to UI for further investigation. Tod has seen this lately too, and is investigating. There have been no changes in the OLE support in UI lately, and it doesn't  sound like Eclipse had an OLE editor open, so it may be a deeper problem. I have also made it happen by setting Netscape as the external editor for .html  files and then opening a file. I did it using java.exe and here is the trace when I hit Ctrl-Break while  running. ---------------------- Exception Information --------------------------- JVM Exception 0x2 (subcode 0x0) occurred in thread " main " (TID:0x9019D8) Native stack at exception generation: Program Name                                 Entry Name Statement ID ---------------------- System Properties ------------------------------- J2RE 1.3.1 IBM Windows 32 build cn131-20020227 D:\0425\eclipse\jre\bin\javaw.exe -classpath D:\0425\eclipse\startup.jar  org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 - showsplash D:\0425\eclipse\eclipse.exe -showsplash 196882 Java Home Dir: D:\0425\eclipse\jre Java DLL Dir: D:\0425\eclipse\jre\bin Sys Classpath: D:\0425\eclipse\jre\lib\rt.jar;D:\0425 \eclipse\jre\lib\i18n.jar;D:\0425\eclipse\jre\classes UserArgs: -Djava.class.path=.  -Djava.class.path=D:\0425\eclipse\startup.jar -Dinvokedviajava ---------------------- XM component Dump Routine  ---------------------- Full thread dump Classic VM (J2RE 1.3.1 IBM Windows 32 build cn131-20020227,  native threads): " ModalContext " (TID:0xC9CDE0, sys_thread_t:0xEB4AB70, state:CW, native  ID:0x564) prio=5 at java.lang.Object.wait(Native Method)  at java.lang.Object.wait(Object.java:429) at org.eclipse.ui.internal.Semaphore.acquire(Semaphore.java:20)  at org.eclipse.ui.internal.UISynchronizer.syncExec (UISynchronizer.java:34)  at org.eclipse.swt.widgets.Display.syncExec(Display.java:1658) at org.eclipse.ui.views.tasklist.TaskListContentProvider.resourceChanged (TaskListContentProvider.java:338) at org.eclipse.core.internal.events.NotificationManager$1.run (NotificationManager.java:123) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:784) at org.eclipse.core.runtime.Platform.run(Platform.java:411)  at org.eclipse.core.internal.events.NotificationManager.notify (NotificationManager.java:138)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:62)  at org.eclipse.core.internal.resources.Workspace.broadcastChanges (Workspace.java:133)  at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java(Compiled Code))  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1347)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) " SeedGenerator Thread " (TID:0x1306B50, sys_thread_t:0xEB6F4F8, state:CW,  native ID:0x508) prio=1 at java.lang.Object.wait(Native Method)  at java.lang.Object.wait(Object.java(Compiled Code)) at sun.security.provider.SeedGenerator.run(SeedGenerator.java(Compiled  Code)) at java.lang.Thread.run(Thread.java:512) " Finalizer " (TID:0x901900, sys_thread_t:0x882790, state:CW, native ID:0xFC)  prio=8 at java.lang.Object.wait(Native Method)  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled  Code)) at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java(Compiled  Code)) " Reference Handler " (TID:0x901948, sys_thread_t:0x87F0D8, state:CW, native  ID:0x4BC) prio=10 at java.lang.Object.wait(Native Method)  at java.lang.Object.wait(Object.java(Compiled Code)) at java.lang.ref.Reference$ReferenceHandler.run(Reference.java(Compiled  Code)) " Signal dispatcher " (TID:0x901990, sys_thread_t:0x87B7F8, state:R, native  ID:0x114) prio=5 " main " (TID:0x9019D8, sys_thread_t:0x23E628, state:R, native ID:0x4FC)  prio=5 at java.text.NumberFormat.getInstance(NumberFormat.java:558)  at java.text.NumberFormat.getInstance(NumberFormat.java(Compiled Code)) at java.text.MessageFormat.format(MessageFormat.java(Compiled Code))  at java.text.MessageFormat.format(MessageFormat.java(Compiled Code)) at java.text.Format.format(Format.java(Compiled Code))  at java.text.MessageFormat.format(MessageFormat.java(Compiled Code)) at org.eclipse.ui.views.tasklist.TaskListMessages.format (TaskListMessages.java:30) at org.eclipse.ui.views.tasklist.MarkerUtil.getLineAndLocation (MarkerUtil.java:239) at org.eclipse.ui.views.tasklist.MarkerUtil.getLineAndLocation (MarkerUtil.java:219) at org.eclipse.ui.views.tasklist.MarkerUtil.getProperty (MarkerUtil.java:364) at  org.eclipse.ui.views.tasklist.TaskList$TaskListLabelProvider.getColumnText (TaskList.java:113)  at org.eclipse.jface.viewers.TableViewer.doUpdateItem (TableViewer.java:180)  at org.eclipse.jface.viewers.StructuredViewer.updateItem (StructuredViewer.java:1044)  at org.eclipse.jface.viewers.TableViewer.add(TableViewer.java:99) at org.eclipse.ui.views.tasklist.TaskListContentProvider.updateViewer (TaskListContentProvider.java:414) at org.eclipse.ui.views.tasklist.TaskListContentProvider.access$0 (TaskListContentProvider.java:398) at org.eclipse.ui.views.tasklist.TaskListContentProvider$1.run (TaskListContentProvider.java:340) at org.eclipse.ui.internal.UIWorkspaceLock.doPendingWork (UIWorkspaceLock.java:53)  at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:23) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled  Code)) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java (Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java(Compiled Code)) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335)  at org.eclipse.team.ui.actions.TeamAction.run(TeamAction.java:165) at org.eclipse.team.internal.ccvs.ui.actions.AddToWorkspaceAction.run (AddToWorkspaceAction.java:78) at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:202) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:833)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:816) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:643) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:160)  at org.eclipse.core.launcher.Main.run(Main.java:548) at org.eclipse.core.launcher.Main.main(Main.java:403) ---------------------- LK component Dump Routine  ---------------------- Monitor pool info:   Initial monitor count: 32 Minimum number of free monitors before expansion: 5   Pool will next be expanded by: 16 Current total number of monitors: 32   Current number of free monitors: 22 Monitor Pool Dump (flat & inflated object-monitors):   sys_mon_t:0x0023D998 infl_mon_t: 0x0023D588: java.lang.ref.Reference$Lock@90F8C0/90F8C8: owner " main " (0x23E628), entry  count 1 Waiting to be notified: " Reference Handler " (0x87F0D8)   sys_mon_t:0x0023D9E8 infl_mon_t: 0x0023D5C8: java.lang.ref.ReferenceQueue$Lock@90F4D0/90F4D8: < unowned > Waiting to be notified: " Finalizer " (0x882790)   sys_mon_t:0x0023DA88 infl_mon_t: 0x0023D648: org.eclipse.ui.internal.Semaphore@554D9E8/554D9F0: < unowned > Waiting to be notified: " ModalContext " (0xEB4AB70)   sys_mon_t:0x0023DAB0 infl_mon_t: 0x0023D668: sun.security.provider.SeedGenerator@1311EB0/1311EB8: < unowned > Waiting to be notified: " SeedGenerator Thread " (0xEB6F4F8) JVM System Monitor Dump (registered monitors): Evacuation Region lock: < unowned > Heap Promotion lock: < unowned > Sleep lock: < unowned > Method trace lock: < unowned > Heap lock: owner " main " (0x23E628), entry count 2     Monitor Cache lock: owner " main " (0x23E628), entry count 2     JNI Pinning lock: owner " main " (0x23E628), entry count 1     JNI Global Reference lock: owner " main " (0x23E628), entry count 1     Classloader lock: < unowned > Binclass lock: owner " main " (0x23E628), entry count 1     Monitor Registry lock: owner " main " (0x23E628), entry count 1     Thread queue lock: owner " main " (0x23E628), entry count 2 Thread identifiers (as used in flat monitors): ident 0x0C " ModalContext " (0xEB4AB70) ee 0x0EB4A960     ident 0x08 " SeedGenerator Thread " (0xEB6F4F8) ee 0x0EB6F2E8     ident 0x05 " Finalizer " (0x882790) ee 0x00882580     ident 0x04 " Reference Handler " (0x87F0D8) ee 0x0087EEC8     ident 0x03 " Signal dispatcher " (0x87B7F8) ee 0x0087B5E8     ident 0x02 " main " (0x23E628) ee 0x0023E418 Java Object Monitor Dump (flat & inflated object-monitors): *** Exception 2 received during dump processing, dump truncated. ---------------------- END OF DUMP ------------------------------------- The more interesting case is with a well populated workbench and trying to save  the system colors. Even with all of the perspectives closed this occurs - I suspect there is a  background process causing some sort of thread deadlock Note I have tried all the reported test cases with out seeing the problem on  both XP and 2K. This either means that I am not duplicating the steps correctly, or that it doesn't happen in all configurations. See Bug 14960. The easiest way to replicate this sort of freezing of the OS is  to start Eclipse straight out of the zip and then try and change your system colours. It will freeze 98, NT and 2000 although it will work for XP. *** Bug 14993 has been marked as a duplicate of this bug. *** *** Bug 14960 has been marked as a duplicate of this bug. *** We have discovered that there is a " free " eclipse.exe process running after  javaw.exe has been launched.  Killing this process causes the system colors to be updated normally.  We are examining the C code and the core code. I was under the impression that we had to keep eclipse.exe running in order to  support relaunch (from the install/update story). If you replace the startup.jar in 0430 with the startup.jar in M5 the problem  goes away although in both cases the eclipse.exe hangs around. Nick is correct. The " free eclipse.exe " is required. I spoke to SN about its  purpose. The problem was that the main launcher was waiting for the JVM to exit using  the _wait() method instead of processing events (I tried to optimize its processing cycles ... didn't work). It will now process events until the  launcher exits. If the exit code indicates a restart, it will start the JVM again and go back into its message processing loop.  Grant Gayed has been notified of the change and will build a new eclipe executable for Win32. Steve, you will have to FIX this bug report (I can ' t). *** Bug 15080 has been marked as a duplicate of this bug. *** Kevin, Why can't you change the status of this PR? You're a committer on the  SWT with a valid bugzilla email address. I don't know why it wouldn't work for  you. I'm going to change the status to fixed.  We still need to find out why Kevin  can't do it himself, MCQ? Kevin's rights were broken. They've been fixed.
JDT	Got source lookup dialog for scrapbook when launching Eclipse target Build 20020418  - created a scrapbook page - executed an expression in it which sent some output to the console - this worked fine - later, I launched my eclipse target under debug - the Scrapbook thread came up suspended in ScrapbookMain1.eval - the Debugger Source Lookup came up for  type ' org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain1 ' I had never even tried debugging in the scrapbook.  There are two problems here: 1. Scrapbook thread gets suspended when launching another target. 2. It can't find the source when this happens.   In case it's relevant, this is what I had earlier executed in the scrapbook: Properties props = System.getProperties(); for (Iterator i = props.keySet().iterator(); i.hasNext();) {  String key = (String) i.next(); Object val = props.get(key);  System.out.println(key + " : " + val); } Tried resuming scrapbook thread. It suspended immediately, and again prompted for the source. Note the name of my scrapbook page is " Scrappy.jpage " and the name of my  Eclipse target is " Target " , so the scrapbook page appears first in the list of  processes. It looks to me like the scrapbook thread is usually suspended, and the Debug  view tried to select the first frame in the view on open. The scrapbook is implemented by launching a VM in debug mode, and performing  evaluations. The scrapbook thread is suspended at an invisible breakpoints in a point where evaluations can be performed (thus, resuming the thread causes it  to suspend again). We should not be prompting for source. Perhaps we should be hiding the  scrapbook VM all together. *** This bug has been marked as a duplicate of 12783 ***
Platform	Acc: No indication of  outgoing/incoming changes or conflicts Accessibility problem  CVS Sync views: No indication of how many conflicts were found and what the incoming or outgoing changes are with JAWS.......How does a blind person get  feedback on what the results of the sync was? 1) the message that is printed at the bottom of the page is not read or get  focus by JAWS 2) + and - signs are not read by JAWS You can get focus for the status area at the bottom of the page using the JAWS  cursor (Num Pad -) and hovering the mouse over it. Likewise graphics can be identified using the graphics labeller.  For 2.1 the goal of Eclipse is to pass the IBM accessibility checklist: http://w3.austin.ibm.com/~snsinfo/softwarecheck.html. If we fail anything on  that list we should address it for 2.1. Marking as invalid as per Tod's comments. Please reopen if not compliant. please refer to http://w3.austin.ibm.com/~snsinfo/jawsref.html#JawsCursors  Section: Additional commands for reading documents in Windows applications By default, JAWS will read Windows documents using the PC Cursor. JAWS will  read the document automatically, but you can read the document line by line or word by word if necessary using the following commands. If JAWS does not read  the document automatically, try using the commands to read line by line. If the document can only be read with the JAWS cursor, it is not accessible.   Section: Labeling Graphics using JAWS While JAWS does enable users to label graphics that are not accessible, it is  not the best method to make an application accessible. Graphics labeled with JAWS cannot be ready by other assistive technology. If the graphic changes in  any way from release to release (a new color, a different size, flashing graphics), then the label will no longer be valid. The best solution is to  provide alternate text for the graphics to make them accessible to all assistive technology. This method is documented as a short-term solution to  address immediate accessibility concerns. We should have an option to make the direction and kind of change available  either in the text label of a tree item or through a properties dialog. The status bar is provided by the workbench UI so any accessibility problems with  it should be reported to that component. Fix released to HEAD  There is now an option to have the sync state appear in the text labels of the sync view.
JDT	Delete in package viewer is dangerous on members If the Java Element is open in the editor, strange effects will be seen if a  original element is deleted. Martin, can you please be a little bit more specific. What kind of strange  effects can be seen ? As a general rule, no actions should be performed on original elements if there  is a working copy around. Just discussed with EG, problem is solved due to adams reimplementation of  Move/Copy/Delete.
Platform	Provide better logging and tracing in Core in M5 Done, added UpdateManagerPlugin.warn(String,Exception)
JDT	NPE in CompilationUnitEditor when being part of a multi page editor I'm trying to instantiate a CompilationUnitEditor inside a MulitPageEditor.  * I know that CompilationUnitEditor is marked " internal " api, so is there another way to get the Java editor inside a MultiPageEditor (other than filing a bug report :-)?  * If not, CompilationUnitEditor works for me (so far) except that I get a NullPointerException when hitting Ctrl-Space and when I try to save. The code I'm currently using to create the CompilationUnitEditor is as follows: void createPage0() { try { editor = new CompilationUnitEditor(); // editorSite and editorInput are the site and input // that were passed to the multi-page editor. editor.init(editorSite, editorInput); int index = addPage(editor, getEditorInput()); setPageText(index, editor.getTitle()); } catch (PartInitException e) { // < < snip > > } } Here is the top of the error stack when I hit Ctrl-Space:  java.lang.NullPointerException at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.setStatusLineErrorM essage(CompilationUnitEditor.java:778) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer .doOperation(CompilationUnitEditor.java:218) at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84) It fails on the same line when I hit Ctrl-s, but with a different stack.  Can anyone tell me what I'm missing?  Alternatively, can someone point me to another example somewhere I can use to see what I'm missing?  (I'm running 2.01 on win32.) Thanks,  Dave --  Dave Orme Advanced Systems Concepts http://www.asc-iseries.com The CompilationUnitEditor works now with IEditorStatusLine. This should solve  your NPE problem. I20021001.
Platform	CVS: Sharing wizard has no initial selection The sharing wizard for CVS has two radio buttons but neither of them is selected by default. Only occurs if there are no repo locations existing already. Fixed.
Platform	[Perspective] Issues with fast views Issues with fast views from Philippe, Erich and Greg:  Greg: Now that I wear the client hat...here is my feedback  * I sometimes experience the same grief that the fast view hides things however,  unlike PM what bothers me is that it hides part of my editor (the left side). Quite annoying  especially when using search. * There probably are opportunities where a fast view could auto hide on  selection. * I am not sure what he means by " you have to minimize it " - does he  realize you can just click off it or you can click on the button that you opened it with   NOTE: You should also be able to use escape.  (I created bug 8849) * I also wish I could doc fast views in other places (although this is  not high priority). Aside:  The task view as a fast view on the left is not too useful unless because it wants to be wide.  I created (8850) to suggest being able to hide columns & the benefit  that gives me when using the task view as a fast view.      Erich and Philippe: Subject: fast view usability feedback FYI, not critical but interesting feedback.    EG > did you try using the type hierarchy as a fast view in this perspective? PM > I don't like fast views, since they hide some information to me (need to go  back and forth all the time). Thoughts: * for me it would help when I could dock fast views on the right side as well. All my navigational  views are on the left and will be covered by a fast view. * making a fast view disappear isn't as fast, e.g., I select something in the  fast view and then I have to minimize the task view again. For some interactions the fast view  should auto close after the selection. Consider using the navigator as a fast view, you  navigate to the file open it, then the navigator should disappear without further ado. Obviously  this is not behaviour I'd like to get when using the Search results view.  --erich Some more comments... nice if the view developer could provide an attribute  with a default ratio for a view if opened as a fast view. Things like sync and task views need to be much wider. We need to do something like that.  The current default sizing for fast views  is unusable. An attribute for specifying the initial width of a fast view was added. Defer  the other suggestions until after release 2.0 Reopen to investigate Nick are you OK with defering this for 3.0. Being able to move the bar is covered by bug 6988.  Fast views close themselves if they give focus to another part (i.e. when opening an editor).  The Navigator does, the Search view doesn ' t.  If you want  to dismiss the fast view using the keyboard, you can use F12 (activate editor). This currently only works when there is an editor to make active.  Filed bug  27140 for this limitation.  I don't see adding any other support here.  Fast view ratios were added for 2.0. This PR can be closed.
JDT	Variable doesn't showup in Variables View although line is executed While stepping over local variable decarations I noticed that after stepping  over a decalration the variable didn't show up in the variables view. The variable appeared after stepping over the next line. See attached Screen shot. There the variable tEnd is not part of the variables view although the corresponding declaration has been executed. Attachment seems to be missing. Darin any progress on this. It starts getting really annoying during debugging.  The problem is still present in 2001114. I am using Sun JDK 1.3.1_01 as a VM to run eclipse and J9 as a traget VM. Sorry, no progress yet. I will bump up the priority. I have not seen the  problem, so perhaps I will use the runtimes you are using. Just looking at the screenshot, it looks like you have the compiler option on to remove unused variables.  This would cause tEnd to be optimized out. No, I have checked the setting " Preserve unused local variables " .   Actually the variable tEnd showed up ion the varaibles view after I stepped over the next line. *** This bug has been marked as a duplicate of 5901 ***
Platform	[Properties view] PropertySheet columns aren't sized properly On the runtime launch page, on the " Tracing " Tab, the columns on the properties  view are sized as if the vertical scrollbar were not visible.  when it is visible, the columns don't fit in the remaining width. We're using a ui property sheet as-is. Moving to Platform UI. Is this still an issue in 3.2?
Platform	DCR - Tree missing keyboard support (1FJH5GY) An SWT tree doesn't seem to have proper keyboard support.  Since multiple selection is supported, there needs to be a way to do it via keyboard navigation. So one would expect to be able to move the emphasis box using ctrl-up and ctrl-down, space should select and deselect, and enter should do the same as double click. In other words, one would expect the same standard keyboard support as for a native list widget NOTES:   SN (2/1/01 2:05:39 PM) - We are not implementing this. We have implemented this!
Platform	support for WinNT support for WinNT presently it's only " Windows 98/ME/2000/XP " on: http://www.eclipse.org/downloads/index.php I don't know if WinNT is unsupported or just has been accidentaly omitted. Marek Moehling I believe that this is a typo on the download page. The Win32 build should work  on WinNT. According to the 2.1 plan, WinNT is still going to be supported (as a secondary  platform). Moving to Platform/Releng for comment. Pinging the PMC on this Pinging PMC again. NT is only supported as a secondary platform.  So while it is in the plan we  will not be adding it to the download page as a platform.
Platform	[Preferences] All editors (eg StringFieldEditor) should enable tooltips to ' label ' and ' value ' components eg with StringFieldEditor adding the following  public void setTextToolTip(String s) {  getTextControl().setToolTipText(s); }  public void setLabelToolTip(String s) {   getLabelControl().setToolTipText(s); } Is StringFieldEditor a JFace component? lookup eclipse.jface.preference.StringFieldEditor et-al The problem with doing this for 2.1 is that it is an API addition - any field  editor implementors would have to implement this as well. Deferring until API changes are allowed. There are currently no plans to work on this feature (In reply to comment #4) > There are currently no plans to work on this feature > Too bad; it's a good idea that I would like as well. If there is interest we will reopen If there is a suggested patch we can have a look
Platform	Need more support for creating/deleting resources Let me begin by stating what we're trying to do. Compare With- > Repository Contents is an ideal place to reconcile differences  locally. Simple changes are easy, but additions and deletions are problematic. We would like to be able to copy an addition or deletion right-to-left, save,  and have the resource created or deleted appropriately. We identify at least two barriers to this:  1. In the addition case (where we have an existing repository node on the right and a non-existing resource node on the left), setContents() is not  called on the node because, for example, the compare text viewer checks if the resource exists before calling setContents().  2. In the case of copying a deleted remote file from right-to-left and saving, we cannot distinguish the empty content case from the deletion case. In both  cases, setContents is passed a zero-byte array. We would like to have some way to tell the difference between these two cases.  If you have any suggestions about how this can be resolved (either by Compare, or by us, or both), we'd appreciate it. fixed in 20020305. No API change. Addition case: ICompareInput.copy(boolean) is called (on your DiffNode) where  you can create and copy the resource. If the resource is not only copied but modified too, a call to ITypedElement.setContents() follows immediately after  the call to copy(). Deletion case: ICompareInput.copy(boolean) is called where you can delete the  resource. The default implementation of DiffNode.copy interprets the above cases and  calls the replace and setContents methods on the affected ITypedElements. See org.eclipse.compare.internal.BufferedResourceNode for an example.
JDT	Index out of date when replacing a JAR Build 20020122  When upgrading my self-hosted workspace from 0115 to 0122, I ended up replacing jdt.jar (using plugin import tool), and once finished - WITHOUT restarting,  indexes still have references of JavaUIAction which no longer exists. Testcase: open typde dialog still presents it.  ---- We might have optimized too much unnecessary consistency checks... Fixed by forcing the existing index to be deleted first when a jar is changed. Reopening as this is not fixed if proj=src=bin. In this case, the delta is incorrect: it is a non-java resource changed delta. As a result, re-indexing is not triggered. Entered bug 9588 Invalid delta when replacing jar and proj=src=bin. Closing this one.
Platform	StyledText - Tab does not tab out of read-only Build 20020515  - Help / About - select a portion of the about text (this is a read-only StyledText) - hit Tab - it does not go to the next control  Since Tab has no effect on the StyledText content since it is read-only, it should do tab traversal.  Note that we are working around this post 20020515 by using a traverse listener. If this is fixed, please let us know so we can remove this workaround. This seems like a reasonable thing to fix, unless someone can think of a  way that it could break existing code. Are there other instances where this can occur? If they've all been worked  around already, then this fix could wait until post R2.0. Defer - agree that it's reasonable but there is a workaround. The only other place I know of where we use a read-only StyledText is the  welcome page.  But it is already doing its own tab traversal handling to go between links and sections. OK to defer. Reopen *** Bug 20522 has been marked as a duplicate of this bug. *** Released fix. UI team can remove workaround. Filed bug 21505 to remove the workaround.
Platform	Cursor is locked on CVS exception (1GDFJQ5) Create CVS repository connection   :pserver:foo@cvslnx:/home/cvs/vcmrepo Open the repository view  Expand the repository Expand Team Streams The dialog appears asking for password.  Cancel the dialog. A dialog states that you cancelled the connection (in not so many words).  Click OK to dismiss the dialog. Look at the cursor. Depending on chance, it's either an i-beam or an arrow.  Move it around the workbench. It doesn't change like it should.   Click somewhere in the workbench. Now everything's okay again.   NOTES: JEM (5/8/2001 7:09:45 PM)  This is repeatable for me. PRODUCT VERSION:  Current CVS stream seems ok now
JDT	Accelerator to comment code causing trouble The keyboard accelerator for " Source/Comment " (Ctrl-/) does not work for non- English keyboards.  I'm using a French keyboard mapping, where the ' / ' key of  an English key mapping results in an ' é ' (E acute).  To type a ' / ' you need to  type Shift-3, and Ctrl-Shift-3 doesn't work (not to mention that it would be  bothersome to type that, and " Source/Uncomment " wouldn't map to anything  meaningful).  Unfortunately, using the ' / ' key on the numeric keypad doesn't  work either, that would have been quite acceptable. suggest to change ctrl-shift-/ to ctrl-\ *** Bug 16720 has been marked as a duplicate of this bug. *** Erich suggested changing ctrl-shift-/ to ctrl-\.  I just want to point out that  this choice may cause similar problems, as using a Canadian French keyboard, pressing the ' \ ' key of an English keyboard yields ' < ' (to actually type a ' \ ' on such a keyboard, you have to type AltCar+[that key just left of ' 1 ' ] -- AltCar being the RIGHT Alt key).  I'm sure the English folks must be banging their heads on the wall by now. :-) asking KevinH for help There is support for NL specific accelerator support, so this can be changed  for French. We can stick to the previous suggestion. *** Bug 18430 has been marked as a duplicate of this bug. *** fixed > = 20020601 pls verify Verified on build 20020602-F2 Moving to verified bucket The shortcut for comment the code isnt work in brazilian ABNT keyboard layout.  I dont understand why the shortcut for uncomment works fine but for comment it dont work. I checked that if I change the layout(keyboard) to English the  application works fine. But then I need to guess the position of the " / " and " \ " characters at the keyboard. The shortcut for comment works fine at  R2.0.2. System description: Win2000 SP3 Eclipse 2.1 M5  Keyboard Brazilian ABNT. Eclipse now supports configurable keybindings. Can be found under Preferences > Workbench > Keys.
Platform	Error disposing breakpoints view Build 20020123  For awhile I was getting the following NPE in my log file on shutdown.  Earlier, I had turned off the org.eclipse.jdt.core plugin while testing something, so  that could be related.  I cannot reproduce from a clean workspace. java.lang.NullPointerException  at org.eclipse.debug.internal.ui.views.BreakpointsView.dispose(BreakpointsView.java :172) at org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:569)  at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:313)  at org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:588)  at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:258)  at org.eclipse.ui.internal.WorkbenchWindow.access$3(WorkbenchWindow.java:249)  at org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:289)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at  org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:287) at org.eclipse.jface.window.WindowManager.close(WindowManager.java:103)  at org.eclipse.ui.internal.Workbench$2.run(Workbench.java:104) at  org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:827 )  at org.eclipse.core.runtime.Platform.run(Platform.java:395) at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:102)  at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:80) at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:174)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.Workbench.close(Workbench.java:172)  at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:254)  at org.eclipse.ui.internal.WorkbenchWindow.access$3(WorkbenchWindow.java:249)  at org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:289)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at  org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:287) at  org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:462) at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:150)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)  at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1229) at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:968)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2614) at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1190)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1799) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1176) at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:71)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2682) at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1190)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1799) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1176) at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:71)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2682) at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1190) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1799)  at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1181)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1203) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:844)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:827) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:87 8)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) *** This bug has been marked as a duplicate of 8063 ***
JDT	ClassCastException when removing a breakpoint Build 20020214 + exported plug-ins from HEAD as of 20020226  Selected a disabled breakpoint in Breakpoint view and clicked on the " - " Maybe important: I did this while launching the target.  java.lang.ClassCastException: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget  at org.eclipse.debug.internal.ui.actions.RemoveBreakpointAction$1.run(RemoveBreakpointAction.java:39)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1232) at org.eclipse.debug.internal.ui.actions.RemoveBreakpointAction.run(RemoveBreakpointAction.java:48) at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code)) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:771) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) Fixed in RemoveBreakpointAction Please verify. Verified.
Platform	Compare on release is slow (1GEHPR1) Whenever I attempt to release a whole project, it takes a long time to compute the outgoing changes.  In some cases, I even know I want to override fully what is on the server, and would be happy with a release no compare. What I mean is that the release operation should trigger a lazy compare action. It would be fine to simply show me the first affected children (could be a folder) which I can expand if I do care. Currently, the comparison is performed until all the leaves, and I can still decide to override conflicting changes all at once (which is fine), so why then forcing me to get the big penalty upfront when comparing. NOTES:   JohnA (5/29/2001 11:13:25 AM) It isn't comparing any contents, it's just comparing the local workspace with the server to see at a   resource granularity what has changed.  This has to happen before you can catchup or release anything, because otherwise it doesn't know what to release or load.  We never want to allow releasing without  first checking if the outgoing change conflicts with changes on the server, so this step is necessary. Kevinm (5/29/01 3:12:04 PM)  We should (future) see if this can be sped up though. Other thought is that the actual tree filling and comparer opening could be taking time,  so an optimized (just release if no conflicts) action would be faster. PRODUCT VERSION: SDK 0.113 we have improved performance and workflow here. closing PR (stale)
Platform	Openingconnection should be separated by a space in " New repository " dialog. build 20020214  Create a new repository, a progress dialog appears with these two words concatenated. Already fixed.  *** This bug has been marked as a duplicate of 9850 ***
Platform	Cntrl-E & Cntrl-Shift-E no longer works in Search view 20020529 As soon as a single Java Editor is opened Cntrl-E/Cntrl-Shift-E no longer works in the Search view because these accelerators are used for the disabled ' Next  Problem/Previous Problem ' actions of the Java editor.  I suggest to have global actions " Next " and " Previous " that can be hooked by  the Java editor, search, and compare (However in this case Cntrl-E is a bad choice because it makes the SWT Tree ' beep ' on windows). The Tree beeps on any key it doesn't understand itself. I talked to SN and he says this is just OS behaviour. If it's hooked as an accelerator, then this will get processed before the Tree  sees it. I would like to change the key bindings though, if I can make Ctrl+ > and  Ctrl+ < work on all locales.  That would free up Ctrl+E for the editor switcher.  Erich, can I get the final OK from you on this? I'll put it in today if so. I support this, please put it into the build today. Added global actions for Next and Previous. They are label retargetable, and I've added support for retargeting the image,  so the Next/Prev problem icons should appear if the handler has them set. See IWorkbenchActionConstants.NEXT and PREV.  I've changed the accelerators to Ctrl+ > and Ctrl+ < . (this really means Ctrl+.  and Ctrl+,).  I need to test this further on different keyboards and may have to roll back to Ctrl+E ad Ctrl+Shift+E.  Note that to get the Open and Show items to appear above Next and Prev, you need to use the OPEN_EXT ( " open.ext " ) and SHOW_EXT ( " show.ext " ) groups defined  in IWorkbenchActionConstants rather than defining your own.  I notice you had two groups for open items.  Did you need the second for stability?  If so I  can either add an OPEN_EXT2 group or move the additions group. I've tested the changes by modifying the Java editor and outline to use them. All seems well. Moving back to JDT.  JDT, Search and Compare should all change to use these.  These changes will be in Friday morning's build, so if you're willing to take  a chance you can load from HEAD and make the change for Friday morning as well. adding Dirk as CC Adapted Compare to global actions for 20020601. Adapted Search BUT: Ctrl+ < (previous) does NOT work on my Swiss German keyboard where < and > are on the same key. back to Platform UI for resolving the German keyboard issue We need two Open groups for menu stability. The openTypeGroup is a group for  the globale Open Type and Open Type in Hierarchy action which are action sets not activated via part associations. They make perfect sense in the Navigator  view as well since they trigger a load of the Java plugin. Dani, would you object to using Ctrl+, and Ctrl+. on your keyboard, even though  it indicates Ctrl+ < and Ctrl+ > in the menu item? We can use setAccelerator to override what is displayed in the text to do this. If I see the accelerator in the menu then it's ok. But note, that currently they DO NOT work. Currently Ctrl+ > (next) works. This is because defining the accelerator as Ctrl+ < actually maps to the  unshifted key, which is Ctrl+, on an English keyboard, but is Ctrl+ > on a  German or Swiss-German keyboard. I've decided to simply use Ctrl+. and Ctrl+, (as set and as displayed). Although showing " Ctrl+ > " and " Ctrl+ < " looks cooler, " Ctrl+. " and " Ctrl+, " are  more honest, and won't cause confusion for users of German or Swiss-German  keyboards.  If I could hook both, I would indicate " Ctrl+ > " , but I can't (could  do this in the editors using key bindings, but not for views). I just tried the latest JDT sources and it works fine, although I noticed the  Java editor still uses its own retargetable actions for Next/Previous Problem. Hopefully it can be switched over for F2 as well. Also added extra groups to Navigate menu.  It now has: open.ext open.ext2  open.ext3 open.ext4 open.ext5 show.ext show.ext2 show.ext3 show.ext4 show.ext5 additions Editor actions changed to retarget to the global workbench actions. Removed JDT menu contributions and retarget action id. Was fixed in F2. Closing.
Platform	No way to delete launch configuration without launching 1. Bring up the launch configuration dialog. 2. Delete a launch. 3. Try to exit the dialog without launching a program.  There needs to be some way to make changes in the launch configuration dialog and just say " Ok " Moving to platform debug. Press " cancel " . The config will remain deleted (perhaps cancel is misleading -  but there is no way to undelete a config). Closing
Platform	[Tasks] Want to show tasks based on method selection (1GCNFDX) I have my task list set to " Selected Object Tasks " .  When I click in the java content outliner, it shows all workspace tasks in the task list.  Instead I would like to see all tasks (errors) in that selected method.  My usual mode of operation is to have the packages view hidden while editing, so it's a pain to open it, find the java class I'm editing, and select it, just to see the errors in my current method. NOTES: EG (4/28/2001 6:40:18 PM) The task list in the " Select Object Tasks " mode shows all markers  for the selected resource. A method isn't a resource so this would  require additional support from the TaskList to support this kind of filtering.  Moving to ITPUI. KH (8/13/2001 2:00:49 PM) Input only for improved TaskView support. PRODUCT VERSION:  0.046 Selfhost Defer Reopen for investigation There are currently no plans to work on this feature
Platform	Error Starting Eclipse after getting an Out of memory compiling an AspectJ Project I was trying the new AspectJ plugin 0.5.2, got an out of memory error. exited  the app, and trying to get back in and get an error: Following are the .log contents in the metadata folder:  --------------------------------------------------------------------------- !SESSION Sep 20, 2002 15:20:50.335 --------------------------------------------- java.version=1.3.1_04 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US Command-line arguments: -os win32 -ws win32 -arch x86 -data D:\eclipse- workspace\workspace -install file:D:/eclipse2-GM6/eclipse/ !ENTRY org.eclipse.core.runtime 4 2 Sep 20, 2002 15:20:50.335 !MESSAGE Problems occurred when invoking code from plug- in: " org.eclipse.core.runtime " . !STACK 1 org.eclipse.core.internal.resources.ResourceException(null)[567]: java.io.EOFException  at java.io.DataInputStream.readUnsignedShort(DataInputStream.java:288) at java.io.DataInputStream.readUTF(DataInputStream.java:514)  at java.io.DataInputStream.readUTF(DataInputStream.java:491) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:57) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88) at org.eclipse.core.internal.dtree.DataTreeReader.readTree (DataTreeReader.java:126) at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readTree (ElementTreeReaderImpl_1.java:102) at org.eclipse.core.internal.watson.ElementTreeReader.readTree (ElementTreeReader.java:127) at  org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDeltaChain (ElementTreeReaderImpl_1.java:85)  at org.eclipse.core.internal.watson.ElementTreeReader.readDeltaChain (ElementTreeReader.java:102)  at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTrees (WorkspaceTreeReader.java:107)  at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTree (WorkspaceTreeReader.java:44)  at org.eclipse.core.internal.resources.SaveManager.restoreTree (SaveManager.java:713)  at org.eclipse.core.internal.resources.SaveManager.restore (SaveManager.java:462)  at org.eclipse.core.internal.resources.SaveManager.startup (SaveManager.java:946)  at org.eclipse.core.internal.resources.Workspace.startup (Workspace.java:1504)  at org.eclipse.core.internal.resources.Workspace.open (Workspace.java:1296)  at org.eclipse.core.resources.ResourcesPlugin.startup (ResourcesPlugin.java:201)  at org.eclipse.core.internal.plugins.PluginDescriptor$1.run (PluginDescriptor.java:691)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:839)  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:703) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:183) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(ClassLoader.java:250) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:232)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:135) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:164)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:461) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) !ENTRY org.eclipse.core.resources 4 567 Sep 20, 2002 15:20:50.335 !MESSAGE Problems reading workspace tree. !STACK 0 java.io.EOFException at java.io.DataInputStream.readUnsignedShort(DataInputStream.java:288)  at java.io.DataInputStream.readUTF(DataInputStream.java:514) at java.io.DataInputStream.readUTF(DataInputStream.java:491)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:57)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readTree (DataTreeReader.java:126)  at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readTree (ElementTreeReaderImpl_1.java:102)  at org.eclipse.core.internal.watson.ElementTreeReader.readTree (ElementTreeReader.java:127)  at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDeltaChain (ElementTreeReaderImpl_1.java:85) at org.eclipse.core.internal.watson.ElementTreeReader.readDeltaChain (ElementTreeReader.java:102) at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTrees (WorkspaceTreeReader.java:107) at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTree (WorkspaceTreeReader.java:44) at org.eclipse.core.internal.resources.SaveManager.restoreTree (SaveManager.java:713) at org.eclipse.core.internal.resources.SaveManager.restore (SaveManager.java:462) at org.eclipse.core.internal.resources.SaveManager.startup (SaveManager.java:946) at org.eclipse.core.internal.resources.Workspace.startup (Workspace.java:1504) at org.eclipse.core.internal.resources.Workspace.open (Workspace.java:1296) at org.eclipse.core.resources.ResourcesPlugin.startup (ResourcesPlugin.java:201) at org.eclipse.core.internal.plugins.PluginDescriptor$1.run (PluginDescriptor.java:691) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:839) at  org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:703)  at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:183)  at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(ClassLoader.java:250) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:232)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:135) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:164)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:461) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) !SUBENTRY 1 org.eclipse.core.resources 4 567 Sep 20, 2002 15:20:50.345 !MESSAGE Problems reading workspace tree. !STACK 0 java.io.EOFException at java.io.DataInputStream.readUnsignedShort(DataInputStream.java:288)  at java.io.DataInputStream.readUTF(DataInputStream.java:514) at java.io.DataInputStream.readUTF(DataInputStream.java:491)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:57)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readNode (DataTreeReader.java:88)  at org.eclipse.core.internal.dtree.DataTreeReader.readTree (DataTreeReader.java:126)  at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readTree (ElementTreeReaderImpl_1.java:102)  at org.eclipse.core.internal.watson.ElementTreeReader.readTree (ElementTreeReader.java:127)  at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDeltaChain (ElementTreeReaderImpl_1.java:85) at org.eclipse.core.internal.watson.ElementTreeReader.readDeltaChain (ElementTreeReader.java:102) at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTrees (WorkspaceTreeReader.java:107) at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTree (WorkspaceTreeReader.java:44) at org.eclipse.core.internal.resources.SaveManager.restoreTree (SaveManager.java:713) at org.eclipse.core.internal.resources.SaveManager.restore (SaveManager.java:462) at org.eclipse.core.internal.resources.SaveManager.startup (SaveManager.java:946) at org.eclipse.core.internal.resources.Workspace.startup (Workspace.java:1504) at org.eclipse.core.internal.resources.Workspace.open (Workspace.java:1296) at org.eclipse.core.resources.ResourcesPlugin.startup (ResourcesPlugin.java:201) at org.eclipse.core.internal.plugins.PluginDescriptor$1.run (PluginDescriptor.java:691) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:839) at  org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:703)  at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:183)  at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730) at java.lang.ClassLoader.loadClass(ClassLoader.java:250)  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310) at java.lang.Class.newInstance0(Native Method)  at java.lang.Class.newInstance(Class.java:232) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:135)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:164) at  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102)  at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:461)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:248)  at org.eclipse.core.launcher.Main.run(Main.java:698) at org.eclipse.core.launcher.Main.main(Main.java:534) !ENTRY org.eclipse.core.runtime 4 2 Sep 20, 2002 15:20:50.355 !MESSAGE Plug-in " org.eclipse.ui " was unable to instantiate  class " org.eclipse.ui.internal.Workbench " . !STACK 0 org.eclipse.core.internal.boot.DelegatingLoaderException:  org.eclipse.core.runtime.CoreException: Problems encountered starting up plug- in: " org.eclipse.core.resources " .  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:709) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:183) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(ClassLoader.java:250) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:232)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:135) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:164)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform .java:461)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:248)  at org.eclipse.core.launcher.Main.run(Main.java:698) at org.eclipse.core.launcher.Main.main(Main.java:534) !ENTRY org.eclipse.core.runtime 4 2 Sep 20, 2002 15:20:50.365 !MESSAGE Plug-in " org.eclipse.ui " was unable to instantiate  class " org.eclipse.ui.internal.Workbench " . !STACK 0 org.eclipse.core.internal.boot.DelegatingLoaderException:  org.eclipse.core.runtime.CoreException: Problems encountered starting up plug- in: " org.eclipse.core.resources " .  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:709) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:183) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(ClassLoader.java:250) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:310)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:232)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:135) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:164)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:461) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) !SESSION ---------------------------------------------------------------------- !ENTRY org.eclipse.core.launcher 4 0 Sep 20, 2002 15:20:50.375 !MESSAGE Exception launching the Eclipse Platform: !STACK java.lang.reflect.InvocationTargetException:  java.lang.IllegalArgumentException: Application not found: org.eclipse.ui.workbench.  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:773)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) *** This bug has been marked as a duplicate of 3128 ***
Platform	False warning prompt when replace with " Base " 1. pick a file under version control 2. replace with branch/version 3. pick " Base " from prompt  You are given the scary prompt about mixing tags.  Psych! Its actually fine, the file isn't tagged when you complete the operation. Fixed and verified by JM
Platform	A suspend event with STEP_END detail does not cause a switch to the debug view. A suspend event with a STEP_END detail does not cause a switch to the debug  view.  This causes a problem for our debug adapter as it brings up a dialog asking the user if they want to step into a particular web object.  The user  clicks ok and then it appears as if nothing happens because the view does not switch.  We have worked around this for now by sending a suspend event with a  BREAKPOINT detail but think it should be fixed in 2.1. To reproduce:  1. create a java project with the following source file (Wait.java): import java.lang.*; import java.util.*; public class Wait { Wait()   { }    public static void main(String args[] )   { (new Wait()).run();   } public void run()   { System.out.println( " In Wait.run() " );      try {       Thread.sleep(5000); }     catch (Exception excp) {     } System.out.println( " Wait is complete. " );   } }  2. Set a breakpoint on the first println. 3. Debug the Wait class. 4. Step over the call to sleep. 5. Switch the view to the java view. 6. Note that the view does not switch to the debug view after 5 seconds when the step should be finished. Fixed. Please verify, Joe. Verified. This has caused a problem with the scrapbook. When ever a scrapbook evaluation  is performed, the perspective switches to the debug view. Fixed. Modified the JavaSnippetEditor to filter the step event (since it is a  private event). Please re-verify scrapbook issue, Joe. Verified. I encountered a similar problem with 3.0.1.  Tried sending the following suspend events: CLIENT_REQUEST STEP_END BREAKPOINT  The workbench only switches to the debug perspective upon a breakpoint event. It does not switch perspective on the other two events. We only switch on breakpoint events to allow debugging in non-debug  perspectives. Samantha, please see bug 69083. I'm going to re-mark this one as fixed - in  3.0, we allow view management in non-debug perspectives, so this bug is not really applicable. Please updtae bug 69083 with comments. Is this a regression  from 3.0 to 3.0.1? Marking as verified.
Platform	Update sites with escaped character in URL not searched I have a " file: " URL specified as the update site for a feature. The URL  contained %20 because the path name has a space. The site seems to be ignored in searcher. When I change the URL to use space instead of %20 things work. Is %20 and similar escapes in the URL formal and accepted syntax or just  limited to web browsers? Fixed by using URLDecoder.decode() in the site bookmark in order to handle  encoded URLs. Christophe, finish the fix in Core by using URLDecoder for attributes that are  URLs (for update and discovery entries). If there URL string is not having any encoded characters, the decoded string is identical to the input, so no harm done. Use it like this: URL url = new URL(URLDecored.decode(attributeValue)); Action Taken: need to investigate. Update core has its own URLEncoder What was the limitation of the stock Java encoder/decoder? Need to verify the fix. Most of our update URLs for test scenarios are CVS queries and hence encode ' ~ ' character. Verified.
Platform	Eclipse icon has too bright pixels in bottom left corner (1GELFKF) The new Eclipse icon, seen in the window title and in the task tray, has some bright pixels in the bottom left corner, which make it look not as clean as it could be. NOTES: PRODUCT VERSION: 115 Minor gripe.
Platform	Combo fires multiple selection events 1105 integration build, gtk only  - run the snippet below - note that for each item selected in the combo box there are two " selected " messages written to the console *** This bug has been marked as a duplicate of 19153 ***
Platform	Welcome page should have an action that pops up the welcome page dialog It should be easy to find the JDT or the welcome page contributed from other  features. When you start up you get the Platform welcome page. To find out about the other welcome pages users have to know to select the Welcome... menu.  We should try to give users easier access to the other welcome page. One way to do this is include an action/link on the platform welcome page: - > Show welcome page of other features This action pop-up the Welcome... dialog. Needed for 2.0.1. The first item on the 2.0 platform welcome page includes such a link.
Platform	Eclipse does not start up. I've tried loading 2.0, G# and an integration build from June 24. All fail the  same way. Here is the output from the .log file. !SESSION Jul 05, 2002 09:24:05.873 --------------------------------------------- java.version=1.3.1_01 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/Program  Files/eclipse/ !ENTRY org.eclipse.core.runtime 4 2 Jul 05, 2002 09:24:05.873 !MESSAGE Problems occurred when invoking code from plug- in: " org.eclipse.core.runtime " . !STACK 0 java.lang.ClassCastException: org.apache.crimson.jaxp.DocumentBuilderFactoryImpl  at javax.xml.parsers.DocumentBuilderFactory.newInstance (DocumentBuilderFactory.java:139)  at org.eclipse.core.internal.resources.ModelObjectReader.read (ModelObjectReader.java:85)  at org.eclipse.core.internal.resources.ModelObjectReader.read (ModelObjectReader.java:107)  at org.eclipse.core.internal.resources.LocalMetaArea.readWorkspace (LocalMetaArea.java:241)  at org.eclipse.core.internal.resources.Workspace.open (Workspace.java:1263)  at org.eclipse.core.resources.ResourcesPlugin.startup (ResourcesPlugin.java:201)  at org.eclipse.core.internal.plugins.PluginDescriptor$1.run (PluginDescriptor.java:694)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:831)  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:706) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:186) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(Unknown Source) at java.lang.ClassLoader.loadClassInternal(Unknown Source)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Unknown Source)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:138) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:167)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:463) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) !ENTRY org.eclipse.core.runtime 4 2 Jul 05, 2002 09:24:05.923 !MESSAGE Plug-in " org.eclipse.ui " was unable to instantiate  class " org.eclipse.ui.internal.Workbench " . !STACK 0 org.eclipse.core.internal.boot.DelegatingLoaderException:  org.eclipse.core.runtime.CoreException: Problems encountered starting up plug- in: " org.eclipse.core.resources " .  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:712) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:186) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(Unknown Source) at java.lang.ClassLoader.loadClassInternal(Unknown Source)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Unknown Source)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:138) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:167)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:463) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) !ENTRY org.eclipse.core.runtime 4 2 Jul 05, 2002 09:24:05.963 !MESSAGE Plug-in " org.eclipse.ui " was unable to instantiate  class " org.eclipse.ui.internal.Workbench " . !STACK 0 org.eclipse.core.internal.boot.DelegatingLoaderException:  org.eclipse.core.runtime.CoreException: Problems encountered starting up plug- in: " org.eclipse.core.resources " .  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:712) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:186)  at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:58)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:136) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:750) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0 (DelegatingURLClassLoader.java:744) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:70)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites (DelegatingURLClassLoader.java:429) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:758) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:730) at java.lang.ClassLoader.loadClass(Unknown Source)  at java.lang.ClassLoader.loadClassInternal(Unknown Source) at java.lang.Class.newInstance0(Native Method)  at java.lang.Class.newInstance(Unknown Source) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:138)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:167) at  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:102)  at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable (InternalPlatform.java:463)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable (InternalBootLoader.java:440) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:771) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:248)  at org.eclipse.core.launcher.Main.run(Main.java:698) at org.eclipse.core.launcher.Main.main(Main.java:534) !SESSION ---------------------------------------------------------------------- !ENTRY org.eclipse.core.launcher 4 0 Jul 05, 2002 09:24:06.33 !MESSAGE Exception launching the Eclipse Platform: !STACK java.lang.reflect.InvocationTargetException: java.lang.IllegalArgumentException: Application not found:  org.eclipse.ui.workbench. at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:773) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:248)  at org.eclipse.core.launcher.Main.run(Main.java:698) at org.eclipse.core.launcher.Main.main(Main.java:534) You have a version of xerces somewhere on your machine that is incompatible with  the version shipped with eclipse.  Take a look for xerces in the ext directory of your VM installation.  You can also disable the ext dir using " -vmargs  -Djava.ext.dirs= " on the command line when you start eclipse. The problem was an incompatible xerces on the reporter's machine.  Closing. *** Bug 21744 has been marked as a duplicate of this bug. *** *** Bug 22463 has been marked as a duplicate of this bug. *** *** Bug 67038 has been marked as a duplicate of this bug. ***
JDT	Wrong delta when replacing binary project with source project Build 20021009  1. Import org.eclipse.core.boot as binary project 2. Turn Java delta tracing on 3. Import org.eclipse.core.boot as source project Observe: You get the following delta (there is no indication that boot.jar was  removed from the classpath) UPDATING Model with Delta: [Thread[ModalContext,5,main]:Java Model[*] :  {CHILDREN} org.eclipse.core.boot[*]: {CHILDREN} [project root][*] : {REMOVED FROM CLASSPATH}]: FIRING PRE_AUTO_BUILD Delta [Thread[ModalContext,5,main]]: Java Model[*]: {CHILDREN} org.eclipse.core.boot[*]: {CHILDREN} [project root][*] : {REMOVED FROM CLASSPATH} MERGING 2 DELTAS [Thread[ModalContext,5,main]] Java Model[*]: {CHILDREN} org.eclipse.core.boot[*]: {CHILDREN} [project root][*] : {REMOVED FROM CLASSPATH} Java Model[*] : {CHILDREN}  org.eclipse.core.boot[*] : {CONTENT}   ResourceDelta(/org.eclipse.core.boot/.classpath)[*] ResourceDelta(/org.eclipse.core.boot/.project)[*]   ResourceDelta(/org.eclipse.core.boot/about.html)[*] ResourceDelta(/org.eclipse.core.boot/boot.jar)[-]   ResourceDelta(/org.eclipse.core.boot/boot.xml)[*] ResourceDelta(/org.eclipse.core.boot/bootsrc.zip)[*]   ResourceDelta(/org.eclipse.core.boot/build.properties)[+] ResourceDelta(/org.eclipse.core.boot/plugin.properties)[*]   ResourceDelta(/org.eclipse.core.boot/plugin.xml)[*] ResourceDelta(/org.eclipse.core.boot/scripts)[+]   ResourceDelta(/org.eclipse.core.boot/splash.bmp)[*] ResourceDelta(/org.eclipse.core.boot/src-boot)[+] FIRING POST_CHANGE Delta [Thread[ModalContext,5,main]] : Java Model[*] : {CHILDREN}  org.eclipse.core.boot[*] : {CHILDREN}   [project root] [*]: {REMOVED FROM CLASSPATH} ResourceDelta(/org.eclipse.core.boot/.classpath)[*]   ResourceDelta(/org.eclipse.core.boot/.project)[*] ResourceDelta(/org.eclipse.core.boot/about.html)[*]   ResourceDelta(/org.eclipse.core.boot/boot.jar)[-] ResourceDelta(/org.eclipse.core.boot/boot.xml)[*]   ResourceDelta(/org.eclipse.core.boot/bootsrc.zip)[*] ResourceDelta(/org.eclipse.core.boot/build.properties)[+]   ResourceDelta(/org.eclipse.core.boot/plugin.properties)[*] ResourceDelta(/org.eclipse.core.boot/plugin.xml)[*]   ResourceDelta(/org.eclipse.core.boot/scripts)[+] ResourceDelta(/org.eclipse.core.boot/splash.bmp)[*]   ResourceDelta(/org.eclipse.core.boot/src-boot)[+] Snapshot took: 471 milliseconds. UPDATING Model with Delta: [Thread[ModalContext,5,main] :Java Model[*]: {CHILDREN}  org.eclipse.core.boot[*] : {CHILDREN}   src-boot[*] : {ADDED TO CLASSPATH}   D:\JDK1.4.1\jre\lib\rt.jar[*] : {ADDED TO CLASSPATH}]: FIRING PRE_AUTO_BUILD Delta [Thread[ModalContext,5,main]]: Java Model[*]: {CHILDREN} org.eclipse.core.boot[*]: {CHILDREN} src-boot[*]: {ADDED TO CLASSPATH} D:\JDK1.4.1\jre\lib\rt.jar[*]: {ADDED TO CLASSPATH} MERGING 2 DELTAS [Thread[ModalContext,5,main]] Java Model[*] : {CHILDREN}  org.eclipse.core.boot[*] : {CHILDREN}   src-boot[*] : {ADDED TO CLASSPATH}   D:\JDK1.4.1\jre\lib\rt.jar[*] : {ADDED TO CLASSPATH} Java Model[*] : {CHILDREN}  org.eclipse.core.boot[*] : {CONTENT}   ResourceDelta(/org.eclipse.core.boot/.classpath)[*] FIRING POST_CHANGE Delta [Thread[ModalContext,5,main]]: Java Model[*]: {CHILDREN} org.eclipse.core.boot[*]: {CHILDREN} src-boot[*]: {ADDED TO CLASSPATH} D:\JDK1.4.1\jre\lib\rt.jar[*]: {ADDED TO CLASSPATH} ResourceDelta(/org.eclipse.core.boot/.classpath)[*] Sounds like a must fix. Fixed by remembering the old package fragments roots in the delta processor  when a project is deleted. The SetClasspathOperation uses these roots to compute the delta. Verified.
Platform	[OLE] Excel file opens with maximized columns and rows Build 20020910  If you open an excel file with the OLE support it is opened initially with the rows and columns sized to fit exactly into the screen (i.e. huge) A resize  will reset them to normal size. STEPS 1) Open the attached headertest.xls using the OLE editor 2) Rows and colums and huge 3) Resize - rows and columns are correct size The problem described is a bug which will not be fixed in the current version  of eclipse. If you would like to contribute a fix for this problem, please attach a patch  file and reopen this bug report. Reopen Duplicate.  *** This bug has been marked as a duplicate of bug 49098 ***
JDT	IOExceptions thrown as VMDisconnectedExceptions The current JDI implementation seems to be throwing VMDisconnected exceptions  in cases where the problem is really an IOException (bug in the JDI implementation...hot swap on 1.4).  For example: Internal error logged from JDI debug model: Unhandled exception caught in event loop. Reason: Failed to execute runnable (java.lang.NullPointerException) com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine         at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(Packet ReceiveManager.java:116) at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(Packet ReceiveManager.java:130)         at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:155) at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:173) at org.eclipse.jdi.internal.VirtualMachineImpl.classesBySignature(Virtua lMachineImpl.java:449)         at org.eclipse.jdi.internal.VirtualMachineImpl.classesByName(VirtualMach ineImpl.java:475) at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.jdiClassesByName(J DIDebugTarget.java:1038)         at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.addToTarget(JavaBr eakpoint.java:349) at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.breakpointAdded(JD IDebugTarget.java:864)         at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.reinstallBreakpoin tsIn(JDIDebugTarget.java:611) at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.typesHaveChanged(J DIDebugTarget.java:583)         at org.eclipse.jdt.internal.debug.core.JavaHotCodeReplaceManager.notify( JavaHotCodeReplaceManager.java:223) at org.eclipse.jdt.internal.debug.core.JavaHotCodeReplaceManager.notifyJ DK(JavaHotCodeReplaceManager.java:204)         at org.eclipse.jdt.internal.debug.core.JavaHotCodeReplaceManager$2.run(J avaHotCodeReplaceManager.java:140) at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1186 )         at org.eclipse.jdt.internal.debug.core.JavaHotCodeReplaceManager$3.run(J avaHotCodeReplaceManager.java:400) at java.lang.Thread.run(Unknown Source) Added comment from Jared Burns: " (recommend) Giving the JDI packet managers some serious review. The VMDisconnectedExceptions they throw are adding serious instability to our code base. " Deferred Related to bug# 21226. Marking as 2.1 candidate. Need to review the JDI IO/Disconnect exceptions for  2.1. From my review, I beleive that an IOException is a disconnect exception. When  we read/write a socket which is connected to the target, and we get an exception, our communication is ended with the target VM, and the target has  effectively disconnected. However, we need improve our handling of VMDisconnected. Whenever this  exception is encountered, we should be updating our debug model as " disconnected " . Otherwise, it will repeatedly try to communicate with the  target, and always get VMDisconnectExceptions and display as " not responding " .   Luc, do you agree? Indeed. I just take a quick of the debug model code, the VMDisconnected exception is almost never managed (just logged or skipped). We really need to handle that. Perhaps we should be receiving a VM Disconnect event from the event queue  whenever this exception occurrs. That way we could process the event centrally, rather than everywhere the exception occurrs. The EventQueueImpl will create a VM Disconnect event if a disconnect happens  while reading an event from the target VM, or if the VM has disconnected since the last event was read. Thus, it looks like we should always get a disconnect  event from the event queue, and our debug model should update properly. Pretty sure this violates the JDI spec. I think the spec says that a  VMDisconnectedException can only be thrown when there is a VMDisconnectEvent on the queue from the VM. The fact that we throw VMDisconnectedExceptions so often seems to be " illegal " according to the spec. Rather than throwing these exceptions when  we get an IOException, we should probably first check if there is a VMDisconnectEvent on the queue. If there is, we should throw the  VMDisconnectedException and then process the VMDisconnectEvent next. Not sure what we're supposed to do if there's no VMDisconnectEvent waiting.  From the index page of the JDI spec: NOTE: The exceptions below may be thrown whenever the specified conditions  are met but a guarantee that they are thrown only exists when a valid result cannot be returned.  VMDisconnectedException Any method on ObjectReference, ReferenceType, EventRequest, StackFrame, or   VirtualMachine or which takes one of these directly or indirectly as an parameter may throw VMDisconnectedException if the target VM is  disconnected and the VMDisconnectEvent has been or is available to be read from the EventQueue. I think we are in compliance. If we get an IOException reading from the target,  a disconnect is thrown, and the connection is closed. This should only happen once. Thus, the JDI implementation only throws the exception once. If we then  make any requests of the VM, the exception will be thrown - but that is the client use of JDI, not our JDI implementation.  I think we follow exactly what you have stated: " Any method on ObjectReference,  ReferenceType, EventRequest, StackFrame, or VirtualMachine or which takes one of these directly or indirectly as an parameter may throw  VMDisconnectedException if the target VM is disconnected and the VMDisconnectEvent has been or is available to be read  from the EventQueue " Forgot to mention - when the disconnect happens, an event is placed on the  event queue (only once). I checked the code, it looks like the JDI client don't respect completly this point of the spec. In EvenQueueImpl, when a VMDisconnected exception is catched, an VMDisconnected event is generated if needed. But there is not such mechanism when the debugger send a command or wait for a reply. In this case, a VMDisconnected exception is thrown, but no VMDisconnected event is send. It should be why the java model is not updated. I think the event will be generated the next time the event queue is read.  Since the EventQueueImpl will attempt to read the next command packet, which will throw a VM Disconnect, which will generate the VMDisconnectEvent. Thus, if  a disconnect exception is thrown, the event will appear (be available on the queue) in the queue on the next read. The spec says " has been or is available " , not " will be available " ...  An other point, there are two stream used in the connection between the VM and the debugger (debugger - > VM and VM - > debugger).  Is there any way that just one stream (debugger - > VM) is broken ? In this case, the EventQueue never generates a VMDisconnected event (stream VM - > debugger is ok) but the debugger is not more able to send commands. Does that can explain the fact that sometime a launch is in a ' ghost ' state ? (every commands failed and the only way to remove the launch is use " Terminate and remove " ) Do we have any test case for that ? In this case, " is available " and " will be " are the same. In either case, the  next read will generate the event - whether the event is generated as a result of the read, or was there to begin with is irrelevant, because the result is  the same - it is returned in the next event set. Need to investigate if it is possible for only one stream to break/close. I think there is a bug with the " VMIsDisconnected() " method in PacketManager.  The problem is that there are two packet managers - one for receive, and one for send. They both have " disconnected " flags - and there should only be one  shared flag for each debug session. Thus it may be possible for one pipe to disconnect, but not the other.  I checked the code to ensure that each place a VMDisconnectedException is thrown, that the state is actually set/verified to be disconnected. There is  one place where the state is not set properly - Mirror.defaultReplyErrorHandler (int). When a VM_DEAD reply is received, we throw a disconnected exception, but  we should also call " disconnectVM " .  I beleive that the " disconnected " flag should be in the VirtualMachine (shared  for both packet managers), and disconnecting should disconnect both the send and receive managers. Fixed. Centralized " disconnected " flag in VirtualMachineImpl. Please verify, Luc.
JDT	compiler syntax error is incorrect I typed  static final String[] mylist {};  This is missing an " = " .  The error I received said that the compiler was expecting a " { " , " ; " , or " , " . The problem is related to the fact that the rule VariableDeclarator is already  reduced when the syntax error is found. So the two possibles completions are what you can have when a variable is completed. Which means it can be followed  by another variable ( ' , ' ) or it terminates the variable declarations ( ' ; ' ). I don't see how it is possible to change the parser in order not to reduce the  actions when the syntax error is found. The syntax error is reported when all possible reductions have been done. In the grammar, one possible reduction  occurs when the variable has no initialization. We know that the parser doesn't always return accurate error messages in case of  syntax errors. I think we will have to live with it. This problem is related to the parser technology we use. We won't change this  now. So we should probably put somewhere in the release notes that the error messages on syntax errors are not always accurate.
Platform	Repositories View does not restore tree on restart F2  If you exit Eclipse and then start it up again the tree of the Repositories View is fully collapsed whereas the tree of the Navigator and Packages view is  restored. Note that restoring the tree absolutely requires hitting the server, perhaps multiple times. This might not be what we want to do. This is by design - it prevents contacting the server on startup (a bad thing).
JDT	Can't copy .class files [ccp] Build M5  I can copy .java files from one package and paste them into another package, where the file gets fixed up for the new package.  However, I can't copy the file if it's a .class file. Copying a .class file  with associated source should be the same as copying a .java file. A new .java file should be created in the new package, and fixed up for the new package.  Copying .class files without source probably doesn't make much sense. defer No action planned for 2.1 Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state.
JDT	inline temp: incorrect in for some loops (corner case) public class Sd {  void f() { for (int i= 0; i < 4;);  } }   inlining ' i ' produces syntax error later disallow inlining reopen test added bug fixed
JDT	Too many thread group jdi calls Build: F3 VM: JDK 1.4.1 b14 I activated the verbose jdi tracing in the debugger and found that we are  making _many_ requests for thread group information that we never use.  It would optimize our performance if we lazily initialized this data.  See attached verbose.out.txt Try searching for " THREAD_GROUP_REFERENCE - NAME " , I find 47 occurances.  Also search for " THREAD_GROUP_REFERENCE - NAME " and " THREAD_GROUP_REFERENCE -  PARENT " .  This data is probably never accessed (or doesn't need to be) :). It looks like these are all for new threads starting - the " id " of each request  is different. How many threads are in the program being debugged? Are there many transient threads? There do appear to be dupliate calls. Deferred for post 2.0 Marking as 2.1 candidate Please see if we are making uneccessary calls to get thread group info. There were extra jdwp call for thread group information.  The fix for bug 21801 fixes this probleme, information are now cached. *** This bug has been marked as a duplicate of 21801 ***
JDT	OpenOnSelection - should be able to locate missing method by guessing (1GL186P) Opening on a missing method should still be possible, and find the first method with a selector match as a fall-back.  NOTES: Could be solveable by using code completion when open on selection did not  perform correctly. Nice to have PRODUCT VERSION: SDK 202 This was fixed a while ago by guessing based on selector match. Closing Closed
JDT	Filesystem is accessed too often [general issue] Build 20020214  In newsgroup post " eclipse performance " by Ulrich Schreiner < ulrich.schreiner@innuendo.de > , he observes that the filesystem is accessed  quite often, even when simply clicking around in the packages view, or toggling library visibility. This is problematic when the workspace is on a network. (It would also be noticeable on a laptop which needs to spin up its drive each  time). For the library filtering case, JavaProject.getAllPackageFragmentRoots() causes  JavaModel.getTarget(...) to be called several times with checkResourceExistence==true, causing File.exists() to be called on each  library several times. It's not just getAllPackageFragmentRoots() that causes this. Try setting a breakpoint in JavaModel.getTarget on the line with externalFile.exists() and try clicking around in the packages view, clicking on  a library, creating new packages, types, etc. Or, more low level, set a breakpoint on File.exists().  Ideally JDT should not have to access the filesystem at all unless reading or saving files (including indexing, building, code assist, etc.).  I'm filing this against JDT UI since, although JavaModel is in Core, it might  have to do with the way Core is being called from the UI. The original post is:  Ulrich, This is very interesting.  One of the main priorities for 2.0 is performance improvement, so this kind of feedback is very helpful. The granularity of loading is usually a class though, not a whole Jar at a time, so it's normal for a Java VM to keep going back to the same jar file, but it should be for a different .class file each time.  You can see this by running with the -verbose VM arg.  So the case you describe still sounds strange.  Once you've toggled visibility of libraries off and back on, it should no longer be loading classes.  I'm looking into it...  Nick " Ulrich Schreiner " < ulrich.schreiner@innuendo.de > wrote in message news:a5dr89$jo$1@rogue.oti.com... > hi, > > we installed eclipse on a network drive. to start eclipse we also have a > batch-file which sets the workspace directory to a subdirectory on the users > home network drive. > > the jdk1.4 is also installed on the global network drive and the eclipse > batch uses the " -vm " option to use this network jdk. > > now it is possible to log in on every workstation and work with eclipse. you > always have your own workspace directory. another big advantage is that i > can backup every persons workspace directory every night. > > to support external libraries we have a classpath variable named " LIB_HOME " > which also points to a network directory in which we have external > libraries. so we can version projects and work at home as long as you > replicate the LIB_HOME directory from time to time. > > everythin works, everythin would be fine, but: > > we have a performance problem. i used a network sniffer and realized that a > simple mouseclick in my packagetree lead to a SMB network call to our > samba-server to load some external libraries. i set " -vmargs -Xnoclassgc " in > our batch file so that the java vm won't gc the classes. i thought that > after some working there would be no need to reload the jars again and > again. > > but it is not so. they are loaded very very often. again and again. > > another interesting point is the " show referenced libraries " menu entry. by > toggling this entry you see that a single library is loaded very often. it > seems it is loaded for every project it is referenced. and i think every > required project is also traversed. > > perhaps i'm wrong but in my case i have one project " Tomcat401 " which > references all tomcat 401 libraries (jar ' s). every other project which is a > webapp simply has this project in its dependencies because i need the TC > classes at runtime (not at compile time). > > when i set the " show referenced libraries " to " true " , the sniffer shows that > every jar is loaded about 3-5 times or more. and the project has 25 JAR ' s!!! > > this leads to dramatic network traffic which i think is the problem of the > performance leak. after installing everything on a local machine everything > works much better. but in this case i have the big problem of administrating > the installation. > > has anyone the same problem? are there any settings in eclipse or in the jdk > that can be used for runtime caching? > > help would be great > > thx > > Ulrich Schreiner Is this related to bug 6867?  Hopefully we can get this fixed. JDT has to access the filesystem for all external JAR given the platform  doesn't give us any support there. Checking for file existency is the way the  JavaModel reacts to external JARs being discovered at some point. Now, we might be asking the question too often. I've checked the UI the traces that end up calling JavaModel.getTarget look  reasonable. There are several calls to IJavaElement.exists, but they look OK to me and I don't see how can avoid them. For example, when computing error ticks  we guard the code with an IJavaElement.exists call. One place where I discoved a call to JavaProject.getAllPackageFragmentRoots()  is related to showing the outline for a type inside an external JAR. To show the override indicator a type hierarchy is computed and it has the side effect  of calling getAllPackageFragmentRoots. moving to JDT CORE It seems like to show error ticks, you should not care whether the Jar exists  or not, just whether it has errors or not.  This info should be maintained by the Java model.  If the Java model has no errors for the jar, you don't need to  check its existence. The same approach might be possible elsewhere, to avoid exists checks until  they are really necessary (e.g. doing a build or code assist). The JavaModel only produces elements which are existing, as opposed to manually  created handles. Thus, there shouldn't be any need for an existency check for  error ticking (given the model is reconciled each time a change occurs). In order to solve external JARs correctly, we would need a callback from UI to  tell us to refresh the model with respect to change external JARs. We currently rely on existency checks to capture situations where the JAR got deleted under  us (we force a refresh each time a build occurs, as a workaround). > Thus, there shouldn't be any need for an existency check for > error ticking (given the model is reconciled each time a change occurs). not really, error ticks are also shown in non-reconciled views like the type hierarchy view or the packages view.  We can eliminat the exists call in the error tick computation for elements inside external JARs. This solves this particular case. However, there are many  other exists() call in our code (notice that the API doesn't mention that this  is an expensive call) so I doubt that this solves the problem in general (i.e., an exists call results in fetching the contents of an entire JAR).   We should investigate in making the exists call cheaper. In addition how do we explain the following observations reported in the PR:  1)  a simple mouseclick in my packagetree lead to a SMB network call to our samba-server to load some external libraries  2)  toggling " show referenced libraries " you see that a single      library is loaded very often. it seems it is loaded for every project it is referenced. and i think every required project      is also traversed. I was able to reproduce both of these cases. If you click on a type in the packages view, it's not a problem, but if you  click on an external library, it does an exists check. Toggling library visibility also does several exists checks. They have a large number of libraries, so the effect is multiplied. Fixed bug 10378 which fixes the existence check problem. However we still  create too many ZipFile instances (which access the file system). Moving this one to JDT/UI, since we have  http://dev.eclipse.org/bugs/show_bug.cgi?id=10378 describing the same issue on the JDT/Core side.  There are likely opportunities for JDT/UI to avoid calling expensinve existency checks and so on. The critical issues got addressed. No further action is planned on this problem.
Platform	Keyword subst. wizard should let the user choose which text mode in Automatic option Currently, keyword substitution wizard will choose text-kkv mode for all text  types when automatically determining substitution mode. It should be possible to choose from other text modes for the " Automatic " option to use.   I ran into this in a web project where there was a large number of text files with CVS keyword like content. The files were in a number of directories mixed  with different files so I had to manually select them and choose text-ko mode for keyword substitution. In addition, it would be good if the default was a global preference and all  new text files were created that way.  The conversion wizard would use that as its default too. Simplest solution is to add a preference and make KSubstOption.fromFile() use it.  That will change the default text mode everywhere at the same time. Fixed by Jeff's patch.
JDT	NPE when searching java method While trying to search declarations of a java method in a working set on stable  build F3 I get the following error message: !SESSION Jun 17, 2002 14:29:45.708 --------------------------------------------- java.version=1.3.1_03 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/ !ENTRY org.eclipse.jdt.ui 4 1 Jun 17, 2002 14:29:45.708 !MESSAGE Internal Error !STACK 0 java.lang.reflect.InvocationTargetException: java.lang.NullPointerException  at java.lang.Thread.setPriority(Unknown Source) at  org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob (JobManager.java:247)  at org.eclipse.jdt.core.search.SearchEngine.search (SearchEngine.java:400)  at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute (JavaSearchOperation.java:86)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1361)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) This appears to be a very rare race condition. The code were the NPE is thrown  is: if (this.thread != null) {     this.thread.setPriority(originalPriority); // line 247 } The ' thread ' field is only set to null on shut down, or if a RuntimeException  is thrown by the background indexer (and this is only temporary, as a new thread is created right away). A subsequent search should work.  Another possibility is a JIT bug. In this case, there is nothing we can do. Need to investigate, post 2.0 Reopening Clearing resolution Fixed in HEAD by using a local variable to avoid the race condition. Verified
JDT	creating a new launch configuration tries to save immediately I-20021031 with latest plugins for I-build 20021105:  Smoke Test: 1) Select SimpleTest from junit in package explorer. 2) Toolbar::Running Man::Run... 3) select JUnit 4) press New 5) observe the dialog " The configuration " SimpleTest " has unsaved changes " Moving to JUI - this looks like a JUnit bug, as the problem does not occurr  with the standard " Java Application " launch config type. the problem also occurs for the Java Applet and the runtime workbench.  *** This bug has been marked as a duplicate of 26027 ***
JDT	Refactoring and Search are applied only on open files The refactoring and the search tools are only reaching the classes that are  opened to edit. If there is a reference to the class A in a class B, but this class B is not open to edit, then the refactoring and search will not see this  reference. It seems that the workspace is limited to the open files.  This behaviour was not happening from the first.  But I don't remember an  event that could cause the problem. No, this shouldn't be the case. What happens is that the JavaModel actions are  now aware of possible editors with unsaved changes (shared working copy notion), but other units are still visible.  Do you have steps to reproduce ? We aren't aware of such an erroneous behavior. Closing, please reopen if steps can be described.
Platform	Synchronize with repository asks for saving changes for non dirty elements If you have an unsaved change you will be prompted to save everytime that you  commit a file whether or not it is the dirty file. STEPS 1) Make changes to 2 files 2) Select Synchonize with Repository 3) Make some changes to the first one 4) Select the second one 5) Commit the changes - you will prompted to save even though this is not the file that got edited. James, I assume this is an artifact of it being a view and not separate editors? This was a bug and has since been fixed.
Platform	Import from filesystem loses permission bits I did this:  * Made project * Chose File- > Import * Imported from file system I imported gcc.  The file permissions on files in the workspace don't match the permissions on files in the original tree.  In particular, the executable bit was lost.  This is a major problem for us, since many of our users expect `configure ' to be executable. Moving to Core.  Also note bug #22923 against VCM which also concerns the VCM keeping the permission bit.  There has also been some discussion with the reporter in the  VCM newsgroup.  VCM's take is that if Core were to keep the permission bit  then particular VCM's such as CVS could copy it.  Since the import case also  fails, it doesn't make sense to do a CVS (or VCM) only solution. *** This bug has been marked as a duplicate of 25387 ***
JDT	Resume should do the stepping trick to reuse state (1GE4NE9) JW (5/22/2001 7:25:22 AM)  108 I put a breakpoint in a loop.  Everytime I resume, all of the state is flushed, and then immediately reconstructed. I believe you have already handled this case for step. DW (5/22/01 9:28:22 AM)  We cannot assume anything about a resume - i.e. where we will end up on the next suspend. Thus we throw state away. When stepping we can assume that we  will end up close to where we left off. Too risky of a change for now - would have to change incremental computation of  new/removed stack frames. DW (9/27/2001 4:37:00 PM)  This will be useful for evaluations too. An evaluation causes a thread to resume/suspend. This causes a UI flash and the variables view to collapse. *** Bug 1702 has been marked as a duplicate of this bug. *** The trick here is in the UI. Even if our model re-uses stack frames accross a  thread resume/suspened, the UI reacts to a " resume " by collapsing the thread.  It would required a timer or something to decide whether the resume were actually going to suspend again shortly.  Defer. Deferred *** Bug 11357 has been marked as a duplicate of this bug. *** I believe our model already does what's required as of 2.0. When we compute  stack frames, we actually do an equality check between the cached frames and the current frames. Marking as a 2.1 candidate I updated the Java debug model to preserve stack frames when a thread is  resumed, such that we re-use stack frame objects where appropriate on subsequent suspends (i.e. if we suspend in the same stack frame, we re-use it).  As well, I updated the equal/hashcode methods on the variable objects such that " this " references and fields referencing the same objects are considered  equal. The variables view has been updated to save and restore state on stack frame  selection. Thus, changing the stack frame while suspended, or resuming to a breakpoint in the same stack frame maintain variable expansion. Fixed. The thing to be aware of, is that entries in the variables view cache of  expanded variables is only cleared when a thread/target terminates. We may be able to improve this (i.e. be more aggressive), but for now, the solution works. Please verify, Jared. This implementation introduced Bug 22842. Reopening. The variables viewer only stores expansion state when a different stack  frame is explicitly selected by the user. 1. Debug the following program to a breakpoint where indicated. 2. Expand the variable string. 3. Resume the program. 4. The breakpoint is hit again, but the expansion state is lost. alternatively: 1. Same as above 2. Same as above 3. Select the stack frame for the main() method (this causes VariablesView#setViewerInput(...) to store the expansion state) 4. Resume the program 5. The breakpoint is hit again, the expansion state is restored  The variables view should store the current selection on resume. public class VariableTest() {   private String string= " aa " ;   public static void main(String[] args) {     new VariableTest().foo(); }   public void foo() { for (int i= 0; i < 10; i++) {       System.out.println( " Foo " ); // BREAKPOINT HERE     } } } On Win2000, the expansion remains for me on the initial expand. Jared, I cannot reproduce the problem on Windows. Can you try a windows machine  to see if this might be a Linux issue? Thanks. It looks like we work on Windows because of a selection difference.  When we have a stack frame selected and click resume on Windows, we get a selection changed event for the parent thread, during which we store the state  of the last viewer input (the expansion state of the last selected frame). On Linux, we're only getting a selection changed event when the next stack  frame is selected when the program suspends at the breakpoint. However, since VariablesViewEventHandler#resume sets the viewer input to null, there's no  chance to store the last expansion state. It looks like our current implementation is relying on a behavior observed in  the current Win32 SWT code. To my knowledge, the selection change generated when the stack frames are removed from the tree are not specified.  I think it would be better to drive the expansion state store with debug events. Fixed (although, unable to test on Linux). Rather than setting the viewer input  directly to null, I changed the event handler to set the viewer input via the view's #setViewerInput(IStructuredSelection) method with an emtpy selection.  This stores the current selection. Please verify, Jared. Verified. Looks good.
Platform	After revert, feature configured, plugin not in path Install redot 1.0.0 and then 2.0.0 Revert Reddot 1.0.0 appears as configured but the Path in platform.cfg shows  site.0.url=platform:/base/ site.0.stamp=-1016669510267 site.0.stamp.features=-1286284420 site.0.stamp.plugins=1016508682501 site.0.updateable=true site.0.policy=USER-EXCLUDE site.0.list.0=plugins/com.reddot.reddot_1.0.0/plugin.xml,plugins/com.reddot.reddot_2.0.0/plugin.xml eof=eof Fixed, changed code in ConfigurationPolicy  getPluginPath getPluginString union and delta
JDT	configs require more steps to launch my programs with launchers, i could select a junit test case class and ' run with junit ' with configs, i have to create a launch config first, which requires me to  1. see the dialog - which i'd very much like to avoid  2. select the correct category 3. press new 4. press run 4 times more things to do to achieve the same goal. or is there a shorter way? From the debug menu or drop down select " New configuration - > Junit " . Once  created, put the config in your favorites for quick launching. The first step of selecting the type of config to create combines steps 1,2,3.
JDT	No room for compile progress reporting when changing JRE (1GEUKGY) - add a second JRE to your workspace  - make sure auto build is on - open the preferences dialog- > Java- > JRE  - change JRE - press OK  observe: you get a progress dialog but when compiling starts the monitor already repoerted 100%. NOTES:  GDA (6/5/01 12:01:51 PM) defer moved to ' active ' PRODUCT VERSION:  118 defer Moving to Debug *** This bug has been marked as a duplicate of 3717 ***
JDT	ACC: JUnit gui is not accessible [junit] 1) JUnit GUI is not screen reader accessible (can't read w/ MS Inspect or JAWS) 2) Moderately keyboard accessible........can't move between different areas without the use of the mouse Can you please be more precise 1) what exactly isn't reader accessible 2) what does moderatly keyboard accessible mean, between which areas can't you  move. Given the amount of information provided we cannot address this bug report. 1) If  you tab between the section, the information is not read by JAWS. I also  check it out with MS Inpsect to see if it's a JAWS problem and there is no  information reported on name, valu es, roles, state etc., so the problem is not  with JAWS. 2) Not every section is navigable with a keyboard. If I have to rely on using  the mouse, or mouse keys, or JAWS keys, then the UI is not keyboard accessible. I believe there is enough information in here to address this bug. The problems  are easily seen if you try to test accessibility function on the JUnit GUI. thanks for following up with more details. There is definitly a problem here.  The wording that is not obvious to me is: " If  you tab between the section... " " Not every section is navigable with a keyboard. " what do you refer to by section? Can you enumerate the labels/controls that you  cannot navigate too. There is a problem that you cannot navigate to the counter labels after Runs:,  Errors:, Failures:. This is now fixed by changing them into read-only Text widgets.  Does this fix address your issues (I currently have no access to a JAWS reader) so I cannot verify this myself. closing just noticed that this bug got additional interest. So I'd appreciate if you  can verify that the current UI is accessible enough.
Platform	Features with no categories are not shown If you add a feature in Site.xml and do not associate a category, it does not  appear in the UI. Fixed by adding ' Other ' category. The algorithm:  1) Categories are built. 2) For each feature:    a) Feature is added to one or more categories based on its category references.    b) If the feature was not added to at least one of the categories (orphan), it is added to the ' Other ' 3) If ' Other ' category ends up with at least one child, it is show in the UI. Another feature added to the Sites view is the category filter ( ' Show  Categories ' in the view pulldown). When this action is unchecked, all features  are shown as immediate children of sites without categories. This toggle affects all sites in the view (including those found in ' My Computer ' ) but only  those expanded are refreshed to avoid connecting sites that were not connected/expanded in the first place.
JDT	Type Selection Dialog: Up/Down Cursor would be nice to have (1G47IX5) MA (11/10/00 6:05:31 PM)  In the Type Selection Dialog: Up/Down Cursor would be nice to have to choose between entries (even if the focus is the text input box)   NOTES: moved to ' active ' PRODUCT VERSION:  eclipse-vame-0.011 this would be inconsistent with other dialogs. use can use the tab key to set focus to the lists.
Platform	[CVS Decorator] Decorators preference too much The decorators prefence, although very cool and hey you can do whatever you  want, is too much.  I think its overwhelming for most people. It would be better for us to have some canned preset decorators that people can  choose between.  Ideally they ' ld be based on what task we thought they were  doing. We could consider leaving the option dialog that we have for " advanced users " ,  but I would be happy to do without.  I am also concerned about the testing effort of all the combinations. it's been around for a long time and we don't have any plans on changing it.
Platform	Prompted twice for password 1. Create repo connection, anonymous, dev.eclipse.org 2. Add project to workspace 3. Change project properties to extssh, your user/password. 4. Synchronize. You are prompted for your password. Appears to be related to the fact that TWO repo locations are created in the  repo view. Presumably the anonymous one is morphed into the non-anonymous one, and then a second non-anoymous one is created, and it is for this one that I'm  being prompted for the password. This is the intended behavior. Each repo location has its own password. I'm not  sure if we can guarantee that all connection types will use the same password, especially since we provide an extension point for connection methods. But when I changed the properties, I *provided* a password. It should have used  this one rather than prompting me again. Fixed
JDT	Implement abstract methods fails when interface of superclass doesn't match exactly I have a case where an abstract class implements an interface using a more  specific set of exceptions on a method.  When I then try to subclass that abstract class, and specify " implement inherited abstract methods " , the  resulting class has compiler errors.  I think this is because this operation looks at the signature of the interface instead of that of the abstract class.  1. Import the attached source files 2. Select the class named Registry 3. Select New- > Class from the context menu 4. In the dialog, select " Inherited abstract methods " and " copy constructors " . 5. Type in a new name for the subclass, such as " MyRegistry " 6. Click Finish.  Notice that MyRegistry has compiler errors.  Again, it would probably be best if the inherited abstract methods were copied from the superclass and not from  the interface. *** Bug 20760 has been marked as a duplicate of this bug. *** *** Bug 10430 has been marked as a duplicate of this bug. *** fixed in 20031209
Platform	[View Mgmt] always-visible views some views (like the Java packages view) would be useful to marked as always- visible, so that maximizing a view replaces all views except the always-visible ones.  example: handy when you want to see only the Java code, but yet have the features  provided by the packages view, without having to fast-view or close all the other views. Defer to post 2.0 Reopen to investigate There are no plans to fix this bug.
Platform	Invalid thread access running test suite 20020129++  org.eclipse.swt.SWTException: Invalid thread access at org.eclipse.swt.SWT.error(SWT.java:1887)  at org.eclipse.swt.SWT.error(SWT.java:1819) at org.eclipse.swt.widgets.Widget.error(Widget.java:368)  at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:299) at org.eclipse.swt.widgets.Table.getSelection(Table.java:801)  at org.eclipse.jface.viewers.TableViewer.getSelectionFromWidget (TableViewer.java:273)  at org.eclipse.jface.viewers.StructuredViewer.getSelection (StructuredViewer.java:367)  at org.eclipse.debug.internal.ui.actions.EnableBreakpointsAction.update (EnableBreakpointsAction.java:89)  at org.eclipse.debug.internal.ui.actions.EnableBreakpointsAction.breakpointRemoved (EnableBreakpointsAction.java:164) at org.eclipse.debug.internal.core.BreakpointManager.fireUpdate (BreakpointManager.java:519) at org.eclipse.debug.internal.core.BreakpointManager.removeBreakpoint (BreakpointManager.java:270) at org.eclipse.debug.tests.DebugRegressionTests.removeAllBreakpoints (DebugRegressionTests.java:357) at org.eclipse.debug.tests.ArgumentsTests.testRecursion (ArgumentsTests.java:44) at java.lang.reflect.Method.invoke(Native Method)  at junit.framework.TestCase.runTest(TestCase.java:155) at junit.framework.TestCase.runBare(TestCase.java:129)  at junit.framework.TestResult$1.protect(TestResult.java:100) at junit.framework.TestResult.runProtected(TestResult.java:117)  at junit.framework.TestResult.run(TestResult.java:103) at junit.framework.TestCase.run(TestCase.java:120)  at junit.framework.TestSuite.run(TestSuite.java:144) at junit.framework.TestSuite.run(TestSuite.java:144)  at junit.ui.TestRunner$10.run(TestRunner.java:428) Fixed in EnableBreakpointsAction breakpoint listener callbacks. Please verify. Verified.
Platform	Working set dialog only selects projects Build 20020813 Linux-GTK When I open the dialog to create a working set (either " Resource " or " Java " ), no matter what I select, my working set always contains projects.  The working set should contain the resources that the user selects. For example, create a new working set and choose 2 .java files within a  project. The resulting working set will not contain the 2 files selected. Instead, it will contain their parent project.  The problem seems to stem from the dialog. Note than when you select a leaf node, all of the parent nodes in the tree are fully selected. On Win32,  selecting a leaf node only partially selects (grayed selection) the parents. This is probably an SWT-GTK problem. The GTK Tree gray checked state doesn't seem to be working. Checking one tree  child also checks the parent instead of gray checking it. This works on Motif and Windows. Is there a timing problem wrt. when the callback is issued and when we gray the  tree item?  SSQ to figure it out. Fixed in build 20021022 and later. This isn't quite fixed. The behavior is now correct, but the presentation is still wrong. If you select a leaf node in the tree, you'll get the correct item in the working set, but the parent nodes of the selected node are still displayed as if they're fully checked. Instead, the leaf node should get the normal check and the parent nodes should be checked and grayed. There is no support on GTK to display the grayed state unless we implement our own cell renderer. GTK 2.2 has added supported for it. Fixed > 20030509 (HEAD). Only on GTK 2.2.x.
Platform	' Save all ' not always enabled appropriately Hi,  I suggest to make the ' Save all ' -Menu available all the time. At the moment  this is not given all of the time (but sometimes). Greetings Hans It should be enabled when there are any editors with unsaved modifications. Is there a case you are seeing where this is not so? Hi,  sometimes after starting the program I can only use normal ' Save ' , even if  there are more files open. Then I change to Debug view, back again to Java view, then it works (most of the time). Also if I have only one file open, i  could not use ' Save all ' , but only ' Save ' , but after a while, it worked.  Sorry that I cannot tell you more... :-( I'm using build 20020416. Eduardo, if Save All is not working properly, we should consider fixing it for  F4.  Please investigate. The implementation of disable/enablement of SaveAll has changed a lot since  build 0416. I notice some problems when I was doing lazy creation of editors and I changed it.  You should not see this problem in the newer builds (since F1 at least).
JDT	Search: ' ? ' can be added back as being a valid wildcard 2.1 stream  The next build input from JDT/Core will contain a fix for bug 17210. The Java Search page should reflect this and ' ? ' should be added back as being  a valid wildcard. Fixed the Java Search page accordingly. Available in builds > 20020826 Since milestones are now available, changing milestone from " 2.1 " to " 2.1 M1 " .
Platform	Walkback in CVS console Happened while select-scrolling a bunch of text.  java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:1873)  at org.eclipse.swt.SWT.error(SWT.java:1819) at org.eclipse.jface.text.DocumentAdapter.getTextRange (DocumentAdapter.java:126) at org.eclipse.swt.custom.WrappedContent.getLine (WrappedContent.java:91) at org.eclipse.swt.custom.StyledText.redrawLines(StyledText.java:5774)  at org.eclipse.swt.custom.StyledText.internalRedrawRange (StyledText.java:4910)  at org.eclipse.swt.custom.StyledText.doSelection(StyledText.java:2535) at org.eclipse.swt.custom.StyledText.doMouseSelection (StyledText.java:2366) at org.eclipse.swt.custom.StyledText.doMouseLocationChange (StyledText.java:2347) at org.eclipse.swt.custom.StyledText.handleMouseMove (StyledText.java:5010) at org.eclipse.swt.custom.StyledText$12.handleEvent (StyledText.java:4825) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:852)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:835) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:895) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)  at SlimLauncher.main(SlimLauncher.java:14) Log: Wed Feb 06 14:03:29 EST 2002 4 org.eclipse.core.runtime 0 Unhandled exception caught in event loop. Log: Wed Feb 06 14:03:29 EST 2002 4 org.eclipse.core.runtime 0 Argument not valid java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:1873) at org.eclipse.swt.SWT.error(SWT.java:1819)  at org.eclipse.jface.text.DocumentAdapter.getTextRange (DocumentAdapter.java:126)  at org.eclipse.swt.custom.WrappedContent.getLine (WrappedContent.java:91)  at org.eclipse.swt.custom.StyledText.showCaret(StyledText.java:7434) at org.eclipse.swt.custom.StyledText.doLineDown(StyledText.java:2261)  at org.eclipse.swt.custom.StyledText$3.run(StyledText.java:1811) at org.eclipse.swt.widgets.Display.filterMessage(Display.java:454)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1201) at org.eclipse.jface.window.Window.runEventLoop(Window.java:545)  at org.eclipse.jface.window.Window.open(Window.java:532) at org.eclipse.jface.dialogs.MessageDialog.openError (MessageDialog.java:318) at org.eclipse.ui.internal.Workbench.handleExceptionInEventLoop (Workbench.java:402) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:855)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:835) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:895) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)  at SlimLauncher.main(SlimLauncher.java:14) Stack trace indicates a problem in either SWT StyledText or in Eclipse UI. Please assign to myself if you aren't working on this already. Reassigning to Knut. The console is being bad in other ways, but I don't think  it should result in this error. James could you please clarify why you think we should not be throwing an  IllegalArgumentException when we are passed invalid values.  The users of StyledText need to provide valid values for their API calls.  If they are not,  this is not a StyledText problem. I don ' t. Knut said it looked like either a styled text bug or a UI bug and to assign to him, so that's what I did. It seems that the CVS console/StyledText wraps text to a fairly small line  length even when there is more horizontal space available: To reproduce: -resized the console bigger *vertically* - > new lines visible at the bottom are wrapped, even though the widget width  never changed (or shouldn't have changed) -using the keyboard select all text from the current cursor position to the end of the widget (ctrl+shift+end) - > you get a walkback like the one shown above  Mouse drag selection will rewrap the selected lines properly. Can no longer reproduce in build 20020228. James, did you make changes in the Console that may have fixed this? Yes, I turned WRAP off. (Not to work around the bug, but because having WRAP turned on was wrong in the first place). The problem was that computeSize always rewraps lines to the width hint or to  the default if no width hint was specified. During subsequent resize handling and rendering the incorrectly wrapped text is displayed. During selection the  lines are rewrapped as a side effect of the selection redraw. The changing line count (from bogus rewrap to good rewrap) during the selection is unexpected and causes the walkback.  Changed computeSize to only wrap when the lines have not already been wrapped, i.e., when the widget is first made visible. That way the lines are never  incorrectly wrapped in the first place. *** Bug 8190 has been marked as a duplicate of this bug. ***
Platform	Include Ant build files and targets in project build menus Ant build files should be accesible from the context of a project without hunting down the build.xml. This would require identifying ant build files to the project. This could also allow you to associate project classpath entries with the ant build script, as well as other project associated settings , i.e. ant properties and other variables that would normally be passed from a shell script or batch file.  i.e on main Project menu and context menu for a project i.e.     - > AntProject1            - > clean            - > compile            - > dist    - > AntProject2            - > clean            - > compile            - > dist The Ant integration is part of the platform Ant project.  Ant integration improvements along the lines sketched below are planned. Moving to Platform-Ant. Not sure it fits the external tools model. Moving to Platform UI (External  Tools) for comment. Can now define Ant scripts as External Tools, which appear under the Run /  External Tools submenu.  Can configure targets and other command line arguments too. The Ant classpath is now specified globally as a preference. Closing this PR.  Please file a new one if External Tools does not meet your  needs.
JDT	NPE in Extract Interface 20020917 linux-gtk  1. Create the following two classes in a fresh project in the default package. Note: The bug does not happen if the classes are not in the default package.  public class TestClass { public void methodEatingItself(TestClass foo) {         foo.methodEatingItself(foo); } } public class ReferringClass {     void referenceMethods(TestClass foo) { TestClass local= null;         foo.methodEatingItself(local); } } 2. Extract Interface on TestClass 3. Check ' Change references... ' and select the method to be extracted 4. Observe an error on the preview page and the appended log. ---8 < ---log---  !ENTRY org.eclipse.jdt.ui 4 1 Sep 18, 2002 12:37:47.922 !MESSAGE Internal Error !STACK 0 java.lang.reflect.InvocationTargetException: java.lang.NullPointerException         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.isReferenceUpdatable(ExtractInterfaceRefactoring.java:632)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.hasIndirectProblems(ExtractInterfaceRefactoring.java:550)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.hasIndirectProblems(ExtractInterfaceRefactoring.java:402)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.computeNodesToRemove(ExtractInterfaceRefactoring.java:381)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.retainUpdatableNodes(ExtractInterfaceRefactoring.java:356)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.getNodesToUpdate(ExtractInterfaceRefactoring.java:351)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.addReferenceUpdatesAndImports(ExtractInterfaceRefactoring.java:330)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.updateReferences(ExtractInterfaceRefactoring.java:319)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createChangeManager(ExtractInterfaceRefactoring.java:307)         at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.checkInput(ExtractInterfaceRefactoring.java:239)         at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:59)         at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:94)         at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98) NPE was caused by a problem in Binding2JavaModel - fixed now this test case still fails becuase the method uses the extracted interface see bug 23705 verified in 20021113 w2k
JDT	DCR: Un/Segmented editor setting should be workbench preference (1GFBB2A) The current implementation to change Un/Segmented editor  sets this option for all Java editors. In that case it should be a workbench preference and not a toolbar button.   NOTES: moved to ' active ' PRODUCT VERSION:  0.123 we want to make this feature highly visible this is why we made it available as  a toolbar item.
Platform	No busy cursor shown when advancing through changes Build 20020305  When advancing through changes with Ctrl+E, no busy cursor is shown when it goes to retrieve the next file.  This may take a long time (e.g. I'm working  from home). after 2.1
Platform	Separation of feature containment (includes) & updating needed It should be possible for a product to provide a root feature that bundles  together many features and yet still allow those contained features to be separately updated.   Currently the orthogonal issues of how to update, vs. how to bundle have incorrectly been tied together.  This allows the feature to look like a product, yet still allow its bundled elements to be updated. This is also important in the product upgrade scenarios. I have put together a design note with a proposed 2.0.1 approach for this and  several related defects. See the doc below (have to paste the split line together to get the whole url).  http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-update- home/doc/feature_extensions.html Sorry, got the url wrong  http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-update- home/doc/working/feature_extensions.html Let us assume that we allow an additional attribute ' match ' to be specified in  the ' includes ' element. This attribute would follow similar referencing rules  used by dependent plug-ins (equivalent, compatible, greatedOrEqual etc.). In theory, this relaxation of the cross-feature referencing would allow us to  update child features without breaking the parent reference (as long as the upgraded version still resolves according to the ' match ' attribute).  What this solution implies is that the root-level feature that allows some ' wiggle ' space to its children to upgrade individually may not be able to  guarantee that they all work together. With each member feature individually updatable, possible combinations of versions may result in inability of the  original suite provider to guarantee anything and therefore deletage any conflict resolution to providers of the child features (products in the suite).   We are seeking feedback on the following: if each individual feature (product) in a suite can be independenly updated (possibly from its own update site),  what expectations (if any) can be had regarding the stability of the suite as it randomly evolves through upgrades of the constituting products. Does a suite  version make any sense (since it is invalidated as soon as the first member product is upgraded under it)? Attribute ' match ' has been added. Code for reconciliation has been changed. released in 2.0.2 dev stream The problem will be addressed as specified in the following document:  http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-update- home/doc/working/feature_extensions.html Correction:  http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-update- home/doc/working/feature_extensions_2.html *** Bug 22879 has been marked as a duplicate of this bug. *** Implemented - ready to test. Tested
JDT	NPE in GoTo Line Action Build 20020425.3  - open InternalBootLoader - press Ctrl+L  java.lang.NullPointerException at org.eclipse.ui.texteditor.GotoLineAction.run(GotoLineAction.java:149)  at org.eclipse.ui.texteditor.RetargetTextEditorAction.run (RetargetTextEditorAction.java:103)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:590) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:842) at org.eclipse.ui.internal.Workbench.run(Workbench.java:825)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:643)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:160) at org.eclipse.core.launcher.Main.run(Main.java:548)  at org.eclipse.core.launcher.Main.main(Main.java:403) *** This bug has been marked as a duplicate of 12830 ***
Platform	Alt+Enter/Ctrl+Enter are not effective in JP env The problem is observed in Japanese environment.  Not in English environment.  how-to: 0) make sure that menus/labels are in Japanese. 1) define editor's shortcut key as Alt+Enter. 2) type Alt+Enter It doesn't work.  The reason is key names are over-translated to Japanese strings. (Other countries might have the same problem.)  In " fragments\org.eclipse.ui.nl1\nl1.jar " file, there is a Japanese translated file " org\eclipse\jface\message_ja.properties " In that file, there are over-translated accerelator key tables  AcceleratorKeys.Backspace=Backspace (\u30D0\u30C3\u30AF\u30B9 \u30DA\u30FC\u30B9) AcceleratorKeys.Tab=Tab (\u30BF\u30D6) AcceleratorKeys.Return=\u30EA\u30BF\u30FC\u30F3 AcceleratorKeys.Enter=Enter (\u5B9F\u884C) AcceleratorKeys.Escape=Esc (\u30A8\u30B9\u30B1\u30FC\u30D7) AcceleratorKeys.Delete=Delete (\u524A\u9664) AcceleratorKeys.Space=\u30B9\u30DA\u30FC\u30B9 AcceleratorKeys.ArrowUp=\u4E0A\u77E2\u5370 AcceleratorKeys.ArrowDown=\u4E0B\u77E2\u5370 AcceleratorKeys.ArrowLeft=\u5DE6\u77E2\u5370 AcceleratorKeys.ArrowRight=\u53F3\u77E2\u5370 AcceleratorKeys.PageUp=Page Up (\u524D\u30DA\u30FC\u30B8) AcceleratorKeys.PageDown=Page Down (\u6B21\u30DA\u30FC\u30B8) AcceleratorKeys.Insert=Insert (\u633F\u5165) These strings are used to define keyboard accerelator by Action, so that these should be matched with Japanese keboard's key top strings, and these ARE only English even in the Japanese keyboard such as: AcceleratorKeys.Backspace=Backspace AcceleratorKeys.Tab=Tab AcceleratorKeys.Return=Return AcceleratorKeys.Enter=Enter AcceleratorKeys.Escape=Esc AcceleratorKeys.Delete=Delete AcceleratorKeys.Space=Space AcceleratorKeys.ArrowUp=Up AcceleratorKeys.ArrowDown=Down AcceleratorKeys.ArrowLeft=Left AcceleratorKeys.ArrowRight=Right AcceleratorKeys.PageUp=Page Up AcceleratorKeys.PageDown=Page Down AcceleratorKeys.Insert=Insert It could be possible to use these over-translated key name as  our menu shortcut key name, but if the Japanese translated strings appear to menu, it is very odd to most Japanese users,  since Microsoft Windows and other Microsoft softwares like OfficeXP uses only English key names. Does removing the Japanese translations for these strings fix the problem? Yes, it fix the problem. One more comment. If these strings are changed to English ones, please make sure that all menu shortcut key definitions in eclipse workbench are written by English key name.  I know Perspective menu items use Japanse key names as shortcut keys, and these key labels need to be changed to corresponding English key names. The issue here is consistency.   In the case of the Previous Perspective option in the Perspectives menu we have the following label defined  Workbench.previous=\u623B\u308B( & P)@Alt+\u4E0A\u77E2\u5370  In JFace properties the definiton for Arrow Up is AcceleratorKeys.ArrowUp=\u4E0A\u77E2\u5370  So this works as the accelerator is consistent with the Jface definition The issue here is that the menu accelerator translations have to be consistent  with the accelerator definitions in the org.eclipse.jface.messages.properties file for each locale.  In the example given by Asahata-San the translation choice for Japanese should be the English words for the accelerators and so someone trying to use the  English words in Japanese would not get thier accelerators. Could you tell me when and how will you fix this problem?  We need the fix as soon as possible, otherwise our product will be forced to use these overtranslated strings. You should look at the entries for the accelerator keys in the file  org.eclipse.jface.messages.properties and use the same words for your accelerators.  Here is a list of the accelerators below So for Alt+Enter use Alt+Enter and for Ctrl+Enter use Ctrl+Enter. We do not  translate the modifier keys in Japanese. Please let us know your entries for the keys below in the  org.eclipse.jface.messages.properties you are using if they are different - you may be using an obsolete set of translations as this inconsistency existed in  the first pass of the translations. AcceleratorKeys.Control=Ctrl AcceleratorKeys.Alt=Alt AcceleratorKeys.Shift=Shift AcceleratorKeys.Backspace=Backspace AcceleratorKeys.Tab=Tab AcceleratorKeys.Return=\u30EA\u30BF\u30FC\u30F3 AcceleratorKeys.Enter=Enter AcceleratorKeys.Escape=Esc AcceleratorKeys.Delete=Delete AcceleratorKeys.Space=SPACE AcceleratorKeys.ArrowUp=\u4E0A\u77E2\u5370 AcceleratorKeys.ArrowDown=\u4E0B\u77E2\u5370 AcceleratorKeys.ArrowLeft=\u5DE6\u77E2\u5370 AcceleratorKeys.ArrowRight=\u53F3\u77E2\u5370 AcceleratorKeys.PageUp=Page Up AcceleratorKeys.PageDown=Page Down AcceleratorKeys.Home=Home AcceleratorKeys.End=End AcceleratorKeys.Insert=Insert AcceleratorKeys.F1=F1 AcceleratorKeys.F2=F2 AcceleratorKeys.F3=F3 AcceleratorKeys.F4=F4 AcceleratorKeys.F5=F5 AcceleratorKeys.F6=F6 AcceleratorKeys.F7=F7 AcceleratorKeys.F8=F8 AcceleratorKeys.F9=F9 AcceleratorKeys.F10=F10 AcceleratorKeys.F11=F11 AcceleratorKeys.F12=F12 The fixed string looks very good. Thanks! Closing PR. I've verified the strings
Platform	Setting TableItem image to null does not fully reset look (1GDKWX5) If you use TableItem.setImage(int, Image) once to set the image to something, then later to reset it to null, it looks different when selected. It's as if there is a white, square image selected, rather than no image selected. This causes the blue selection line to be broken up in the affected cells. To reproduce:   - create a new task, with subject " AAA " - mark it as checked  - change the priority to high - compile some java code which introduces problems  - change task filtering to show only problems, not tasks - select the first problem (the TableItem for the task gets reused for the first problem)  - compare this with selecting another problem NOTES:   McQ (28/05/2001 2:28:30 PM) - Not going to get to this for June. PRODUCT VERSION: Eclipse build 104 Low priority. this is a dup of bug 6966. *** Bug 6966 has been marked as a duplicate of this bug. *** *** This bug has been marked as a duplicate of 23505 ***
Platform	Workspace corrupt after " emergency shutdown " build 20020227  I got an internal error when saving a java file (bug 10502). I selected yes in the dialog that prompted me whether I wanted to shutdown the workspace  (although there wasn't actually a question in the error message - bug 10503). Apparently the workspace is corrupt - I can't restart. I'm uploading the workspace to walleye  as /va2000/INCOMING/forKnut/ < bugnumber > .zip Same problem after bug #9948; just more evidence that the bug pertains to all  emergency shutdowns rather than just those in the case described below.  The resulting workspace.xml was well-formed, but contained *only*:  1. The < ?xml...? > declaration 2. The document element (workbench) 3. The mruList and perspHistory elements in the document root, and all of their  rightful contents. Startup failed. Looks similar (dup?) of Bug 12644. I downloaded the workspace and tried to startup but couldn ' t. The I deleted the workbench.xml and was able to startup ok. (BTW, I run on WinXP) Will attach a ctrl-break log. Moving to Platform/UI for comment. Looks like the problem with running the event loop when no window restored. Please verify. *** This bug has been marked as a duplicate of 13985 ***
Platform	DCR: Compare: can't do find in the text merge viewer (1GDVY02) EG (5/17/01 9:35:49 PM)  There should be Find/Change support NOTES:  AW (31.05.01 19:46:36) Since I can't reuse the existing code postponed until after June. *** This bug has been marked as a duplicate of 6823 ***
Platform	[Dialogs] SelectionDialog should not return an initial selection of null F3  The JavaDoc for SelectionDialog.getInitialSelection does not state that null is a valid return value.  If we think that clients are acutally using the null case to avoid performing some real work then we should fix the javadoc. Otherwise we should an empty  list. Does it return it if the selection is empty on OK, or just for Cancel? I'm complaining about the initial selection, not the result. They are kept in  separate fields. getResult returns null on cancel. Although looking at the code, getResult will return null in the OK case unless  the subclass explicitly sets a value (which I suspect it would). In the result case the set is internal so it is perhaps reasonable to expect  that subclasses will always call it in the OK case. However setInitialSelection is public and may well not be called thus we should handle  this case and return an empty list. Made the initialSelections default to a new ArrayList in order to stay  consistent with other list based APIs (i.e. we return an empty List rather than null). M1-20020920 This change was breaking the MultiElementListSelectionDialog in jdt.ui (breaks ' Organize Import ' ) which was indeed using the fact that  getInitialSelection returns null. Please revert the change as other clients may rely on this as well.  The set/getInitialSelection API is bad. Set with Object[] , get with List. I  would suggest to introduce a new method Object[] getInitialElementSelections,  and deprecate the other. btw, I just saw that the Javadoc comment mentions a  method ' setElementSelections ' but should say setInitialSelections shoudl say M1-20020919 API changes made as suggested and references in the UI classes updated. Marking closed
Platform	Replace project/folder with tag does nothing Select a project or folder and replace with tag. When ok is pressed nothing  happens and the project/folder is not replaced. *** Bug 8901 has been marked as a duplicate of this bug. *** Fixed; rewrote dialog as well.
Platform	Scrollbar flickers in Open Type dialog Build F1 on SuSE 7.3  Under Linux/Motif, while the listbox in the Navigate- > " Open Type " dialog is  being populated, the scrollbar handle flickers. Platform behavior.
Platform	Removing a breakpoint could select next breakpoint If I have not taken the time to multi-select, it would be nice to select the  next breakpoint in the breakpoints view when you remove a breakpoint. This way you can quickly delete many breakpoints without mouse selecting them  as well as just better navigate in the view without a mouse. After removal selection occurs in both the breakpoints view and expression view. Fixed in BreakpointsViewEventHandler and ExpressionViewEventHandler. Please verify. Verified.
Platform	Newest build super-sizes my fonts Build 2001-12-19  When I open my old workbench in this new build, all viewer and dialog fonts are extra large.  Previously (Dec 6th build), the workbench would use the  OS-supplied font, so viewers would have the same font as, for example, Windows Explorer.  I will attach a screenshot showing the big fonts in the new build. This is because SWT no longer sets the fonts on widgets but instead the default system font is used (which on Win 2000 is your Message Text setting). However  now that this can be set we should look into providing a font setting for trees in the Eclipse UI. Deferred until later release due to the large amount of multi-team work  required to enable this feature. To be considered for 2.1 or 3.0. This is a big issue on platfoms like GTK where  the default fonts are frequently unreadably small and hard to change. Feature has been enabled in the 2.1 stream. There is now a dialog font which by  default is the same as the system font. Marking closed
JDT	NPE when doing a reference search to a package I cannot reliably reproduce this. What I did was selecting a package and doing  a reference search: java.lang.reflect.InvocationTargetException: java.lang.NullPointerException  at org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.canBeSeenBy (ReferenceBinding.java(Compiled Code))  at org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage (Scope.java:955)  at org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching (MatchSet.java:222)  at org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo mpilationUnit(MatchingOpenable.java:331) at  org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches (MatchingOpenable.java:174)  at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches (MatchLocator.java:1323) at  org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches (MatchLocator.java:586)  at org.eclipse.jdt.core.search.SearchEngine.search (SearchEngine.java:412)  at org.eclipse.jdt.core.search.SearchEngine.search (SearchEngine.java:358)  at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute (JavaSearchOperation.java:84)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1361)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) Fix won't be ready for 2.0.1. Marking for 2.1 instead. Got same exception when searching for references to a class " A " , when the reference of the referencing class ( " B " ) is not valid (e.g. if " A " is not visible to " B " , but " B " imports it). Was able to reproduce as follow: 1. Create package p1 2. Create class A in p1: package p1; class A { } 3. Create package p2 4. Create class B in p2 package p2; import p1.A; public class B extends A { } 5. Searching for reference to class A or to package p1 produces the above stack  trace. Thanks for the test case Simon. Fixed Scope.getTypeOrPackage(char[]) so that is doesn't check the visibility if  the scope is a CompilationUnitScope (canBeSeenBy(Scope) doesn't support such a  scope). *** Bug 22946 has been marked as a duplicate of this bug. *** for a real-life example - search for references to the class org.eclipse.jdt.internal.corext.dom.ASTFlattener This works for me in 2.0 (so is life real? :-) Of course you don't have the fix yet... (since there was no build contribution  from JDT/Core for the last integration build) Fix was not good enough (other senders of canBeSeenBy may have the same  problem). So changed canBeSeenBy to handle the case of a compilation unit scope and  removed change in Scope.getTypeOrPackage(char[] ). Verified.
JDT	Organize Imports problem with JDK 1.4.0 Hello,      there seems to be a problem with Eclipse integration builds along with the JDK 1.4 (released)..  If one uses " organize imports " , it keeps on adding  import sun.security.krb5.internal.crypto.j; or  import sun.security.krb5.internal.crypto.i; fields automatically even though it wasn't referenced..  Ie.. If one has   for ( int i = 0 ; i < 10 ; i++ )  Organize Imports will add " import sun.security.krb5.internal.crypto.i; " If it's  for ( int j = 0 ; j < 10 ; j++ )   import sun.security.krb5.internal.crypto.j; This doesn't happen with JDK 1.3.1_01..  George *** This bug has been marked as a duplicate of 5761 *** *** Bug 100124 has been marked as a duplicate of this bug. ***
Platform	" Select Working Set " doesn ' t? Window- > Select Working Set. Create a working set and select it. OK. The navigator still shows all projects.  On a related note, the java browsing views now let you select working sets individually for each view. If this is the way it will work, then it's confusing to have " Select Working Set " in the main Window menu if it doesn't do anything in any of the views. Should remove the items under Window. Removed working set items in " Window " menu
Platform	Plugin jar caching (1GITMTY) Our classloader mechanisms have changed to resolve platform: URLs prior to constructing the loader (for improved performance).  As a side-effect, this causes the caching support built into the " platform: " support for remotely installed plugins to be   bypassed. Need to fix for 2.0 if we want to enable running-from-server. We should probably use an approach that  * passes the classpath as platform: URLs to PluginClassLoader and PlatformClassLoader * construct DelegatingClassLoader (superclass) with null classpath  * on first use of loader, poof up the classpath doing asLocalURL() and super.addURL(...) This will trigger caching for remote jars, but delay this to first use (rather than loader construction). The current code does resolve() prior   to loader construction/ use. NOTES: Obsolete.
JDT	[scrapbook] Show scrapbook source when debugging When evaluating a snippet, I cannot place any breakpoint or catch any exception. I would expect to use snippets in combination with these, in order to try  things while writing code. NOTES: EG (7/11/01 11:58:20 AM) the snippet VM is always run in debug mode.  you can catch an exception you have to switch to the debugger to do so. However, the source of the snippet doesn't show up in the debugger when the exception is caught.  PM (7/11/2001 11:52:38 AM) The fact that the source does not appear is misleading. In addition, if the icon of run snippet was using the bug icon then I would intuitively get this as a fact.  EG (7/11/2001 11:33:19 AM) the generated snippet source isn't kept around. moved to ' active ' PRODUCT VERSION: SDK 125 moving to debug as FYI Deferred *** Bug 10413 has been marked as a duplicate of this bug. ***
Platform	Missing text in error on commit of project with deleted resource 1. delete a resource who is a direct child of project 2. commit the project The resulting error dialog has just the word " Commit " and no reason. The details are ok though (they show the real CVS error). Fixed
JDT	Code assist with class folders does not work Create J project J with class folder X that has JUnit class files Create J project B with X on build path Create a new class in B: public class JTest { junit.framework. } I started code assist and it worked up to packages but failed on the types. Should be an issue in the namelookup/searchable environment. Code assist call SearchEngine to find type. JavaSearchScope use the index file of the project instead of the index file of the class folder.  Fixed
JDT	Refactoring Move CU: no icon for import additions (1GFO1ZJ) - JUnit setup  - select Assert.java and move it to junit.extensions using refactoring - switch to the preview page  - expand a node observe:   no icon for those nodes. you see " :  add import declarationjunit.framework " Two things " text for node is missing and blank    between declaration and junit.framework is missing " .  NOTES: AK (8/13/2001 6:19:23 PM)  there's now a space between ' delcaration ' and ' junit.framework ' the icon is missing due to the document change infrastructure limitation:   - after calling ITextBufferChange::addInsert there's no easy way to say what the " enclosing java element " (import declaration in that case)    for that insertion is PRODUCT VERSION:  0.9 With the new preview wizard page and the new code manipulation infrastructure  the implementor of a refactoring has now ful control of the icons. Moving PR to Adam. closing - there's an icon now
Platform	[Working Sets] Propagate working set in " Open in new window " action build 20020502  When opening a container in a new window (OpenInNewWindowAction) the currently used working set should be set in the new window. Depending on the future shape of working set support (global vs. per view working set) this may or may not be trivial. This is currently only implemented specifically for the resource navigator view. Revisit post v2, once working set story is finalized/stable. Backed out navigator specific fix for propagating working sets (was bug 8066). Reopen for investigation Not for 2.1, defer. There are currently no plans to work on this feature
JDT	typo in type name: ResetSateForCodeGenerationVisitor ResetSateForCodeGenerationVisitor should be renamed to ResetStateForCodeGenerationVisitor Fixed in HEAD.
JDT	NLS: non-leave packages are incorrect? (1GHB9KY) EG (23.07.2001 11:51:11)  tried to NLS org.eclipse.jdt.internal.ui. Entering this package name on the 2nd wizard page in the Package field  shows an incorrect package message. Two problems:  1) the package is correct 2) the error message the package is not correct, doesn't tell me what isn't   correct and needs to be fixed. NOTES: EG (23.07.2001 11:54:33)  The code marked below with > > > is suspicous, what is the intent?   private static boolean canAddPackage(IPackageFragment p) throws JavaModelException{ if (! p.exists())    return false; if (p.isReadOnly())    return false; if (! p.isStructureKnown())    return false; if (! p.containsJavaResources() & & p.getNonJavaResources().length == 0)    return false; return true;    } WORKSFORME
Platform	Custom ant task classes not found 20021009  The c ached classloader is not being thrown away when the URLs change. This leads to class not being found when a user defines a custom ant task. Current workaround: add the library to the classpath define the task or type exit and restart eclipse. Eclipse will need to be restarted to pick up any changes to ants classpath  AFTER an Ant build has been executed. Please verify (Luc) Verified. Please update the build notes (darin S).
JDT	Modify Parameters refactoring: Accessability 20020521  How can I edit a paramenter name without using the mouse? Task list has the same problem, i.e., how can edit the task description from  the keyboard. Moving to Platform UI. If the fix requires changes in client code, pls move the bug back to JDT UI There is now a properties dialog in the tasks view that can be used to edit it. Must handle in client code. Recommend hooking F2 and/or Enter as a key listener (not as an accelerator) for editing values.  Probably need to use a traverse listener for Enter. To address the accessibility problem we can add an Edit... button.  In addition we should merge the old/new name columns into a single column. the ' old name ' columnt will not  be merged - it will be removed yes! fixed f pls verify Verified.
Platform	StyledText, bidi - ArrayIndexOutOfBoundsException in StyledTextRenderer.getLineStyleData build 20020502, Hebrew NT  Not sure what exactly I did when the exception occured. I think I just closed the workbench. I looked at the method where the exception supposedly happened and didn't see  any array access that could be -1. What VM were you running? I saw something similar (impossible index out of  bounds) when running on one particular Hursley VM which had a JIT problem. java version " 1.3.0 " Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.0) Classic VM (build 1.3.0, J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc) Apparently this VM is not to be trusted either. I'm going to switch to J9. I just got the same walkback again, this time with a (more?) complete stack. After typing in my password to unlock the screensaver I had the internal error. Will investigate. To reproduce: -open the Windows Display settings -change the screensaver minute value (probably any change will work) -press ok Note that the error will only happen once per Eclipse session and only in the  outer Eclipse. I.e., I'm running the same code for the outer and inner Eclipse.  Yet, when the inner Eclipse is in front and I close the Display settings dialog I get the error in the outer Eclipse console window. This makes it extremely difficult to debug. What I do know is the style range that causes the walkback:  0,0 fg:Color {0, 0, 0} bg:null fStyle:normal So it's a default style on the first line.  I ran on Win2k English with a check for the empty style range and there is none. I'm running with the latest DefaultLineStyler (i.e., the binary search in  replaceStyleRange). I went back to an older build which wiped out my workspace state. Now that I went back to 0502 I can't reproduce the problem anymore. Checked StyledText.  If an empty style (i.e., no length) is passed into  setStyleRange(StyleRange), it is ignored.  setStyleRanges(StyleRange[] ) and  replaceStyleRanges(start, length, StyleRange[] ) will not ignore the empty  style, but I ran a few tests with an empty style range at the beginning and I didn't get a walkback.  An empty style is basically invalid, but the code seems  to deal with it okay (in some circumstances anyway).  Marking this as invalid. Reopen if we see it again.
JDT	JDIDebugModel still using types for breakpoints This should be changed to just check on a type name. The current implementation is doing an equality check on a type and a type name. Fixed to be JDIDebugModel#lineBreakpointExists(String typeName, int lineNumber). Changes in AddBreakpointAction and BreakpointRulerAction. Verified. Removed last reference to IType in JDIDebugModel, which was in an  unused method.
Platform	[Navigator] Navigator working set usability Build 20020521 (freeze 1)  For what it's worth, I greatly prefer the Packages view's working set usability  over the navigator view.  In the packages view, you can switch or turn off working sets with a single menu click.  Their select working set dialog is also  more intuitive. In the navigator view, any changes to working sets require you to open a new dialog.  Switching working sets requires four clicks, and clearing working  sets requires three.  To edit a working set, you have to click the " Other " button from the first dialog, which isn't intuitive.  When you get to the dialog  where you can change your working set, you are now three dialogs deep.  There's  lots of room in the navigator's action bar menu to provide the same easy  usability as the packages view.  I'd even add an extra menu item to edit the  current working set, which I find to be the most common action. Finally, the fact that the packages view and navigator have different UI for the  same functionality adds extra confusion. Should adopt JDT style of selecting working sets. *** This bug has been marked as a duplicate of 13980 ***
Platform	Unable to get a next button on the available updates wizard If I search for available updates I find 2 or 3 depending on my update manager preferences (equivalent or compatible search). One is the eclipse.org test update site, the others are based on features where I have local file URLs defined. If I deselect the eclipse update - the next button goes away.   What should I be looking for to determine why this won't proceed?   Notes: I can use direct access to the local site to install one or more      updates (so i think the site.xml and jar ' ed feature/plugins are fine.      I cheated when making my jars.  I just zipped the feature/plugin directory and renamed the file from abc.zip to abc.jar.  Works so far. Thanks, The local site used in the feature defs is in a zip file - inside IBM Firewall -  at ftp://jumpstart.raleigh.ibm.com/InstProto/Eclipse-int-install.zip Pat M. I have tried this with our test scenario ... could not reproduce (able to  deselect updates from the list and the Next > stays enabled).  So can you please add the steps to reproduce using your test features. Eg. which of the features were installed/ configured at the point you requested  updates (you had some of them installed because otherwise the search would not have found updates). I recreated with a smaller test case - one that was originally shared as part of  the installshield prototype. You will have to update the file url in the  com.example.company1.myproductfeature_1.0.0.jar file to point to where you unzip the test case data.  Then use update manager to visit the site, install com.example.company1.myproductfeature_1.0.0, and then after the recycle use the  one click update button to search.  My search found eclipse.org updates and com.example.company1.myproductfeature_1.0.0 updates.  When I deselect the  eclipse.org option the next button goes away.... still. Able to reproduce ...  The feature does not have a " click-through " license text specified. There is a  bug in the code that fails to Enable the [Finish] button when none of the  selected features have a license (ie. the idea was to skip the empty license page).  Having said that, we will not fix this bug (at least not as above), because the lawyers are asking us to enforce the presence of click-through licenses for all  features we are installing. Please see bug 20154 for some discussion about what code we will be changing for this.  The bottom line is that all features will have to specify < license > .... some text < /license >
Platform	[ExternalTools] Closing properties dialog run only first tool builder Build F1  If you close the properties dialog for a project, then only the first external tool builder gets run. This behaviour is inconsistent with the behaviour seen  during either an incremental build or a full build. *** This bug has been marked as a duplicate of 17478 ***
Platform	Two connection smade when fectching remote tree We currently make two connections to the sever when fetching a remote tree. We  could optimize it to one but we would need to be able to change the local root of a Session. Consider for M4 This works as designed
Platform	Remove Eclipse task dependancy The EclipseCopy Ant task provided by the org.eclipse.core.resources plug-in  has been removed from the builds and will not be a part of 2.0. See Bug 19954. Currently the builder uses this task to preserve file permissions when copying  files. The scripts in the source build story include calls to modify file permissions of the executable and libraries after the compiling/packaging has  been done. The SDK builder should be modified to mimic the behaviour of the source builds  and no longer use the EclipseCopy task and change the file permissions via scripts. (if necessary) A new builder is now in use that uses the default Ant task.
Platform	MultiEditor contains unneccessary platform-dependant import The class: org.eclipse.ui.part.MultiEditor contains the following import which doesn't appear to be used: import org.eclipse.swt.internal.win32.GRADIENT_RECT; In a selfhosting environment, this creates an error on Linux. This import doesn't appear to be used. Unless I'm mistaken, I believe this import should be removed. Import removed
Platform	reorganize newsgroups Hi!  I didn't found a suitable component. Maybe you can add a tracker/bugzille for  maintenance tasks for eclipse.org. I suggest to reorganize the newsgroup concept.  As with introducing " eclipse.technology " the situations gets very confusing  especially for new users. You should rename groups and introduce more levels to better suit their  intention. My sugestion:  - project specific (for plug-in developers) [eclipse.projects] as main category for questions regarding plug-in development with eclipse projects      -- > no write access !      [eclipse.projects.platform] for questions regarding development with eclipse platform       -- > can have write access if there are no sub categories      [eclipse.projects.technology] category for questions regarding development       with eclipse technology projects -- > no write access !        contains: [eclipse.projects.technology.AJDT]       [eclipse.projects.technology.Stellation] [eclipse.projects.tools]       category for questions regarding development with eclipse tools projects       -- > no write access !        contains: [eclipse.projects.tools.CDT]       [eclipse.projects.tools.JDT] [eclipse.projects.tools.GEF]   - support specific (for users of eclipse) This is really important because I expect a hugh increase of " support " questions in the plug-in development newsgroups with growing publicity o f  eclipse and growing number of products using eclipse. [eclipse.users]     as main groups for all eclipse usage related questions if traffic becomes too much, you can create subcategories later  Cu, Gunnar I have the impression that the traffic on the group increased after 2.0 has been released. So I would be very pleased if the tools group would be splitted. I find the proposal from Gunnar ok. Especially a seperate group for JDT questions would be good. *** This bug has been marked as a duplicate of 19399 ***
JDT	Phantom tooltip ? This problem with the tooltips is probably known, but I couldn't find it in the  database. When the cursor is over a method, the description of that method appears as a  tooltip. This tooltip does not go away! It also overlaps dialog windows or whatever. Don't know how to close it. I have  to close Eclipse. The workaround for the sticking tool tip is to click into it and press ESC. So  far the sticky issues only occured in the context of F3 an similar actions. In these cases the tool tip can be brought up exactly at the point when the parent  editor looses activation. Your description just says the hover is sticky. Are there any conditions for that? *** This bug has been marked as a duplicate of 20987 ***
Platform	[Wizards] New folder wizard is very large if you are creating the folder in a container with a very long path F1  1) Create a folder with a very long name 2) Select the folder and open the new folder wizard, it is very wide.  Similar with new file The Java creation wizards do not have this problem. We should set an 80 character text limit Patch for 3.2 stream I'm looking at it now. Slightly modified patch.  Removed unused width constant, fixed an indentation problem and ran organize imports to remove a .* import that has been there for awhile. Submitted. Verified in I20050808-2000
Platform	Replace With - > Tag... not available for folders Replace With - > Tag exists for projects, but not for folders it seems.  I can't think of any reason why not. Bug already exists, can't find it right now... You're absolutely right though.
JDT	search fails on cus 1. junit 2. select Assert.java in packages view 3. open search dialog 4. select : ' all occurrences ' 5. search - no matches found do the same from the outlines - 4 matches found *** This bug has been marked as a duplicate of 4329 ***
JDT	Unexpected full build Build 20020307  After some successfull compilation loops, the Java builder suddenly did decide to perform a full build. I copied the last portion of the trace, it complained  about not being able to find its build state. I recall I was changing the signature of ICompletionRequestor#acceptError (IMarker) to ICompletionRequestor#acceptError(IProblem) before triggering the build action.  Starting build of org.eclipse.jdt.core INCREMENTAL build Compile this changed source file D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/ICompletionRequestor. ava About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/ICompletionRequestor.java Type has structural changes org/eclipse/jdt/core/ICompletionRequestor   adding dependents of ICompletionRequestor in org/eclipse/jdt/core Writing class file ICompletionRequestor.class   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/eval/org/eclipse/jdt/i nternal/eval/CodeSnippetToCuM pper.java found match in org.eclipse.jdt.core to ICompletionRequestor   adding affected source file D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/ClassFileWorkin Copy.java   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/eval/Evaluation ontextWrapper.java found match in org.eclipse.jdt.core to ICompletionRequestor   adding affected source file D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/ClassFile.java found match in org.eclipse.jdt.core to ICompletionRequestor   adding affected source file D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/codeassist/org/eclipse /jdt/internal/codeassist/Comp etionEngine.java   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/Openable.java   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/CompletionReque torWrapper.java found match in org.eclipse.jdt.core to ICompletionRequestor   adding affected source file D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/CompilationUnit java   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/eval/org/eclipse/jdt/i nternal/eval/EvaluationContex .java found match in org.eclipse.jdt.core to ICompletionRequestor   adding affected source file D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/eval/IEvaluationContext. ava   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/CorrectionEngine.java   found match in org.eclipse.jdt.core to ICompletionRequestor adding affected source file  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/ICodeAssist.java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/eval/org/eclipse/jdt/i nternal/eval/CodeSnippetToCuMapper.java About to compile  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/ClassFileWorkingCopy.java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/eval/EvaluationContextWrappe .java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/ClassFile.java About to compile  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/codeassist/org/eclipse /jdt/internal/codeassist/CompletionEngine. ava About to compile  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/Openable.java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/CompletionRequestorWrapper.j va About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ internal/core/CompilationUnit.java About to compile  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/eval/org/eclipse/jdt/i nternal/eval/EvaluationContext.java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/eval/IEvaluationContext.java About to compile  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/CorrectionEngine.java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/model/org/eclipse/jdt/ core/ICodeAssist.java Type has structural changes org/eclipse/jdt/internal/eval/CodeSnippetToCuMapper   adding dependents of CodeSnippetToCuMapper in org/eclipse/jdt/internal/eval Writing class file CodeSnippetToCuMapper.class Type has structural changes org/eclipse/jdt/internal/eval/CodeSnippetToCuMapper$1 Writing class file CodeSnippetToCuMapper$1.class Deleting class file of removed type  org/eclipse/jdt/internal/eval/CodeSnippetToCuMapper$2 Starting build of org.eclipse.jdt.core Performing full build since last saved state was not found FULL build About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/ant/org/eclipse/jdt/co re/ant/Jdtcom.java About to compile  D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/ant/org/eclipse/jdt/in ternal/core/ant/AntPrintWriter.java About to compile D:/eclipse/workspaces/dev2.0/plugins/org.eclipse.jdt.core/ant/org/eclipse/jdt/in ternal/core/ant/Util.java The trace does not include that the incremental build completed. There are  several scenarios when an incremental build can stop and cause a full build. I've added more tracing to these cases so we know which one occurred. No reproducable case in over 2 months... Could not reproduce.
Platform	Changing decorators preference very slow if decorators are on If you change the decorators preference while the decorators are on, you hang  for a while. Fixed.
Platform	Esc doesn't cancel code assist anymore Steps to reproduce - open code assist in Java file - press ESC  observe: nothing happens I suspect that this has something to do with the new ESC behaviour introduced  by the workbench. The problem is caused by the " Activate Editor " action which uses ESC as  shortcut. Thus the content assist as well as the parameter info popup, the general info popup, etc. never see this key event.  ESC should be reserved for closing windows. This also affects rename in the Navigator.  It activates the editor. I will remove the ESC support for activating the editor. As a workaround, in org.eclipse.ui/messages.properties, remove the @Esc from  ActivateEditorAction.text. Fixed.
JDT	Variable name code completion should handle arrays Consider: Object[] X    The variable name suggestion a X is " object " given that it is an array it should  almost always be plural " objects " Fixed.
JDT	InvalidStackFrameException with jdk1.4rc I have a break point in my HelloWorld program. I tried inspecting " System.out " when the execution of the main method got to the break point, and I got an exception that said " An exception occurred: class  com.sun.jdi.InvalidStackFrameException " This is a problem that is new with  jdk1.4rc, it works just fine with jdk1.4beta3 and earlier from what I can tell. *** This bug has been marked as a duplicate of 8447 ***
Platform	Outline should be bound to the navigator. (1GE92RH) - From the navigator - open a few files.  - When you select a different editor the selection in the navigator changes. - When you select a method in the outline the text editor scrolls to the selected method. The selection in the navigator should change as well. NOTES: This is not a good idea.
Platform	File Search - file name pattern case sensitivity 20020409-I on w2k:    1. Setup JUnit 2. Search for ' TestCase.java ' 3. Observe - > 1 occurence in workspace   4. Search for ' testCase.java ' 5. Observe - > 0 occurence in workspace  On windows, the file name search should be case insensitive, since you cannot expect windows users to remember the case-exact name.  I propose to add a ' Case Sensitive ' check box to the file name pattern as well. It should be disabled by default. Unix users can enable it if needed. I was thinking of this but did not do so for two reasons: 1) The Search Dialog would be wider 2) Eclipse is case-sensitive (even under Windows) EG: Please comment. A solution (though not very good) would be to add this as a preference. here are some consistency facts: - eclipse is case insensitive when it comes to suffixes .java is treated the same as .JAVA - the goto resource dialog in the navigator is case insensitive My suggestion is therefore to make the filename patterns case insensitive. This  is a good compromise. A unix user will get too many matches in rare situations and a windows user  will get the expected matches. Fixed by ignoring case. Available in builds > 20020505
Platform	ClassCastException in Pess. Prov. ClassCastException on line 75 of ResourceChangeListener. Need to call  RepositoryProvider.getProvider(project, PessimisticFilesystemProviderPlugin.NATURE_ID);  rather than  RepositoryProvider.getProvider(project); Resolving fixed, sent latest build to platform-vcm.
Platform	Convert all DOM-based parsing to SAX (1GBWBPF) The ModelObjectReader infrastructure currently uses DOM based parsing. The structure is pretty simple and should be converted to use SAX based parsing similar to that used by the plugin registry parsing  NOTES: JM (4/8/2001 11:25:11 PM)  Moving to DW for implementation JM (6/5/2001 10:17:53 PM)  Deferred Will investigate post 2.0. Reopening for investigation. Marking as performance (see bug 28158).  I have a partial implementation if anybody plans to investigate further. ModelObjectReader has been renamed to OldModelObjectReader as we have some  legacy code that must remain (to support old environments with .workspace files).  A new class ProjectDescriptionReader now reads all .project files  using a SAX based parser.  It is felt that this will become the basis of a generic class should we need to add other xml-type files of this nature.  Added new tests.
JDT	F2: ArchiveSourceLocation.getArchive changed to protected. For the WAS source locator I create a Java source locator given a project and  then ask it for its source locations.  I use these source locations to find .jsp files so that source lookup uses the same locations for .java and .jsp files.   If F2 the method getArchive in class org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation has been changed to  protected from public and my build now fails. Do you need access to the archive? We have added #getName, which is the path to  the archive. The method was made protected, such that handling of open archives, and closing  archives was internal to the implementation. Ok.  I can create another archive myself. We could make the method API, but I wanted to make sure that it is required.  Clients need to be aware that calling this method actually opens a zip file. The zip file can be closed underneath you at any time - thus you would not be  able to " hang on " to the reference - you would need to call the method each  time to ensure you get a handle to an open archive. Alternatively, you could manage your own zip file and open/close as required. This is fine.  I have already changed my code to use getName.  Thanks. Closing.
Platform	Working set wizards help text build 200209024  The second sentence of the help text for the WorkingSetSelectionDialog (help id: WORKING_SET_SELECTION_DIALOG) should be " The working set is a subset of the workspace. " The help text for the first page of the new working set wizard (id:  WORKING_SET_NEW_WIZARD) should read " ...working set you want to create. " Last context id should be working_set_type_page not working_set_new_wizard  Fixed in > 20030326
Platform	[runtime] Multiple sessions on linux can share a workspace Eclipse 20021024  I can launch two eclipse sessions that share the same workspace.  This works on both gtk and motif.  In windows I get the expected pop-up telling me I  can't do this. *** This bug has been marked as a duplicate of 21589 *** The trail of PRs resolves in a " wontfix " .  Since linux allows multiple  sessions, and multiple sessions will result in bad things happenning, that is not the correct response.  As the number of users of linux increases this  issue may come back to haunt us. Recommend you leave one of the existing PRs open to track the issue, and  resolve at a future date. *** Bug 32868 has been marked as a duplicate of this bug. *** *** Bug 33442 has been marked as a duplicate of this bug. *** *** Bug 40625 has been marked as a duplicate of this bug. *** Fixed (see considerations about fix in bug 38399). *** Bug 62286 has been marked as a duplicate of this bug. *** *** Bug 70174 has been marked as a duplicate of this bug. *** *** Bug 49119 has been marked as a duplicate of this bug. ***
JDT	Use a different icon for  the class file editor It should be easier to recognize that the class file/source attachment cannot  be edited. x Reopening for 2.1 consideration Different icon is in place for some time now.
Platform	view categories need externalization In team.ui.plugin.xml, we declare two view categories (one for Team, one for  Target).  I assume their names need to be externalized, as I assume they form the labels in the " Show View - > Other " list? Also, < view   id= " org.eclipse.team.ui.sync.SyncView " *** name= " Synchronize " ****  Wierd, don't know how we've missed that. fixed (Correcting milestone to F2)
Platform	Bizarre error dialog sharing closed project Build 20020123 (VCM 2.0)  1. Create a new project 2. Close the project 3. Choose " Share Project " , go through wizard steps. 4. Finish.  Project actually gets opened and released It should probably just not allowing sharing when the project is closed.  5. Close the project again 6. Choose " Share Project " again.  An error dialog comes up: Title: Configure Project Message: Configure Project Reason: Configure Project  The following also appears in the log file: 4 org.eclipse.team.ui 1 Configure Project java.lang.IllegalArgumentException: Argument cannot be null at org.eclipse.swt.SWT.error(SWT.java:1873)  at org.eclipse.swt.SWT.error(SWT.java:1819) at org.eclipse.swt.widgets.Widget.error(Widget.java:368)  at org.eclipse.swt.widgets.Label.setText(Label.java:373) at  org.eclipse.team.internal.ccvs.ui.wizards.CVSWizardPage.createLabel(CVSWizardPag e.java:104)  at org.eclipse.team.internal.ccvs.ui.wizards.ConfigurationWizardAutoconnectPage.cre ateControl(ConfigurationWizardAutoconnectPage.java:79) at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:164)  at org.eclipse.jface.wizard.WizardDialog.createPageControls(WizardDialog.java:504)  at org.eclipse.jface.wizard.WizardDialog.createContents(WizardDialog.java:455)  at org.eclipse.jface.window.Window.create(Window.java:237) at org.eclipse.jface.window.Window.open(Window.java:510)  at org.eclipse.team.ui.actions.ConfigureProjectAction$1.run(ConfigureProjectAction. java:36) at org.eclipse.team.ui.actions.TeamAction$1.run(TeamAction.java:154)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.team.ui.actions.TeamAction.run(TeamAction.java:151)  at org.eclipse.team.ui.actions.ConfigureProjectAction.run(ConfigureProjectAction.ja va:29) at  org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionCont ributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContribu tionItem.java:361) at  org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem. java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(Actio nContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:827) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:87 8)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) Fixed.
JDT	Pull-up method should help pulling up dependent methods/fields [refactoring] in the scenario: class A extends B() { public void a() {       b(); }   private void b() { } } When pulling up a() the refactoring should be more supportive and inform/offer  me that b() should be pulled up as well. b needs to added ' add required ' button
JDT	Insufficient Information When Saving a File On a Closed Project Build: 20020109  Description: On trying to save a file on a closed project, the error message doesn't show enough information.  The error message only shows the folder name,  not the path. The error message should indicate that the project is closed, rather than the  path can't be found.  The current message suggests that the path has been  deleted. Steps: 1.  Open a project 2.  Open a file in a sub folder of the project 3.  Modify the file and do not save 4.  Close the project using the close project menu item 5.  Attempt to save the file 6.  The following error message appears: " Save could not be completed. Reason: [folder name] does not exist " Note: If the file is in the root of the project, then the error message  states: " Save could not be completed. Reason: [file name] does not exist " This only happens in the java editor.  The text editor provides the  correct reason: Resource /Foo is closed.  Moving to JDTUI. The problem is that different exceptions are thrown from TextEditor and CompilationUnitEditor. The TextEditor does a IFile.create() on performing a save, which throws a ResourceException saying that the project is closed. When the CompilationUnitEditor performs a save, it tries to get the underlying resource for the CU, which results in a JavaModelException telling that the resource does not exist. I would suggest that it should check if the project is open and throw an JavaModelException with a message and status similar to the ResourceException. This is something which could be fixed in the UI, but I think in this case, the JavaModelException should return more information on what is going on. Defer Defer Resurrecting for 3.0 Removing milestone of deferred item.
JDT	Code assist for anonymous inner type too late Code assist should propose anonymous inner types after I typing " new " . Right now it is proposed only after the bracket i.e. ' new Type( < here > ' It needs the supertype name before it can help you to do more. Closing
Platform	Project rename error message has a strange chars in the front Found in V1.0 (R10 driver), and re-tested on v2.0  (Build 20011204).  Problem  exists in both places.  Tested on Windows 2000. STEPS:  Create a simple project called Simple1. Create a simple project called Simple2 In the resource perspective, rename Simple1 to Simple 2 from the Navigator.  RESULTS: You will see the message " P/Simple2 exists.  Doyou wish to overwrite? " EXPECTED RESULTS: See the message " Simple2 exists.  Doyou wish to overwrite? " without the P/ in the front. NOTE: This does not happen in the Java Perspective (it brings up a dialog  instead of allowing renaming in-line). PJCCMVC191629 This bug is in org.eclipse.ui.actions.RenameResourceAction#checkOverwrite.  It  passes destination.toString() to the message binding routine, instead of destination.getName().  Moving to UI. Fixed for build > 1206. Marking closed
Platform	TM: TargetSyncAction#getTargetProviderMapping and hashing The method TargetSyncAction#getTargetProviderMapping() relys on equality to  seperate resources by provider. For this action to work properly, TargetProvider must implement equals() and hashCode(). Currently, the method  results in a one to one mapping between providers and resources. Fixed
JDT	Search view Hello, I would suggest the following thing ; up to now we have a view which is called " Search view " where all searchs are stored . I would suggest to  transform the search view into a search perspective. What is the avantage? This perspective view should be composed of two views : * the search view itself * the editor view All the results are put into the search view, and when we click on one item of the list, the editor view is updated consequently. It was almost the same view in smalltalk, and it was quite useful. Ragards Xavier not planned for 2.0 The workbench guidelines suggest not to create to many perspectives. Having a  new perspective would violate this. You almost get that behavior by checking Preferences- > Workbench- > Search- > Reuse  Editor .... Closing
JDT	Code completion suggests variable name IntelliJ has a neat code completion feature I'd like. Described here: http://www.intellij.com/idea/features.jsp?part=1 See the section describing " SmartType " Works for me in build 20020109
Platform	New Project Wizard @@ Automatic location append @@  When one's not using the default location, the following behavior would be appreciated: I enter the new location in the location TF (or use " Browse " button " ), when I enter the projects name, the location TF will be adjusted accordingly (similar to the CVS location TF on the " New CVS Repository Location " ).  For example: I enter " /home/foo/workspace " in the location TF and then enter " projectA " in the project's name TF -- the location TF would be adjusted to " /home/foo/projectA " .  The dialog already handles the problems with / \ and . There could (should) be either an option on the dialog or a global option named " Automatically append project name to project location " for those cases where the user want's his project in a directory not named after the project name.  @@ Error message: Names cannot begin or end with whitespace @@ I think the constraint on not entering whitespace at the beginning or end of the project's name should not be forced on the user.  Why can't he just enter the name with whitespace at the beginning and the end?   The leading and trailing whitespace could be stripped off (simple String#trim()) programmatically when the user presses the " Next " or " Finish " buttons -- IMO the user wouldn't even notice it.  The project location TF (s. a.) should be also be adjusted with this " stripped off " name.  @@@@@@ Sebastian Davids BTW, when one uses " default location " the project's name is automatically appended. The create project wizard page is owned by the platform UI - moving Automatic location append - see PR #6686 (extra comment in there about user  expectation of having project name appended to custom location path) Leading/trailing whitespaces - see PR #1876 & #2419 The problem with trailing spaces has been fixed (see bug 2419). The problem  about whether the project name should be appended or not to the location provided by the user has been addressed by changing the text on the page to  make it more obvious to the user what needs to be entered (see bug 7017) The WS-problem is fixed.  I've opened bug 9038 for a different take on the other " problem " ...
Platform	Internal error when clicking after pressing F1 Build: 20020123  Description: Press F1 to get the help dialog to pop up. Then if you choose one of the options given to you or if you click outside of the dialog, everything  is fine. However, there is an empty area in the dialog, through which you can see the view behind it. If you click in the area of the dialog that is empty,  you get an internal error, string index out of range. Log: Wed Jan 23 14:34:29 EST 2002 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Wed Jan 23 14:34:29 EST 2002 4 org.eclipse.ui 0 String index out of range: -28 java.lang.StringIndexOutOfBoundsException: String index out of range: -28  at java.lang.String.substring(String.java(Compiled Code)) at org.eclipse.help.internal.ui.StyledLineWrapper.getTextRange (StyledLineWrapper.java:100) at org.eclipse.swt.custom.WrappedContent.getLine(WrappedContent.java:91)  at org.eclipse.swt.custom.StyledText.getOffsetAtMouseLocation (StyledText.java:3802)  at org.eclipse.swt.custom.StyledText.doMouseLocationChange (StyledText.java:2341)  at org.eclipse.swt.custom.StyledText.handleMouseDown (StyledText.java:4989)  at org.eclipse.swt.custom.StyledText$9.handleEvent(StyledText.java:4810) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse. ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:827)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:878)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) This bug only appeared in the latest driver , as it works fine with the latest  integration build. Will investigate... This seems to be caused by SWT changes made to the StyledText or related  classes in the past few days. The F1 infopop uses a StyledText with a StyledTextContent.  We did not make any change to this code so the SWT changes broke the F1 help. The help code can be found in the org.eclipse.help.internal.ui in the following  classes: StyledLineWrapper (an implementation of StyleTextContent) ContextHelpDialog.createInfoAread(...) - this creates the StyledText and sets the StyledLineWrapper object.  If we need to make any changes to be compatible with the latest StyledText please let us know what those changes should be and re-route the bug back to  help. Thanks! Please investigate. Sent the mail below to Dorian last night as part of investigating bug 8190.  It's possible that StyledText is asking the StyledLineWrapper for a bogus line  when word wrap is on. The empty area in the context help dialog quoted in the bug is where the StyledText widget is. Will investigate. ------ Last week we released a version of StyledText with word wrap support. I just did a search for users of the WRAP style and noticed that the ContextHelpDialog  creates a StyledText widget with the WRAP style bit and also does its own wrapping.  While this should work, it currently does not. I will look into why not later this week. There is another user (AntConsole) of StyledText that uses the WRAP  style which may cause the bug quoted above. I'd like to look into that problem  first. In the meantime, please remove the WRAP style bit in ContextHelpDialog.createInfoArea to make sure that the context help works in  this week's milestone build. You can add yourself to the CC list of the bug to  stay current on that part of the problem. Is there any other place in the help system where you use the WRAP style for  the StyledText widget or a TextViewer that I missed? I removed the SWT_WRAP style when constructing the StyledText with my own line  wrapper, as per Knut's suggestion, and things work fine now. Dup of 8190. Fixed this morning.  *** This bug has been marked as a duplicate of 8190 ***
Platform	Export to file system incorrect if Navigator view not in focus Problem found on eclipse F1 driver Scenario : -I'm in Java Perspective, open file A in the ditor - The editor on file A has the focus ( this is important ) - Select File- > Export- > File System - In the export dialog, the A should be selected for export; instead the last exported file is selected  If I close the export wizard, get focus to the Navigator view ( the file A is already selected in the tree view because the editor is opened on that  file ) and open again the export wizard, the file A is selected for export Works for me in build 2002-05-27. Please re-open if this is still a problem for you in the latest integration builds.
Platform	[CVS UI] feature: show details list of resources about to overwrite When replacing with stream contents, we helpfully warn you about modified resources that are about to be overwritten. It would be nice to have a Details > button that shows you the list of actual modified resources, so you can decide if you care or not. I think users want the replace to be as fast as possible and know whether they  want to blow away locla changes. If they are surprised, they can cancel and check using other means (decorators or sync view).
Platform	ArrayIndexOutOfBoundsException in plugin manifest editor - Edit a plugin.xml (Test case: New Project > Plug-in Development > Plug-in Project, ...  choose " Plug-in with a popup menu " ) - go to " Source " tab - start an XML comment by inserting " < !-- " somewhere (Test case: before " < extension point... " ) - some lines further down, try to insert more text (Test case: after " < /extension > " )  I get the stacktrace below, and the editor goes mad. Eclipse Platform, Version: 2.0, Build id: 200210091501  java.lang.ArrayIndexOutOfBoundsException: 674 at org.eclipse.jface.text.rules.BufferedRuleBasedScanner.read(BufferedRuleBasedScanner.java:104) at org.eclipse.jface.text.rules.PatternRule.endSequenceDetected(PatternRule.java:143)  at org.eclipse.jface.text.rules.PatternRule.doEvaluate(PatternRule.java:107) at org.eclipse.jface.text.rules.PatternRule.evaluate(PatternRule.java:198)  at org.eclipse.jface.text.rules.RuleBasedPartitionScanner.nextToken(RuleBasedPartitionScanner.java:92)  at org.eclipse.jface.text.rules.DefaultPartitioner.documentChanged2(DefaultPartitioner.java:256)  at org.eclipse.jface.text.AbstractDocument.updateDocumentStructures(AbstractDocument.java:507)  at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:529)  at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:839) at org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:162)  at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5401) at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6296)  at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2475) at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4765)  at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:4791) at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:4556)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1623) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1369)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1338) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1321)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) Was a bug in BufferedRuleBasedScanner.read(): the buffer was only shifted if the offset was at buffer's end. However other methods can directly set the offset and hence it can be bigger than the buffer's end. Verified. *** Bug 32344 has been marked as a duplicate of this bug. ***
JDT	Terminated processes still have running man icon (1GEPETG) Debug perspective.  In the processes view, a terminated process (top-level item in the tree) still has a running man instead of a standing man as its icon.   Its children properly have the standing man as their icon. NOTES: EG (6/2/2001 7:51:02 AM) moving to DUI. Is this a linux only problem?  jkca (6/2/2001 1:52:33 PM) likely not a linux problem as the motif 117 drop was missing the swt natives (read, does not launch)  DW (6/2/01 2:24:00 PM) We do not change the icon of the top level item (launch) - only the debug target or process. PRODUCT VERSION:   117 For UI consistency/usability, we should update the top-level icon to the standing icon when a launch terminates. Add this to our artwork request list. *** This bug has been marked as a duplicate of 4383 ***
JDT	Working directory for JavaSnippetEditor The user should be able to set the working directory of the snippet editor.  This could be a settable persistent property on the actual IFile associated with the snippet page. Want to re-use some of the existing launch config tabs (e.g., Arguments,  Environment, Source Lookup (when added)).  This will be a Property page that picks and chooses the launch config tabs it wants.    Will wait until launch config tab API is finalized. *** Bug 3690 has been marked as a duplicate of this bug. *** Fixed. Exposed working directory as a property of the scrapbook page (i.e. pop- up menu properties). please verify (Darin S) A few small things: browsing for a local directory, the default directory (the root of the install), is not selected in the tree (the name is filled in).  You have to hit Apply, hitting OK does not apply any changes You do not have to select any workspace relative folder and you can still hit OK Didn't see any good way to change the browsing behavior. Fixed the apply/ok problem Set the container dialog to not show closed projects. Please verify (darinw) Verified
Platform	" Add task " option of context popup menu doesn't  appear sometimes While in the source code editor, trying to add a task to the code by right  clicking in the context menu area only brings up the " Add Breakpoint " menu,  where it should also have " Add task " and " Add Bookmark " options.  I will look for a case where it acts like this consistantly, instead of intermittently. Using the January 25/02 stable release, this problem has not recurred on  Solaris. Installation information: Solaris v2.7 CDE v 1.3 Motif v1.2 Sun JRE v1.3.1_02-b02 Jan 25/02 Eclipse stable release
Platform	Merge: incoming folder creations have wrong tag info When getting incoming folder creations from another branch the folder sync is  set to the remote instead of the local context. Fixed and released to HEAD. Ran sync tests, they passed.
JDT	Last item selected by default in variable selection dialog Build 20011120  - go to add a classpath variable - Browse for var name - it selects the last item by default Normally the default selection is the first item.  This seems picky, but it's actually fairly annoying when using keyboard  navigation for the default selection to be in the wrong place. (particularly when the one I always go for is ECLIPSE_HOME, which is always the  first item < g > ). fixed > 11122
Platform	Unsatisfied Link Errors running libswt-pi-gtk-2034.so on Linux/Gtk 2.0 There are a wack of unsatified link errors when running the GTK 2.0 M5  release. Eclipse will not come up and  reports a trace. Not really sure why java.lang.UnsatisfiedLinkError:  /home/john/bogus/eclipse/plugins/org.eclipse.swt/os/linux/x86/libswt-pi-gtk- 2034.so:  /home/john/bogus/eclipse/plugins/org.eclipse.swt/os/linux/x86/libswt-pi-gtk- 2034.so:  undefined symbol: gdk_font_full_name_get at java.lang.ClassLoader$NativeLibrary.load(Native Method)         at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1414) at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1322)         at java.lang.Runtime.loadLibrary0(Runtime.java:744) at java.lang.System.loadLibrary(System.java:815)         at org.eclipse.swt.internal.Library.loadLibrary(Library.java:102) at org.eclipse.swt.internal.gtk.OS. < clinit > (OS.java:20)         at org.eclipse.swt.widgets.Display.createDisplay(Display.java:328) at org.eclipse.swt.widgets.Display.create(Display.java:322)         at org.eclipse.swt.graphics.Device. < init > (Device.java:95)         at org.eclipse.swt.widgets.Display. < init > (Display.java:261)         at org.eclipse.swt.widgets.Display. < init > (Display.java:257)         at org.eclipse.ui.internal.Workbench.run(Workbench.java:810) at  org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)         at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)         at org.eclipse.core.launcher.Main.main(Main.java:390) Some seem to be remnants of the GTK 1.0 and some are typos in the c code.  To get it to work, I hacked out the bogus references and recompiled. (I assume if the reference doesn't exist in Gtk2.0, you can't be  relying in it ...) Eventually it does come up. Here is the list    in: swt-gdk.c gdk_font_full_name_get  NewStringUTF Two problems. The first is the non-existant gdk_font_full_name_get (comment it  out). The second is the call to (jstring)NewStringUTF should be (*env)- > NewStringUTF  This one is wierd since the gdk headers (gdkfont.h) include a prototype of this function but the source has no implementation.   [john@localhost gdk] $ grep gdk_font_full *.c < note none here > [john@localhost gdk]$ grep gdk_font_full *.h gdkfont.h:gchar*   gdk_font_full_name_get (GdkFont *font); gdkfont.h:void   gdk_font_full_name_free (gchar *name); The next one is GTK_WIDGET_REALISED which is a spelling error diff ./swt-gtkwidget.c ../../library/swt-gtkwidget.c 96c96 < return (jboolean) GTK_WIDGET_REALISED((GtkWidget*)wid); --- > return (jboolean) GTK_WIDGET_REALIZED((GtkWidget*)wid);  The method which contains this typo is also spelled wrong so the function is probably never called anyhow.  The next ones are in swt-gtkwidget.c gtk_editable_get_selection_start,   gtk_editable_get_selection_end, gtk_toolbar_set_button_relief,  gtk_signal_connect_swapped diff ./swt-gtkwidget.c ../../library/swt-gtkwidget.c 96c96 < return (jboolean) GTK_WIDGET_REALISED((GtkWidget*)wid); --- > return (jboolean) GTK_WIDGET_REALIZED((GtkWidget*)wid); diff ./swt.c ../../library/swt.c 1178c1178 < return (jint)gtk_editable_get_selection_start((GtkEditable*)editable); --- > // return (jint)gtk_editable_get_selection_start((GtkEditable*)editable); 1184c1184 < return (jint)gtk_editable_get_selection_end((GtkEditable*)editable); --- > // return (jint)gtk_editable_get_selection_end((GtkEditable*)editable); 1405c1405 < gtk_toolbar_set_button_relief((GtkToolbar*)toolbar,  (GtkReliefStyle)relief); --- > // gtk_toolbar_set_button_relief((GtkToolbar*)toolbar,  (GtkReliefStyle)relief); 1763c1763 < rc = (jint)gtk_signal_connect_swapped((gpointer)instance, (const  char*)detailed_signal1, (GCallback)c_handler, (gpointer)data); --- > // rc = (jint)gtk_signal_connect_swapped((gpointer)instance, (const  char*)detailed_signal1, (GCallback)c_handler, (gpointer)data); It comes up afters removing these references. Actually, the ones below are in swt.c (the original bug report says swt- gtkwidget.c) gtk_editable_get_selection_start,   gtk_editable_get_selection_end, gtk_toolbar_set_button_relief,  gtk_signal_connect_swapped Boris to ensure that all bogosity is removed from the C code. gdk_font_full_name_get only exists on the Win32 version of Gtk.  I'll ask  Silenio why he still uses gdk_font (an artifact from 1.2?). Re: bogosities in C.  We all agreed the C will be auto-generated in a few days,  so nobody is wasting their time on this. gtk_editable_get_selection_start, etc: This never happened to any of us. There is a similar bug report where the guy uses a pre-compiled GTK that came  as an rpm with ximian-gnome2.  I don't know if it makes a difference.  How did  you install your gtk2?  (source tarball from gtk.org, or something else?)  We certainly want it to work in the other scenarios... I installed my gtk from source. I use version 2.0.2 on RedHat 7.2. > We certainly want it to work in the other scenarios... easy ... just don't have any unreferenced symbols... > Re: bogosities in C.  We all agreed the C will be auto-generated in a few > days, so nobody is wasting their time on this.  except me :-) If you could just cut out the bogus functions (until you autogen), I won't  have to hack my own version every time I get a drop. Fixed.  Would be curious to see the exact reason why the bug didn't cause grief in our  part of the building - i.e., where does it say whether all symbols get resolved once you loadLibrary vs. one by one as you touch them.  I wonder if it's the  ldd or the jvm that's set up differently. You can use ldd -r to print undefined symbols.  ldd -r < library > On my machine with the original library from the zip file it looks like  this ... [john@localhost x86]$ ldd -r libswt-pi-gtk-2034.so ldd: warning: you do not have execution permission for `./libswt-pi-gtk- 2034.so ' /lib/libNoVersion.so.1 = > /lib/libNoVersion.so.1 (0x4002b000)         libgtk-x11-2.0.so.0 = > /usr/local/lib/libgtk-x11-2.0.so.0 (0x4003c000)         libgdk-x11-2.0.so.0 = > /usr/local/lib/libgdk-x11-2.0.so.0 (0x40231000)         libatk-1.0.so.0 = > /usr/local/lib/libatk-1.0.so.0 (0x40285000)         libgdk_pixbuf-2.0.so.0 = > /usr/local/lib/libgdk_pixbuf-2.0.so.0  (0x4029a 000)         libm.so.6 = > /lib/i686/libm.so.6 (0x402ac000)         libpangox-1.0.so.0 = > /usr/local/lib/libpangox-1.0.so.0 (0x402d0000)         libpangoxft-1.0.so.0 = > /usr/local/lib/libpangoxft-1.0.so.0  (0x402dc000) libpango-1.0.so.0 = > /usr/local/lib/libpango-1.0.so.0 (0x402fa000)         libgobject-2.0.so.0 = > /usr/local/lib/libgobject-2.0.so.0 (0x4032a000)         libgmodule-2.0.so.0 = > /usr/local/lib/libgmodule-2.0.so.0 (0x40361000)         libdl.so.2 = > /lib/libdl.so.2 (0x40365000)         libglib-2.0.so.0 = > /usr/local/lib/libglib-2.0.so.0 (0x4036a000)         libc.so.6 = > /lib/i686/libc.so.6 (0x403cd000)         libXft.so.1 = > /usr/X11R6/lib/libXft.so.1 (0x40508000)         libXrender.so.1 = > /usr/X11R6/lib/libXrender.so.1 (0x40532000)         libXext.so.6 = > /usr/X11R6/lib/libXext.so.6 (0x40537000)         libX11.so.6 = > /usr/X11R6/lib/libX11.so.6 (0x40545000)         libfreetype.so.6 = > /usr/lib/libfreetype.so.6 (0x40624000)         /lib/ld-linux.so.2 = > /lib/ld-linux.so.2 (0x80000000) undefined symbol: gdk_font_full_name_get        (./libswt-pi-gtk-2034.so) undefined symbol: GTK_WIDGET_REALISED   (./libswt-pi-gtk-2034.so) undefined symbol: NewStringUTF  (./libswt-pi-gtk-2034.so) undefined symbol: gtk_signal_connect_swapped    (./libswt-pi-gtk-2034.so) undefined symbol: gtk_editable_get_selection_start (./libswt-pi-gtk-2034.so) undefined symbol: gtk_toolbar_set_button_relief (./libswt-pi-gtk-2034.so) undefined symbol: gtk_editable_get_selection_end        (./libswt-pi-gtk- 2034.so ) The GTK2 build still doesn't launch in Build 20020502.  [jburns@radiohead eclipse] $ ./eclipse -vm ~/vms/jdk1.4/bin/java ~/target java.lang.UnsatisfiedLinkError: /home/jburns/gtkhost/eclipse/plugins/org.eclipse.swt.gtk_1.9.0/os/linux/x86/libswt-pi-gtk-2037.so: libgtk-x11-2.0.so.0: cannot open shared object file: No such file or  directory at java.lang.ClassLoader$NativeLibrary.load(Native Method)  at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1480) at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1388)  at java.lang.Runtime.loadLibrary0(Runtime.java:772) at java.lang.System.loadLibrary(System.java:832)  at org.eclipse.swt.internal.Library.loadLibrary(Library.java:102) at org.eclipse.swt.internal.gtk.OS. < clinit > (OS.java:20)  at org.eclipse.swt.widgets.Display.createDisplay(Display.java:332) at org.eclipse.swt.widgets.Display.create(Display.java:326)  at org.eclipse.swt.graphics.Device. < init > (Device.java:95)  at org.eclipse.swt.widgets.Display. < init > (Display.java:265)  at org.eclipse.swt.widgets.Display. < init > (Display.java:261)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:857) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:162) at org.eclipse.core.launcher.Main.run(Main.java:588)  at org.eclipse.core.launcher.Main.main(Main.java:437) This problem was resolved *after* M5. M5 generally had a lot of very serious problems, and was not ready for real use.  Please try downloading a recent nightly build - the earlier " more stable " builds are just missing many pieces in the gtk implementation. M5 was April 16. This bug was marked fixed April 24. I said I'm using the build from March 5.  Was the fix not included in the 20020502 build? It certainly *should* work in may 02.  Whatever is happening in your situation,  is different from teh original problem reported by John (missing symbols in libgtk*) - it doesn't find libgtk-x11 at all??  Could you post the output of  ldd -r libswt-pi-gtk-2037.so? Yikes. It looks like my GTK2 installation is monkeyed. Most of the responses  to your query come back with " not found " My mistake.
Platform	Customize Perspective: Scrollbar disabled because values disabled Window - > Customize Perspective... - > Action Sets - > Java  == > there are a lot of actions but I can't scroll down *** This bug has been marked as a duplicate of 12984 ***
Platform	Ant: need to include the optional tasks jar (1GHF9IM) The optional tasks supplied with Ant are not being included in the ant support plugin. This is just a mistake, it should be included. NOTES:  JM (7/25/2001 9:39:35 AM) There is a further problem that the optoinal tasks typically require more jars to actually  run.  For example, the < junit > task needs the junit.jar to be on the classpath somewhere.  Ant support contains a mechanism for allowing plugins to register objects to be found by the ant support but use of this requires modification to the tasks.   Investigate the use of fragments for this. PRODUCT VERSION: 0.9 *** This bug has been marked as a duplicate of 3084 ***
JDT	Java Build Path - Some shortcut keys not working. Running build 20011206.  To reproduce: start with a Java project right click on the project select properties select " Java Build Path " select the " Libraries " tab select a library hit alt-r to remove the library  Nothing happens, even though ' R ' is the displayed mnemonic for the " Remove " button. Clicking the button does work as expected. Continuing on:  select the " Order and Export " tab  Note that the " Down " and " Deselect All " buttons have the same displayed  mnemonic of ' D ' . If the " Down " button is disabled, alt-d will activitate  the " Deselect All " button. Otherwise, alt-d activates the " Down " button.  All other shortcut keys for the Java Build Path section of the properties seem to be functioning. In fact, all other shortcut keys for all of the other  sections of the properties seem to be fine. fixed > 11217 ' R ' from remove was also taken in the list title. Verified: Mnemonic for Down: D Mnemonic for Deselect All: E
JDT	Quick fix proposal preview: Bold off by 2 characters F3  create file class A extends Object1 { } - > Object1 is marked as temporary error, Quick Fix. Select ' Change to Object ' , look at the preview: The preview shows changes in bold: It is off by 2 charaters: ' ject { ' is bold, should be ' Object ' .  From debugging I see that the resulting html is correct, bug must be in rendering.  Look stupid, should be fixed. Bug was introduced by the HTML2TextReader's new strategy to handle < P > paragraphs. Easy fix is to use < BR > for proposal previews.  Patch: Index: CUCorrectionProposal.java =================================================================== RCS  file: /home/eclipse/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/corre ction/CUCorrectionProposal.java,v retrieving revision 1.12 diff -u -r1.12 CUCorrectionProposal.java --- CUCorrectionProposal.java 11 Jun 2002 10:58:34 -0000 1.12 +++ CUCorrectionProposal.java 17 Jun 2002 17:04:25 -0000 @@ -83,11 +83,11 @@ EditChange[] changes= change.getTextEditChanges(); for (int i= 0; i < changes.length; i++) {      TextRange range= change.getNewTextRange(changes [i]); -    buf.append( " < p > ... < /p > " ); //$NON-NLS-1$ +    buf.append( " ... < br > " ); //$NON-NLS-1$      appendContent(textBuffer, range, 1, buf); }     if (changes.length > 0) { -    buf.append( " < p > ... < /p > " ); //$NON-NLS-1$ +    buf.append( " ... < br > " ); //$NON-NLS-1$     } } catch(CoreException e) { @@ -103,7 +103,6 @@    int rangeStart= range.getOffset(); int rangeEnd= rangeStart + range.getLength();    for (int i= startLine; i < = endLine; i++) { -   buf.append( " < p > " ); //$NON-NLS-1$     TextRegion lineInfo= buffer.getLineInformation(i); int start= lineInfo.getOffset();     int end= lineInfo.getOffset() + lineInfo.getLength(); @@ -118,7 +117,7 @@      start= rangeEnd; }     buf.append(buffer.getContent(start, end - start)); -   buf.append( " < /p > " ); //$NON-NLS-1$ +   buf.append( " < br > " ); //$NON-NLS-1$    } } We are also investigating a fix in the HTML renderer to avoid similar problems  for XML contributed hovers. If not fixed: Qickfix preview is broken. XML contributed hovers are potentially  broken as well. patch for html rendering Reviewed by Daniel Megert & Dirk Baeumer.
Platform	Minimum size of a view could be improved. Build 20020521 1) Resize a view that is not in a tab folder making it small. The title bar could have a few more pixels.  2) Get a view without the triangle icon and resize it making it narrow. You can see a few chars of the title. Now get a view with the triangle and the X icons  and make it narrow. You will not its title anymore. Veronika, our changes here have broken view resizing. When you have a chance, can we sit down together and go through this? Fixed in 20020529.
Platform	Cancelling install causes and exception stack to be written to the log I cancelled " one-click " update. Ended up with a stack trace in .log. We should  fix this (unless we want lots of service calls on this one). I am guessing the " regular " install works the same way. This smells similar to the previous problems - core needs to ensure that  IStatus message has ERROR as a severity, otherwise error dialog will not show up (but there will be a log entry). Actually both happen .... I press [Cancel] and an error dialog shows up telling me the operation could not complete. [Details > > > ] tells me the user cancelled the operation. So this is really problem 1.  Problem 2 ... I have to explicitly [Cancel] the original install wizard dialog.  Problem 3 ... end up with an entry in the log. I think this is really caused by the fact that the original [Cancel] simply causes CoreException to be thrown, and we cannot tell a [Cancel] from any other legitimate error.  Seems like what is needed is a way for the UI to tell real CoreException from a Cancel. Perhaps could use the plugin-specific code that can be set in  CoreException for this. Eg. IStatus s = coreexc.getStatus(); if (s.getPlugin().equals( " org.eclipse.update.core " ) & & s.getCode()==CANCEL)) {  do the cancel thing } Obviously the above assumes core sets the code and plugin id correctly for  cancel. By the way I think the same behavior exists in the one-click as well as the  regular install so should be fixed in both places. We should create a new exception type called ' InstallAbortedException ' to  separate two different situations. 1) Modify ' install ' method declaration to throw InstallAbortedException ' in  addition to CoreException 2) Modify UI to handle this exception by informing the user that the install  has been aborted (UI can show its own text or simply accept text coming from InstallAbortedException). The key here is that message should be such that does  not indicate abnormal situation. I like this solution better than ' magic ' codes in CoreException because we  should not abuse exteption types for what they were not designed for. An example for this may be java.io package. When a file is not found, a  FileNotFoundException is thrown, not IOException (although FileNotFoundException does extend IOException).   So we can do the same - make InstallAbortedException that extends CoreException. The class itself can serve as a ' magic ' code. UI will have  sometihng like: catch (InstallAbortedException e) {     // inform the user using an information message } catch (CoreException e) { // abnormal situation - show error dialog and make a log entry } Why don't I just cancel the progress monitor ? What I meant was that I do not have to throw an exception, I can just throw it  in core, and when UI comes back, it should check if monitor.isCanceled() I do not believe I close it if everything is ok Because users must be informed what consequences of ' Cancel ' will be. There are  several scenarios, and not all will result in the completely reversed situation. This is particularly important for batch update of features where we  might have installed some features successfully (I know about the other defect). I am not sure on this one. Cancelling the installation is always expensive in  terms of cleanup, so users are typically asked to confirm the cancellation. It seems wrong to me that we silently do a cleanup and return back to the wizard  on ' Cancel ' . Actually I did, I will remove the monitor.done() so UI can do it. I hear your points, unfortunalty, at the time the dialog may show up (are you sure you want to cancel), the rollback already happened... Are you suggesting we MUST implement it, in which case I should call the monitor.confirmCancel() or something like that, if teh answer is Cancel, I rollback without throwing an error, if the answer is " do not cancel, I made a mistake, please continue " I keep going... In which case we need the other kind of Progress monitor we use for verification, the one I can call back There is a org.eclipse.update.core.InstallMonitor we may be able to change a bit no ? Would then be consistent all across UpdateCore and would solve bug 16972 (or at least make it very easy to fix) Actually, I think we can get by without much extra work if you cleanly recover  from ' Cancel ' and just return from ' install ' . The expectation would be:  1) If you detect ' Cancel ' during install, you perform cleanup and do not  configure the new feature 2) You should not call Done anyway because I am calling ' Done ' (I own the  monitor). You should simply move it. 2) When you return from ' install ' method, I check the monitor and  if ' isCanceled ' is true, I move to the ' cancel ' processing that is equivalent  to me receiving the InstallABortedException. 1) Created new class (API) InstallAbortedException 2) Feature#install, Feature#verifyReferences and DefaultInstallHandler throws this exception if the User cancells the install or the verification 3) When Feature#install catches the exception, we perform a cleanup and re-throw the exception 4) UI catches it as regular CoreException 5) UpdateUIPlugin#log(IStatus, boolean) check the severity of the status. If the Status is INFO, then it opens a MessageDialog with the Status message. Still, the user has to close the dialog and then close the Wizard  Version under v20020528H1615_18038 (both UI and CORE) *** Bug 17364 has been marked as a duplicate of this bug. *** Verified in 0529, Cancelling doesn't prompt any dialog and doesn't log anything
JDT	TypeCache duplicated TypeCache exists in two packages. Both used! fixed for 206
JDT	String index out of range in log file Build 20021016  I noticed this stack trace in my .log file today.  I have no idea what I clicked on in the console to cause it, but perhaps the stack trace is enough to track it down: java.lang.StringIndexOutOfBoundsException: String index out of range: 74  at java.lang.String.charAt(String.java(Compiled Code)) at org.eclipse.jdt.internal.debug.ui.actions.OpenOnConsoleTypeAction.parseSelection(OpenOnConsoleTypeAction.java:366) at org.eclipse.jdt.internal.debug.ui.actions.OpenOnConsoleTypeAction.determineSearchParameters(OpenOnConsoleTypeAction.java:255) at org.eclipse.jdt.internal.debug.ui.actions.OpenOnConsoleTypeAction.doOpenType(OpenOnConsoleTypeAction.java:126) at org.eclipse.jdt.internal.debug.ui.actions.OpenOnConsoleTypeAction$1.run(OpenOnConsoleTypeAction.java:106) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java(Compiled Code))  at org.eclipse.jdt.internal.debug.ui.actions.OpenOnConsoleTypeAction.openTypeWithProgress(OpenOnConsoleTypeAction.java:109)  at org.eclipse.jdt.internal.debug.ui.actions.OpenOnConsoleTypeAction.handleEvent(OpenOnConsoleTypeAction.java:393)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1403)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) Double-clicking on the following line in a console will do it:   java.lang.String :4 This action no longer exists.
Platform	[GlobalActions] Rebuild All progress dialog is not parented 0402  - move your Eclipse window off to the side of the screen - Workbench - > Rebuild All - note that the subsequent progress dialog always appears in the center of the screen instead of centered w.r.t. the Eclipse window  This isn't a big deal, but it looked quite strange on my two-monitor Linux  setup. Eclipse 2.1.0 (build 200303272130) on Windows XP:  The dialog seems centred wrt Eclipse window. (Ditto on a Windows Eclipse 2.0, build 200206271827.) Can't test on Linux right now, though, or on a dual-monitor setup. Is this still an issue in 3.2 (some of Stefans work in 3.1 should have fixed this)? No, this appears to be fixed.  Closing report.
JDT	collapsing code in editor It would be really nice to be able to collapse code within matching brackets in  the editor. Other editors such as Homesite and Visual Studio.net support this. Basically  if (true) { doFirstThing()  doSecondThing() doThirdThing() } can collapse down to  if (true) {...} hovering the cursor over the line could show the full block in a tooltip, and  of course there would be need to be toggles to expand/collapse blocks. *** This bug has been marked as a duplicate of 21514 ***
JDT	reorder parameters: incorrect when parameters have more than 1 modifiers package p;  class A { public void m(int i, final boolean b){} } added test case: test19 - will be disabled until this is fixed back to inbox - for proritizing the reason is:  AbstractVariableDeclaration::modifiersSourceStart seems to always be 0 for Arguments see bug#7825 have a fix fixed before 0125
Platform	Cancel on update doesnt interrupt the update process Ive just installed 2.01, tried the ' new updates ' feature under Help and got bored waiting, probably busy server :), so anyhow, I select cancel, but the thing just sits there for 30s until something times out.  Surely cancel should interrupt the update cycle providing immediate termination? exact same thing using Install/Update perspective, FeatureUpdates/Available Updates. ...which is understandable considering it is the exact same code that does the  searching :-). The problem is that remote site connection is part of the search as as of now  it is synchronous i.e. we block until we connect to the site. At any other point of the search/update, we do check the state of the ' Cancel ' button but  not while the connection blocks. There are several other (duplicate) defects that are reporting the same  problem. I will resolve this defect the same way. The related defect is talking about frozen connection, but it is all the same problem.  *** This bug has been marked as a duplicate of 18598 ***
Platform	Recursive ArrayStoreException when internal editor not found Reported by Brian Thomson  org.eclipse.ui.internal.EditorManager.openInternalEditor tries to load an editor, and if an exception occurs it tries to store the Throwable into an array of java.lang.Exceptions. The problem is that org.eclipse.core.internal.runtime.InternalPlatform.run can call the handleException method with either an Exception or a LinkageError.   Since a LinkageError is not an Exception, the attempt to store it in ex[0] generates an ArrayStoreException which is unhandled. final Throwable ex[] = new Exception[1] ; has been changed to: final Throwable ex[] = new Throwable[1] ;
JDT	template pref page: ' esc ' dismissed edit dialog when i don't want it to 1. template pref page 2. open the edit dialog 3. open the ' insert variable ' code assist 4. press esc boom - the whole dialog goes away i expected that only the code assist would *** Bug 10270 has been marked as a duplicate of this bug. *** works in the latests
JDT	Exception Occured while launching I have imported java files from my machine into Eclipse.But when I select  Run/Debug from " Run " I get the following error     ******************************************************************* java.lang.NullPointerException at org.eclipse.jdt.internal.launching.RuntimeClasspathEntry.getLocation (RuntimeClasspathEntry.java:386) at org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate.getClasspath (AbstractJavaLaunchConfigurationDelegate.java:222) at  java.version=1.3.0 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US Command-line arguments: -os win32 -ws win32 -arch x86 -install  file:D:/Sushmita/Software/JavaIDE/Eclipse/eclipse/ org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelega te.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:73) at org.eclipse.debug.internal.core.LaunchConfiguration.launch (LaunchConfiguration.java:136) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$10. run(LaunchConfigurationDialog.java:2299) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) From visuallay inspecting the associated code, it looks like your launch  configuration's classpath may refer to a project that no longer exists in your  workspace, or is closed. Can you verify this? We need to protect against this case:  case PROJECT : IJavaProject pro = (IJavaProject) JavaCore.create(getResource());   try { path = pro.getOutputLocation();  } catch (JavaModelException e) { LaunchingPlugin.log(e);  } Marking as 2.1 candidate As well, we need to check our senders of #getLocation() - null is a possible  return value, and we are not anticipating this in some places. Fixed NPE in RuntimeClasspathEntry, and fixed up senders in  AbstractJavaLaunchConfigurationDelegate and JavaRuntime. Please verify, Darin S. Verified code.
Platform	[Progress] Progress bar doesn't move during refresh (1GF60CS) Suspect progress changes also broke refresh by introducing multiple beginTasks.  NOTES: PRODUCT VERSION:  0.122 Obsolete, this was the old codebase. Will not investigate.
JDT	VariableDeclarationExpression When the initializer list from a " for " loop is examined and it contains a VariableDeclarationExpression, it always only should contain one.  Currently it contains a VariableDeclarationExpression for each variable declared (and not a VariableDeclarationExpression containing a VariableDeclarationFragment for each declaration), see below:  DEBUG (ParseAdapter.java:567) - ForStatement : for (int i=0;int j=0;int k=0;; i++j++k++; i < 10) {System.out.println( " L " );} DEBUG (ParseAdapter.java:545) - Initializer : int i=0; DEBUG (ParseAdapter.java:545) - Initializer : int j=0; DEBUG (ParseAdapter.java:545) - Initializer : int k=0; The top is outputing the ForStatement (via toString()) and the bottom three are the VariableDeclarationExpressions (via toString()).  The original source code for the for loop was:     for (int i=0, j=0, k=0; i < 10 ; i++,j++,k++) {     System.out.println( " L " );    } From the Eclipse JavaDoc:   VariableDeclarationExpression: { Modifier } Type VariableDeclarationFragment          { , VariableDeclarationFragment } Hence, for my example " for " loop above, I would expect a single VariableDeclarationExpression with 3 VariableDeclarationFragments. This appears broke, either the code (my guess) or the JavaDoc.  Please advise.  Take Care, Tim Halloran Carnegie Mellon University I will investigate. I think the for statement should be: { Si ngleVariableDeclaration | VariableDeclarationExpression }  There is clearly something wrong with the initializers of the for statement. Sorry I was wrong. For inits of the for statement should be:  { VariableDeclarationExpression  | { Expression {, Expression }} This means that several local declarations (in the compiler's ast world) have to be converted to one VariableDeclarationExpression and not multiple VariableDeclaration Expression. Set target milestone. Fixed and released in 2.1 stream. Now the local declarations are converted to a single VariableDeclarationExpression, which contains multiple fragments. This is more consistent with the Java grammar. Thanks for the report. Fixed and released in 2.0.1 stream. The Javadoc comment for ForStatement.initializer says: " The list should consist of either a list of so called statement expressions  (JLS2, 14.8), or a list of variable declaration expressions all with the same type. Otherwise, the for statement would have no Java source equivalent. " It should be revised as well: " The list should consist of either a list of so called statement expressions  (JLS2, 14.8), or a single < code > VariableDeclarationExpression < /code > .  Otherwise, the for statement would have no Java source equivalent. " Changed Javadoc comment in 2.0.1 and 2.1 streams. Verified by adding regression test ASTConverterTest.test0357() Test is test0362 in 2.1 stream. Verified. Verified in 2.1 M1
JDT	search: missing interface method reference 204  package p; interface I { void k(); } class C1 implements I{ public void k(){}; } class D{  void h(){ I a= new C1();   a.k(); } } search for references to I::k - none are found, which is incorrect declaraions - 2 (ok) occurrences - 3 (ok) *** This bug has been marked as a duplicate of 5068 *** Bug 5068 is fixed. Added JavaSearchTest.testMethodReference3()
JDT	javadoc comment template with ${cursor} variable is broken Release 2.0.  Create the following template: /**  * ${cursor} *   * @author ${user} */  In the editor, this template is replaced with the following when used: /**  * * * @ author cagatayk * /  Removing the ${cursor} variable fixes the problem. *** This bug has been marked as a duplicate of 15247 ***
JDT	Editor view is left with the file, after the file has been deleted in the Navigators View * Select any java file and open it in the Editor view * Using the file context menu, select " Delete " File gets deleted, but, Editor view is left with the file on display, until it is made active once again, to take necessary steps in deleting it. Platform: HP-UX B 11.11 U 64 bit, PA8500 JAVA: J2RE SE 1.3.1.05 Eclipse: V2.0 pre-release, Stable 20020521 Desktop: CDE 2.1.0 Motif: V2.1.0 When the file is dirty we cannot just remove it since you might loose work. Pls reopen if you have seen this problem when the file was not dirty.
JDT	Extra jdwp requests: getValues(List) Build 20020716  In the eclipse jdi client, in org.eclipse.jdi.internal.ObjectReferenceImpl.getValues(List fields) org.eclipse.jdi.internal.ReferenceTypeImpl.getValues(List fields) org.eclipse.jdi.internal.StackFrameImpl.getValues(List variables) we send a jdwp request for get values even if the list is empty. We should handle this case and return an empty Map.  An other point, in ObjectReferenceImpl.getValues(List fields), fields of the list are sort in two lists, static or instance fields. The list of static fields is passed to ReferenceTypeImpl.getValues(List fields), event if the list is empty. This case can also be handled. Fixed.  Changes in : org.eclipse.jdi.internal.ObjectReferenceImpl#getValues(List fields) org.eclipse.jdi.internal.ReferenceTypeImpl#getValues(List fields) org.eclipse.jdi.internal.StackFrameImpl#getValues(List variables) Oups .. Please Verify Verified.
Platform	Accessibility API does not work for getValue for a shell If you want to use getValue to update the value of the text for a Shell this  does not currently get propogated out even though it does get called. I added the following to the configureShell method in  org.eclipse.jface.dialogs.MessageDialog shell.getAccessible().addAccessibleControlListener(    new AccessibleControlListener() { public void getValue(AccessibleControlEvent e){     String readValue = shell.getText() + message; e.result = readValue; } The method was being hit but when I looked at the Shell text using inspect32 it  was only the visible text on the shell that it found. It appears the change is being looked up but not propagated. It is actually working, but not if you hover over the title bar of the shell. If you hover over the client area of the shell, you will see the new value. Unfortunately, focus is the real problem for your dialogs. The dialog button  gets focus, and the value of the shell is never read. I am looking into this to see if there is anything I can do to get dialogs to work properly. Look at the Detect and Repair Dialog from Word (in help menu). It is a dialog  based on a window and looks a lot like our project delete dialog and does work with JAWS. Deferred to fix pass 1 *** This bug has been marked as a duplicate of 15559 ***
Platform	Exception in the .log file Using F1, I got this exception. I don't have any steps to reproduce as I noticed it too late. I don't  know exactly what I have done to get it, but I thought it might be good to keep a trace of it.  !ENTRY org.eclipse.team.core 2 0 May 22, 2002 12:32:29.401 !MESSAGE setting global  ignore !STACK 0 org.eclipse.team.core.TeamException: renaming at  org.eclipse.team.core.Team.saveIgnoreState(Team.java:444) at  org.eclipse.team.core.Team.shutdown(Team.java:527) at  org.eclipse.team.internal.core.TeamPlugin.shutdown(TeamPlugin.java:74) at  org.eclipse.core.internal.plugins.PluginRegistry$2.run(PluginRegistry.java:274) at  org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802) at  org.eclipse.core.internal.plugins.PluginRegistry$1.visit(PluginRegistry.java:287) at  org.eclipse.core.internal.plugins.PluginRegistry.accept(PluginRegistry.java:51) at  org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins(PluginRegistry.java:290) at  org.eclipse.core.internal.plugins.PluginRegistry.shutdown(PluginRegistry.java:256) at  org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown(InternalPlatform.java:496) at  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at  java.lang.reflect.Method.invoke(Method.java:324) at  org.eclipse.core.internal.boot.InternalBootLoader.shutdown(InternalBootLoader.java:842) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:744) at  org.eclipse.core.boot.BootLoader.run(BootLoader.java:432) at  EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24) It indicates a file system error. We wrote to a temp file, deleted the original, and tried to rename the temp file to the original. It's the rename operation that failed (returned false). I have no idea why that could happen. I've got the same problem running a Runtime-Workbench. *** This bug has been marked as a duplicate of 21005 ***
Platform	Go To - > Resource is missing from the navigate menu The sub-menus Navigate - > Go To and navigator view context - > Go To are almost  the same.  The one different is that Go To - > Resource is found in the navigator  submenu, but not in the top-level " Navigate " menu.  This isn't consistent. *** This bug has been marked as a duplicate of 20273 ***
Platform	characters öäå and £ doesn't work in Java editor on Swedish keyboard On a Swedish keybord the charaters åäö and £ doesnt work. If I type one of theese charaters 9 gibberlish character symbols occur on the screen. This happens on XFree 4.1.0 X server and Redhat 7.2 Claude can you pls try whether you can enter öä from a Suisse keyboard Tried on German keyboard setting with umlauts " o, " a and " u. It's a StyledText  bug. The characters are either swallowed or not displayed. What makes you think it's StyledText's fault? Do the characters display  properly in other places in the u/i? I wrote a StyledText example, where input of these characters does not work. Yes, the umlauts display correctly in text fields. Awesome! Thanks. Assigning to LK to investigate. Can view, cut and paste umlauts fine in 20011206 on RH 7.2, so it's not a  displayString problem. Verified that keyboard entry of umlauts not working on Linux.  Works on Win.   Since StyledText is emulated (no special code for Linux), this is probably a problem below StyledText. StyledText is not getting the correct information during the KeyDown event.   Be low is a test case that hooks KeyDown on a canvas and attempts to display the  character that was typed.  This test will display nothing when you type umlaut characters.  1. Run the case below 2. Type an umlaut character (use the semi-colon, comma, left square bracket  keys on English keyboard).  The character is not displayed. 3. Type a non-umlaut character.  It is displayed.   import org.eclipse.swt.*; import org.eclipse.swt.events.*; import org.eclipse.swt.graphics.*; import org.eclipse.swt.layout.*; import org.eclipse.swt.widgets.*; public class TestGerman {    Shell shell; Canvas c;   int x = 0; int y = 0;  public void close () { if (shell != null & & !shell.isDisposed ())    shell.dispose (); } void createShell () { shell = new Shell ();  GridLayout layout = new GridLayout(); layout.numColumns = 1;  shell.setSize(500, 300); shell.setLayout(layout); } void createCanvas() {  c = new Canvas (shell, SWT.BORDER); GridData spec = new GridData();  spec.horizontalAlignment = spec.FILL; spec.grabExcessHorizontalSpace = true;  spec.verticalAlignment = spec.FILL; spec.grabExcessVerticalSpace = true;  c.setLayoutData(spec); c.addListener(SWT.KeyDown, new Listener() {   public void handleEvent(Event event) { handleKeyDown(event);   } }); } public void handleKeyDown(Event event) {  GC gc = new GC(c); int fontHeight = gc.getFontMetrics().getHeight();  gc.drawString(new String(new char[] {event.character}), x, y);  y = y + fontHeight + 1; } public static void main (String [] args) { TestGerman example = new TestGerman ();  example.open (); example.run ();  example.close (); }  void open () { createShell ();  createCanvas (); shell.open (); } void run () {  Display display = shell.getDisplay (); while (!shell.isDisposed ())   if (!display.readAndDispatch ()) display.sleep (); }  } This is happening below StyledText in the keydown event processing.  See  comments above.  I included a test case.  This is only a problem on Linux. I had a similar problem to the one described, no accentuated characters (like à ã ç é í etc) work, and the double quotes also don't work when trying to use accents on an 105 key international keyboard (perhaps due to the fact that double quotes might be used for accentuating characters, eg " + u = ü) *** Bug 7192 has been marked as a duplicate of this bug. *** This is partially fixed as of yesterday's integration build (Jan. 9).   Characters that we get from the OS (eg.- if the user presses the ö key on a German keyboard) now display fine.  I'm sure that £ will work as well, though I  couldn't test this.  Use of accentuating characters (eg.- " + u = ü) is still to be addressed. This second problem is now fixed by Silenio's XInitThreads change.  This should  be in tomorrow's integration build.
Platform	Eclipse freezes when doing multiselection in an editor with the mouse Build 20021018, GTK2, RH8.0 - start Eclipse - open a file in an eclipse editor (java or other) - multiselect lines with the mouse (set the mouse cursor somewhere at the top of the editor. Move the mouse down while keeping the left button pressed.)  When the multiselection reaches the bottom of the editor, Eclipse freezes. Instead, the editor should scroll down.  Multiselection with the keyboard is fine. *** This bug has been marked as a duplicate of 25162 ***
Platform	Open Cmd-Term Window/GUI Window here In many cases I have the need to open a command prompt window and/or an  explorer window at a location in the navigator. It would be really nice to have a feature where you right click on a directory you have the choice to:  a) open a command/term window there b) open a gui file/explorer window there *** This bug has been marked as a duplicate of 20620 ***
Platform	[osgi] Should we allow library elements to have absolute paths? Build 20020416  Apparently it is possible to use absolute paths in the library attribute of plugin.xml.  For example, < library name= " jar:file:d:/commonutils/somjar.jar!/ " / > Should we allow this?  The documentation says library paths are *always* treated  as relative to the plugin install location.  This is inconsistent because we don't allow relative paths outside the plugin directory, such as: < library name= " file:../somjar.jar!/ " / > I think we agree that using a path that references jar files outside  the plugin install location is in general not a good thing, because it breaks the encapsulation.    I personally wouldn't really need absolute nor relative pathnames for the jar files if it would be possible to setup more than plugin base directory using a path relative (possibly above) the Eclipse install directory.   I will enter a bug report for this problem. Hi,  I jump into it after few discussion in the newsgroup with John. Sorry for my english used here :)  I'm writing a plugin using some other application's jar.  As We cannot know the location of this other app, i made a packaging with an installer (Installshield) who ask for the path of the other application and  then wrote the plugin.xml file. I used t he syntax described ( < library name= " file:c:/somefolder/somjar.jar!/ " / > ) in the plugin.xml file, and this approach is working good. So the problem is that i cannot include the Other Jars with my plugin, and i  the only way for my plugin to work is to use this syntax. If you have any tips, they are welcome ! :)   Cheers, Stephane The intention to specify absolute paths can also be valid when packaging Eclipse for a Linux distribution. I don't want the Eclipse package to include jars already available via their native packages, and I'd prefer to have SWT installed separately to allow client apps running against it. The obvious workaround is making symlinks all over the place, but that's kind of ugly.  Are absolute paths still allowed in Eclipse 3.0? What is the proper syntax for those? *** This bug has been marked as a duplicate of 3074 ***
Platform	[CVS CVSNT] Support :server: connection type to CVS Eclipse supports pserver, ext, and extssh now but it also needs to  support ' server ' which would mean a built-in rsh client. This is needed  because there is no rsh client available that works on Windows (the system one does cr/lf translation which messes up Eclipse's communication with CVS). This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this  bug is important, feel free to reopen it. Memory is fuzzy on this but obviously we worked around it somehow. Ok to close.
Platform	Eclipse freezes during drag & drop operation (1GF7RRH) Create a project P1  Create two files inside the project (f1.txt and f2.txt for example) Drag a file from the linux Explorer over the nav view so that the project is highlighted  Drop the file and notice it is added properly. Now drag another file from the linux explorer over the nav view so that drop point is between f1.txt & f2.txt  Drop the file and voila your workbench is frozen. I'm using the gnome desktop on linux. I think my linux version is 6.2  NOTES: EJP (6/12/01 1:07:57 PM)   This is a SWT problem. We had a PR about it before. KH (6/12/2001 1:34:34 PM)   Moving to SWT for comment. Arch (6/12/01 2:41:50 PM)   Readme it McQ (26/06/2001 3:01:09 PM) -   We should look at this again. PRODUCT VERSION:  0.122 (SDK) We believe this is XInitThreads SWT is implementing its own locking mechanism in order to avoid the call to XInitThreads(). Moving the FIXED.
JDT	java compare uses internal jcore scanner should use api IScanner in JavaStructureCreator, JavaTokenComparator fixed for M6
JDT	Editor tooltip for class files should show full path (1GI74EF) When you hover over the editor tab for a .class file, it just shows you the simple file name. It should show the full path, as for other editors. NOTES: moved to ' active ' PRODUCT VERSION: 129 fixed in build > 20011111
Platform	Workspace corrupted if disk full F2 build  If the workspace cannot be written due to a disk full, then its representation on disk is corrupted and cannot be read.  See bug 19534 the relevant stack traces. Note that the stacks here mainly refer to writing the log.  This is not  critical. The critical one is the error when reading the snapshot.  To achive atomic save, should try writing the snapshot to a new file, and replacing the old file only if it succeeds.  Should consider for F3. Nick, did the workspace still open after getting these errors?  In our snapshot restore, we tolerate corruption in the file and should recover correctly.  We use a special " chunky " file format, that separates a file into  chunks, and discards incomplete chunks.  On each snapshot, we add a chunk to this file. If the last snapshot failed, the final chunk will be corrupt but it  won't affect the rest of the file.  This achieves the same effect as atomicity,  but is more effective in this case because it avoids having to copy over all the old snapshots every time a new snapshot is added.  The exception is logged but  shouldn't affect startup. It wasn't my workspace, it was Kevin's (original reporter of bug 19534). Kevin? DJ and I were trying various disk full scenarios this afternoon.  We were able  to reproduce the same error message in the log file, but the workspace started without any further problems.  We did find a couple of cases of poorly reported  errors, and we will log separate PRs for each of those. Sorry, I did not actually see that the workspace was corrupted. The stacks just seemed to suggest that it was. Can close this unless Kevin says it was really corrupted. My workspace was not corrupt. Closing.
JDT	Hierarchy view restores from maximized state when selecting the inheritance tree root [type hierarchy] Release 2.0. Open a hierarchy view on a type. Maximize the view. Select a type on the tree, then change the selection back to the root. Obvserve that the view is restored from maximization. This happens when open mode is set to single case. In this case clicking on a  type opens the editor. Showing the editor is IMO the right behaviour. If you want to avoid open the editor in single click open mode, you can use  Ctrl+Click to select the type. Tested it under M5 candidate for 2.1
JDT	first click in the debug/launch history preference page results in exception latest after 20020502  !STACK java.lang.ClassNotFoundExcep tion:  org.eclipse.debug.internal.ui.launchConfigurations.preferences.LaunchHistoryPref erencePage  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java(Compiled Code))  at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code)) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:120)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:157) at  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:96)  at org.eclipse.ui.internal.WorkbenchPlugin.createExtension (WorkbenchPlugin.java:109)  at org.eclipse.ui.internal.dialogs.WorkbenchPreferenceNode.createPage (WorkbenchPreferenceNode.java:45)  at org.eclipse.jface.preference.PreferenceDialog.showPage (PreferenceDialog.java:872)  at org.eclipse.jface.preference.PreferenceDialog.selectSavedItem (PreferenceDialog.java:586)  at org.eclipse.jface.preference.PreferenceDialog.createContents (PreferenceDialog.java:252)  at org.eclipse.jface.window.Window.create(Window.java:263) at org.eclipse.ui.internal.OpenPreferencesAction.run (OpenPreferencesAction.java:45) at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883) at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:733)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:162) at org.eclipse.core.launcher.Main.run(Main.java:588)  at org.eclipse.core.launcher.Main.main(Main.java:437) fixed please verify Verified.
Platform	Error dialog with no title, no message Add a version of a CVS project to your workspace then edit a file and try to  commit. The error dialog that is shown has no title, the message is " commit " and and empty reason? This could be improved. Fixed
JDT	Text search for ' ß ' gives results for's ' (1GKQ0XA) Text search for ' ß ' gives results for's ' NOTES: DM (9/28/01 5:03:03 PM) StringMatcher uses toUppercase when " ignore case " is selected.  This leads to errors because String.toUppercase() is not the same as calling toUppercase on each character and then concatenating. In this  particular case ' ß ' is converted to ' SS ' and because the length of the  pattern is 1 all occurrences of's ' are reported.   Because the uppercase conversion is only needed at one place we can simply convert the characters there - no need to convert the  patterns itself. Fixed > 0.202  NE (10/2/01 10:25:18 AM) I'm fixing this up in the Navigator's StringMatcher, but couldn't find a  case where ' ß ' is converted to ' SS ' .  If I just do " ß " .toUpperCase(), it comes back as " ß " .  I also tried a few combinations with other characters. Could you give me a case where it converts to ' SS ' ?  NE (10/02/01 10:27:44 AM) Never mind. " uß " .toUpperCase() - > " USS " NE (10/2/01 10:35:03 AM)  If I'm searching for a real word containing ' ß ' , and I don't care about case,  what's the correct behaviour?  E.g. if I'm searching for ' Strueßel ' , should it match " strueßel " and " STRUESSEL " but not " STRUEßEL " ,  or should it match " strueßel " and " STRUEßEL " but not " STRUESSEL " ?  Please forgive the silly example. NE (10/2/01 12:04:13 PM)  DM says:  The correct uppercase word for " strueßel " would be " STRUESSEL " .   A search engine however should not be that smart. I would expect to find " strueßel " and " STRUEßEL " but not " STRUESSEL " .   Kai-Uwe which is native German confirmed that. NE (10/2/01 12:09:04 PM)  This is good, because that's what String.compareToIgnoreCase does.  It says: * Two characters < code > c1 < /code > and < code > c2 < /code > are considered      * the same, ignoring case if at least one of the following is true: * < ul > < li > The two characters are the same (as compared by the       * < code > == < /code > operator).      * < li > Applying the method {@link java.lang.Character#toUppercase(char)}       * to each character produces the same result. * < li > Applying the method {@link java.lang.Character#toLowercase(char)       * to each character produces the same result. < /ul > Likewise for regionMatches(...) where ignoreCase==true.   StringMatcher should be changed to use compareToIgnoreCase. moved to fixed
JDT	Cannot move a compilation unit 1) JUnit set up 2) select junit.framework.TestCase 3) drag and drop it into junit.extensions 4) pr ess yes to update the references and preview - > Class Cast Exception  java.lang.reflect.InvocationTargetException: java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding  at org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPatter n.reportDeclaration(DeclarationOfReferencedTypesPattern.java:97) at  org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPatter n.matchReportReference(DeclarationOfReferencedTypesPattern.java:78)  at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportReference (MatchLocator.java:1024) at org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching (MatchSet.java:161) at org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching (MatchSet.java:338) at org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching (MatchSet.java:246) at  org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo mpilationUnit(MatchingOpenable.java:295)  at org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches (MatchingOpenable.java:155) at  org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches (MatchLocator.java:1312)  at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches (MatchLocator.java:586) at  org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes (SearchEngine.java:638)  at org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTyp eReferencesIn(ReferenceFinderUtil.java:48) at  org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTyp eReferencesIn(ReferenceFinderUtil.java:40)  at org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTyp esReferencedIn(ReferenceFinderUtil.java:31) at  org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportT oSourcePackageTypes(MoveCuUpdateCreator.java:172)  at org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates (MoveCuUpdateCreator.java:121) at  org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates (MoveCuUpdateCreator.java:112)  at org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createUpda teChange(MoveCuUpdateCreator.java:90) at  org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.createChange (MoveRefactoring.java:222)  at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run (CreateChangeOperation.java:97)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) *** This bug has been marked as a duplicate of 11627 ***
JDT	Bug on " Open type hierarchy " I press " F4 " to open the the type hierarchy and get the following error (only once):   Log: Sat Jan 26 17:47:46 IST 2002 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Sat Jan 26 17:47:46 IST 2002 4 org.eclipse.ui 0 org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.abort(CompilationUnitDeclaration.java:55) at org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(ProblemHandler.java:105) at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.handle(ProblemReporter.java:768) at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.isClassPathCorrect(ProblemReporter.java:1550) at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.checkAndSetImports(CompilationUnitScope.java:155) at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(LookupEnvironment.java:211) at org.eclipse.jdt.internal.compiler.HierarchyResolver.accept(HierarchyResolver.java:158) at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:71) at org.eclipse.jdt.internal.compiler.HierarchyResolver.setFocusType(HierarchyResolver.java:489) at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildForProject(IndexBasedHierarchyBuilder.java:186) at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(IndexBasedHierarchyBuilder.java:280) at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(IndexBasedHierarchyBuilder.java:136) at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute(TypeHierarchy.java:249) at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1094) at org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:52) at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:268) at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:476)  at org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1133)  at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:526) at org.eclipse.jdt.internal.core.SourceType.newTypeHierarchy(SourceType.java:257)  at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefresh(TypeHierarchyLifeCycle.java:144)  at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.access$0(TypeHierarchyLifeCycle.java:129)  at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run(TypeHierarchyLifeCycle.java:105)  at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRunnableContext.java:107)  at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableContext.java:74)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:120) at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshedTypeHierarchy(TypeHierarchyLifeCycle.java:113) at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput(TypeHierarchyViewPart.java:369) at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement(TypeHierarchyViewPart.java:355) at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart(OpenTypeHierarchyUtil.java:134) at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open(OpenTypeHierarchyUtil.java:109) at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open(OpenTypeHierarchyUtil.java:90) at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open(OpenTypeHierarchyUtil.java:84) at org.eclipse.jdt.internal.ui.javaeditor.OpenHierarchyOnSelectionAction.open(OpenHierarchyOnSelectionAction.java:63) at org.eclipse.jdt.internal.ui.javaeditor.OpenHierarchyOnSelectionAction.openOnEmptySelection(OpenHierarchyOnSelectionAction.java:72) at org.eclipse.jdt.internal.ui.javaeditor.OpenOnSelectionAction.run(OpenOnSelectionAction.java:140) at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:844)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:827) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:878)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) ------ The methods of the type appear in the hierarchy window but the type hierarchy itself does not.  Here is the file I'm working on (from jython):  package org.apache.oro.text.regex; /* ====================================================================  * The Apache Software License, Version 1.1 *  * Copyright (c) 2000 The Apache Software Foundation.  All rights * reserved.  * * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions * are met:  * * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer. *  * 2. Redistributions in binary form must reproduce the above copyright *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the *    distribution.  * * 3. The end-user documentation included with the redistribution,  *    if any, must include the following acknowledgment: * " This product includes software developed by the  *        Apache Software Foundation (http://www.apache.org/). " *    Alternately, this acknowledgment may appear in the software itself,  *    if and wherever such third-party acknowledgments normally appear. *  * 4. The names " Apache " and " Apache Software Foundation " , " Jakarta-Oro " *    must not be used to endorse or promote products derived from this *    software without prior written permission. For written  *    permission, please contact apache@apache.org. *  * 5. Products derived from this software may not be called " Apache " *    or " Jakarta-Oro " , nor may " Apache " or " Jakarta-Oro " appear in their   *    name, without prior written permission of the Apache Software Foundation. *  * THIS SOFTWARE IS PROVIDED ``AS IS ' ' AND ANY EXPRESSED OR IMPLIED  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE. * ====================================================================  * * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more * information on the Apache Software Foundation, please see  * < http://www.apache.org/ > .  * * Portions of this software are based upon software originally written   * by Daniel F. Savarese. We appreciate his contributions. */  import java.lang.*; /**  * A class used to signify the occurrence of a syntax error in a * regular expression that is being compiled.  The class is not  * declared final so that it may be subclassed for identifying * more specific pattern comilation errors.  However, at this point  * in time, this package does not subclass MalformedPatternException * for any purpose.  This does not preclude users and third party  * implementors of the interfaces of this package from subclassing it * for their own purposes.   @author < a href= " mailto:dfs@savarese.org " > Daniel F. Savarese < /a > @version $Id: MalformedPatternException.java,v 2.1 2000/10/13 19:53:10 bwarsaw Exp $ * @see PatternCompiler  */ public class MalformedPatternException extends Exception {    /** * Simply calls the corresponding constructor of its superclass.    */ public MalformedPatternException() {     super(); }    /** * Simply calls the corresponding constructor of its superclass.    * < p > * @param message  A message indicating the nature of the parse error.    */ public MalformedPatternException(String message) {     super(message); } } This is the result after pressing F4. test1 is the object that was opened previously in the type hierarchy. Integration build 24Jan02 Hmmm ... this appears to be not a java project.... just a java file in a simple project. I used " add to workspace " .... I added it as a java project and it is ok now. Anyway, it should report a nicer error. Agreed, this exception should be caught in a nicer way. This can also happen in a Java project if java.lang.Object is not on the  classpath. Now catching the exception. User will see an incomplete hierarchy which will  indicate that the classpath should be fixed. *** Bug 8484 has been marked as a duplicate of this bug. ***
JDT	Make hierarchical view responsive to typing the way the Outline view is When typing a new method or deleting a method, the hierarchical view does not  update. It would be nice if it did. This is already a feature requested to JDT/UI. not planned for 2.0 This is implemented for methods in 2.0 but not for the types. For types it is  to expensive to recompute the hierarchy when the CU gets reconciled. Closing
JDT	Revert removes all markers! (1GAJBDK) 1. Open a Java file  2. Add markers (any type except error/problem markers) 3. start editing  4. revert to last saved (via pop-up menu inside editor) == > all markers are removed from ruler   NOTES: EG (3/14/2001 5:37:58 AM)  general marker issue. moving to active issues moved to ' active ' PRODUCT VERSION:  Testpass 0313 - Jabiru 82.00, Eclipse 0.033, SDK 1.2.2_007 wontfix *** Bug 3579 has been marked as a duplicate of this bug. ***
JDT	Compile errors after Extract Interface [refactoring] JUnit setup 1) execute Extract Interface on junit.samples.money.Money 2) select amount() and currency() to be extracted 3) check change references - > compile errors in MoneyBag and MoneyTest a.green b.red - reproduced c.green - fixed
Platform	Core dump drag and droppping from inline text If you open an inline text and then drag the contents Eclipse will crash with a  core when you drop. STEPS 1) Open Eclipse 2) Select something in the resource navigator 3) Select Rename 4) The inline editor will pop up - drag it's contents out of the editor 5) When you drop Eclipse will Core dump Can not reproduce in 0529.  Appears to have been fixed by improvements to use Converter code and improved focus lost notification.
JDT	Suspend on compilation error broken When I have a compilation error, my program suspends, but it claims to be  suspended because of an exception, not a compilation error. When I remove the " suspend on uncaught " option, and just have " suspend on  compilation error " on, it works as expected. There are two problems here: 1. JDIModelPresentation#getThreadText() just picks the first breakpoint that the thread is suspended at and displays the message for it. 2. The Sun VMs that we have (JDK 1.2.2, JDK 1.3.1, JDK 1.4.1 b11) only fire a single exception event when an exception is generated that satisfies multiple  exception requests. The compilation error breakpoint registers a request for java.lang.Error. The uncaught exception registers a request for  java.lang.Throwable. When the java.lang.Error is generated in the VM, it only fires an event in response to the java.lang.Throwable request.  We can't fix problem #2. I've fixed problem #1. Please verify code. Verified.
Platform	[CVS UI] remove dev.eclipse.org connection Remove anonymous dev.eclipse.org connection from Repo view menu Fix released to HEAD
JDT	Cannot change String variable value to null In the debug variables view I cannot change the value of a string to null. It  is changed to the string " null " . Workaround is to do an evaluation. i.e. " x = null; " .  Do not intend to fix for 2.0 Reopenning to mark as dup *** This bug has been marked as a duplicate of 1551 ***
JDT	Refactoring: Pull up should have " select/deselect all " options When selecting multiple methods for pull up, it would be nice to have the  option to select/deselect all. agreed and there should be a label below the list that shows the number of  selected items. it's easily done because the tree always has exactly 1 root node  nevertheless - will add the buttons for M5 label too fixed
Platform	NPE while deleting project 20020124/Win2K  Got internal error while deleting project. The log contains the following: Log: Fri Jan 25 12:11:15 EST 2002 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Fri Jan 25 12:11:15 EST 2002 4 org.eclipse.ui 0 Failed to execute runnable (java.lang.NullPointerException) org.eclipse.swt.SWTException: Failed to execute runnable  (java.lang.NullPointerException) at org.eclipse.swt.SWT.error(SWT.java:1887)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled  Code)) at  org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled  Code)) at  org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.j ava(Compiled Code))  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at  org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:3 35)  at org.eclipse.ui.actions.DeleteResourceAction.run(DeleteResourceAction.java:314)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionCont ributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContribu tionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(Actio nContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(Actio nContributionItem.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at  org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled  Code)) at  org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:827)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:87 8) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) I just had the same error happen.  Also Win2k.  I was deleting three projects  from the packages view: one plug-in project and two fragment projects.  I tried in vain to reproduce it.  I activated the deletion with the " Del " key, and I  choose to delete contents when prompted.  My stack trace is similar but not identical, so I will create a separate attachment. Could not reproduce it either. The stack traces are useless since the real NPE  was wrapped by SWT and was not printed. Workbench.handleExceptionInEventLoop has being changed to print SWT nested exception.  Please reopen this PR with the NPE stack trace if/when it happens again.
Platform	InternalPlatform.assertInitialized does a Policy.bind Build 20020610  InternalPlatform.assertInitialized always calls Policy.bind. This costs at least a dictionary lookup.  Among other places, InternalPlatform.assertInitialized is called by getAdapterManager(), which is called quite often.  Recommend calling Policy.bind only if needed. Fix for 2.0 Fixed and released.
JDT	Packages view from Java Browsing should have all actions from the Packages view in the Java Persp. The packages view in the java browsing perspective does not have " all " actions  that the packages view in the java perspective has. IE, the " Open Type  Hierarchy " does not exist in the first one. work in progress Fixed.
Platform	Old error tasks appear after crash 20020411  I had imported a selfhosting set of projects and had built to an error free state.  I worked for about 3.5 hours Eclipse crashed with the old " move memory " Came back into eclipse and had all the error tasks from before the first build  (eg Error Missing required Java project: org.apache.xerces. org.eclipse.debug.core   Build path)  which had resulted from bring projects in from the repository and then adding the binary projects to complete the workspace).  I did not expect to see the error tasks. Launching a debug target with " build if needed " on, did not result in a build  and the eclipse target was successfully launched. A full build cleanup the issue. Do you think that its possible that less than 100 workspace operations were  done between the time that you had the error-free state and when you crashed? (by " workspace operations " I mean top-level operations, do not include nested  operations) I believe that the snapshot level is currently set at 100 operations which  would then write out the new markers.  Hmm...is this a question to see exactly how much work you were actually doing? :-) I guess it is possible now that the debugger is not doing everything as a  workspace runnable. I was doing a pretty heavy morning of development edit/save/build/debug? I wasn't counting ;-) Seems that if I had not reached the magic number the number is set way too high if it takes 3+ hours to reach. If you haven't shutdown your workspace since, then please see if there are any  *.snap files in your .metadata directory. If you have some then it would be good to get a copy of your workspace. (don't  shut down first!) Note if you have shutdown ok then those files will have been deleted. Sorry too late...now I am really jumpy about losing things so I reconfigured  all my prefs etc and shutdown to ensure I would not have to do it again. Could have been possible that the crash occurred between the time that the  original markers were deleted, and the next workspace snapshot happened. Snapshots are now also time based (as well as operation based) and this is  less likely to occurr. There's not really anything else we can do about it...we don't want to  snapshot everytime we make a change in the workspace.
Platform	gp - Trap in swt-win32-2034.dll NRCRASH Tester received the following trap.  Problem is not recreatable.  Steps that  caused the problem are described after trap information, however, steps are specific to IBM WSAD.  ------------------------ javaw.exe The instruction at " 0x22df5923 " referenced memory at " 0x000f4000 " could not be  read. Exception code: C0000005 ACCESS_VIOLATION Fault address:  22DF5923 01:00024923 D:\V5Builds\pkg0417_0754\eclipse\plugins\org.eclipse.swt\os\win32\x86\swt-win32- 2034.dll Registers: EAX:000F404C EBX:00235910 ECX:00000013 EDX:00000000 ESI:000F4000 EDI:0006F370 CS:EIP:001B:22DF5923 SS:ESP:0023:0006F2DC  EBP:0006F2E4 DS:0023  ES:0023  FS:0038  GS:0000 Flags:00010206  Wed Apr 17 20:08:49 2002 J2RE 1.3.0 IBM build cn130-20020124 D:\V5Builds\pkg0417_0754\eclipse\jre\bin\javaw.exe -classpath D:\V5Builds\pkg0417_0754\eclipse\startup.jar org.eclipse.core.launcher.Main  -application org.eclipse.ui.workbench -ws win32 -endsplash D:\V5Builds\pkg0417_0754\eclipse\eclipse.exe -endsplash 2622010   System Properties ----------------- Java Home Dir: D:\V5Builds\pkg0417_0754\eclipse\jre Java DLL Dir: D:\V5Builds\pkg0417_0754\eclipse\jre\bin Sys Classpath: D:\V5Builds\pkg0417_0754\eclipse\jre\lib\rt.jar;D:\V5Builds\pkg0417_0754\eclipse \jre\lib\i18n.jar;D:\V5Builds\pkg0417_0754\eclipse\jre\classes User Args:  -Djava.class.path=D:\CMVC95\CMVC\EXE\cmvc.jar; -Djava.class.path=D:\V5Builds\pkg0417_0754\eclipse\startup.jar   Current Thread Details ---------------------- " main " (TID:0x8e87e0, sys_thread_t:0x235ae8, state:R, native ID:0x1154)  prio=5 at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)  at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:77 7)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse .core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.Main.main(Main.java:390)    ----- Native Stack ----- Address     Frame  0x22df5923  0x0006f2e4  0x0001:0x00024923 D:\V5Builds\pkg0417_0754\eclipse\plugins\org.eclipse.swt\os\win32\x86\swt-win32- 2034.dll 0x22dd5445  0x0006f3bc   Java_org_eclipse_swt_internal_win32_OS_MoveMemoryW__Lorg_eclipse_swt_internal_wi n32_NMTTDISPINFO_2II+0x38  0x26c85e86  0x00000000  0x0000:0x00000000 -------------------------------------------------------------------------   Operating Environment --------------------- error getting host name OS Level  : Windows_NT Processors - Architecture : x86 Family 6 Model 11 Stepping 1, GenuineIntel  How Many : 1 Memory Usage:   PageFaultCount:                      43851 Working Set Size:                151277568  Peak Working Set Size:           151293952 Quota Paged Pool Usage:              67328  Quota Peak Paged Pool Usage:         74468 Quota Non-Paged Pool Usage:          32296  Quota Peak Non-Paged Pool Usage:     33244 Pagefile Usage:                  151986176  Peak Pagefile Usage:             151986176 Application Environment ----------------------- Environment Variables - ALLUSERSPROFILE=C:\Documents and Settings\All Users APPDATA=C:\Documents and Settings\endres\Application Data CLASSPATH=D:\CMVC95\CMVC\EXE\cmvc.jar; CommonProgramFiles=C:\Program Files\Common Files COMPUTERNAME=ENDREST23 ComSpec=C:\WINNT\system32\cmd.exe DB2INSTANCE=DB2 DB2TEMPDIR=D:\db272 Help=D:\CMVC95\CMVC\EXE; HOMEDRIVE=C: HOMEPATH=\ ICM_FOLDER=Information Catalog Manager IMNINST=help IMNINSTSRV=D:\IBM\IMNNQ INCLUDE=D:\db272\INCLUDE;D:\db272\TEMPLATES\INCLUDE JAVA_HOME=d:\jdk1.3.1 LOGONSERVER=\\ENDREST23 MDIS_PROFILE=D:\db272\METADATA\PROFILES NLSPath=D:\CMVC95\CMVC\EXE\NLS\%N; NUMBER_OF_PROCESSORS=1 OS=Windows_NT Os2LibPath=C:\WINNT\system32\os2\dll; Path=C:\WINNT\system32;C:\WINNT;C:\WINNT\System32\Wbem;C:\Program Files\IBM\Trace Facility;C:\Program Files\Personal  Communications;D:\IBM\IMNNQ;D:\db272\BIN;D:\db272\FUNCTION;D:\db272\SAMPLES\REPL ;D:\db272\HELP;C:\PROGRA~1\TCL\bin;D:\CMVC95\CMVC\EXE;D:\V50218w\eclipse\jre\bin ;d:\utilities; PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH PCOMM_Root=C:\Program Files\Personal Communications PROCESSOR_ARCHITECTURE=x86 PROCESSOR_IDENTIFIER=x86 Family 6 Model 11 Stepping 1, GenuineIntel PROCESSOR_LEVEL=6 PROCESSOR_REVISION=0b01 ProgramFiles=C:\Program Files SystemDrive=C: SystemRoot=C:\WINNT TEMP=C:\DOCUME~1\endres\LOCALS~1\Temp TMP=C:\DOCUME~1\endres\LOCALS~1\Temp USERDOMAIN=ENDREST23 USERNAME=endres USERPROFILE=C:\Documents and Settings\endres VWSPATH=D:\db272 VWS_FOLDER=IBM DB2 VWS_LOGGING=D:\db272\LOGGING VWS_TEMPLATES=D:\db272\TEMPLATES windir=C:\WINNT IBM_JAVA_COMMAND_LINE=D:\V5Builds\pkg0417_0754\eclipse\jre\bin\javaw.exe -classpath D:\V5Builds\pkg0417_0754\eclipse\startup.jar  org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 -endsplash D:\V5Builds\pkg0417_0754\eclipse\eclipse.exe -endsplash 2622010  JAVA_MAIN_VM=1901724136 Loaded Modules (sizes in bytes) --------------------------------- 0x00400000 (0x5000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\javaw.exe 0x77f80000 (0x7a000) C:\WINNT\System32\ntdll.dll 0x77db0000 (0x5a000) C:\WINNT\system32\ADVAPI32.dll 0x77e80000 (0xb5000) C:\WINNT\system32\KERNEL32.DLL 0x77d40000 (0x70000) C:\WINNT\system32\RPCRT4.DLL 0x78000000 (0x46000) C:\WINNT\system32\MSVCRT.dll 0x714f0000 (0xf4000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\classic\jvm.dll 0x714a0000 (0x5000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\xhpi.dll 0x70740000 (0xa000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\hpi.dll 0x77570000 (0x30000) C:\WINNT\System32\WINMM.dll 0x77e10000 (0x64000) C:\WINNT\system32\USER32.DLL 0x77f40000 (0x3c000) C:\WINNT\system32\GDI32.DLL 0x707c0000 (0x2c000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\java.dll 0x714c0000 (0x10000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\zip.dll 0x708a0000 (0x15d000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\jitc.dll 0x22cb0000 (0x7000) D:\V5Builds\pkg0417_0754\eclipse\plugins\org.eclipse.core.resources\os\win32\cor e_2_0_5.dll 0x22dd0000 (0x44000)  D:\V5Builds\pkg0417_0754\eclipse\plugins\org.eclipse.swt\os\win32\x86\swt-win32- 2034.dll 0x77a50000 (0xf5000) C:\WINNT\system32\ole32.dll 0x77b50000 (0x89000) C:\WINNT\system32\COMCTL32.dll 0x76b30000 (0x3e000) C:\WINNT\system32\comdlg32.dll 0x77c70000 (0x4a000) C:\WINNT\system32\SHLWAPI.DLL 0x69800000 (0x242000) C:\WINNT\system32\SHELL32.DLL 0x779b0000 (0x95000) C:\WINNT\system32\OLEAUT32.dll 0x75e60000 (0x1a000) C:\WINNT\System32\IMM32.dll 0x69640000 (0x1f000) C:\WINNT\System32\oleacc.dll 0x23ce0000 (0xc000) C:\WINNT\system32\LogAgent.dll 0x23cf0000 (0x8000) C:\WINNT\System32\rabnd.dll 0x75030000 (0x14000) C:\WINNT\System32\WS2_32.dll 0x75020000 (0x8000) C:\WINNT\System32\WS2HELP.DLL 0x23d00000 (0x9000) C:\WINNT\System32\raclco.dll 0x23d10000 (0x8000) C:\WINNT\System32\racls.dll 0x23d20000 (0xd000) C:\WINNT\System32\raclsm.dll 0x23d30000 (0x7000) C:\WINNT\System32\racldt.dll 0x78280000 (0xc000) C:\WINNT\System32\rnr20.dll 0x77980000 (0x24000) C:\WINNT\System32\DNSAPI.DLL 0x75050000 (0x8000) C:\WINNT\System32\WSOCK32.DLL 0x777e0000 (0x8000) C:\WINNT\System32\winrnr.dll 0x77950000 (0x29000) C:\WINNT\system32\WLDAP32.DLL 0x777f0000 (0x5000) C:\WINNT\System32\rasadhlp.dll 0x77830000 (0xe000) C:\WINNT\System32\RTUTILS.DLL 0x24430000 (0x18000) C:\WINNT\System32\hclsock5.dll 0x75090000 (0x10000) C:\WINNT\system32\MPR.dll 0x74fd0000 (0x1d000) C:\WINNT\system32\msafd.dll 0x77340000 (0x13000) C:\WINNT\System32\IPHLPAPI.DLL 0x77520000 (0x5000) C:\WINNT\System32\ICMP.DLL 0x77320000 (0x17000) C:\WINNT\System32\MPRAPI.DLL 0x75150000 (0xf000) C:\WINNT\System32\SAMLIB.DLL 0x75170000 (0x4f000) C:\WINNT\System32\NETAPI32.DLL 0x77be0000 (0xf000) C:\WINNT\System32\SECUR32.DLL 0x751c0000 (0x6000) C:\WINNT\System32\NETRAP.DLL 0x773b0000 (0x2e000) C:\WINNT\System32\ACTIVEDS.DLL 0x77380000 (0x22000) C:\WINNT\System32\ADSLDPC.DLL 0x77880000 (0x8d000) C:\WINNT\System32\SETUPAPI.DLL 0x77c10000 (0x5d000) C:\WINNT\System32\USERENV.DLL 0x774e0000 (0x32000) C:\WINNT\System32\RASAPI32.DLL 0x774c0000 (0x11000) C:\WINNT\System32\RASMAN.DLL 0x77530000 (0x22000) C:\WINNT\System32\TAPI32.DLL 0x77360000 (0x19000) C:\WINNT\System32\DHCPCSVC.DLL 0x691d0000 (0x85000) C:\WINNT\System32\CLBCATQ.DLL 0x75010000 (0x7000) C:\WINNT\System32\wshtcpip.dll 0x71280000 (0x9000) D:\V5Builds\pkg0417_0754\eclipse\jre\bin\net.dll 0x6b2c0000 (0x5000) C:\WINNT\System32\msimg32.dll 0x26500000 (0xb000) D:\sametime\ACTIVMON.dll 0x270f0000 (0x111000) C:\WINNT\System32\shdocvw.dll 0x76c00000 (0x74000) C:\WINNT\system32\WININET.DLL 0x77840000 (0x3c000) C:\WINNT\System32\cscui.dll 0x770c0000 (0x23000) C:\WINNT\System32\CSCDLL.DLL 0x76e10000 (0xc7000) C:\WINNT\System32\BROWSEUI.dll 0x76710000 (0x9000) C:\WINNT\System32\LINKINFO.DLL 0x76fa0000 (0xf000) C:\WINNT\System32\ntshrui.dll 0x773e0000 (0x12000) C:\WINNT\System32\ATL.DLL 0x75160000 (0xc000) C:\WINNT\System32\ntlanman.dll 0x75210000 (0x15000) C:\WINNT\System32\NETUI0.DLL 0x751d0000 (0x38000) C:\WINNT\System32\NETUI1.DLL 0x76df0000 (0x11000) C:\WINNT\System32\mydocs.dll 0x76d90000 (0x53000) C:\WINNT\System32\shdoclc.dll 0x275a0000 (0x24000)  D:\V5Builds\pkg0417_0754\eclipse\plugins\com.ibm.etools.rdblib\loaddrivers.dll 0x77920000 (0x22000) C:\WINNT\system32\IMAGEHLP.DLL 0x72a00000 (0x2d000) C:\WINNT\system32\DBGHELP.dll 0x690a0000 (0xb000) C:\WINNT\System32\PSAPI.DLL   Java Threads ------------ " TimerQueue " (TID:0x21cc0e8, sys_thread_t:0x27cd2400, state:CW, native  ID:0xf34) prio=5 at java.lang.Object.wait(Native Method) EXCEPTION IN JAVACORE DUMP - ABORTING Here's what was testing in WSAD using an M5-based build: 1. created a web project and EAR 2. deleted the web project 3. opened the application.xml editor 4. tabbed to Modules page 5. selected the module that represented the deleted web project These types of crashes have gone away since we started to use  -DMCBS flag on  the invocation of the eclipse.exe. Yipes - you mean -DMBCS (Define Multi Byte Characer System).  In the latest,  this flag should no longer be necessary. Can't recreate it.  Feel free to reopen this PR if it happens again.
Platform	[DND] Drag & Drop holds onto file during operation Build: 20020519  If you overwrite a file in Eclipse using a drag & drop operation, Eclipse holds  onto the file in the OS until autobuild completes the build.  On long builds this deadlocks the source navigator (blech!).  To reproduce this bug: 1. New workspace 2. Import org.apache.ant as a binary project using the plugin import wizard 3. Import all other plugins as source projects using the plugin import wizard 4. Copy the .classpath file for the org.eclipse.core.runtime plugin to an offshore location. 5. Edit the offshore version of the .classpath file in the OS to no longer have a source directory. 6. Drag the offshore version from the Windows Explorer into the org.eclipse.core.runtime plugin. 7. At the prompt click Yes to overwrite the file.  A long build will begin, meanwhile the Windows Explorer will have locked up.  Are we holding onto the file during the build? Should ensure we close all OS files before finishing the workspace operation. Windows Explorer also hangs when not overwriting an existing file. It does not hang when importing a file using clipboard copy/paste which is executing the same import code as DND import. This problem must be related to  drag and drop and not to the actual import. The problem was that the import operation was blocking the drop listener.  Windows Explorer was waiting for the drop operation to finish. This can take a  long time when the import triggers a build. The fix is to run the import operation asynchronously. Great!
Platform	Moving project content dialog confusing (1GEVF58) A few different things which are confusing:....   - create project AAA - right-click to bring up the context menu and select Move  - " Copy of AAA " is the recommended new name  - make the name " AAA " - NOTE it says that a project already exists  - de-select the " Use default location " checkbox  - NOTE that the error message goes away even though you haven't    changed the name of the project. - NOTE that the text box is empty but the OK button is active  - click OK - you get a message saying that the project couldn't be moved (this is ok)   - right-click on the project and select Move - make the name " AAA " - NOTE it says that the project already exists  - NOTE the default location button is not checked - NOTE the location in the text box is the default location   - click on the " Use default location " check box  - NOTE the error message goes away - hit OK  - you get an error message because you tried to move to the same place that you were   Moral of this long story is that you seem to get into a weird state if you try to move a project's contents to a location which is an  empty string. NOTES: PRODUCT VERSION:  0.119 JRE on Win98 You can no longer rename in a move in 2.0 - a move only changes the location Marking closed
Platform	Delete key does not trigger the " Open for Edit " dialog When a file is under version control and is read-only, starting to type in the editor should always  trigger the " Open for Edit " dialog. However, this does not work when you press the " delete key " inside the editor. It seems to work for all other relevant keys (including " backspace " !).  I have only tested this behaviour using the " Perforce Team Provider " (vers. 0.0.8). But I think it  is likely to be a bug in Eclipse rather than in this specific plug-in. *** This bug has been marked as a duplicate of 21477 ***
Platform	Search query not shown in a browser is search started from Eclipse When performing help search using eclipse search dialog, the help viewer  displays the results, and the query field is shown empty.  It should show the query for which the search has just been performed. Fixed, should be in builds after 20020227
JDT	DCR: generate constructor action [code manipulation] In the outline view, I can select some fields and choose ' Generate Getter and  Setter ' .  I would like to be able to select some fields and choose ' Generate  Constructor ' .  The helper should create a new constructor which takes arguments  of the same type and name as the fields that I selected, and assigns them to the fields.  I find myself writing this sequence by hand very frequently. e.g. tons of constructors look like: public Point (int x, int y) { this.x = x;  this.y = y; }  (20020215 build) good suggestion but can't commit for 2.0 [code generation]  Consider for 2.1 [code manipulation] Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state. *** Bug 39360 has been marked as a duplicate of this bug. *** Reopening. Function is on M2 plan. *** This bug has been marked as a duplicate of 39188 ***
Platform	Opening MultiPageEditorPart throws NPE After the fix was applied to fix bug 12996, subclasses of MultiPageEditor part  will throw an exception when they are opened. The NPE occurs in the isDirty method and I think it happens because the isDirty  method is called before the editor has been created. *** This bug has been marked as a duplicate of 13749 ***
JDT	[navigation] Back and forward buttons not functioning as expected I have repeatly observed the following behaviour in build 200209171408.  I select the file containing class C in the JDT package explorer, thereby displaying the file in the editor.  I edit this file.  I then display a  different file in the editor, where this file has a reference to class C. I  select the name " C " within this file, and use the context menu to open its  declaration, which causes the file containing C to again be displayed in the editor, with the name " C " highlighted within the " class C " declaration.  I then  press the back button.  This unexpectedly causes the cursor to be positioned at the point within C's file where I had made the edit.  It is only after I press  the back button again that I am returned to the other file.
JDT	Qlfd. vs. unqlfd. Name from IField.getTypeSignature IField.getTypeSignature is returning different results for me, depending on if  I use it on a binary or source type. For source types, it returns e.g. " QObject; " where for binary types it would return " Qjava.lang.Object; " (which is what I would prefer). To reproduce, create a package called " pckg " and a class called Test in your  runtime workspace: package pckg; public class Test { Object value; } E.g. in an editor part's setInput insert the following statements  IFile file = ((IFileEditorInput)input).getFile(); IProject project = file.getProject(); IJavaProject jp = JavaCore.create(project); try {  org.eclipse.jdt.core.IType tp = jp.findType( " pckg.Test " );  org.eclipse.jdt.core.IField[] fields = tp.getFields();  String signature = fields[0] .getTypeSignature(); } catch (JavaModelException e) { }  The string signature should be " QObject; " . Now go and rename the package to  pckg2 and you will see that signature contains " Qjava.lang.Object; " .  I am using build 200206271827. Thanks for your help! getTypeSignature doesn't resolve names. The returned info is as it is found in  the java element. So for binary types, this info is already resolved (in the class file) but for source types, it is not (unless the field is specified as: java.lang.Object field;) To resolve this name, use IType.resolveType(String).  Ok to close? Thanks for the explanation. OK to close.  Maybe the documentation could be improved on. Reopening to mark as WORKSFORME. Works as designed.
JDT	Add: Add Method Breakpoint to the Debug menu The action is currently only available from the Context menu.  The action should be generalized so that it also works on Text selections. This means when the selection is inside a method, use this method as the breakpoint  target. JDT UI is currently undertaking an effort to make more actions available from text selections. I am not sure if we want to be consistent here and add the AddWatchpoint as  well? Darin, can you verify the current changes and then we can open a seperate PR  for the add watchpoint if required. Please verify. Verified
JDT	DCR: Single-click method in Hierarchy view (1GE5HEO) I would like to have the single-click behavior of the Outline view in the Class Hierarchy view.  I find that double-click is too much work < g > . It is also confusing to have to double-click to  force the viewer to scroll - it seems like an overly-large operation for such a simple thing. Please scroll to the method on single-click.  NOTES: moved to ' active ' PRODUCT VERSION:  109 there is now single click when the clicked element is already open in an editor. this is consistent with the workbench UI.
JDT	Type Hierarchy does not update when class added (1GII73E) If I am showing the TypeHierarchy for an interface and I add another class to the interface I have to close the TypeHierarchy view and reopen it. STEPS  1) Open the TypeHierarchyView on an interface 2) Create a class that implements that interface  3) The interface is not updated and must be closed and reopened to refresh NOTES: EG (17.08.2001 10:27:24) suspect that the UI isn't getting the proper hierarchy deltas.  MA pls confirm MA (20.08.2001 12:54:34)  reproducable: 1. Create interface XY, open it in the Type Hierarchy  2. Create a class A, not yet implementing the interface. 3. Open in editor and edit to ' implements XY ' .  4. The type hierarchy is not updated. No hierarchyChanged is invoked. 5. Now add a new package x.  6. The type hierarchy is now correctly updated. Moving to jcore  JBL (9/10/2001 6:04:20 PM) Reproduced and fixed JDT CORE to send a hierachyChanged event in the above case  (released in SNZ's HEAD stream).  However symptoms are still there since the UI calls refresh() on the hierarchy before the end of the resource delta processing. As a result, the .java file is not reindexed yet, and A  doesn't appear as a potential subtype of XY.  Moving back to JDTUI. EG (18.09.2001 18:13:46)  MA is there a way to do this cleanly or is this a problem related to the order listener notification?  MA (28.09.2001 12:36:52) We need to solve the problem of the order of IElementChangedListeners. The problem is that I have to listen to hierarchy changes (as ITypeHierarchyChangedListener) and  as well to method changes in the types contained in the hierarchy (- > IElementChangedListener)  - > I need the hierarchy to be up to date when the IElementChangedListener is called   if I want to find out if methods have to be added / removed from the hierarchy view. - > The ITypeHierarchyChangedListener has to be a invoked before all IElementChangedListener   What could be done: - we could make the TypeHierarchy- IElementChangedListener a first class IElementChangedListener. It is guaranteed to    be invoked before all (client-) IElementChangedListeners. - it must be guaranteed that whenever a type hierarchy changed, also a IElementChangedListener will be there.   Another approach could be to give more information to the ITypeHierarchyChangedListeners. They could contain the IElementChangedListener delta as an argument.  But then, In my case, I would also need to also be informed if a type in the hierarchy changed (even if the hierarchy stayed the same) PRODUCT VERSION: 0.9 typehierarchy.refresh is now posted. workaround to live with the current jcore situation. ElemenetChangedListener manually added behind type hierarchy listener. in 11025
Platform	launch configurations not crash proof Launch configuration indicies are persisted as files on shutdown, and restored  on startup. However, the index is not crash proof, and if the debug plug-in is not loaded when lanuch files are added to the workspace, the launch manager  will not fi nd them.  The launch manager needs to search for .launch files on startup. Propose to save .launch index each time a config is saved. This will make the  index up to date all the time. Also, must register as a save participant, in order to receive resource deltas  that occurred while the debug plug-in was sleeping. This way, if a .launch file is added/removed while the debug plug-in was not loaded, it will hear about the  addition/removal after the fact, and update the index. Updated lanuch mananger to persist indicies each time a config is added/removed Fixed. The debug plug-in now uses the ISaveParticipant mechanism to receive any  resource deltas that occurred while it was sleeping. It also has a mechanism for re-building launch config indexes in the event that a resource delta is not  availabe. Filed bug against core that effects our efficiency (bug# 8698). However, since  searching a self-hosting workspace only took 310ms, I have released the fix. Please verify. Verified.
Platform	Unable to update nested feature child Win2K, 20020602-F2  Running modified Alphabet Soup step P. Instead of updating Alphabet Soup, I went to Eclipse update site, and selected  the 0531 version of the Platform SDK feature, and clicked [Update] . Downloaded,  seemed like it completed the install (file cope) then popped up error dialog with message " Error while updating the old feature version " Log contains the same message but no stack trace.  !ENTRY org.eclipse.update.ui 4 0 Jun 03, 2002 12:36:47.164 !MESSAGE Error while updating the old feature version When I restarted, I was offered the Platform SDK version as a change. I  accepted it. Was offered to restart ... OK. Eclipse restarts and shows the new feature as configured. The original nested  feature now shows warnings. Problem 1: we did not warn the user that the update was going to place him in an  ambiguous state. Because there were no hard prereqs on this feature we allowed the update.  Problem 2: we failed the update. Not sure why (need to investigate). On restart we correctly picked up the update. Disabled the update, restart .... back to happy state. Enabled the update, restart .... bask to ambiguous state. The history entry corresponding to the failed install shows we failed to disable  the child feature (which is correct). However in this scenario we should probably eat the error/ not check? Question: why did we not fail on delta  processing for the same reason? Configuration=Jun 3, 2002 12:40:09 PM Current configuration=false Date=Mon Jun 03 12:40:09 EDT 2002 Target=org.eclipse.platform.source_2.0.0 Action=Disabled Status=Failure Date=Mon Jun 03 12:40:09 EDT 2002 Target=org.eclipse.platform.source_2.0.0.200205311203 Action=Enabled Status=Success *** Bug 18802 has been marked as a duplicate of this bug. *** F3 candidate in 0611
JDT	VerifyError when running app PRODUCT VERSION: 203 DESCRIPTION: I did a copy to clipboard operation in the SwtStyledTextUseCase when I got the exception shown below.   java.lang.VerifyError: (class: org/eclipse/swt/custom/StyledText$RTFWriter, method: write signature: (Ljava/lang/String;II)V) Inconsistent stack height 1 ! = 0 at org.eclipse.swt.custom.StyledText.copy(StyledText.java:1169)  at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:4613) at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4297)  at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:4267) at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:3989)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:645)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1359) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1160)  at org.eclipse.swt.examples.exampleframework.SwtExample.run (SwtExample.java:186)  at org.eclipse.swt.examples.tests.SwtStyledTextUseCase.main (SwtStyledTextUseCase.java:631) Exception in thread " main " NOTES: The bytecodes for the guilty method are: Method void write(java.lang.String, int, int) 0 iload_2   = > stack height = 1    1 istore 4    = > stack height = 0    3 goto 41   = > stack height = 0    6 aload_1   = > stack height = 1    7 iload 4   = > stack height = 2    9 invokevirtual #224 < Method char charAt(int) > = > stack height = 1 12 istore 5   = > stack height = 0   14 iload 5   = > stack height = 1   16 bipush 125   = > stack height = 2   18 if_icmpeq 47   = > stack height = 0   21 iload 5   = > stack height = 1   23 bipush 123   = > stack height = 2   25 if_icmpeq 47   = > stack height = 0   28 iload 5   = > stack height = 1   30 bipush 92   = > stack height = 2   32 if_icmpne 38 = > stack height = 0   35 goto 47   = > stack height = 0   38 iinc 4 1   = > stack height = 0   41 iload 4   = > stack height = 1   43 iload_3   = > stack height = 2   44 if_icmplt 6   = > stack height = 0   47 iload 4   = > stack height = 1   49 iload_3   = > stack height = 2   50 if_icmpne 66   = > stack height = 0   53 aload_0   = > stack height = 1   54 aload_1   = > stack height = 2   55 iload_2   = > stack height = 3   56 iload_3   = > stack height = 4   57 invokevirtual #122 < Method java.lang.String substring(int, int) > = > stack height = 2   60 invokevirtual #63 < Method void write(java.lang.String) > = > stack height = 0   63 goto 154   = > stack height = 0   66 iload_3   = > stack height = 1   67 iload_2   = > stack height = 2   68 isub   = > stack height = 1   69 newarray char   = > stack height = 1   71 astore 5   = > stack height = 0   73 aload_1   = > stack height = 1   74 iload_2   = > stack height = 2   75 iload_3   = > stack height = 3   76 aload 5   = > stack height = 4   78 iconst_0   = > stack height = 5   79 invokevirtual #228 < Method void getChars(int, int, char[], int) > = > stack height = 0   82 iconst_0   = > stack height = 1   83 istore 4   = > stack height = 0   85 goto 146   = > stack height = 0   88 aload 5   = > stack height = 1   90 iload 4   = > stack height = 2   92 caload   = > stack height = 1   93 lookupswitch 3: default=134   = > stack height = 0     92: 128 123: 128    125: 93 128 aload_0   = > stack height = 1  129 ldc #230 < String " \ " > = > stack height = 2  131 invokevirtual #63 < Method void write(java.lang.String) > = > stack height = 0  134 aload_0   = > stack height = 1  135 aload 5   = > stack height = 2  137 iload 4   = > stack height = 3  139 caload   = > stack height = 2  140 invokevirtual #233 < Method void write(char) > = > stack height = 0 143 iinc 4 1   = > stack height = 0  146 iload 4   = > stack height = 1  148 aload 5   = > stack height = 2  150 arraylength   = > stack height = 2  151 if_icmplt 88   = > stack height = 0  154 return   = > stack height = 0   The jump 93 inside the lookupswitch is wrong. It should be 128 like the others.   This is really weird. I use the jdtcore.jar from the 203 build to recompile the source you provided with the workspace and I could get the same  bytecodes. I have: 93 lookupswitch 3: default=134   = > stack height = 0     92: 128 123: 128    125: 128 Which is the expected answer.  If I recompile the project org.eclipse.swt doing a full build, I can reproduce the problem. If I take all the sources according to the classpath and  use a batch compilation, I don't  get it. I need to find out a reproducable test case that I can debug. OT (10/10/2001 6:51:00 PM)  After looking at the problem, I suspect a resize of the code stream byte array to be responsible of this problem. The last offset for the case  label is offsetted by one compare to its right position.  OT (10/10/2001 7:20:30 PM) The method writeSignedWord was wrong. If a resize of the byte array  was necessary while writing one of these four bytes, the byte was actually written offsetted by one, because the currentOffset was already incremented.  currentOffset - 1 is the right position. So according to the size of the byte array when the StyledText class is compiled, we can hit or not the problem.   Released in HEAD 2.0 Fixed and backported to 1.0 patch Fixed in 1.0 Rollup 139
Platform	GP opening a Java file for editing build 2002-04-23+JUI patch on WinXP IBM JRE 1.3.1 Another un-reproducable GP.  I had focus on IE (bug reports) and then switched focus back to Eclipse and pressed ctrl-shift-t to open a java type and got the GP.  Will include javacore file. Sorry, my mistake...I was using the IBM JRE 1.3.0. Can't recreate it.  Feel free to reopen this PR if it happens again.
JDT	Add support for JUnit 3.8 [JUnit] We should add support for 3.8 - > update the junit.org plugin - > change the wizard to no longer create the TestCase(String name) constructor - > support running of tests without the above constructor. require Ant 1.5 support from the platform (caused by the removal of a  deprecated method in JUnit). Erich has since posted 3.8.1 at junit.org (4 September).  Eclipse 2.1 should  probably include his latest hard-fought efforts.  ;-) Ant 1.5 is now in the build and we can move to JUnit 3.8.1 updated org.junit support to rerun tests without the TestCase(String name) constructor. This was done in a way that supports both 3.7 and 3.8.  Did not change the wizard to create the TestCase to no longer emit a constructor this will allow us to support both 3.7 and 3.8. Since the  constructor does no harm in 3.8
Platform	CVS import with readonly access not possible I created a project and wanted to populate it from cvs where I have read only  access.  CVS import in Eclipse requires write access. Do you mean that you have read-only access to your projects on the CVS server? What OS is running on the server? Please annotate with more information about your setup. Thanks.  Moving to Platform/VCM for comment. Yes, I have read only access to the project on the CVS repository. The CVS  server is running Linux (I think). I do Team/Share Project, select my repository and Finish and get this error:  cvs [server aborted]: " import " requires write access to the repository. You should use the repo view to check projects out of the repository (cvs  import means that you ARE trying to write to the repository). To check out projects: 1. Open the CVS repositories view (Window/Show View/Other/CVS/CVS Repositories) 2. Create a new repository location for the repo you want to connect to  (operation is available in the context menu of the view). 3. Expand the new entry, then HEAD and select the project you want to check out 4. Checkout is available from the context menu of any folder in the view. closing
JDT	[content assist] Code Assist doesn't  work " inner " interfaces. We have some interfaces defined in the following manner....  public interface JdxMessages { /**    * Connect Direct Messages */   public interface ConnectDirect { // Information messages      public static final String CONNECT_DIRECT_STARTED  = " CONDIR.0100 " ;      public static final String CONNECT_DIRECT_ENDED    = " CONDIR.0101 " ;      public static final String CONNECT_DIRECT_FILE_COLL = " CONDIR.0102 " ;   } /**    * Common messages */   public interface Common { public static final String EXCEPTION                      = " DX.0001 " ;     public static final String CLASS_CAST_EXCEPTION           = " DX.0002 " ;     public static final String CREATE_EXCEPTION               = " DX.0003 " ;     public static final String DUPLICATE_EXCEPTION            = " DX.0006 " ;     public static final String FINDER_EXCEPTION               = " DX.0009 " ;  } /**   * Compression protocol messages */   public interface Compression { public static final String BEGIN_COMPRESSION            = " COMP.0100 " ;     public static final String COMPRESSION_SUCCESS          = " COMP.0101 " ;     public static final String COMPRESSION_ERROR            = " COMP.0102 " ;     public static final String BEGIN_DECOMPRESSION          = " COMP.0103 " ;     public static final String DECOMPRESSION_SUCCESS        = " COMP.0104 " ;   } }   This helps us separate the different message types by typing in " JdxMessages.Compression. " etc.  When I type in " JdxMessages. " , code assist  pops up with all the inner interfaces but it doesn't filter them correctly  when I continue typing.  When I type in " JdxMessages. " I would expect code  assist to popup with a list of " ConnectDirect " , " Common " , " Compression " , and  then popup with the static variables after I type one of these.  This is not the current behavior. Has been fixed a while ago.
Platform	[Tasks] Task List Filter does not persist on M5 When I close down eclipse and restart it,  the task list filter gets reset to  the default.  I'm only trying to set it to Selected Resource and Children.  Brian i have found an issue in f1 where the task view can fail to properly refresh on  startup under certain conditions which may leave the user with the perception that filter settings are not being preserved. i believe i have addressed this  problem and will be submitting the changes to nick edgar shortly. i think these changes should fix the problem people are seeing. Chris's changes were released for 2.0. Please file a new PR if you still see this problem in 2.0.
JDT	Changing Package Declarations triggers full project rebuild Build 20020919  I'm not sure if it can be made more efficient maybe it is ok to scrub the whole project if the package declaration changes. Do you have exact steps to reproduce ? A namespace change is quite severe, but  it should not recompile the entire project. Now, depending on the scenario, it could simply be a mode which we don't optimize since it doesn't happen very  often (how many times have you made such a change for the past year ?). 1. Open a CU 2. Change its package declaration Note: 1) I had auto-build on 2) I copied the CU from another project/package via Navigator (== > error) and then fixed the bug by adapting the package declarartion in the Java Editor Here's the builder trace from the testcase... I don't see a problem. Can you  reproduce? Moved file in Navigator:  Starting build of Copy Test @ Mon Sep 23 13:34:30 EDT 2002 Found source delta for: Copy Test Clearing last state : State for Copy Test (#5 @ Mon Sep 23 13:32:02 EDT 2002) INCREMENTAL build Compile this added source file D:/aR2.0/workspace.test/Copy Test/p1/X.java Add dependents of added source file p1/X   adding dependents of X in p1 Add dependents of removed type p2/X Deleting class file of removed type p2/X About to compile D:/aR2.0/workspace.test/Copy Test/p1/X.java   adding dependents of X in p1 Writing new class file X.class Recording new state : State for Copy Test (#6 @ Mon Sep 23 13:34:35 EDT 2002) Finished build of Copy Test @ Mon Sep 23 13:34:35 EDT 2002   Fixed package declaration error: Starting build of Copy Test @ Mon Sep 23 13:35:01 EDT 2002 Found source delta for: Copy Test Clearing last state : State for Copy Test (#6 @ Mon Sep 23 13:34:35 EDT 2002) INCREMENTAL build Compile this changed source file D:/aR2.0/workspace.test/Copy Test/p1/X.java About to compile D:/aR2.0/workspace.test/Copy Test/p1/X.java Writing changed class file X.class Recording new state : State for Copy Test (#7 @ Mon Sep 23 13:34:35 EDT 2002) Finished build of Copy Test @ Mon Sep 23 13:35:01 EDT 2002 Maybe its because I have a large workspace? I'm currently testing how to split org.eclipse.ui. I.e. I created new projects A and B (both being included an re-exported by org.eclipse.ui) and then moved (or copied) stuff to A and B. Changing the package declaration triggered a scrub output location. Sorry are you copying the files between packages or projects?  If it is projects... do they have major build failures such as a cycle? If the projects are not building correctly, then they will do full builds on  every change. Can you enable the trace so we can see what is happening? I was busy with splitting org.eclipse.ui. Will now try to reproduce. I used the patch you attached to the PR and then tested the File Search dialog page: 1. Enter *.txt as file name pattern 2. Press " Browse... " == > " *.txt " appears in the others field instead of selecting " *.txt " in the list Oops! message posted to wrong PR - please ignore. I currently can't reproduce the full build behavior either. Maybe this is due to this bug I found: 24172 Strange behavior with wrong package declaration Closing until we have repeatable steps.  24172 is not a bug... the R2.0 Java builder just handles ' incorrect ' package  declarations differently than the R1.0 builder.
JDT	Reminder - re-enable transient marker generation during code-assist (1GDCXLB) CompletionRequestorWrapper.acceptError(...) was disabled to work-around a core  issue (PR 1GD9RLP: ITPJCORE:WIN2000 - Code assist is slow). The first line:  if (true) return; // work-around PR 1GD9RLP:  ITPJCORE:WIN2000 - Code assist is slow should be discarded once the associated PR is fixed.  =========== /**  * See ICompletionRequestor */ public void acceptError(IProblem error) { if (true) return; // work-around PR 1GD9RLP: ITPJCORE:WIN2000 - Code  assist is slow try {   IMarker marker = ResourcesPlugin.getWorkspace().getRoot ().createMarker(IJavaModelMarker.TRANSIENT_PROBLEM);   marker.setAttribute(IJavaModelMarker.ID, error.getID()); marker.setAttribute(IMarker.CHAR_START, error.getSourceStart());   marker.setAttribute(IMarker.CHAR_END, error.getSourceEnd() + 1); marker.setAttribute(IMarker.LINE_NUMBER,  error.getSourceLineNumber()); // HACK for now: The final format is not fixed yet.   //marker.setAttribute(IMarker.LOCATION, " # " +  error.getSourceLineNumber()); marker.setAttribute(IMarker.MESSAGE, error.getMessage());   marker.setAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR); this.clientRequestor.acceptError(marker);   } catch(CoreException e){ } } if (true) return; // work-around PR 1GD9RLP: ITPJCORE:WIN2000 - Code  assist is slowS NOTES:  PM (5/14/2001 3:32:00 PM) Deferred as per EG PRODUCT VERSION: SDK 0.103+ Closing, no longer needed, since reconciling can report errors using an  IProblemRequestor.
JDT	Java Editor doesn't show LineNumbers if opened via double-click from CVS view Hi!  Open a Java file from " CVS Repository " view via double-click -- > Java Editor  shows no line numbers on the left side although the option in preferences- > java- > editor is active and line numbers are shown while opening Java files via  double-click from " Packages " view.  Release: 2.0 F2 Cu, Gunnar Not critical. Post 2.0
Platform	TM: connection timeout build F2: do we need milisecond precision in the dialog? Couldn't we simply make it seconds? It makes the default seem very big, also there is no F1 help to let the user know the units of that field. seconds in the preference would be fine Fixed, released to HEAD and reviewed by James.
JDT	Code assist does not work in expression view (1) Put a breakpoint on the first line of " VectorTests#testCapacity() " (2) Inspect " fFull " when the breakpoint is hit (3) In the expression view, turn on the details area (4) Select " fFull " in the expressions view (5) type " this. " in the details area, and then try code assist. I get a " space " entered into the text instead of code assist. As well, the code assist action is disabled in the pop-up menu. Same problem exists if I select other object in the expression view and attempt  code assist in the details area (it works in the variables view). Cleanup up the enablement of the content assist action and whether the Cleanup up the enablement of the content assist action and whether the details  pane is editable. Please verify. Verified.
JDT	Why does change the source attachment trigger a build (1GEHXW3) with autobuild on:  - select rt.jar - open properties dialog  - remove source attachment - press OK  - observe: the is a build. NOTES: EG (5/29/01 9:03:12 PM) changing the source attachment changes the .classpath.  moving to JCORE for comment. Can we diff the class path change and filter out changes to source attachments only? PM (5/30/2001 11:20:51 AM)  A change to the classpath file is triggering a setClasspath action which flushes the existing build state if the classpath is actually changed. This is a consequence of a recent change (flush build state when classpath is set). The flush could be smarter and only be performed if some non-source  attachment info is changed. PRODUCT VERSION:  Smoke 114 Verified that the builder doesn't react to changes in source attachement (build  20020416). Closing.
JDT	Internal errors in image builder due to duplicate package fragment (1GFJ3Y4) I was running a workspace taken from Adam in ZRH.  I added a new project, and  added a local copy of rt.jar to the classpath (because JRE_LIB wasn't pointing to  anything). After running for awhile I noticed maybe a hundred copies of the following  message on the console (nothing in log, but I may have restarted, thus deleting the old  log): Warning: internal error: attempt to add duplicate package fragment in image  builder: D:/eclipse/jre/lib/rt.jar NOTES:  JohnA (6/18/2001 2:40:15 PM) Reproduced in a new workbench, it occurs if rt.jar appears twice on the  classpath. These messages are generated by a println in PackageMapEntry#addFragment (IPath). PM (6/19/2001 11:25:07 AM)  Those messages were already in during the techpreview era. PM (6/19/2001 11:50:33 AM)  Should be fixed up. PRODUCT VERSION:  124 Closed - not reproducable with new builder.
JDT	No properties page for zip archive from package explorer [build path] If one of the archives in the classpath for a project is a zip file instead of  a jar file, you cannot get a properties page to attach Javadocs, etc. to the archive.  You get, for example, a dialog box that says " No property pages for  c:\jdk1.1.8\lib\classes.zip. " . That's correct. The properties dialog for a zip doesn't contain a page to  attach source. This way of attaching source is only support for jars. But you can attach source to a zip using the build path properties dialog. Select the  zip on the Libraries page and press Attach Source. May be we should change the way we contribute that page. Instead of using the  file extension we should check if the element is on the projects build path Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state.
Platform	Issues with Win32 GDI setBkMode(), and similar things in Motif (1GFPGK3) A few issues related to how we're using setBkMode()  1. SWT never explicitly calls setBkMode(OS.OPAQUE) during initialization but it assumes that it has been set to that during GC operations.   -- see the non-transparent branches of drawText() and drawString() 2. When the background mode is opaque and the current line style is anything   other than LINE_SOLID, the background colour is used to paint the blank spaces between dots and dashes.  3. There is no API for selecting a transparent background colour (and Windows doesn't really have such a thing for drawing operations), so there is no   way to specify that we want to draw dotted lines with transparent spaces. The API (JavaDoc) makes no mention of this being the intended behaviour.  A quick test on Motif shows that we're doing the exact same thing over there...   Recommend we add API for transparent dotted lines by adding new bit flags SWT.LINE_TRANSPARENT_DASH and SWT.LINE_ALTERNATE_DASH.  Choose one of them to be the default behaviour (so its value will be 0). Extend the GC get/setLineStyle() to use a style value that consists of the  logical OR of one of the existing SWT.LINE_xxx styles and one of the above flags.  NOTES: CM (6/22/2001 10:44:19 AM)   See also 1G863UH: SWT:ALL - How can I dash a line with one color set and the other transparent ? McQ (26/06/2001 9:11:21 AM) -   Discuss with SN and McQ. Then fix. JB (30/08/2001 10:48:23 AM)   Had a quick look at the changes required to implement this: Win32: call setBkMode() to set TRANSPARENT or OPAQUE mode    -- note: drawString/Text will need to be updated Motif: specify LineOnOffDash or LineDoubleDash in the line attributes    structure element from setLineStyle(). Photon: only supports transparent gaps!    In light of Photon's support, perhaps we should opt to support only   transparent dashes everywhere unless someone _really_ wants alternating foreground / background dashes. PRODUCT VERSION:  Build 125 This one is now killing us for the implementation of one of our libraries, which expects transparent holes in non-solid lines.  We really need to get this support into the product ASAP.  But in the meantime, I'm wondering if there's some hack I can do.  ie, call private  stuff in the SWT package from my library implementation.  I'm going to start rooting around. A really bad hack would be for me to create an new image, with two entry palette (foreground color being drawn, and another, different color for transparency), then draw my stuff with the foreground/background set appropriately.  Then paint the image into where I was going to draw the line.  A performance killer for sure ... So, here's a hack work-around for win32, which I can call from my code:     org.eclipse.swt.internal.win32.OS.SetBkMode( gc.handle,       org.eclipse.swt.internal.win32.OS.TRANSPARENT );  Is there something similiarly public enough for me to do in Motif as well? SSQ, is there a reason why we don't just always draw dashed lines transparent?   What does X do? OK, some rooting around for Motif indicates that, in GC.setLineStyle(), if you  change the OS.LineDoubleDash to OS.LineOnOffDash, you get transparent holes. The reference I found for this was at an obsolete page I found in Google's  cache: http://216.239.37.100/search? q=cache:ed5rbn4vawAC:www.x.org/consortium/R6doc/man/X11/XCreateGC+XSetDashes & hl= en & ie=UTF-8  Here is the note: The line-style defines which sections of a line are drawn:       LineSolid      The full path of the line is drawn. LineDoub-      The full path of the line is drawn, but the      leDash      even dashes are filled differently than the odd dashes (see fill-style) with CapButt        style used where even and odd dashes meet. LineOnOffDash   Only the even dashes are drawn, and cap-style        applies to all internal ends of the indivi- dual dashes, except CapNotLast is treated as        CapButt. I'm going to attach my hacked versions of GC for win32 and motif that work  around this problem ... for Motif, it was a change to setLineStyle() to use LineOnOffDash instead of  LineDoubleDash. for win32, it was a change to every draw line-ish method (arc,line,rectangle,etc) to set the BkMode to transparent, draw like usual,  reset BkMode to it's original value. Next time, I'll do diffs.  This time, I needed some sleep < g > . *** Bug 11602 has been marked as a duplicate of this bug. *** Fixed > 20020913. All platforms are drawing transparent now.
JDT	Refactor: rename isn't updating references For some reason, my installation of Eclipse is not updating any references when  I rename anything, from package names down to methods.  Class-related renames update everything within that class, but that's all.  This happens to me with  both the 20020321 stable build and M5.  And, yes, the " Update references to  renamed element " checkbox is checked.  I even tried unchecking it just in case  it was just a backward boolean check.  There are several other people in my office using the same builds of Eclipse, but they don't experience this  problem, so I'm assuming this has something to do with a screwed-up setting in  my .metadata directory.  I've grown very dependent on Eclipse's refactoring  capabilities, so this is really killing me.  Help! can you try the following for me: select a type and do ' search for references ' ? what do you see? are all references found? I forgot to mention this in the original description, but searching for  references doesn't work either.  I suspect this is the heart of the refactoring  problem, too, since refactoring works within the class being modified. moving to jcore for comment Can you provide simple reproduceable steps ? Or provide us with your workspace  if unable to isolate scenario ? John - any steps to reproduce ? If not there is little we can do for this one  in particular. No, other than doing anything that involves reference searching.  I tried  turning on debug statements in Eclipse for searching and indexing via the a .options file in the folder containing the eclipse.exe file.  After running  Eclipse and performing a reference search, the debug statements in the console correctly reflect all the classes that reference the type I entered, but I  still see nothing in the search tab within Eclipse. Do you have anything in the .log file in your .metadata folder? John - Please give it a try with latest F1 or 20020528 build. If it still  happens, then we will need a workspace for reproducing this problem. In response to Olivier Thomann's question, no, my .log file just contains the  following: < ?xml version= " 1.0 " encoding= " UTF-8 " ? > < log > < /log > I finally gave up on the problem and rebuilt my project, which I figured out  earlier eliminates the problem regardless of the Eclipse build I'm using.  I  still have the .metadata directory that reveals the problem if you guys want to keep pursuing this, but as far as I'm concerned you can close out this bug. Cannot reproduce. Closing Verified.
JDT	Weird character substitution build 20020412-linux-motif - Mandrake Linux 8.2 - KDE 2.2.2  I do not have a reproducible test case yet. Sometimes, saving a class, errors appear and when I check, the errors are some character substitutions (I have not been using find/replace) that simply " happen " in methods I was not even modifying. No exception or log file. I logged the bug in JDT UI just because I only noticed in Java files but I have no idea what is going on. Some examples: p ' ram < -- it was param before nulm < -- it was null before  Maybe it is caused by the " Sunday Elves " to warn me not to work on Sundays. Who knows... I'll try to reproduce and anotate this bug if I find anything new. any news on this one? Did it happen again? No. I guess you can close and if it happens again I'll reopen. Thanks. closing
Platform	Checkout does not support loading of multiple projects The checkout operation in Team CVS does not support the cheeckout of multiple  projects using a module alias. The projects will all be checked out but the corresponding Eclipse projects ae not created. Fixed
Platform	XMLMemento.createReadRoot can return null F2 build  We have several callers of XMLMemento.createReadRoot, none of which check for null, which can be returned if it gets an IO exception or parsing exception. See the last stack in bug 19534 for an example (Workbench.java:755). Either createReadRoot should be changed to use checked exceptions and never  return null (preferable), or all callers must be changed to check for null. Changed code as recommended by Nick to throw WorkbenchException instead of  returning null. Update all reference in ui and external tools plugins. Checked by Eduardo Verified by Adam S in F3.
JDT	Debug... doesn't suggest that you can edit the config Build 20020508  The menu item ' Debug... ' is badly named. It doesn't suggest that you can edit a  launch configuration. EG - conmments? We itentionally got rid of the generic " configuration " word, as  (some) users find it intimidating. Do not intend to change. I find the names ' Run... ' and ' Debug... ' counter-intuative as well. I've responded to more than a  couple posts on the newsgroups from people wondering where to edit the configurations.  Perhaps a compromise between the current vague terms and the intimidating (really??) ' configuration ' ? Maybe change them to something as simple as ' Edit... ' The discussion in the news group indicated that user coming from the previous  build had problems to find the action: " Well, I guess it is not so counter-intuative for a first time user, but in my case I was just *expecting* the " old " name and *expected* that run will just launch my application without asking me to alter the configuration. Now that I know it, it's fine with me and new users probably wouldn't have this expectations anyway. Btw. It is now called " run... " , but I haven't seen the dots at first sight. " " Edit... " is problematic since we do not open an editor. The standard visual  clue for a dialog is " ... " .  It would also be strange to have " Edit... " in both  the run and debug drop down. The actions open the config dialog in either Run or Debug mode. I found this puzzling, too. The first time. Then it makes sense. And it's way better than " Edit Configuration... " I kept wondering, why is there a Debug/Run button in an " edit " dialog. I think most of the confusion is an artifact of the M5 to F1 transition. Asked for a second opinion from the UI team and they also support the existing  names. Closed.
Platform	API broken in ErrorDialog Build 20021002  ErrorDialog#createContents(Composite) no longer calls createDialogArea(Composite) as is specified in the API on  Dialog#createContents(Composite). Instead, it calls a new method, createMessageArea(Composite).  This change breaks subclasses of ErrorDialog who followed the 2.0 contract and overrode the method createDialogArea(Composite) as the API advises. In the  debugger, this created Bug 24297. Fixed in 2.0.2 build. Fixed in build > 20021003 Verified case in bug 24297 in build I20021016.
Platform	Error changing font in WB When I try to change font in Workbench I get an ArrayIndexOutOfBoundsException. Running Slackware Linux 8.1 beta, Lesstif, KDE. Works in eclipse 1 and the gtk1 version of eclipse 2 [snip] java.lang.ArrayIndexOutOfBoundsException  at org.eclipse.swt.widgets.FontDialog.getTranslatedCharSet(FontDialog.java:449)  at org.eclipse.swt.widgets.FontDialog.addFonts(FontDialog.java:155) at org.eclipse.swt.widgets.FontDialog.initializeWidgets(FontDialog.java:596) at org.eclipse.swt.widgets.FontDialog.open(FontDialog.java:735)  at org.eclipse.ui.internal.dialogs.FontPreferencePage$4.widgetSelected(FontPreferencePage.java:223)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1561) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1403)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:538) at org.eclipse.jface.window.Window.open(Window.java:525)  at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:473) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1561)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1403) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:722)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:705) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:196) at org.eclipse.core.launcher.Main.run(Main.java:555)  at org.eclipse.core.launcher.Main.main(Main.java:396) [snip] moving to Platform This is in the FontDialog.  Please indicate which build you were running and which locale you are using. SSQ please investigate with GG. Duplicate.  This was fixed a few days ago.   *** This bug has been marked as a duplicate of 14425 ***
JDT	NewProjectWizard - busy cursor goes away after a while (1G471TO) AK (11/10/00 11:50:12 AM)  after you press ' finish ' in the NewProjectWizard the busy cursor is shown for a while only,  then it goes away, althought there's still some activity going on  NOTES: moved to ' active ' PRODUCT VERSION: MiniTestPass 0.011 can't reproduce looks obsolete to  me
JDT	Required Artwork for Monitors View and Actions With the addition of the Monitors View and its associated actions we require  artwork. I will attach a word document that will attempt to describe what is needed. Sent requests to artist. A first pass of icons from the artist have been integrated. Icons were also added to the the deadlock view. Problems: 1. The monitor icon has been deemed confusing (it is a monitor, the same icon as for the console).  Would like to recommend the creation of an " Object " icon.  This could be used for monitors and for upcoming changes to the expressions view contents.  2. The deadlock view icon does not seem to have a colored enabled version (all  gray). Moving to M4 Deferred. Since the view is not heavily used, and the WSAD debugger uses a  similar metaphor for variable " monitors " , we will leave as is for 2.1. I  believe the color issue with the lock is simply that the lock is grey. Closed.
Platform	ISubscriber.confirmMerge should propagate errors (1GEMCD1) HackFinder cleanup.   CVS Subscriber.confirmMerge() is eating a CoreException (logs it now) and should probably propagate the exception to the caller.  NOTES: PRODUCT VERSION:   115 n/a - 1.0 code base.  Method no longer exists.
Platform	Initial focus wrong in most dialogs and wizards Build 20020430  1) Select a project or source folder in the packages view, context menu, New- > Package.  The initial focus is given to the source folder field.  Since it  has inferred this value from the selection, it is already filled in.  The initial focus should go to the package name field.  2) Select a package in packages view, context menu, New- > Class or  New- > Interface.  Again, it has inferred the source folder and package from the  selection, but initial focus still goes to the source folder entry field.  Focus should go to the class name field.  Keyboard user has to tab 5 times to get to  the only field that needs to be filled in. 3) Same problem for the source folder wizard. I suspect this might be a more general problem... almost every dialog and wizard  in this build seems to have wrong initial focus.  Some examples: Open type dialog Search Dialog Project delete confirmation dialog File Save As dialog New file dialog ...etc... Moving to Platform- > UI Updating title to better reflect the problem *** This bug has been marked as a duplicate of 14981 ***
Platform	Update on project in merge editor exception Build 20020315 Select the project in the merge editor and select " Update " . An error message  is shown saying: " error making project an outgoing change, it is already managed " . Actually the error message was: " error making remote folder in sync with the server. The folder is already  managed " .  After this I can't perform any operations in the sync view. I wasn't able to update incoming directory creations. The only time I see this behavior is in the following scenario: 1. Turn pruning on 2. checkout a project 3. turn pruning off 4. branch on the project and create a directory with a file 5. merge the branch into head The directory show up as an outgoing deletion because the directory is in the  base and remote but not the local. The file is an incoming addition. Choosing update from the merge editor results in an error because the incoming file  creation does not have a local parent directory. The problem in question was caused by nested folder additions. This has been  fixed. The problem related to incoming additions appearing as outgoing deletions has been moved to bug 12034.
Platform	Status bar problem when using default text editors Build: 20020409  Steps: 1. Open Several files using the default text editor (on the context menu,  select Open With- > Text Editor) 2. Switch between the editors several times. 3. Look at the right-hand part of the status bar.  Eacht time you switch between two default text editors, a box containing the word " Writable " appears on the right end of the status bar. When you click on  an open Java editor or close a default text editor, all of these boxes dissapear. *** This bug has been marked as a duplicate of 13509 *** Wrong duplicate reference *** This bug has been marked as a duplicate of 13131 ***
JDT	ClassCastException in the debugger trying to inspect some code: Using 1016  1) I put a breakpoint in: org.eclipse.jdt.internal.core.util.ConstantPoolEntry.getStringValue() {   return new String(this.stringValue); // BREAKPOINT ON THIS LINE }  2) I wrote this code below the return statement: for (int i = 0, max = this.stringValue.length; i < max; i++) {    System.out.println(Integer.toHexString((int) this.stringValue[i] ));   } I selected it and I did an " inpect " action. 3) I got the following stack trace. !ENTRY org.eclipse.jdt.debug 4 120 Oct 18, 2002 15:11:03.875 !MESSAGE Internal error logged from JDI Debug: !STACK 0 java.lang.ClassCastException at org.eclipse.jdt.internal.debug.eval.ast.instructions.Cast.execute(Cast.java:65)  at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)  at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)  at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:549)  at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)  at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)  at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)  at java.lang.Thread.run(Thread.java:536) I tried to reproduce the bug with a small test case, I don't get any error.  I don't know how to hit the given breakpoint. Can you specify the steps to perform for execute getStringValue(). I tried again today the same steps and I cannot reproduce anymore. So it is ok  to close. I will reopen it if I find anything wrong again in the future. Something might be wrong in my workspace the other day. Closing
Platform	[tests] Need to test Workspace tree (ElementTree) and concurrency (1GCDQC0) We need tests for the ElementTree concurrency. Specially multiples readers and one writer.  NOTES: This may already be done? John, please confirm. Defer Reopening for investigation. I added WorkspaceConcurrentTest in 3.0. We also have ElementTreeIteratorTest.testConcurrentModification. Closing.
JDT	Java breakpoints must have HANDLE_ID attribute set If a Java breakpoint does not have its HANDLE_ID attribute filled it, the UI  will crash if you attempt to view the breakpoint's properties.  (See stack  trace at end). There are a few problems with this:  #1 - if the field is required, then it should not be so simple to create a breakpoint without it.  The createLineBreakpoint helper, for instance, doesn't  even document that this might be a useful attribute to set.  If it's required,  then it should be an argument to the helper. #2 - it may be impossible to set this attribute if the Java class does not exist in the workspace.  I believe that any senders of BreakpointUtils.getType() should tolerate null as a return value.  Stack trace: java.lang.NullPointerException  at org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPreferencePage.createFie ldEditors(JavaBreakpointPreferencePage.java:173) at org.eclipse.jface.preference.FieldEditorPreferencePage.createContents (FieldEditorPreferencePage.java:195) at  org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPreferencePage.createCon trol(JavaBreakpointPreferencePage.java:266)  at org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesDialog.createD ialogArea(JavaBreakpointPropertiesDialog.java:281) at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:465)  at org.eclipse.jface.window.Window.create(Window.java:263) at org.eclipse.jface.window.Window.open(Window.java:512)  at org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesAction.run (JavaBreakpointPropertiesAction.java:31) at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:204) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788) at org.eclipse.ui.internal.Workbench.run(Workbench.java:771)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at SlimLauncher.main(SlimLauncher.java:14) Agree that senders of BreakpointUtils.getType(IJavaBreakpoint) should handle  null. Fixes in JavaBreakpointPreferencePage, JDIDebugUIPlugin, AddExceptionDialog. Please verify (Darin W). Re-opened for re-verification. I updated code in the breakpoint property page  and model presentation to handle the null case (in fact, there was no need to retrieve the type, just the type name, which is already on the breakpoint). please verify Verified changes. Made change to breakpoint properties page to handle the null name case.
Platform	Disabling " Show executin log in console " fails Build F1  When disabling " Show executin log in console " (Run Ant dialog), the build  fails immediately ( " Ant runner internal error " ) but nothing is written to  the .log file. In addition, when you canceled an ant build (with log turned on), and then  toggle the checkbox (in the still opened dialog), the build's output will  still go to the ant console. I could not reproduce with a simple script. Could you provide more steps and  an example script? Thanks. I had some problems to reproduce this behavior, but I finally made it. This  only seems to happen when you have canceled an ant build before at a very early stage.   I have a plugin project, which I want to build. When I run ant (with output, build.update.jar) and cancel the build process very early (i.e. during cleanup  or when it starts compiling), successive tries to build _without_ console output fail.  Trying to be of more help, I put a breakpoint into AntLaunchWizard.performFinish and got an InvocationTargetException that  encapsualted an SWTExcecption (Illegal Thread Access). In addtion, here is the stack trace  java.lang.reflect.InvocationTargetException: Invalid thread access at org.eclipse.ui.externaltools.internal.ui.AntLaunchWizard$1.run (AntLaunchWizard.java:121) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) Caused by: org.eclipse.swt.SWTException: Invalid thread access  at org.eclipse.swt.SWT.error(SWT.java:1887) at org.eclipse.swt.SWT.error(SWT.java:1819)  at org.eclipse.swt.widgets.Widget.error(Widget.java:368) at org.eclipse.swt.widgets.Shell. < init > (Shell.java:204)  at org.eclipse.swt.widgets.Shell. < init > (Shell.java:268)  at org.eclipse.jface.window.Window.createShell(Window.java:311) at org.eclipse.jface.window.Window.create(Window.java:277)  at org.eclipse.jface.window.Window.open(Window.java:527) at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:209) at org.eclipse.jface.dialogs.ErrorDialog.openError (ErrorDialog.java:257) at org.eclipse.jface.dialogs.ErrorDialog.openError (ErrorDialog.java:231) at org.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.run (DefaultRunnerContext.java:259) at org.eclipse.ui.externaltools.internal.ui.AntLaunchWizard$1.run (AntLaunchWizard.java:117) Thanks for investigating. This underlying problem has already been reported.  *** This bug has been marked as a duplicate of 17083 ***
Platform	Prune feature should prune in repositories view (1GJP9GH) NOTES:  JEM (9/7/2001 4:22:47 PM) Put in documentation. This would be prohibitively expensive as you would have to  traverse the entire depth of the tree just to display the top level in the repositories view.   Prune feature should clearly state that it prunes during a load and during a sync, and that the repositories view will still show you what is actually in the repository.  MichaelV (04/10/2001 2:46:43 PM) Perhaps when expanding projects, it may be possible to us a variation of update   without -d which only gives us the directories that ae not empty. This is CVS specific and works differently then the expansion gathering algorithm but is worth investigating  when we have the new 2.0 CVS. PRODUCT VERSION:   HEAD post 2.0 Reopening *** This bug has been marked as a duplicate of 4876 ***
JDT	Can't launch programs on Linux with default java executable name 1. Select a launch config (Local Java App) and go to the JRE page. 2. Click " New " and add a new JRE. A new option appears to specify the name of  the Java executable. The " Use default " button is selected. Leave it that way. 3. Try to launch the program. An exception occurs. I've debugged this enough to see that the command line we're trying to launch  is javaw. javaw only exists in a few VMs. If we want to look for it, that's  fine, but we need to fall back to java (or java.exe) if javaw is not found. Fixed. Please verify. Also made the widget disabled instead of read only so it looks better on linux. Verified.
Platform	DCR: Additional Region features (1GFQO4C) The functionality offered by Region could be extended to include:  1. Non-rectangular regions polygons, ellipses, arc segments...    Win32: CreateEllipticRgn, CreatePolygonRgn, create using CombineRgn X: XCreatePolygonRegion (others may not be possible other than via emulation,     which we probably want to avoid) 2. Region origin translation    useful when converting a region defined in terms of someone else's    coordinate system like a parent or child to something you can use Win32: OffsetRgn    X: XOffsetRegion 3. Additional region composition functionality    esp. producting regions that are the intersection or difference of other regions instead of just the union    Win32: CombineRgn flags X: XUnionRegion, XIntersectRegion, XSubtractRegion  4. GC functions that use regions to perform tasks copyArea through a Region mask    drawImage through a Region mask fill a Region with a pattern  5. Add redraw(Region) to the list of supported operations for Controls on those systems that would not support it, the function could just get    a bounding rectangle for the region and redraw that NOTES:  JB (26/06/2001 10:55:05 AM) In reconsideration, item 4 above is rather pointless.  Except for copyArea()   through a Region mask, everything there can be done by setting the clipping on the GC in question.  Though perhaps useful idioms of that ilk are to be found elsewhere. PRODUCT VERSION:  Build 125 To be considered as part of a possible future SWT graphics rework. Moving from Later. 1) and 3) have already been added for 3.0.  I believe 4) can be achieved using  GC.setClipping(Region).  Moving to SSQ. I have added Region.translate(). So 1), 2), 3) and 4) are available in 3.1.  I opened a new bug report for 5) (see bug#76198). Nothing else left here.
JDT	add block mark functionality It would be nice to have a block mark What is your understanding of a block mark? Do you know " cmd " on Windows NT/2000? This selection is a block mark.  Example: Som******** asdljjas dn fskand 2nd******** dsfaj 3rd********with more Text " * " is marked. Some developers that used old editors long time want to have it.   Cu, Gunnar *** Bug 35116 has been marked as a duplicate of this bug. *** *** Bug 41472 has been marked as a duplicate of this bug. *** *** Bug 183219 has been marked as a duplicate of this bug. *** *** Bug 183219 has been marked as a duplicate of this bug. *** *** This bug has been marked as a duplicate of bug 19771 ***
Platform	[console] No Undo after clear console Build 20020319  I accidently cleared the console (by pressing the Clear button) and I could not undo this action (Edit- > Undo is greyed out). Deferred reopening to close. Marking as wontfix. The console can have large amounts of data in it, and we don't want to store this around in memory indefinitely.
Platform	ClassCastExceptions caused by BreakpointManager Build ID: 20011025, BreakpointManager 1.10  CCE in BreakpointManager because arrays from type X are cased to arrays of type Y.  - error when Java editor in workspace with breakpoints is opened - internal error when adding/removing breakpoint Attached a patched version of the BreakpointManager. Note: There might be other problems related to array casting - I only fixed the two that caused me direct problems. Both problems centered on incorrect casting of Object arrays, i.e., the  difference between an Object[] that happens to contain IBreakpointListeners,  and an IBreakpointListener[] .  Implemented Daniel's fix, and checked  BreakpointManager for any other similar problems, but found none. Fixed. Verified.
JDT	Non-existing package fragment roots should not be openable Build 20021016  The spec claims that non-existing elements cannot be opened, however the implementation doesn't enforce it for package fragment roots.  Using IJavaProject.getPackageFragmentRoot(IResource) it is easy to create such non-existing roots, which can be openend.  The issue behind is that the element cache will be populated for these elements, and unless the client call #close() on this root, the cache will hold  onto some of the children elements. PackageFragmentRoot.openwhenClosed(...) already ensures that the resource is on  the classpath. Added regression test ExistenceTests.testPkgFragmentRootNotInClasspath()
Platform	Deadlock in history view I had the hisory view as fast view and the " Link History view to current selection " option was enabled.  I selected org.eclipse.jdt.ui/scripts/exportplugin.xml == > I had to kill Eclipse. The thread dump is attached. build id: 20020423 *** This bug has been marked as a duplicate of 14533 ***
JDT	Binding2JavaModel.find(...) doesn't work for nested classes patch provided is fixed now
JDT	Conditional breakpoints when the value of an expression changes Conditional breakpoints currently trigger when they evaluate to true. It would sometimes be useful when they trigger when the value of the expression changes. Consider for 2.1 I suggest adding radio buttons beneath the " condition " text pane:  * suspend when condition is ' true ' * suspend when value of condition changes  Also need to add API to IJavaLineBreakpoint to toggle this setting Implemented. Added radio buttons in the breakpoint properties page. Added #setConditionSuspendOnTrue() and #isConditionSuspendOnTrue(boolean) to IJavaLineBreakpoint. Changes in IJavaLineBreakpoint, JavaLineBreakpoint, JavaBreakpointPreferencePage, JavaBreakpointPreferenceStore and JavaBreakpointPropertiesDialog. Please verify. (Verified). I made a couple small changes: (1) the labels in the properties dialog - I removed the periods, and changed the grammar in the second (2) I changed the default to be " suspend when true " , since this was our only  original option Please verify my changes. marking fixed. Verified.  I added a new test : ConditionalBreakpointsTests#testSimpleConditionalBreakpointSuspendOnChange().
JDT	Can't set Program Arguments from Outline (1GKZDW8) DDW (02/10/2001 2:07:54 PM)  If you are using the Outline window to navigate various methods in  a class and you wish to actually run a Main menu, you must go to the Packages menu to set any command line arguments and then run the Main from the Packages window and not the Outline window.  The following PRs are related: 1GKZDMQ: ITPJUI:WIN2000 - Parm settings different b/w Outline window and Navigator 1GKZDGW: ITPJUI:WIN2000 - Can't distinguish b/w UIMain's in Debug/Running Man Menus  NOTES: moved to ' active ' still a problem in 20020214 you should be able to set programs args by selecting a class (in all our views) - not only a compilation unit. moving to debug. Launch configs replace this functionality. Args will no longer be set as  properties on types.
Platform	Navigator " Go Into " redundant? (1GECWXO) Isn't " Go Into " redundant with " Go To " - > " Forward " ?  - It appears the only difference is that one works on the selected object and the other remembers what the last " Go Into " was on. - There is no icon for " Go Into " , just for " Go Forward " - It seems a waste of a popup menu entry to have both " Go Into " and " Go To " . For larger " products " the navigator menu could get long, and " Go Into " is an infrequent operation also supported by toolbar icons.  Q: What's the difference between " Back " and " Up " ?  The tooltips are unhelpful.  NOTES: NE (05/28/01 2:43:39 PM)  Go Into is not the same as Forward.   Up and Back are also different. Go Into changes the input to the current selection.    Forward goes forward in the history (opposite of Back). Up changes the input to be the parent of the current input (independent of the selection),   adding to the history rather than going back in the history. Back, Forward and Up work similarly to Explorer.   There's no icon for Go Into, because I felt that toolbar icons should apply to the whole view, independent of the selection. Go Into and Go To are separate entries because I didn't want the user to have to select Go To, then Into.  I agree Back and Forward will likely not be used from the menu often, but they are there for completeness. The Go To menu would have to be there anyway, for Go To / Resource. PRODUCT VERSION:  113 Closing PR.  It works as intended.
Platform	Adding a simple project causes full build? Imported UI plugin and it's dependents as source projects. Autobuild was on. Did several searches.   Created a simple project and observed that a full build was initiated. Why was the full build necessary? This is actually just a progress monitor problem.  It's not doing a full build,  it just appears that way from the progress.  The pseudo code is: - for each project p   - monitor.subtask( " Build project < p > " );   - if (project p is affected by the change) - build p  The monitor.subtask() should be done after we check if the build is really necessary.  *** This bug has been marked as a duplicate of 10688 ***
Platform	Launch preferences page problems The Launch Configuration Types preference page has the following problems  1) No mnemonics for any of the widgets 2) Buttons and titles should be capitalized to be consistent with the rest of  the UI *** Bug 8331 has been marked as a duplicate of this bug. *** Fixed in LaunchConfigurationTypesPreferencePage. Please verify. Verified.
Platform	Batch script example fails to open the project (1GJ6C79) In the last step of the example the trace claims it is openning project, but the project actually remains closed   NOTES: Invalid defect. Scripting support has been removed.
JDT	Classfile comparator should be able to ignore synthetics (1GL2I3N) In order to minimize incremental builder actions, the classfile comparator should be able to ignore synthetics. Note that this should be optional and not cost on cases where nothing has changed. The intent is that this mechanism can be turned on/off so as for the builder to experiment.  NOTES: OT (05/10/2001 1:32:07 PM)  A different number of fields or methods means that something changed. So if a synthetic field disappeared, I think we can conclude that a change occured and recompile the class. Done and tests added for 206. Released in HEAD as soon as 205 is built. PRODUCT VERSION: SDK 202a
Platform	Better reporting of errors when reading Ant build file Currently when some syntax is incorrect in the Ant build file, no line numbers  are presented for certain errors (check if can improve) For example: < property name= " currentBuild " value= " ../../Debugger/ > Can multiple errors be reported at the same time? We can do better. We are generically handling SAXExceptions instead of looking for something more specific such as a SAXParseException (which includes a line number) in AntUtil. Line numbers are reported if available. Please verify (Jared). Verified. Very nice.
Platform	Missing Java icon in ' New Working Set ' dialog In Eclipse build F1. Open ' Search ' > Java Search > Working Set > Choose > New  There are 2 Working set types listed. ' Resource ' has a valid icon But ' Java ' has a red square instead of an icon. *** This bug has been marked as a duplicate of 16781 ***
JDT	DCR: Need a way to create a new method in the segmented editor (1GELW3C) I need a way to create a new cu member when working in segmented editor.  For example: New method template Otherwise I have to switch between segmented and unsegmented if I'm adding  new code. NOTES: EG (5/31/2001 12:34:30 PM)  you can just type in the new method. method template are OUT for June. moved to ' active ' PRODUCT VERSION:  0.115 VA/Java users have requested a method wizard. No method wizard planned for 2.0, however may be someone from the Eclipse  community could provide one...?! A new method can be added in segmented mode by appending it to any other method. We now have:  - you can type it in - templates to generate method  - CCP and DnD to create methods. There aren't any plans to provide a new method wizard .
Platform	Canceling leaves partial results (1GE6S9P) Platform: JDK 108 W2K  Canceling an add to workspace operation leaves the work-accomplished-to-date in the workspace. I expected it to cancel the entire menu operation (i.e. not to load anything)  NOTE: KM (5/23/01 2:59:18 PM)  I think this is the best we can do.  As long as that which was loaded has intergrity we are ok. (e.g. project is setup right with .vcm_meta, parent folders in place, sync info correct for all).  Does this match what you've observed?  TPE (2001-05-25 15:03:12) The partial results are correctly represented, but the load does not make sense in Java-terms. I can't imagine us doing better.  It would mean rolling back to the workspace  to the state prior to loading.  We would either need to remember revisions for the lineup, plus local modifications, or copy the project somewhere temporarily.
Platform	Launch config dialog should allow double-click on config type Build 20020326  When creating a launch configuration, double-clicking on a config type should be the same as selecting it and choosing New. Agreed. Fixed in LaunchConfigurationDialog.doubleClick(). Please verify. Verified.
JDT	(minor) Method entry breakpoints are shown in the javadoc comment (1GFCYC9) EG (6/15/2001 12:36:46 AM)  method entry breakpoints show up at the first line of the Java doc comment. The method entry breakpoint should better show up at the method declaration itself.  NOTES: DW (6/15/01 9:05:02 AM)  Defer. Fixed in JavaMethodEntryBreakpoint. Please verify (Jared) Verified.
Platform	Copy Stack does not enable I cannot get " copy stack " to enable, no matter what the selection in the debug view. *** This bug has been marked as a duplicate of 8005 ***
Platform	Printing support under Linux/Motif? Is printing support for Linux a target for eclipse 2.0? CM to provide a description of the current SOTW of printing on linux/motif. Printing on X is currently blocked because of: http://dev.eclipse.org/bugs/show_bug.cgi?id=8821 It would be more tempting to find a work-around for this problem if indeed more  X people actually used X Printing. But X people seem to prefer to generate Postscript. Nobody (almost nobody) on X uses the Xprt server. Consequently, it  has bugs, very few printers have drivers, and it is not well supported. In fact, I found no evidence that it was supported at all. My Linux install was  updated, and our infra people were not able to get Xprt running on the new install. There is still an open req for this. Until that happens, I can't do  any printing testing. Probably the whole X Printer thing should be scrapped (even though we did get it working, and it worked fine for us) and perhaps we  ought to consider getting into the business of generating postscript on X for draw calls to a printer GC, as ludicrous as that may be. It will be interesting  to see what the GTk people come up with for printing. Also interesting is Mac printing - I assume they are closer to " drawing on a GC " like Windows does. But  who knows - Mac OS X has X underneath it - so maybe they got sucked in to the " all you need is postscript " mentality.  Bottom line is this: There will be no Linux printing support for eclipse 2.0. This is not completely true.  For example: Mozilla has a working Xprint module (to suppprt non-ISO-Latin1 content, e.g. japanese/korean/thai/cyrillc - even MathML works :) and platforms like Solaris and HP-UX come with working versions of Xprt (X11 print server). Unfortunately the Xprt binaries builds from Xfree86 sources are broken... but I am working on a fixed version for all Unix/Linux variants. See http://puck.informatik.med.uni-giessen.de/people/gisburn/work/xprint/ and http://xprint.mozdev.org/ (there are links for a working Linux x86 Xprt binary; source coming soon, too :) fixed > 20020918 I am running Eclipse 2.1 M3 GTK and I still cannot print under Linux.  I do not understand why this bug is fixed. --Daniel This PR is (or at least should be) related to Linux/Motif. Look at Bug#24796 to know more about printing on GTK. I think is better to keep information about printing in Motif and GTK on  different PRs. Therefore I'm closing this one. Moving back to SWT.
JDT	EC DCR: Add line numbers to Java editor (1GIV594) From Eclipse Corner:  Feature request - line numbers in editor  First of all - what a great tool you all have made. But I miss one feature and that is line number in the editor. I know that I can jump to   a given line by using [ctrl] +l but I still think that line number would   be great or am I missing something?? Additional post:  Concur.  Just a little line,col label somewhere near the bottom. Alternatively, and actually preferrably, be able to toggle line numbers  on/off in a ' prefix ' area of the text widget itself.  (Anyone remember XEDIT  :-).  I often deal with non-Java stuff, and someone or other complains about errors on line XXX ...   One more post: Presumably this will be optional.  I (and I imagine most current/former   VAJ users) have no need or desire to see the line numbers. NOTES: moved to ' active ' PRODUCT VERSION:  R0.9 *** Bug 4276 has been marked as a duplicate of this bug. *** According to Erich, we will look into this one *** Bug 12940 has been marked as a duplicate of this bug. *** *** Bug 11359 has been marked as a duplicate of this bug. *** The latest build appears to still not have this feature/defect addressed. What  is the status of integration for this feature/defect? This is an uncommitted work item for 2.0. If there is time it will be added. Java editor supports line numbers in build 20020508. Functionality is part of  JFace Text, AbstractTextEditor subclasses can be configured to use it. How exactly is this defect/feature request resolved?  Looking at build 20020508_1022 I do notice that there is a row/col label on the bottom of the Java perspective that tracks the current row and col in the Java  editor. The original defect comment was a request for the row/col label and a method to toggle the line number on/off similar to the manner the Eclipse XML  editor currently supports. Is the toggle of line numbers similar to the XML editor supposed to be present  or only a row/col label? In order to turn line numbering on in the editor follow the steps below:   Window > Preferences > Java > Editor Check " Show line numbers " .
Platform	Inconsistent Preferences STRING_DEFAULT_DEFAULT constant causes walkbacks Build M5  org.eclipse.core.runtime.Preferences and org.eclipse.jface.preference.IPreferenceStore disagree on the value of the  constant STRING_DEFAULT_DEFAULT. Preferences defines this constant as " " and IPreferenceStore defines it as new  String(). This causes problems, since methods like  org.eclipse.jface.preference.PreferenceConverter.basicGetColor() do an identity comparison to see if the returned value is the default value:  private static RGB basicGetColor(String value) { if (value == IPreferenceStore.STRING_DEFAULT_DEFAULT)   return COLOR_DEFAULT_DEFAULT; RGB color = StringConverter.asRGB(value, null);  if (color == null) return COLOR_DEFAULT_DEFAULT;  return color; }  I encountered this problem when I was trying to instantiate JavaTextTools in my own plugin. To help understand how you can get into this situation, I've  included a stack trace below. If I let the code run a bit longer I get a NoSuchElementException. My plugin class is a subclass of AbstractUIPlugin and  uses the following code to instantiate a JavaTextTools: public JavaTextTools getJavaTextTools() {  if (fJavaTextTools == null) fJavaTextTools= new JavaTextTools(getPreferenceStore());  return fJavaTextTools; }  Thread [main] (Suspended)  org.eclipse.core.runtime.Preferences.getString(java.lang.String) line: 1066  org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.get String(java.lang.String) line: 320  org.eclipse.jface.preference.PreferenceConverter.getColor (org.eclipse.jface.preference.IPreferenceStore, java.lang.String) line: 157  org.eclipse.jdt.internal.ui.text.java.JavaCodeScanner (org.eclipse.jdt.internal.ui.text.AbstractJavaScanner).addToken (java.lang.String, java.lang.String) line: 82 org.eclipse.jdt.internal.ui.text.java.JavaCodeScanner (org.eclipse.jdt.internal.ui.text.AbstractJavaScanner).initialize() line: 75 org.eclipse.jdt.internal.ui.text.java.JavaCodeScanner. < init > (org.eclipse.jdt.ui.text.IColorManager,  org.eclipse.jface.preference.IPreferenceStore) line: 117 org.eclipse.jdt.ui.text.JavaTextTools. < init > (org.eclipse.jface.preference.IPreferenceStore) line: 68  com.ibm.etools.microflow.ui.MicroflowPlugin.getJavaTextTools() line: 280  com.ibm.etools.microflow.ui.MicroflowNestedJavaEditor. < init > () line: 18  com.ibm.etools.microflow.ui.MicroflowGraphicalAndTextEditor. < init > ()  line: 42 com.ibm.etools.microflow.ui.MicroflowMultiPageEditor. < init > () line: 33  java.lang.Class.newInstanceImpl() line: not available [native method] java.lang.Class.newInstance() line: 1411  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExte nsion(java.lang.String, java.lang.Object,  org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 136 org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExte nsion(java.lang.String, java.lang.String, java.lang.Object, org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 165  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutable Extension(java.lang.String) line: 96  org.eclipse.ui.internal.WorkbenchPlugin.createExtension (org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 112  org.eclipse.ui.internal.EditorManager$3.run() line: 538 org.eclipse.core.internal.runtime.InternalPlatform.run (org.eclipse.core.runtime.ISafeRunnable) line: 838 org.eclipse.core.runtime.Platform.run (org.eclipse.core.runtime.ISafeRunnable) line: 411 org.eclipse.ui.internal.EditorManager.createPart (org.eclipse.ui.internal.registry.EditorDescriptor) line: 536 org.eclipse.ui.internal.EditorManager.openInternalEditor (org.eclipse.ui.internal.registry.EditorDescriptor, org.eclipse.ui.IEditorInput, boolean) line: 526  org.eclipse.ui.internal.EditorManager.openEditor (org.eclipse.ui.internal.registry.EditorDescriptor,  org.eclipse.ui.IEditorInput) line: 361 org.eclipse.ui.internal.EditorManager.openEditor(java.lang.String,  org.eclipse.ui.IEditorInput) line: 264 org.eclipse.ui.internal.WorkbenchPage.openEditor (org.eclipse.ui.IEditorInput, java.lang.String, boolean, boolean, org.eclipse.core.resources.IFile) line: 1559  org.eclipse.ui.internal.WorkbenchPage.openEditor (org.eclipse.core.resources.IFile, java.lang.String) line: 1460  org.eclipse.ui.actions.OpenWithMenu.openEditor (org.eclipse.ui.IEditorDescriptor) line: 228  org.eclipse.ui.actions.OpenWithMenu.access$0 (org.eclipse.ui.actions.OpenWithMenu, org.eclipse.ui.IEditorDescriptor) line:  222 org.eclipse.ui.actions.OpenWithMenu$2.handleEvent (org.eclipse.swt.widgets.Event) line: 149 org.eclipse.swt.widgets.EventTable.sendEvent (org.eclipse.swt.widgets.Event) line: 75 org.eclipse.swt.widgets.MenuItem (org.eclipse.swt.widgets.Widget).notifyListeners(int, org.eclipse.swt.widgets.Event) line: 637  org.eclipse.swt.widgets.Display.runDeferredEvents() line: 1412 org.eclipse.swt.widgets.Display.readAndDispatch() line: 1208  org.eclipse.ui.internal.Workbench.runEventLoop() line: 836 org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 819  org.eclipse.core.internal.boot.InternalBootLoader.run (java.lang.String, java.net.URL, java.lang.String, java.lang.String[]) line: 777  org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, java.lang.String, java.lang.String[]) line: 319 EclipseRuntimeLauncher.main(java.lang.String[]) line: 14 I'm not sure whether this should be logged against UI or Core, so I flipped a  coin and Core won. But I added DJ to the cc list just to be safe < g > . Please  remove yourself if you don't think that this is a Core problem. Should change IPreferenceStore to use " " , and change PreferenceConverter to  play it safe and use equals (check other methods as well). The use of == to compare with IPreferenceStore.STRING_DEFAULT_DEFAULT was replaced after M% with a call to =equals(). IPreferenceStore.STRING_DEFAULT_DEFAULT has been changed to be " " Marking as closed.
Platform	Support for back-out of deletions required In order to provide 1.0 capability, the sync view must support the back-out of  incoming and outgoing deletions in the catchup-release mode Very important.   Backout of outgoing deletion = update the file Backout of incoming deletion = merge to make outgoing then commit file Added support for releasing over incoming deletions and catching up over  outgoing additions, in the Incoming/Outgoing mode of the sync viewer. Remaining bugs (involving folders) logged separately for tracking.
JDT	[navigation] Double-click in outline should activate editor - open a java file - select a method in its outline view - it scrolls to the right place - double-click on it - nothing happens  It would be better if it activated the editor. This is particularly helpful when keyboard navigating. I could hit CTRL+ALT+O to get to the Outline (or use the new CTRL+F7 view switcher), select the item I want, then hit Enter, and it would jump me back to  the editor at the right place. This would work very nicely if the outline was a fast view too.  If this is not a general outline problem, but should be handled by the Java outline page, please bump up to JDT.  It would be good if we could have a fix for this by our mouse-free day on Monday, Nov. 19th. Thanks. In theory we could add support to ContentOutlinePage to move the focus to the  active editor but we would not know where to locate the cursor. This needs to be implemented by JDT. Note that they are already doing it in the case of a method in the packages view and hierarchy view. Provided the class is not already open, double- clicking or pressing enter will move focus to the editor at the correct location. The same behavior needs to occur in these three views when the editor  is already open. Same for Search. There is the fast view issue. Activating the editor would result in hidding the  fast view. This would mean the outliner and search could not be used as fast views. Unless the fast view issue can be resolved in another way we should not  activate the editor. At least for the outline, I want it to disappear when I hit Enter on an item. This makes keyboard navigation pretty easy, while still giving lots of screen real-estate to the editor. giving focus to the editor when opening from the outliner is OK when the  outliner is used as a fast view. However, need to check with Kai for more background. This changed shortly before 0.9 and there was some rational behind  it. not for 2.0 *** Bug 51886 has been marked as a duplicate of this bug. *** . *** Bug 156843 has been marked as a duplicate of this bug. *** The guidelines must be defined first. Get rid of deprecated state.
Platform	Error parsing version " null " I20020530 Set up typical self-hosting configuration (Team projects from repository, all other plug-ins from binary projects). Launched self-hosting workspace. Got following in the console: Error parsing version " null " for plugin: org.eclipse.platform in Workbench.readFeaturesInfo() The workbench did come up as expected, however. I don't know if there were any side-effects. On the subsequent launch, I got the following (accompanied by an error dialog):  Error parsing version " null " for plugin: org.eclipse.platform in Workbench.readFeaturesInfo() Unable to restore editor - cannot instantiate input element: org.eclipse.ui.internal.dialogs.WelcomeEditorInputFactory When lauching the target BootLoader.getCurrentPlatformConfiguration().getConfiguredFeatureEntries(); is returning a single entry with its version as null instead of the expected  collection of features. In the past I have been able to make this go away by specifying the -update  command line option on the target. However this is a very common scenario for eclipse developers and it has to  work effortlessly. Not sure if this is an Undateor PDE issue. This will be a problem .... not sure if can be fixed for 2.0. I'll look at it,  but the general issue is that Update and PDE are " fighting " over control of what  gets to run. UI should tolerate the " null " so we don't end up with messages in  log. Will look at what could be done in PDE/ update. added Randy to cc: please read previous post. We can tolerate the null but it means that we have no feature info. Thus the  about dialog will not work in a target. *** Bug 18451 has been marked as a duplicate of this bug. *** Suppressed error message unless -debug flag is present Note that in the target the feature icons will not show in the about dialog and the about features dialog will be empty, however this will be noticed by  about 99% fewer users than the error message. Workaround is to specify -update on the commnand line. This will ask you to  restart. If you have already run then also delete your .metadata/.config/platform.cfg  file This also causes bug 18561.  However, in this case it does not make sense for us to suppress the error message.  This is just a regular editor that wants to restore itself, and  cannot recreate its input element because it does not have the feature info. So it returns null, and the workbench does the complaining for it. But the workbench doesn't know that it was due to missing feature info. Note that for bug 18561, I am specifying -update on the target's command line,  but it makes no difference. F3 candidate *** Bug 23923 has been marked as a duplicate of this bug. *** *** This bug has been marked as a duplicate of 21848 ***
Platform	Replace with version *creates* outgoing changes Having a project in sync with the stream:  * Replace with an old version * Synchronize with stream  The changes are all outgoing changes. I would expect it to be incoming changes since I replaced my project with an older version. I can be confusing to the  user. Yes, this can be confusing. The reason they are outgoing changes is because the  files have been modified since they were last loaded from HEAD. This allows the user to revert HEAD (or any branch) to contain the resources from a previous  version (i.e. back out unwanted changes). *** This bug has been marked as a duplicate of 7327 ***
Platform	If the user never changes the Ant classpath, it should always be computed build F2  Currently, the first time Eclipse runs, the Ant classpath is computed and saved on exit even if the user has not changed it. If the user gets a new  version of Eclipse and installs it in a different location, the Ant classpath is incorrect. In order to make it better the classpath should only be saved if the user has changed it. Otherwise, it should always be computed. Defer after 2.0. Reconsider. If ant classpath is the default ant classpath, it is not stored as a preference. This has the side effect of the default ant classpath always being computed if no custom classpath is set. Please verify changes to AntCorePreferences. Please verify (Darin W) Note that if the user has been using a workspace for some time and has changed  the installed version of Eclipse, the default classpath will not be correct. The user will have to " restore default " on the External Tools- > Ant preference  page to fix the problem.  After this single intervention by the user, older workspaces will stay up to date. That is exactly why I've opened this bug :-) If a workspace has been used on the old codebase there is no way to tell that  the persisted classpath is an o ld default classpath.  Any workspace that is  only used on the new codebase can never get into this state (the default classpath is never persisted). Reopening to reassign for M2 verification. Please verify Darin W Verified. (But I'm going to open a new feature request... :-)
JDT	Hover stack trace (debug mode on) (patched) M5.  No analysis on this.  I have the following entry in my log several times. Is this " normal " ?  (Using IBM JDK 1.3.0 20010502) !STACK org.eclipse.debug.core.DebugException[5010]: com.sun.jdi.InvalidStackFrameException  at org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler (MirrorImpl.java:247)  at org.eclipse.jdi.internal.StackFrameImpl.thisObject (StackFrameImpl.java:192)  at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject (JDIStackFrame.java:606) at  org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.updateVariables (JDIStackFrame.java:392)  at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables0 (JDIStackFrame.java:263)  at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.findVariable (JDIStackFrame.java:547)  at org.eclipse.jdt.internal.debug.core.model.JDIThread.findVariable (JDIThread.java:1338)  at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.findVariable (JDIDebugTarget.java:1351)  at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo (JavaDebugHover.java:74)  at org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInfo (JavaTextHover.java:304) at org.eclipse.jface.text.TextViewerHoverManager.computeInformation (TextViewerHoverManager.java:56) at  org.eclipse.jface.text.AbstractInformationControlManager.showInformation (AbstractInformationControlManager.java:536) at  org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouse Hover(AbstractHoverInformationControlManager.java:233)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java (Compiled Code))  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:848) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.Main.main(Main.java:390) This is not harmful - it means we were attempting to retrieve hover help for a  variable in a java editor while the program was running. We should handle the error more gracefully, since we can detect the error state before/and after it  occurrs (i.e. check if the thread is running before asking for a variable, and if the thread happens to resume, we can check the status code on the resulting  exception, and not log and error). *** This bug has been marked as a duplicate of 13948 ***
Platform	professionnal editor features: cursor smart move Smart cursor positionning: mouse click, left and right arrow key records the cursor colums, up and down arrow keys restore the cursor at the recorded column. Extremely annoying to have to move back the cursor everytime when doing multiple line operations (like multiple pastes) This is the same as bug 23057 which has been resolved. *** This bug has been marked as a duplicate of 23057 ***
Platform	Find/Replace dialog does not stay on top 0917 integration build, happens on Solaris only  - open a Java Editor, click in it - Edit - > Find/Replace... - > opens Find/Replace dialog - click on the workbench and the Find/Replace dialog will disappear - it was actually sent behind the workbench, which should not happen - tried to duplicate this on the control example's Shells tab but could not GG to investigate and advise.  How is this dialog created in Eclipse?  Who is the parent? Here is the test case:  import org.eclipse.swt.SWT; import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Shell; public class PR23756 {   public static void main(String[] args) {   Display display = new Display(); final Shell shell = new Shell(display);   shell.setText ( " Workbench " );   shell.open(); //same style used int FindReplace dialog   int style = SWT.CLOSE | SWT.MODELESS | SWT.BORDER | SWT.TITLE; Shell findReplace = new Shell (shell, style);   findReplace.setText( " Find Replace " );   findReplace.open(); shell.open(); while (!shell.isDisposed()) {    if (!display.readAndDispatch()) display.sleep();   } display.dispose();  } } When a shell has a parent it should always stay on top of it, but for some reason, in Solaris if you have SWT.MODELESS set on the child shell the window manager allow the parent shell to go on top of the child shell. Side note: This has apparently never worked.  It happens at least as far back  as the November 7 2001 build. This is the Solaris behaviour, so there isn't much we can do here.  The same  difference happens for programs like Netscape.
Platform	4-part version id not recognized when using build.properties The support for 4-part version ids is in BuildZip example. Should consider  adding this to base plugin parsing. fixed
Platform	SWTException: Message should contain wrapped throwable All I currently have in my log are stack traces like this:  org.eclipse.swt.SWTException: Failed to execute runnable Stack trace:    java/lang/Throwable. < init > ()V    java/lang/Throwable. < init > (Ljava/lang/String;)V    org/eclipse/swt/SWTException. < init > (ILjava/lang/String;)V    org/eclipse/swt/SWTException. < init > (I)V    org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V org/eclipse/swt/widgets/Synchronizer.runAsyncMessages()Z    org/eclipse/swt/widgets/Display.runAsyncMessages()Z ..  Please add the stacktrace of the wrapped throwable to the swt-message. Otherwise, debugging becomes very hard. See comments in PR 6312.  *** This bug has been marked as a duplicate of 6312 ***
JDT	Usability: Add exception computes hierarchy on each key stroke Build 20020122  When addi ng an exception breakpoint using the ' Add exception ' dialog, a new  super type hierarchy is computed on each key stroke which makes it sometimes very slow (depending on the depth of the hierarchy). I know we inherited this code from JUI, but please take a look to see if we can  make any simple optimizations. It seems that we should only have to compute the hierarchy once. There is no hierachy calculations occurring.  We simple ask for all types that  are classes and add all of the results into a filtered list. There are other prs about making the add exception dialog better by making use of the changes  to the open type dialog. Propose to close. Closed. I was wrong...AddExceptionDialog#getExceptionType(IType) Hierarchy is now only computed when the user has hit OK.  In most cases the  user knows what exception they are looking for and are unlikely to pick something that is not an exception.  If a non-exception class is selected and  OK is hit, we update the status to indicate the problem. Please verify. Verified
JDT	Mnemonic collision in Edit menu Open a Java file. Edit- > E & ncodings, Co & ntent Assist. Also & Incremental Find, Parameter H & ints And Source- > Co & mment, Add I & mport. Till can you try to come up with a mnemonic assignment without collisions Done. changed milestone from F1 to F2 Reassigned since to code ownership changed Without renaming menu items we always will see conflicts.
Platform	The two runtime distributions include license.html. The two runtime distributions include license.html.  While we're OK from a  license and attachment standpoint, I think we should remove license.html to make these pure redistributable runtime distributions.  Another option w ould be to say delete the file as part of the instructions in  the Redist attachement.... These have been removed.
JDT	Allow mutli selection for all browsers This should clear downstream Fixed > 20020321
JDT	surprising behavior after hitting ' run ' when the ' run ' toolbar button is pressed, eclipse launches what's on the top of  the ' last run ' list.  however, favorites never end up in that list so hitting ' run ' after you've run  one of your favorites launches something else than you expect. i guess, favorites should be added to that list too We need to (or used to) keep track of the " last launch " seperate from the  history or favorites to ensure that a favorite launched form the drop down becomes the " last launched " . There are additional problems here: (1) Simply re-ordering the history was NOT generating a launch history changed notification. (2) How to handle launches that don't support both  modes?  Decision is to always have both relaunch actions stay in synch.  If a debug only launch is done, the a Run relaunch is done, an error dialog is shown. Fixed all three problems.  Favorites are now considered for ' last launched ' .  Changing order of  history item causes history changed notification.  Last Debug & Run always point to same config.   If attempt is made to relaunch config in an unsupported mode, error dialog is shown. Please verify. Verified.
Platform	[HELP] Hover help not displayed for disabled buttons Build 20020918 Linux-Motif If a button is disabled, hovering the mouse over it will not summon hover  help. This hides valuable information ( " What does this button do? " ) from the  user. Hover help should work for buttons regardless of their enabled state. This is expected platform behaviour.  Toolbar buttons are native widget on gtk  and motif (not emulated by Eclipse).  If you open other applications you will notice similar behaviour.
JDT	junit preference pages miss ' restore defaults ' [JUnit] junit preference pages miss ' restore defaults ' . not critical for now - defer will be fixed by Bug #9525 applied patch in 9525
JDT	Remove SnippetSupportBreakpoint SnippetSupprotBreakpoint will be removed from the debug model as API. The snippet editor will use a " run-to-line " breakpoint instead, with  a hit count of zero (so it is always hit, and does not appear in the breakpoint view).   The tricky part is that the IType supplied to create the breakpoint does not exist in the workspace (i.e. it is a type in a the snippet support jar). We will have to make a dummy type that delegates to the underlying type handle, but provides an implementation for #getUnderlyingResource - to reutrn the project that the scrapbook is in. (the BP marker will be associated with the proejct that way - must have a resource for which to create marker on). Fixed.  Changed JavaLineBreakpoint.getResource(IType) to use the project resource for the type if the actual type does not exist as a resource. This simplifies the  implemetnation (rather than making a dummy IType, which clients are not supposed to implement).  Re-assigning for verification. Please verify. The refactoring looks good.   However, there are still references to SnippetSupportLineBreakpoints in the XML. They appear to be unused, but when I tried to remove them, my snippet evaluations started failing. Also, it's unclear if but 5715 is related to this change. Removed plug-in XML for Scrapbook breakpoints. Verified scrapbook evaluation  works as before (new java.util.Date()). Re-open to re-assign Re-assigning. Please verify. There is still a marker definition for snippetSupportLineBreakpoint in org.eclipse.jdt.debug.plugin.xml. Is it there intentionally? Removed reference. Re-tested and all is still good. Verified. Looks good.
Platform	Turning off/on cvs decorators makes workspace unresponsive Build 20020305 Team 2.0 I have 10 projects shared via the CVS. 5 live in dev.eclipse.org (extssh) 5 live in zrhcvs.zrh.oti.com (pserver)  In the Java perspective, no editors open, tasks list and packages view.  The packages view has no hierarchies expanded (only showing projects). Turning off cvs decorators is immediate. Turn the cvs decorators back on: 30 seconds. No busy cursor and my workbench is not responsive. Disabling " Compute deep outgoing state... " on the decorator preferences locked  up the workspace/computer for another 2 minutes. Turing it back on, another 2 minutes. *** Bug 10904 has been marked as a duplicate of this bug. *** Ouch. I see this too. This is new behaviour; we must fix this for the next integration build. Correction. The behaviour I was seeing was due to another problem which is not in the builds but only in our latest; it's currently being fixed.  I've tried to reproduce this but cannot. Turning the CVS decorator on and off is instantaneous. While some of the decorations (especially those computed deeply) don't show up right away, this intentional - they are computed in another thread and the UI updates when they are ready. But at no time was I able to cause the workbench to become unresponsive. I will keep trying.  Also note that the repository is not contacted when decorating, so the location of the projects *should* be irrelevant. I got your workspace. I cannot reproduce this problem on Win2K or on Linux. Trying NT... Hmm, two seconds after I replied, I am now seeing this on Win2K for some reason. Investigating. Turn team decorators off. Now toggle the binary plugin decorator on and off. Do you see the same sort of freeze? I see a noticeable freeze when doing this. This would indicate to me that it's not a problem with the Team decorators. Investigating further... I have shown this to Tod, he asked for it to be assigned to him. Awaiting example workspace from JM. Sent workspace to Tod May be related to Bug 11140. When I started this image up I found that refreshListeners on  getDecoratorManager was called 677 times on startup. Supported added for multi element label updates and decoration of text and  images. The IBatchLabelDecorator (which extends ILabelDecorator) has been added that  allows for Decoration of an Image and a Text in the same method invocation using the decorateTextAndImage method.  The LabelProviderChangedEvent can now accept an Array of Objects as its elements. The default handleLabelProviderChanged method in StructuredViewer now  calls update(Object[] ,String[]) rather than update(Object,String[] ). The  previous getElement() API remains and now returns the first element in the list of elements if there is one (otherwise null as before). Marking closed as dependant PRs are fixed and performance has improved. Marking as closed.
JDT	eclipse junit: DCR clear view (1GJC2W8) [JUnit] AK (8/31/2001 7:31:25 PM)  there could be a button that would allow me to clear the contents of the junit result view. NOTES: moved to ' active ' defer Implementation notes:  after clearing the failure trace one can click on a " failure " test case again to see the trace again. copied the icon from debug; did not rename it Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state. fix provided The patch only clears the failure stack trace view. Adam - is this what you were asking for? Also do you still see a need for a clear action?  I'd like to add several additional actions in the toolbar and therefore we  should really include actions that are indeed useful. > The patch only clears the failure stack trace view. > Adam - is this what you were asking for?   what i thought about was a ' reset view ' button - it'd reset the whole thing to  zero, clear everything > Also do you still see a need for a clear action? nope, not really. it does not bother me anymore so it's fine by me if you want to close this one Opt to close unless there are user requests for this features we should not add  this action. (sebastian thanks for the patch anyways)
Platform	Missing common interface ISite Build 20020402  Currently thr workbench provides the sides IPageSite, IWorkbenchPartSite. Although they have common methods they miss a common interface. This makes  writing actions that work in the outline and a normal view hard. Please introduce a common interface. Should do this, but call it IWorkbenchSite.  ISite would imply something more  general (perhaps even headless). Should have get method for page, window, shell and selection provider. Perhaps registerContextMenu too, although I'd prefer not to assume that any  site in the workbench will have an extendable context menu.  Even assuming every site allows a selection provider, or that it's in a page (as opposed to  just window -- e.g. action sets) seems somewhat dicey. Added IWorkbenchSite as a common interface. > 20020411
JDT	Non-java project gets .classpath Build 20020515  - I had a binary project in my workspace, which was not a Java project (org.eclipse.platform.win32) - replaced it with source from repository - it's still not a Java project, according to the .project file and the  project icon (no J decoration) - however, it got a .classpath file added  Its .project file contains: < ?xml version= " 1.0 " encoding= " UTF-8 " ? > < projectDescription > < name > org.eclipse.platform.win32 < /name > < comment > < /comment > < projects > < /projects > < buildSpec > < /buildSpec > < natures > < nature > org.eclipse.team.cvs.core.cvsnature < /nature > < /natures > < /projectDescription > May be related to bug 16138 This is fairly annoying as it dirties the project when I haven't actually made  any changes.  If I try to delete the file it reappears immediately. If I delete the binary project first (including contents), then reload from  source, the problem does not occur. moving to JDT Core for investigation. could be related to 19058 Actually, this would rather be a duplicate of bug 18698 Nick, I don't see source for org.eclipse.platform.win32 in dev.eclipse.org  (this project contains no .java file). What are your exact steps? Correct.  It has no .java files because it's not a Java project.  However, it  still gets a .classpath when loaded from the repository. Still occurs on F2.  The steps are: - import org.eclipse.platform.win32 as a binary project (using PDE importer) - switch to Navigator view to see it - load org.eclipse.platform.win32 from dev.eclipse.org using CVS repositories view - notice that it now has a .classpath file - notice that the .project file does not include the Java nature.  Philippe says this is a dup of bug 18698, which has apparently been fixed since F2. This is not a dup of bug 18698 as I can reproduce in our latest.  Note that when the project was imported using PDE import, it was given the java nature and a .classpath file was created. When the project is imported from the  repository, it looses its java nature BUT the .classpath is not removed. Simpler test case: 1. Create Java project Observe: a .classpath is created 2. Edit .project file and remove the java builder and java nature Observe: the .classpath is still present. Will consider post 2.0. This is a really a PDE problem then.  It shouldn't generate a .classpath if  it's not a Java project. Leaving PR here though since you might consider (2) a JDT Core issue. Not critical for 2.0. *** Bug 20485 has been marked as a duplicate of this bug. *** Actually, I didn't realize (even if Nick said it :-) that the user could not  remove the .classpath at all (it is constantly recreated). Reconsidering for 2.0. Simpler test case is: 1. Create simple project 2. Add .classpath file in this project 3. Try to delete the .classpath file Observe: The .classpath file is recreated right away. Problem is with DeltaProcessor.performPreBuildCheck which traverses even non- java project. Proposed fix:  /** * Check whether the updated file is affecting some of the properties  of a given project (like * its classpath persisted as a file).   * Also force classpath problems to be refresh if not running in autobuild mode.   * NOTE: It can induce resource changes, and cannot be called during POST_CHANGE notification.   * */  public void performPreBuildCheck( IResourceDelta delta,   IJavaElement parent) { IResource resource = delta.getResource(); IJavaElement element = JavaCore.create(resource);   boolean processChildren = false; switch (resource.getType()) { case IResource.ROOT : if (delta.getKind() == IResourceDelta.CHANGED) {      processChildren = true; }     break; case IResource.PROJECT :     if (delta.getKind() == IResourceDelta.CHANGED & & this.hasJavaNature(resource)) {      processChildren = true; }     break; case IResource.FILE :     if (parent.getElementType() == IJavaElement.JAVA_PROJECT) {      IFile file = (IFile) resource; JavaProject project = (JavaProject)  parent; /* check classpath property file change */      QualifiedName classpathProp; if (file.getName().equals( project.computeSharedPropertyFileName(         classpathProp = project.getClasspathPropertyName()))) { switch (delta.getKind()) {        case IResourceDelta.REMOVED : // recreate one based on in-memory path         try { project.saveClasspath(project.getRawClasspath(), project.getOutputLocation());         } catch (JavaModelException e) {          if (project.getProject().isAccessible()) { Util.log(e, " Could not save classpath for " + project.getPath()); //$NON- NLS-1$ }         } break;        case IResourceDelta.CHANGED :         if ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break; // only consider content change        case IResourceDelta.ADDED :         // check if any actual difference project.flushClasspathProblemMarkers(false, true);         try { //  force to (re)read the property file IClasspathEntry[] fileEntries = null;          try { String fileClasspathString = project.loadClasspath(); if (fileClasspathString != null) { fileEntries = project.readPaths(fileClasspathString); } } catch (JavaModelException e) { if (project.getProject().isAccessible()) { Util.log(e, " Exception while retrieving " + project.getPath() //$NON-NLS-1$ + " /.classpath, ignore change " ); //$NON-NLS-1$ } project.createClasspathProblemMarker( Util.bind( " classpath.cannotReadClasspathFile " , project.getElementName ()), //$NON-NLS-1$ IMarker.SEVERITY_ERROR, false, //  cycle error true); // file format error } catch  (IOException e) { if (project.getProject().isAccessible()) { Util.log(e, " Exception while retrieving " + project.getPath() //$NON-NLS-1$ + " /.classpath, ignore change " ); //$NON-NLS-1$ } project.createClasspathProblemMarker( Util.bind( " classpath.cannotReadClasspathFile " , project.getElementName ()), //$NON-NLS-1$ IMarker.SEVERITY_ERROR, false, //  cycle error true); // file format error }          if (fileEntries == null) break; // could not read, ignore           if (project.isClasspathEqualsTo(project.getRawClasspath(),  project.getOutputLocation(), fileEntries)) break; // will force an update of the classpath/output location based on the file information          // extract out the output location          IPath outputLocation = null;          if (fileEntries != null & & fileEntries.length > 0) { IClasspathEntry entry = fileEntries[fileEntries.length - 1]; if (entry.getContentKind() == ClasspathEntry.K_OUTPUT) { outputLocation = entry.getPath(); IClasspathEntry[] copy = new IClasspathEntry[fileEntries.length - 1]; System.arraycopy(fileEntries, 0, copy, 0, copy.length); fileEntries = copy; } }          // restore output location              if (outputLocation == null) { outputLocation = SetClasspathOperation.ReuseOutputLocation;          } project.setRawClasspath( fileEntries, outputLocation, null, // monitor true, // canChangeResource false, // forceSave project.getResolvedClasspath(true), // ignoreUnresolvedVariable true, // needCycleCheck true); // needValidation } catch  (RuntimeException e) { //  setRawClasspath might fire a delta, and a listener may throw an exception if  (project.getProject().isAccessible()) { Util.log(e, " Could not set classpath for " + project.getPath()); //$NON- NLS-1$ }          break; } catch  (CoreException e) { //  happens if the .classpath could not be written to disk if  (project.getProject().isAccessible()) { Util.log(e, " Could not set classpath for " + project.getPath()); //$NON- NLS-1$ }          break; } }      } }     break; }   if (processChildren) { IResourceDelta[] children = delta.getAffectedChildren(); for (int i = 0; i < children.length; i++) {     performPreBuildCheck(children[i] , element);    } }  } Note that with this fix, the .classpath is not deleted when the project looses  its java nature, but the user CAN now delete it manually. Does it also prevent the project from being marked dirty when converted from  binary to source? I actually care more about the dirty indication than the free .classpath file. I'll assume you convert the project from binary to source by checking out the  project as you first described. In this case, the .classpath is removed (I guess by Team) and it is not being recreated, so the project is not dirty. Correct, when you do a CVS Checkout from the repo browser, all files (but not  the project itself) are deleted and new ones written. Preventing the re-generation of the .classpath is goodness. Fix is trivial, simply ignore delta on .classpath file if not belong to project  with java nature. Consequences are fairly nasty if not fixed, .classpath file is recreated instantaneously and causing confusion. Should fix for F4 Indeed the fix is trivial and should be fixed for F4. The problem does not exists in 1.0. Entered bug 20708 to reflect that JDT/Core still needs to remove the .classpath  file when a project looses its java nature. Fix got approved, released in 20020620. Verified.
Platform	[Dialogs] SaveAsDialog should not assume what is being saved is an IFile It is already possible to save an IStorage and no doubt other types will be added in the future. Currently, setOriginalFile() is used to: 1) determine the default path; 2) determine the default file name (I know, part of the path but logically distinct and distinct in the dialog); 3) determine the default extension.  If something other than a file is saved as, none of the three work. At a minimum, there should be a way to specify a default file name as a String. This would allow 2 and 3 to work in the dialog. I would be happy to submit code for this if desired. We would very much like to see your suggestions Bob - please attach them to  this PR. Method is actually called setOriginalName().  Note package name in attachment changed for testing here. To see it work, must be accompanied by fix to TextEditor (and others?). See bug 23066. With the new method, the relevant snippet in TextEditor performSaveAs() should look like this:    SaveAsDialog dialog = new SaveAsDialog(shell); IEditorInput input = getEditorInput(); IFile original = (input instanceof IFileEditorInput) ? ((IFileEditorInput) input).getFile() : null; if (original != null)    dialog.setOriginalFile(original); else    dialog.setOriginalName(input.getName()); dialog.create(); Fix to be considered when Text change in Bug 23066 is made. Is this fixed in Build > 20020910 as well? No - Bug 23066 won't be in until 20020917 so this fix will not be addressed  until then. Upping priority as this is ready to consider now. Ok, thanks. Reason I asked, resolution changed to FIXED. (I see it's cleared now.) Must be an artifact of the dependency tree. Confusing. Kai has fixed his part so now we can look at this -the PRs are different and  you are cc ' ed on each - I think that is what confused you.  Bob could you possibly resubmit your changes as a patch? There are some formatting differences that are making too many changes show up. Thanks - I am  looking at this now. Changes released into HEAD Stream. Will come into effect in build 20020917.   Welcome to the list of Eclipse contributors! Tod, I have difficulties to understand what the relation of the two PRs (this  one and bug #23066) is. Both are mentioning the SaveAs dialog. What else? If you look at Bobs suggested TextEditor code in this PR he suggests that the  new API is also used by the TextEditor in performSaveAs(): SaveAsDialog dialog = new SaveAsDialog(shell);    IEditorInput input = getEditorInput(); IFile original = (input instanceof IFileEditorInput) ? ((IFileEditorInput) input).getFile() : null; if (original != null)    dialog.setOriginalFile(original); else    dialog.setOriginalName(input.getName()); dialog.create(); Marking closed Is that anything like fixed? It was marked fixed 2002-09-11 15:30:12 - I am closing it to tidy up. If you think this is still an issue please reopen and let us know why.
Platform	' Run ' item on File Context Menu It would be very helpful to have a ' Run ' item on the file context menu.  This  would have a sub-menu which would include all the items currently on the existing ' Run ' dropdown.  It would also be nice if Run menu items were smarter  about when they're enabled.  For example, Run wouldn't be enabled at all if the  file doesn't have a main() method and isn't a JUnit Test. In addition to adding ' Run ' to the file context menu in the package explorer,  it would be very helpful to add it to the file tab context menu as well. This is contributed by debug. The difficulty here is that an action in a menu must determine its enablement  state in " zero " time. To determine if applicable, the action would have to  parse a file, and perhaps create a type hierarchy. Worse, the " run " action is  not java specific - it pertains to all types of launch configuraitons. Thus, we removed this menu action in 2.0.   *** This bug has been marked as a duplicate of 18338 ***
Platform	TVT - " widget is disposed " should be translated Found by the German tester  German Tester got an internal error message  box. The msg itself looks as if variables are  strung together creating " germlish " : " An internal error occurred(this in German). Widget is disposed (English) See error log for details (again in German) " Also, WSWB TVT checked and this string is NOT in the translatable material that they got from Eclipse.  So the  message, " widget is disposed " must be enabled before it can be translated. Error message provided by SWT. Moving PR. Internal error messages are not translated.
Platform	Dialog box: no sound? (1GGLY2N) SWT Dialog boxes in Windows do not make sound events unlike WIN32 ones...  People who are used to sound events of most Windows applications might find SWT apps inconsistent. NOTES:  SN (8/31/01 10:27:35 AM) We are using the standard Windows dialog boxes and not disabling sound.  If the Windows dialog makes a sound, we will make a sound.  Can you provide an example of a dialog that should make a sound but does not? PRODUCT VERSION: SDK 125 Windows 2000 We would need to provide API to make the right o/s sound.
Platform	IndexedStore exceptions during save Build 20011025.  Workspace first created in 20011018 build.  When I tried to shutdown my workspace today I got errors in the index store on shutdown.  Stack trace follows:  Log: Tue Oct 30 15:15:38 EST 2001 1 org.eclipse.core.resources 4 Problems saving workspace Log: Tue Oct 30 15:15:38 EST 2001 2 org.eclipse.ui 1 Problems occurred while trying to save the state of the  workbench. 1============= < children > =============  2 org.eclipse.core.resources 566 Problems occurred during save. org.eclipse.core.internal.resources.ResourceException()[272]: org.eclipse.core.internal.resources.ResourceException()[272]: IndexedStoreException:Object was not stored. at  org.eclipse.core.internal.indexing.IndexedStore.insertObject(IndexedStore.java:3 04)  at org.eclipse.core.internal.indexing.IndexedStore.createObject(IndexedStore.java:1 76) at  org.eclipse.core.internal.indexing.IndexedStore.createObject(IndexedStore.java:1 85)  at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject(IndexedSto reWrapper.java:154) at  org.eclipse.core.internal.properties.PropertyStore.basicUpdate(PropertyStore.jav a:87)  at org.eclipse.core.internal.properties.PropertyStore.commonSet(PropertyStore.java: 106) at  org.eclipse.core.internal.properties.PropertyStore.set(PropertyStore.java:415) at  org.eclipse.core.internal.properties.PropertyManager.setProperty(PropertyManager .java:151)  at org.eclipse.core.internal.resources.Resource.setPersistentProperty(Resource.java :890) at  org.eclipse.jdt.internal.core.JavaModelManager.saveVariables(JavaModelManager.ja va:955)  at org.eclipse.jdt.internal.core.JavaModelManager.saving(JavaModelManager.java:966)  at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.jav a:244) at  org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:87) at  org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java(Com piled Code))  at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code)) at  org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.j ava:98)  at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1073)  at org.eclipse.core.internal.resources.Workspace.save(Workspace.java:1211)  at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178) at  org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:29 6)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at  org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:3 35)  at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace(Workbench.java:185)  at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)  at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.Workbench.close(Workbench.java:155) at  org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:256) at  org.eclipse.ui.internal.WorkbenchWindow.access$3(WorkbenchWindow.java:251) at  org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:291) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:289)  at org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:462)  at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389) at  org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1022) at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:848)  at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))  at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code))  at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))  at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method) at  org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled Code))  at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled  Code)) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled  Code)) at  org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled  Code)) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled  Code)) at  org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled Code))  at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))  at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code))  at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))  at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled  Code)) at  org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:658)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:82 0) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:433) at org.eclipse.core.launcher.Main.main(Main.java:306)   4 org.eclipse.core.resources 272 Could not write property: org.eclipse.jdt.core variables. org.eclipse.core.internal.resources.ResourceException()[272] :  IndexedStoreException:Object was not stored. at  org.eclipse.core.internal.indexing.IndexedStore.insertObject(IndexedStore.java:3 04)  at org.eclipse.core.internal.indexing.IndexedStore.createObject(IndexedStore.java:1 76) at  org.eclipse.core.internal.indexing.IndexedStore.createObject(IndexedStore.java:1 85)  at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject(IndexedSto reWrapper.java:154) at  org.eclipse.core.internal.properties.PropertyStore.basicUpdate(PropertyStore.jav a:87)  at org.eclipse.core.internal.properties.PropertyStore.commonSet(PropertyStore.java: 106) at  org.eclipse.core.internal.properties.PropertyStore.set(PropertyStore.java:415) at  org.eclipse.core.internal.properties.PropertyManager.setProperty(PropertyManager .java:151)  at org.eclipse.core.internal.resources.Resource.setPersistentProperty(Resource.java :890) at  org.eclipse.jdt.internal.core.JavaModelManager.saveVariables(JavaModelManager.ja va:955)  at org.eclipse.jdt.internal.core.JavaModelManager.saving(JavaModelManager.java:966)  at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.jav a:244) at  org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:87) at  org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java(Com piled Code))  at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code)) at  org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.j ava:98)  at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1073)  at org.eclipse.core.internal.resources.Workspace.save(Workspace.java:1211)  at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178) at  org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:29 6)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at  org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:3 35)  at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace(Workbench.java:185)  at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)  at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.Workbench.close(Workbench.java:155) at  org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:256) at  org.eclipse.ui.internal.WorkbenchWindow.access$3(WorkbenchWindow.java:251) at  org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:291) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:289)  at org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:462) at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1022)  at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:848) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled  Code)) at  org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled  Code)) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled  Code)) at  org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled Code))  at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))  at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code))  at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))  at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method) at  org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled Code))  at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled  Code)) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled  Code)) at  org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled  Code)) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)  at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:658) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:82 0)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) 4 org.eclipse.core.resources 272 Could not write to  indexed store: d:\eclipse\target\plugins\.metadata\.plugins\org.eclipse.core.resources\.root\.p roperties. IndexedStoreException:Object was not stored.  at org.eclipse.core.internal.indexing.IndexedStore.insertObject(IndexedStore.java:3 04) at  org.eclipse.core.internal.indexing.IndexedStore.createObject(IndexedStore.java:1 76)  at org.eclipse.core.internal.indexing.IndexedStore.createObject(IndexedStore.java:1 85) at  org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject(IndexedSto reWrapper.java:154)  at org.eclipse.core.internal.properties.PropertyStore.basicUpdate(PropertyStore.jav a:87) at  org.eclipse.core.internal.properties.PropertyStore.commonSet(PropertyStore.java: 106)  at org.eclipse.core.internal.properties.PropertyStore.set(PropertyStore.java:415)  at org.eclipse.core.internal.properties.PropertyManager.setProperty(PropertyManager .java:151) at  org.eclipse.core.internal.resources.Resource.setPersistentProperty(Resource.java :890)  at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables(JavaModelManager.ja va:955) at  org.eclipse.jdt.internal.core.JavaModelManager.saving(JavaModelManager.java:966) at  org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.jav a:244)  at org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:87)  at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java(Com piled Code)) at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))  at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.j ava:98) at  org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1073) at  org.eclipse.core.internal.resources.Workspace.save(Workspace.java:1211) at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:29 6) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:3 35) at  org.eclipse.ui.internal.Workbench.disconnectFromWorkspace(Workbench.java:185) at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)  at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76) at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)  at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:256)  at org.eclipse.ui.internal.WorkbenchWindow.access$3(WorkbenchWindow.java:251)  at org.eclipse.ui.internal.WorkbenchWindow$1.run(WorkbenchWindow.java:291)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at  org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:289) at  org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:462) at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1022)  at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:848) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled  Code)) at  org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled  Code)) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled  Code)) at  org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled Code))  at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))  at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code))  at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))  at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method) at  org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled Code))  at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java(Compiled  Code)) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled  Code)) at  org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java(Compiled Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled  Code)) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)  at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:658) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:82 0)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) 1============= < /children > ============= Haven't seen this lately.  Closing.
Platform	Workbench Properties view should only show two columns  (1GGYUFQ) id  RATLC00002743   Priority: 2 Headline:  Workbench Properties view should only show two columns Description:  I noticed if you horizontally expand the pb, it will show a third column to the right of the value  column. That shouldn't be there. " Property Browser displays more columns than it should " Steps to reproduce: 1)Start the WSW  2) Resize the Property Browser until a third column appears to the right of the Property and value columns   Expected Result: Only two columns are displayed: Property and Value. The third column is not  needed and should not be displayed. IBM 1G7GHNT: ITPCLIENTS:WIN98   NOTES: GDA (8/27/01 9:24:38 AM)  Sounds like 1GGYUYK and this one are dups. customer says the following of the other pr (1GGYUFQ) when asked if  they are dups [CL] Sort of. Our property page always shows exactly two columns even after resizing the view, whereas the navigator property view show 2 or  3 columns depending on the width of the view. GDA (8/27/01 9:36:19 AM) Reminder there is a dup of this one called 1GGYUFQ PRODUCT VERSION: 0.9 @RATL-0.9 *** This bug has been marked as a duplicate of 2593 ***
JDT	IllegalArgumentException renaming project Build 20011211  1. Create java project Testing 2. In package view, rename Testing to Test Observe: You get the following exception in the .log: java.lang.IllegalArgumentException: Path must include project and resource name.         at org.eclipse.core.internal.utils.Assert.isLegal(Assert.java:50) at org.eclipse.core.internal.resources.Workspace.newResource (Workspace.java:1072) at org.eclipse.core.internal.resources.Container.getFolder (Container.java:125) at org.eclipse.jdt.internal.core.DeltaProcessor.elementRemoved (DeltaProcessor.java:535) at  org.eclipse.jdt.internal.core.DeltaProcessor.updateCurrentDeltaAndIndex (DeltaProcessor.java:791)         at org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta (DeltaProcessor.java:857)         at org.eclipse.jdt.internal.core.DeltaProcessor.processResourceDelta (DeltaProcessor.java:756)         at org.eclipse.jdt.internal.core.JavaModelManager.resourceChanged (JavaModelManager.java:1102)         at org.eclipse.core.internal.events.NotificationManager$1.run (NotificationManager.java:125)         at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:821)         at org.eclipse.core.runtime.Platform.run(Platform.java:395) at org.eclipse.core.internal.events.NotificationManager.notify (NotificationManager.java:140) at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:43) at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:64) at org.eclipse.core.internal.resources.Workspace.broadcastChanges (Workspace.java:121) at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:709) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1237) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at  org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange (PerformChangeOperation.java:143)         at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run (PerformChangeOperation.java:132)         at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296)         at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:713)         at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish (RefactoringWizard.java:307) at  org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage.performFinish (PreviewWizardPage.java:262)         at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish (RefactoringWizard.java:438)         at org.eclipse.jface.wizard.WizardDialog.finishPressed (WizardDialog.java:570)         at org.eclipse.jface.wizard.WizardDialog.buttonPressed (WizardDialog.java:311)         at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:211) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54)         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:635) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1368)         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1170) at org.eclipse.jface.window.Window.runEventLoop(Window.java:536)         at org.eclipse.jface.window.Window.open(Window.java:523) at  org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringAction.activateRefact oringWizard(RefactoringAction.java:111)         at org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$RenameSupport.rename (RefactoringSupportFactory.java:57) at org.eclipse.jdt.internal.ui.reorg.RenameAction.run (RenameAction.java:36) at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)         at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)         at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)         at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)         at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54)         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:635) *** Bug 7029 has been marked as a duplicate of this bug. *** When computing the movedFrom element, the DeltaProcessor expected a file or a  folder. Fixed so that it handles projects as well. *** Bug 7027 has been marked as a duplicate of this bug. *** *** Bug 7026 has been marked as a duplicate of this bug. ***
Platform	Workbench should be ready to NOT be called from eclipse.exe (1GE58U1) This is a warning from PDE team that PDE starts the platform by running UIMain class  using the currently selected JVM. In other words, it is not running soon to be implemented eclipse.exe. Consequences:  1) When PDE users start Eclipse instance to test or debug the code they are developing in design-time Eclipse instance, they will not get anything provided by eclipse.exe. I don't know what it is (so far I know it might be the splash screen).  2) If there is any secret handshake between eclipse.exe and the platform UI, the platform should be ready to NOT receive when PDE launches UIMain directly. If it only  boils down to the splashscreen, the platform should have an option to raise this splashscreen on its own.  I don't know about other possible consequences of PDE's running of UIMain instead of eclipse.exe, so please fill in the blanks. NOTES:  KH (5/22/2001 4:45:17 PM) The UI is not going to be displaying the splash screen any more. Showing the splash screen is moving to eclipse.exe and product configuration level. Product.ini is also   moving out of the ui plugin as well. McQ (23/05/2001 8:46:51 AM) -   Basically, all that eclipse.exe does is run java with a particular set of arguments. As long as PDE is prepared to provide those arguments, there should be no problem.   I suggest DG talk to JMcA about what those arguments should be. PRODUCT VERSION:  109 Obsolete
Platform	File Manager Examples references com.ibm.eclipse.internal.ui (1G8BQNX) The following class / method has a reference to com.ibm.eclipse.internal.ui.*.   We reserve the right to change any classes within an internal UI package. At that time errors may be introduced into your plugin.   Please remove the reference and log a PR if you require public API for the functionality. SessionComposite TableWorkbookPage TextWorkbookPage TableWorkbookPage(SessionComposite) TextWorkbookPage(Workbook, TableWorkbookPage)  NOTES: CE (4/8/01 12:57:50 AM) Fixed in 042 Changing status based on comments from CE
Platform	Preferences Dialog resizing strangely 20020508 build. Linux-KDE. 1. Window- > Preferences... 2. Select Workbench.  Expand Workbench.  Then select each of the subpages in order.  As each successive page is selected, the dialog sizes bigger and bigger  (unnecessarily) while the pages don ' t.  Eventually, the dialog gets as big as  the displayable screen area. *** This bug has been marked as a duplicate of 15608 ***
Platform	EC: API on IWorkbenchPage (1GJ4RZZ) Found this on the newsgroup.  Someone was wondering why there is no API for IWorkbenchPage.openEditor(IFile input, String editorId, boolean active)  when there is: IWorkbenchPage.openEditor(IEditorInput input, String editorId) IWorkbenchPage.openEditor(IEditorInput input, String editorId, boolean active) IWorkbenchPage.openEditor(IFile input, String editorId)  NOTES: PRODUCT VERSION: 131 No plans to change current behavior.
Platform	[CVS UI] The use of \n in message.properties There are several places where we use \n in message.properties files. This is  not good as it may conflict with word wrap performed by the widget. I suspect that \n was used because the Label widgets where not configured properly to  wrap when multipe lines are involved. Post 3.0 I think we got all these
Platform	dir library entries not handled properly (1GHHFL1) A plugin/fragment entry like   library name= " $nl$/ " results in a jar: url added on the classpath of the plugin.  This should really just be a file: url. NOTES: Tested in 20020412+ and found to be fixed.  May have been fixed some time  previous to this.
Platform	Help does not work Build 20021016 (15:53) Browser: Netscape 6.2.3 Help- > Help Contents in this build does not work for me.  A busy cursor flashes briefly, then nothing happens.  There is nothing in the log file and no error dialog. On Windows the help viewer should use Internet Explorer not Netscape.  Are you in fact running on Linux? I'm running Win 2000, standard config (Help runs embedded Internet Explorer). Behaviour is as bad as John described. Eclipse Platform, Version: 2.0, Build id: 200210161553 and 20021015****  BTW: http://bugs.eclipse.org/bugs/show_bug.cgi?id=24917 is a duplicate of this PR. *** Bug 24946 has been marked as a duplicate of this bug. *** I can reproduce the problem and noticed the followin in  the .metadata/.plugins/org.eclipse.help.ui/browser.log (it appears some things have changed in the OLE code).  Oct 17, 2002 09:50:50.467 NEW SESSION Oct 17, 2002 09:50:50.487 org.eclipse.swt.SWTException: Failed to change  Variant type result = -1 Oct 17, 2002 09:50:50.487  at org.eclipse.swt.ole.win32.OLE.error (OLE.java:321) Oct 17, 2002 09:50:50.487  at org.eclipse.swt.ole.win32.Variant.getInt (Variant.java:387) Oct 17, 2002 09:50:50.487  at  org.eclipse.help.ui.internal.browser.win32.WebBrowser.navigate (WebBrowser.java:347) Oct 17, 2002 09:50:50.487  at org.eclipse.help.ui.internal.browser.win32.WebBrowser.navigate (WebBrowser.java:324) Oct 17, 2002 09:50:50.487  at  org.eclipse.help.ui.internal.browser.win32.IEHost.createContents (IEHost.java:235) Oct 17, 2002 09:50:50.497  at org.eclipse.help.ui.internal.browser.win32.IEHost.createShell(IEHost.java:201) Oct 17, 2002 09:50:50.497  at org.eclipse.help.ui.internal.browser.win32.IEHost. < init > (IEHost.java:60) Oct 17, 2002 09:50:50.497  at org.eclipse.help.ui.internal.browser.win32.IEHost.main(IEHost.java:105) Oct 17, 2002 09:50:50.527 Exception in thread " main " *** Bug 24917 has been marked as a duplicate of this bug. *** I am also on Win2k.  I have Internet Explorer installed, but Netscape is my default browser.  Help worked fine in previous builds (I believe as recently as build 20021008). SWT became more strict in checking types of COM variants. Fixed help by doing check in help code before calling SWT. *** Bug 25050 has been marked as a duplicate of this bug. ***
JDT	JCK 1.4 - ICLS - class from outer and public class from superclass in nested class (1GK7GC1) http://www.ott.oti.com/uvm/OTIIBM/numbat/Testing/JCK- 14/tests/lang/ICLS/icls005/icls00502m1112/icls00502m1112.html - POSITIVE TEST Test case: javac 1.4: OK  javac 1.3: icls00502m1112.java:14: javasoft.sqe.tests.lang.icls005.icls00502m1112.Y.Z is  inherited from javasoft.sqe.tests.lang.icls005.icls00502m1112.Y and hides class in outer class  javasoft.sqe.tests.lang.icls005.icls00502m1112.icls00502m1112.  An explicit ' this ' qualifier must be used to select the desired instance.                 Z z = new Z(); ^ icls00502m1112.java:14: javasoft.sqe.tests.lang.icls005.icls00502m1112.Y.Z is inherited from javasoft.sqe.tests.lang.icls005.icls00502m1112.Y and hides class  in outer class javasoft.sqe.tests.lang.icls005.icls00502m1112.icls00502m1112.  An  explicit ' this ' qualifier must be used to select the desired instance.                 Z z = new Z(); ^ 2 errors Eclipse compiler: ---------- 1. ERROR in icls00502m1112.java (at line 14)         Z z = new Z(); ^ The field type Z is defined in an inherited type and an enclosing scope ---------- 2. ERROR in icls00502m1112.java (at line 15) int j = z.i;                 ^^^ z cannot be resolved ---------- NOTES: *** This bug has been marked as a duplicate of 3361 ***
Platform	Need progress monitor when validating new repo location If validate connection is choosen in the new repo location wizard, a progress  monitor should appear when validating Fixed.
JDT	Java editor formats " newline before opening brace " style in an unusual manner When the Java editor's " insert newline before opening brace " option is chosen,  and then the java code is formatted the indentation does not match industry- standard style. The most common " newline before " style is:  if (condition) {   statement; }  Another " newline before " style is:  if (condition) {    statement; }  but what you get is: if (condition)    { statement; } This mixture of the two above is something I've never seen before.  I thought  the intent of newline before opening brace was to line up the two braces? fixed in 2.0
Platform	WWinKeyBindingService property listener using == instead of equals In the constructor the following line  event.getProperty() == IWorkbenchConstants.ACCELERATOR_CONFIGURATION_ID Should probably be   event.getProperty().equals(IWorkbenchConstants.ACCELERATOR_CONFIGURATION_ID) Should do a check of all senders of getProperty(). I suspect others are doing ==. It might be safer to have the preference import intern the property name  strings. Created bug 20534 to modify the plug-in preference importer to intern strings. Also in 1) actionBarPropListener - org.eclipse.ui.part.PageBookView (this is an internal case and does not involve the property store) 2) createPartControl(Composite) - org.eclipse.search.internal.ui.SearchResultView (2 matches) 3) propertyChange(PropertyChangeEvent) - org.eclipse.debug.internal.ui.views.launch.LaunchView 4) propertyChange(PropertyChangeEvent) - org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart 5) propertyChange(PropertyChangeEvent) - org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart Filed the following PRs against other components: Search: bug 20593 Debug: bug 20594 JDT UI: bug 20595 If these are not fixed, then components will not update properly when  preferences are imported. Marking this one as F4 for the Workbench cases in: - WWinKeyBindingService - actionBarPropListener - org.eclipse.ui.part.PageBookView Fixed - WWinKeyBindingService - PageBookView Checked with Eduardo, Tod - Released
JDT	IAE in eating code assist Don't have a reproducible case yet but do see it quite regularly. Have eating  code assist enabled. java.lang.IllegalArgumentException: Index out of bounds  at org.eclipse.swt.SWT.error(SWT.java:2125) at org.eclipse.swt.SWT.error(SWT.java:2071)  at org.eclipse.swt.custom.StyledText.setStyleRange(StyledText.java:7168) at  org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposal.updateStyle (JavaCompletionProposal.java:498)  at org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposal.selected (JavaCompletionProposal.java:506)  at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal (CompletionProposalPopup.java:573) at  org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals (CompletionProposalPopup.java:430)  at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$15 (CompletionProposalPopup.java:406) at org.eclipse.jface.text.contentassist.CompletionProposalPopup$6.run (CompletionProposalPopup.java:630) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:94)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1599) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1372)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1420) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1403)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) fixed > = 20021028 Note: was occuring when auto bracket closing was enabled Hard to verify since no reproducable case exists. Testing several cases didn't  cause the IAE.
JDT	Very slow debugging with JRE1.4 Debugging is extremly slow, i.e. unusable with JDK1.4.1 (beta). Adding   breakpoints and resuming is almost tolerable, but singlestepping in any form makes everything in Eclipse very slow from that point forward. Any operation,  not just debug operations, seems to take approximately 30 seconds. The GUI is repainted immediately, however. Things are slow when eclipse runs in 1.4. It is ok when running Eclipse withe   JDK1.3.01 and the application in 1.4. Platform Eclipse 2.0 (27 June),    Linux kernel 2.4.18.8.1mdk (Mandrake), kde 3.0.2   JDK1.4.1beta I have not seen this using the 1.4.1 beta on windows.  Jared, is this a known issue with the linux VM? This is a dup of 22089, which reports the problem on Win2000. Since we now  have reports from multiple people on multiple problems, it sounds like there is a real problem here somewhere, however we haven't seen it on any of our  configurations. *** This bug has been marked as a duplicate of 22089 *** For the record, I run on Mandrake 8.2, kernel 2.4.18-6mdk, JDK 1.4.1.
Platform	Help example does not show up The help example does appear in the bookshelf.  This might be related to the  fact that platform will now look under nl/en/US for a file rather than nl/en_US.  We should probably move documents to the root to make example for  for all languages, and explain internationalization separately. Fixed.  Moved XML files and doc.zip to the root of plugin
Platform	Exception on pressing cancel (1GL0SUC) MA (03.10.2001 14:28:32)  1. Go on a project and choose replace with stream 2. Press cancel on the progress monitor Got the following exception. Unfortunatly can't reproduce  org.eclipse.swt.SWTException: Failed to execute runnable at org.eclipse.swt.SWT.error(SWT.java:1817)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java(Compiled Code))  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)  at org.eclipse.vcm.internal.ui.ResourceLoader.loadResources(ResourceLoader.java:320) at org.eclipse.vcm.internal.ui.actions.ReplaceWithAction.run(ReplaceWithAction.java:75)  at org.eclipse.ui.internal.PluginAction.run(PluginAction.java:125) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code)) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:658) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) NOTES: PRODUCT VERSION:  202a can't reproduce.
Platform	selected text is not copied to the clipboard after the 0 character is reached When text is output to the console that includes the ASCII 0 (zero) character, and text is later copied to the clipboard, the copying stops after the ASCII 0 character is reached.  This is probably better illustrated by an example.  I created a program (attached) that outputs some text to the console that includes the ASCII 0 character.  I was then able to select all the text in the console and copy it. When I pasted the text, the output that I received was: Testing 0 Testing 1  While my Eclipse console looks like: Testing 0 Testing 1 < block-like, non-display character > Testing 2 Testing 3 It seems that something happened after the blocky character (which is just the ASCII 0 character when printer) is reached.  I am unsure if any other special characters produce the same result or if this bug is present anywhere except the console window.  This bug seems to occur whether I use CTRL-C/CTRL-V or right-click and use the context menu. This program outputs some text.  Included in that text is the ASCII 0 character. Hi Jason!  A null character is used to inticate the end of a string on Windows  for the clipboard format CF_TEXT so embedding a null in the string that is copied to the clipboard will truncate the string.  Sorry, can't fix this.
Platform	Launch Configurations: Table is cut off on motif F2. Click the running man. The table on the left of the dialog (which contains " Java Application " , " JUnit " and " Runtime Workbench " ) is cut off; its right border is not drawn. I believe this worked in previous builds. It is also cut off in windows. I believe this must have something to do with  the new resizeability. The dialog now supports a sash between the tree and edit area, so the two areas can be resized to the user's desire. When I make the  tree just a bit wider,  the right border is drawn. When I make the tree the same size as the buttons below (New/Delete), the right border is not drawn. This is actually due to a bug in calculating the minimum width of the selection area.  Have fix in  hand.  Very low risk fix. marking as F3 candidate Fixed.  Please verify. *** Bug 19125 has been marked as a duplicate of this bug. *** Verified.
Platform	[Preferences] PreferencePage doesnt allow alteration of description label background color I have my windoze background a nice shade of green, this seems to filter into the background of PreferencePages (description area at the top).  Exposing the background of PreferencePages and I can see now way of affecting it.  Allowing subclass access to either the label, or really just the description background color, like WizardDialog.setTitleAreaColor(RGB).  As it is it just looks cheesy :) Dialogs by default use whatever system colours you have set - we do not  override system colours. Dialogs are using the 3D objects colour from Windows XP for instance. Eclipse  tries to say consistent with the user OS settings. Hmm, not convinced, more discourse please?  Ill buy that for 3D elements, but the label in question is FLAT, clearly its designed to be ' white ' or matching whatever Icon *I* put in the Page.  For example,  I make a nice blue on yellow Icon and cannot alter the PrefPage title label to match, I would be left with UI colour bleed through making the whole thing look cheesy! I dont see this as being anything to do with user OS settings, Im happy with any _editable_ / _modifyable_ area reflecting UI choice, but it looks TERRIBLE ! so shoot me :)  WONTFIXIt if you like but it looks glaringly bad the moment the user changes backgrounds. Keeping consistent is good, keeping consistently cheesy is bad :) ttfn. Ah sorry - looking at the wrong background.  The one you are looking for is the window text setting. The 3D colour setting is the main body background.  Not honouri ng a users system settings is going to cause problems for people  who need accessibility support etc. - you should design transparent icons so that they can deal with varying backgrounds better.
JDT	Feature Request: source folders in other projects There are some users on Eclipse Corner with special project configurations, such  as nested source folders, and source folders on network drives.  They want to be able to do things like:  - have the source folder on a network drive, and bin on the local drive - have sub-directories of a source folder also be source folders, such as:    /src/com/abc/... /src/generated/com/abc/...    Where " /src " and " /src/generated " are source folders.  This could possibly be addressed by allowing source folders to come from another project.  Currently source folders are restricted to any folder within the same  project. This is not likely to happen in the near future. Answered the EC post in this direction. Source folders of other projects are seen through their output location. Defer Closing. Linked source folders allow to achieve this in 2.1. Closing
JDT	nls tool: insert leading new line in .properties [refactoring] later reopen ' later ' for now no action planned Reopening. No further action planned.
JDT	No templates found when code assist on a single character Using F1,    private static void callFoo() { int temp = 4;   try {    foo(); s < CODE ASSIST HERE > } catch (IOException e) {   } } If I use the code assist on's ' , I don't get the template stdout or others in the list. If I code assist on ' st ' , I  got them. Why? David - Please check whether this is us or JDT/UI (if so then move it there) codeassist on's ' works. But templates proposals are between package proposals  and type proposals. If it's a bug then sorting of proposals is not correct.  Moving to JDT/UI relevance of templates got intentinally decreased changed milestone from F1 to F2
Platform	BidiUtil handling of WM_INPUTLANGCHANGE needs to be fixed The code that handles WM_INPUTLANGCHANGE (i.e., the language listener code that  can be hooked to receive keyboard language changes) always restores the SWT_WINDOW0 window proc so if the code is called with a button, it will lose the  button window proc when it unsubclasses. A fix would be to save the window proc in a Hashtable keyed by HWND or store it  with the HWND using Windows AddProp and GetProp (like a C program would do). Put in a hash table as suggested below.  Getting KR to review the changes  before releasing. Reviewed by KR.  Releasing fix.
JDT	SWTException in outliner 20020425.5 org.eclipse.swt.SWTException: Widget is disposed at org.eclipse.swt.SWT.error(SWT.java:1887)  at org.eclipse.swt.SWT.error(SWT.java:1819) at org.eclipse.swt.widgets.Widget.error(Widget.java:368)  at org.eclipse.swt.widgets.Control.getDisplay(Contr ol.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.isValidThread(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Tree.getItems(Tree.java(Compiled Code))  at org.eclipse.jface.viewers.TreeViewer.getChildren(TreeViewer.java (Compiled Code))  at org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.update (JavaOutlinePage.java:394) at  org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.reconci le(JavaOutlinePage.java:300)  at org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$1.run (JavaOutlinePage.java:125)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled Code))  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:825) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:643) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:160)  at org.eclipse.core.launcher.Main.run(Main.java:548) at org.eclipse.core.launcher.Main.main(Main.java:403) Build > 20020430.
Platform	Java Text editor stops painting, throws exceptions I'll try to find steps to reproduce, but this has happened to me several times  in 2 days, both on 2.0.0 and 2.0.1. !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:34.11 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:34.302 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:2105)  at org.eclipse.swt.SWT.error(SWT.java:2051) at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109) at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate (StyledText.java:973) at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculateVisible (StyledText.java:1007) at org.eclipse.swt.custom.StyledText$ContentWidthCache.textChanged (StyledText.java:1188) at org.eclipse.swt.custom.StyledText.handleTextChanged (StyledText.java:4769) at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:4330)  at org.eclipse.jface.text.DocumentAdapter.fireTextChanged (DocumentAdapter.java:279)  at org.eclipse.jface.text.DocumentAdapter.documentChanged (DocumentAdapter.java:231)  at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged (AbstractDocument.java:539)  at org.eclipse.jface.text.AbstractDocument.replace (AbstractDocument.java:841)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partially SynchronizedDocument.replace(CompilationUnitDocumentProvider.java:733) at org.eclipse.jface.text.DocumentAdapter.replaceTextRange (DocumentAdapter.java:162) at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5225)  at org.eclipse.swt.custom.StyledText.replaceTextRange (StyledText.java:5927)  at org.eclipse.jface.text.DefaultUndoManager$TextCommand.redoTextChange (DefaultUndoManager.java:109)  at org.eclipse.jface.text.DefaultUndoManager$TextCommand.redo (DefaultUndoManager.java:120)  at org.eclipse.jface.text.DefaultUndoManager.internalRedo (DefaultUndoManager.java:488)  at org.eclipse.jface.text.DefaultUndoManager.redo (DefaultUndoManager.java:773)  at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:2536) at org.eclipse.jface.text.source.SourceViewer.doOperation (SourceViewer.java:435) at  org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionSourceViewer.doOperati on(JavaCorrectionSourceViewer.java:50)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer .doOperation(CompilationUnitEditor.java:228) at org.eclipse.ui.texteditor.TextOperationAction$1.run (TextOperationAction.java:119) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)  at org.eclipse.ui.texteditor.TextOperationAction.run (TextOperationAction.java:117)  at org.eclipse.jf ace.action.Action.runWithEvent(Action.java:749)  at org.eclipse.ui.actions.RetargetAction.runWithEvent (RetargetAction.java:179)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:34.322 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:34.332 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:2105) at org.eclipse.swt.SWT.error(SWT.java:2051)  at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109)  at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:4719) at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:4680)  at org.eclipse.swt.custom.StyledText$13.handleEvent (StyledText.java:4396)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)  at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:665) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2715)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)  at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1223) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)  at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:35.583 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:35.593 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:2105)  at org.eclipse.swt.SWT.error(SWT.java:2051) at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109) at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:4719)  at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:4680) at org.eclipse.swt.custom.StyledText$13.handleEvent (StyledText.java:4396) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843) at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:665)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2715) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1223)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:38.578 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:38.578 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:2105) at org.eclipse.swt.SWT.error(SWT.java:2051)  at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109)  at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:4719) at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:4680)  at org.eclipse.swt.custom.StyledText$13.handleEvent (StyledText.java:4396)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)  at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:665) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2715)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)  at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1223) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)  at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:38.828 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:38.838 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:2105)  at org.eclipse.swt.SWT.error(SWT.java:2051) at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109) at org.eclipse.swt.custom.StyledText.redrawLines(StyledText.java:5483)  at org.eclipse.swt.custom.StyledText.internalRedrawRange (StyledText.java:4495)  at org.eclipse.swt.custom.StyledText.clearSelection (StyledText.java:1740)  at org.eclipse.swt.custom.StyledText.doMouseLocationChange (StyledText.java:2646)  at org.eclipse.swt.custom.StyledText.handleMouseDown (StyledText.java:4578)  at org.eclipse.swt.custom.StyledText$9.handleEvent(StyledText.java:4376) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:39.499 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:39.509 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:2105)  at org.eclipse.swt.SWT.error(SWT.java:2051) at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109) at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate (StyledText.java:973) at org.eclipse.swt.custom.StyledText.redraw(StyledText.java:5386)  at org.eclipse.jdt.internal.ui.javaeditor.LinePainter.drawHighlightLine (LinePainter.java:105)  at org.eclipse.jdt.internal.ui.javaeditor.LinePainter.paint (LinePainter.java:163)  at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint (PaintManager.java:204)  at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.keyPressed (PaintManager.java:211)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:118)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)  at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:40.611 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:40.621 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:2105)  at org.eclipse.swt.SWT.error(SWT.java:2051) at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109) at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:4719)  at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:4680) at org.eclipse.swt.custom.StyledText$13.handleEvent (StyledText.java:4396) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843) at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:665)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2715) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1223)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:42.23 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:42.33 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:2105) at org.eclipse.swt.SWT.error(SWT.java:2051)  at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109)  at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate (StyledText.java:973)  at org.eclipse.swt.custom.StyledText.redraw(StyledText.java:5386) at org.eclipse.swt.custom.StyledText.draw(StyledText.java:2995)  at org.eclipse.swt.custom.StyledText.redrawLines(StyledText.java:5503) at org.eclipse.swt.custom.StyledText.internalRedrawRange (StyledText.java:4495) at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:5619)  at org.eclipse.jdt.internal.ui.javaeditor.BracketPainter.draw (BracketPainter.java:102)  at org.eclipse.jdt.internal.ui.javaeditor.BracketPainter.handleDrawRequest (BracketPainter.java:87) at org.eclipse.jdt.internal.ui.javaeditor.BracketPainter.paint (BracketPainter.java:150) at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint (PaintManager.java:204) at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.mouseDown (PaintManager.java:230) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:126) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Sep 24, 2002 20:40:42.513 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Sep 24, 2002 20:40:42.513 !MESSAGE Argument not valid !STACK 0 java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:2105) at org.eclipse.swt.SWT.error(SWT.java:2051)  at org.eclipse.jface.text.DocumentAdapter.getLine (DocumentAdapter.java:109)  at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate (StyledText.java:973)  at org.eclipse.swt.custom.StyledText.redraw(StyledText.java:5386) at org.eclipse.jdt.internal.ui.javaeditor.LinePainter.drawHighlightLine (LinePainter.java:105) at org.eclipse.jdt.internal.ui.javaeditor.LinePainter.paint (LinePainter.java:161) at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint (PaintManager.java:204) at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.keyPressed (PaintManager.java:211) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:118) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) Are you running on the official versions? Could you please attach your preference file. As we don't have others reporting  this, it could be caused by some rarely used feature... Here are my preferences:  #Mon Sep 30 12:41:23 EDT 2002 org.eclipse.jdt.core/org.eclipse.jdt.core.codeComplete.visibilityCheck=enabled com.instantiations.assist.eclipse=1.2.0 org.eclipse.team.cvs.ui/pref_projecttext_decoration={dirty_flag}{name}  [{tag}] com.instantiations.assist.eclipse/com.instantiations.assist.eclipse. numberOfSubt ypesMetric.enabled=true com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.packag eNamingConvention.namingConvention=;2;2; org.eclipse.ui/ENABLED_DECORATORS=org.eclipse.pde.ui.binaryProjectDecorator\:fal se,org.eclipse.team.cvs.ui.decorator\:true, org.eclipse.jdt.ui/overviewRuler=false com.instantiations.assist.eclipse/comm.enabled=false org.eclipse.jdt.ui/printMargin=true org.eclipse.ui/WELCOME_DIALOG=false org.eclipse.jdt.ui/MemberFilterActionGroup.JavaOutlineViewer.4=true org.eclipse.ant.core/urls=file\:D\:/Eclipse2.0/plugins/org.apache.ant_1.4.1/ant. jar,file\:D\:/Eclipse2.0/plugins/org.apache.ant_1.4.1/jakarta-ant-1.4.1- optional.jar,file\:D\:/Eclipse2.0/plugins/org.apache.xerces_4.0.3/xmlParserAPIs. jar,file\:D\:/Eclipse2.0/plugins/org.apache.xerces_4.0.3/xercesImpl.jar,file\:c\ :/jdk1.3.1/lib/tools.jar, com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.badlyL ocatedArrayDeclarators.enabled=false org.eclipse.jdt.debug.ui=2.0.1 org.eclipse.jdt.junit/STACK_FILTER_ENTRY_6=java.lang.reflect.Method.invoke org.eclipse.jdt.junit/STACK_FILTER_ENTRY_5=junit.framework.Assert. org.eclipse.jdt.junit/STACK_FILTER_ENTRY_4=junit.framework.TestSuite org.eclipse.jdt.junit/STACK_FILTER_ENTRY_3=junit.framework.TestResult org.eclipse.ui=2.0.1 org.eclipse.jdt.junit/STACK_FILTER_ENTRY_2=junit.framework.TestCase org.eclipse.jdt.junit/STACK_FILTER_ENTRY_1=org.eclipse.jdt.internal.junit.ui org.eclipse.jdt.junit/STACK_FILTER_ENTRY_0=org.eclipse.jdt.internal.junit.runner org.eclipse.jdt.ui/content_assist_autoinsert=false com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.string ConcatinationInLoop.enabled=false com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.localV ariableNamingConvention.namingConvention=;2;15; org.eclipse.search=2.0.1 org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable._ORG_ECLIPSE_JDT_SOU RCE=D\:/Eclipse2.0/plugins/org.eclipse.jdt.source_2.0.1/src com.instantiations.assist.eclipse.splash=1.2.0 org.eclipse.search/org.eclipse.search.reuseEditor=true org.eclipse.jdt.ui/org.eclipse.jdt.ui.browsing.stackVertically=true org.eclipse.jdt.ui/printMarginColumn=90 org.eclipse.jdt.ui/org.eclipse.jdt.ui.browsing.linktoeditor=false com.instantiations.assist.eclipse/modified.view.type=3 org.eclipse.team.cvs.ui/pref_filetext_decoration={dirty_flag}{name}  {tag} org.eclipse.jdt.ui/org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackage Filter=true org.eclipse.jdt.ui/JavaEditor.SyncOutlineOnCursorMove=true org.eclipse.jdt.debug.ui/org.eclipse.jdt.debug.uiorg.eclipse.debug.ui.Breakpoint View.ShowQualifiedAction=true com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.analysis.aud it.dynamicComputation=true com.instantiations.assist.eclipse/task.list.auto.show=false org.eclipse.debug.ui/org.eclipse.debug.uilaunchConfigurationDialogLocation=390x1 62 com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.numeri cLiterals.enabled=false com.instantiations.assist.eclipse.javadoc/com.instantiations.assist.eclipse.java doc.FieldVisibility=public,protected, org.eclipse.debug.ui/org.eclipse.debug.uilaunchConfigurationDialogSize=634x560 org.eclipse.ant.core=2.0.1 org.eclipse.jdt.core=2.0.1 com.instantiations.assist.eclipse.splash/show.welcome=false org.eclipse.team.cvs.ui=2.0.1 org.eclipse.team.cvs.ui/pref_foldertext_decoration={dirty_flag}{name} com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.static FieldNamingConvention.namingConvention=;1;15; org.eclipse.jdt.ui/org.eclipse.jface.textfont=1|Technical|12|0|WINDOWS|1|- 16|0|0|0|400|0|0|0|0|3|2|1|66|Technical; org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable._ORG_ECLIPSE_PDE_SOU RCE=D\:/Eclipse2.0/plugins/org.eclipse.pde.source_2.0.1/src com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.method NamingConvention.namingConvention=;2;15; org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable._ORG_ECLIPSE_PLATFOR M_SOURCE=D\:/Eclipse2.0/plugins/org.eclipse.platform.source_2.0.1/src org.eclipse.ui/REUSE_OPEN_EDITORS_BOOLEAN=true org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable.JRE_LIB=C\:/jdk1.4.1 /jre/lib/rt.jar com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.instan ceFieldNamingConvention.namingConvention=;2;15; org.eclipse.compare/org.eclipse.compare.OpenStructureCompare=false org.eclipse.ui/OPEN_ON_SINGLE_CLICK=true org.eclipse.ui/REUSE_OPEN_EDITORS=3 org.eclipse.ui/PROJECT_OPEN_NEW_PERSPECTIVE=NO_NEW_PERSPECTIVE org.eclipse.jdt.ui/org.eclipse.jdt.ui.importorder=java;javax;org;com;com.ibm.eto ols.draw2d;com.ibm.etools.gef;com.ibm.etools.gef.examples; org.eclipse.jdt.debug.ui/org.eclipse.jdt.debug.uiorg.eclipse.debug.ui.DebugView. ShowQualifiedAction=true org.eclipse.compare=2.0.0 com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.interf aceNamingConvention.namingConvention=;1;15; org.eclipse.jdt.ui/lineNumberRuler=true com.instantiations.assist.eclipse.team/com.instantiations.assist.eclipse.vcm.syn c_manual=manual org.eclipse.jdt.debug.ui/org.eclipse.jdt.debug.uiorg.eclipse.debug.ui.Expression View.ShowQualifiedAction=true org.eclipse.ui/LINK_NAVIGATOR_TO_EDITOR=false org.eclipse.jdt.core/org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*. launch org.eclipse.ui/org.eclipse.jface.headerfont=1|Tahoma|12|1|WINDOWS|1|- 16|0|0|0|700|0|0|0|1|0|0|0|0|Tahoma; org.eclipse.jdt.junit/NOF_STACK_FILTER_ENTRIES=7 org.eclipse.team.cvs.ui/pref_dirty_flag=\u00BB org.eclipse.debug.ui/org.eclipse.debug.ui.lastLaunchConfigSelection= < ?xml  version\= " 1.0 " encoding\= " UTF-8 " ? > \r\n < launchConfiguration local\= " true " path\= " Run-time Workbench.launch " / > \r\n com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.labelN amingConvention.namingConvention=;2;15; org.eclipse.jdt.ui/org.eclipse.jdt.ui.packages.linktypehierarchytoeditor=true org.eclipse.jdt.ui=2.0.1 com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.spaceA roundOperators.severity=1 org.eclipse.jdt.ui/org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*=true org.eclipse.team.cvs.ui/pref_added_flag=+ com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.classN amingConvention.namingConvention=;1;15; org.eclipse.compare/org.eclipse.compare.TextFont=1|Arial|8|0|WINDOWS|1|- 11|0|0|0|400|0|0|0|0|3|2|1|34|Arial; com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.missin gBlock.enabled=false com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.static FieldNamingConvention.enabled=false org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable.JRE_SRC=C\:/jdk1.4.1 /src.zip com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.consta ntNamingConvention.namingConvention=;1;9; org.eclipse.ui/OPEN_PERSPECTIVE_MODE=2 com.instantiations.assist.eclipse.team=1.2.0 org.eclipse.jdt.ui/org.eclipse.jdt.ui.PackageExplorer.LibraryFilter=true com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.variab leUsage.enabled=false org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable.ECLIPSE_HOME=D\:/Ecl ipse2.0 com.instantiations.assist.eclipse.javadoc/com.instantiations.assist.eclipse.java doc.MethodVisibility=public,protected, org.eclipse.debug.ui/org.eclipse.debug.uilaunchConfigurationDialogSashWeights=26 8x731 org.eclipse.ui/org.eclipse.jface.textfont=1|Courier|10|0|WINDOWS|1|- 13|0|0|0|0|0|0|0|1|0|0|0|0|Courier; com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.condit ionalOperatorUse.enabled=false org.eclipse.jdt.ui/org.eclipse.jdt.ui.ondemandthreshold=3 org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable._ORG_ECLIPSE_PLATFOR M_WIN32_SOURCE=D\:/Eclipse2.0/plugins/org.eclipse.platform.win32.source_2.0.1/sr c com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.depthOfInher itanceHierarchyMetric.enabled=true org.eclipse.jdt.ui/LexicalSortingAction.isChecked=true org.eclipse.ui/org.eclipse.jface.bannerfont=1|Tahoma|8|1|WINDOWS|1|- 11|0|0|0|700|0|0|0|1|0|0|0|0|Tahoma; org.eclipse. jdt.ui/JavaEditor.ShowTemporaryProblem=false org.eclipse.jdt.ui/org.eclipse.jdt.ui.openTypeHierarchy=perspective com.instantiations.assist.eclipse.javadoc=1.2.0 org.eclipse.team.cvs.ui/pref_prompt_on_saving_in_sync=false com.instantiations.assist.eclipse.splash/show.splash=false org.eclipse.debug.ui=2.0.0 org.eclipse.debug.ui/org.eclipse.debug.ui.auto_remove_old_launches=true com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.audit.packag eNamingConvention.enabled=false org.eclipse.jdt.junit=2.0.1 org.eclipse.team.cvs.ui/pref_show_hasremote=false com.instantiations.assist.eclipse/com.instantiations.assist.eclipse.analysis.aud it.dynamicPackages=org.eclipse.draw2d;org.eclipse.draw2d.* org.eclipse.jdt.debug.ui/org.eclipse.jdt.debug.ui.javaDebug.alertHCRNotSupported =false com.instantiations.assist.eclipse.team/com.instantiations.assist.eclipse.vcm.shi ft_sync_manual=conflict org.eclipse.jdt.ui/org.eclipse.jdt.ui.packages.linktoeditor=false's .log file  2.1 200305071417 IBM J9SC build 20030502  Just got the same problem and stack traces in my log (attached) for no apparent reason (never had it before). A Java editor stopped working/redrawing. Closing the offending editor fixed the problem (I had another editor opened and it didn't show any problem). Thanks Rafael. I was starting to feel like " the boy who cried wolf " ;-) *** Bug 38998 has been marked as a duplicate of this bug. *** All stack traces have in common that they include undo/redo. The internal  state of the StyledText widget get out of sync with the underlying document. However, when investigating the code, you see that multiple tests which  actually try to identify such situations are successfully passed directly before the error happens. *** Bug 43448 has been marked as a duplicate of this bug. *** We don't have a reproducible case yet. However, I suspect the line tracker of  the default document implementation to get out of sync with the document's  actual line structure. I temporarilly added code that tries to repair the line information of the line tracker and only throws the IAE if this does not help  to finish correctly. If this trick solves the problem, we still need to identify the cases in which  the line tracker fails. Please reopen if you still see the problem. Build > 20031006.
Platform	[CVS Repo View] Repository view should allow user to override editor selection Double-clicking on a remote resource ties to open the registered editor,  otherwise falls back to vanilla editor.  The Java Editor seems to have trouble with this particular usage (generated NPEs) and I suspect others might too.    As a workaround for these unforeseen cases, we should offer the option of forcing the use of the vanilla editor. ie. Just like in the Navigator, the user  should have the option to choose the editor to be used.  Moreover, the user might simply prefer to use different editors in different contexts.  eg. Use  the full-block HTML editor for web development, but sometimes fallback on vanilla text for casual browsing. This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this  bug is important, feel free to reopen it.
Platform	Security manager freezes Eclipse launch Hello, this has been posted to the newsgroup and I was directed to bug report.  I am using the following options to start eclipse: eclipse -vmargs -Djava.security.manager -Djava.security.policy=SimpleRMI.policy The splash screen came up, then it froze.  The workbench never come up. My client and myself are both using Eclipse build 0.137 R1.0.  OS is Win2k.  No .log error log was created.  We are using whatever VM was bundled with the build.  Without the security manager, Eclipse came up fine. Thank you Terry That security policy doesn't allow Eclipse to do what it needs to do to  bootstrap itself.  In particular, that security policy doesn't allow access to a  class ' protection domain. Here is the stack trace that occurs:  java.security.AccessControlException: access denied (java.lang.RuntimePermission getProtectionDomain)  at java.security.AccessControlContext.checkPermission(AccessControlContext.java:279 ) at  java.security.AccessController.checkPermission(AccessController.java:405) at java.lang.SecurityManager.checkPermission(SecurityManager.java:551)  at java.lang.Class.getProtectionDomain(Class.java:1318) at org.eclipse.core.launcher.Main.getBootPath(Main.java:245)  at org.eclipse.core.launcher.Main.getBootLoader(Main.java:188) at org.eclipse.core.launcher.Main.basicRun(Main.java:148)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)  The error reporting in this case was non-existent, because it happened during the very initial bootstrapping of the platform.  A strack trace is dumped to  System.out, but the VM immediately exits so that information is quickly lost. What are you requesting with this PR?  Do you want us to make Eclipse function  under those security restrictions, or are you simply reporting the lack of a useful error message in this case?  The former isn't likely to happen, but we  can look into improving the failure mode here. We'd like to have Eclipse function under those security restrictions, but since  it's not likely to happen, proper error reporting should at least be  implemented. Thank you. Deferring. Reopening for investigation. Investigate error reporting in this case. *** This bug has been marked as a duplicate of 70564 ***
JDT	Can not create Java project from existing source (1000+ Java files) I have an existing project having 1000+ Java source files and a dependent  classpath involving 10+ jar files. When I attempt to create a new project with the ' use project as source folder ' I get an error creating project...asking me  to look at the log. The log lists an OutOfMemoryError as shown below: Log: Tue Feb 26 13:21:08 PST 2002 4 org.eclipse.jdt.ui 1 Internal Error java.lang.reflect.InvocationTargetException: java.lang.OutOfMemoryError  at org.eclipse.jdt.core.JavaConventions.scannedIdentifier (JavaConventions.java, Compiled Code)  at org.eclipse.jdt.core.JavaConventions.scannedIdentifier (JavaConventions.java, Compiled Code)  at org.eclipse.jdt.core.JavaConventions.validateIdentifier (JavaConventions.java, Compiled Code)  at org.eclipse.jdt.core.JavaConventions.validatePackageName (JavaConventions.java, Compiled Code)  at org.eclipse.jdt.internal.core.JavaModelManager.determineIfOnClasspath (JavaModelManager.java, Compiled Code)  at org.eclipse.jdt.internal.core.JavaModelManager.createCompilationUnitFrom (JavaModelManager.java, Compiled Code) at org.eclipse.jdt.internal.core.JavaModelManager.create (JavaModelManager.java, Compiled Code) at org.eclipse.jdt.internal.core.JavaModelManager.create (JavaModelManager.java, Compiled Code) at org.eclipse.jdt.core.JavaCore.create(JavaCore.java, Compiled Code)  at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.storeProblemsFor (AbstractImageBuilder.java, Compiled Code) at  org.eclipse.jdt.internal.core.newbuilder.BatchImageBuilder.updateProblemsFor (BatchImageBuilder.java, Compiled Code)  at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.acceptResult (AbstractImageBuilder.java, Compiled Code)  at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java, Compiled Code)  at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile (AbstractImageBuilder.java, Compiled Code)  at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile (AbstractImageBuilder.java, Compiled Code)  at org.eclipse.jdt.internal.core.newbuilder.BatchImageBuilder.build (BatchImageBuilder.java:47)  at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.buildAll (JavaBuilder.java:113)  at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build (JavaBuilder.java:67)  at org.eclipse.core.internal.events.BuildManager$2.run (BuildManager.java:356)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java, Compiled Code)  at org.eclipse.core.runtime.Platform.run(Platform.java, Compiled Code) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:114) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:179) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java, Compiled Code) at org.eclipse.core.internal.events.BuildManager$1.run (BuildManager.java:138) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java, Compiled Code) at org.eclipse.core.runtime.Platform.run(Platform.java, Compiled Code)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:152)  at org.eclipse.core.internal.events.BuildManager.build (BuildManager.java, Compiled Code)  at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java, Compiled Code)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1237)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:713)  at org.eclipse.jdt.internal.ui.wizards.NewProjectCreationWizard.performFinish (NewProjectCreationWizard.java:63) at org.eclipse.jface.wizard.WizardDialog.finishPressed (WizardDialog.java, Compiled Code) at org.eclipse.jface.wizard.WizardDialog.buttonPressed (WizardDialog.java:311) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:344)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java, Compiled Code)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java, Compiled Code)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java, Compiled Code)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java, Compiled Code)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java, Compiled Code)  at org.eclipse.jface.window.Window.runEventLoop(Window.java, Compiled Code)  at org.eclipse.jface.window.Window.open(Window.java:523) at org.eclipse.ui.internal.NewProjectAction.run (NewProjectAction.java:80) at org.eclipse.jface.action.Action.runWithEvent(Action.java, Compiled  Code) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java, Compiled Code) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java, Compiled Code) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java, Compiled Code)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java, Compiled Code)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java, Compiled Code)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java, Compiled Code)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java, Compiled Code)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java, Compiled Code)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:798) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:821) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) Log: Tue Feb 26 13:22:59 PST 2002 4 org.eclipse.jdt.ui 1 Internal Error java.lang.reflect.InvocationTargetException: java.lang.OutOfMemoryError at org.eclipse.jdt.internal.core.newbuilder.SourceFile.getContents (SourceFile.java, Compiled Code) at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java,  Compiled Code) at org.eclipse.jdt.internal.compiler.parser.Parser.dietParse (Parser.java, Compiled Code) at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile (Compiler.java, Compiled Code) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java,  Compiled Code) at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile (AbstractImageBuilder.java, Compiled Code) at org.eclipse.jdt.internal.core.newbuilder.AbstractImageBuilder.compile (AbstractImageBuilder.java, Compiled Code) at org.eclipse.jdt.internal.core.newbuilder.BatchImageBuilder.build (BatchImageBuilder.java:47) at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.buildAll (JavaBuilder.java:113) at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build (JavaBuilder.java:67) at org.eclipse.core.internal.events.BuildManager$2.run (BuildManager.java:356) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java, Compiled Code) at org.eclipse.core.runtime.Platform.run(Platform.java, Compiled Code)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:114)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:179)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java, Compiled Code)  at org.eclipse.core.internal.events.BuildManager$1.run (BuildManager.java:138)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java, Compiled Code)  at org.eclipse.core.runtime.Platform.run(Platform.java, Compiled Code) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:152) at org.eclipse.core.internal.events.BuildManager.build (BuildManager.java, Compiled Code) at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java, Compiled Code) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1237) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:713) at  org.eclipse.jdt.internal.ui.wizards.NewProjectCreationWizard.performFinish (NewProjectCreationWizard.java:63)  at org.eclipse.jface.wizard.WizardDialog.finishPressed (WizardDialog.java, Compiled Code)  at org.eclipse.jface.wizard.WizardDialog.buttonPressed (WizardDialog.java:311)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:344) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java, Compiled Code) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java,  Compiled Code) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java, Compiled  Code) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java,  Compiled Code) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java,  Compiled Code) at org.eclipse.jface.window.Window.runEventLoop(Window.java, Compiled  Code) at org.eclipse.jface.window.Window.open(Window.java:523)  at org.eclipse.ui.internal.NewProjectAction.run (NewProjectAction.java:80)  at org.eclipse.jface.action.Action.runWithEvent(Action.java, Compiled Code)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java, Compiled Code)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java, Compiled Code)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java, Compiled Code)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java, Compiled Code)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java, Compiled Code)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java, Compiled Code)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java, Compiled Code)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java, Compiled Code)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:798) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:821) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) What are the settings you have used to run Eclipse ? How much memory do you have on your machine ? What Eclipse build are you running ?  The workspace you are describing is fairly large, I do not see anything obvious from the stack traces here. The default VM parameters are not sufficient for all cases.  Reopen this PR if ' reasonable ' parameters were used.
Platform	Invalid Menu Extension in Search Build 20020515  When I start Eclipse in Linux I get the following message in my console Invalid Menu Extension (Path is invlaid): org.eclipse.help.ui.OpenHelpSearchPage *** This bug has been marked as a duplicate of 15959 ***
Platform	[ActionSets] Divide java action even further? Build 20020409  There are now a large number of actions in the java action set.  I think to allow for greater user customization, it would be nice to further subdivide into  action sets for different categories of actions, such as: - java refactoring - java navigation - java source manipulation  This is an easy way to allow greater user flexibility, and to prevent clutter in workspaces with many plugins.  As a side note, I don't understand the  distinction between " Edit " and " Source " menus... to me these are the same.   Submenus should be used to decrease the size of these menus rather than splitting into two menus. when we split the action set then we no longer have control over the menu  ordering. This is a workbench limitation. Once it is fixed we are consider moving to finer grained action sets again.  Moving to Platform UI for consideration. Pls move bug back to JDT UI when this problem is addressed. *** This bug has been marked as a duplicate of 14541 ***
Platform	DCR: Make search open a new perspective (1GJ6MRU) I find search would be more usuable if it opened into another perspective. It would  have the search result view and the editor area. Single clicking on a search result would open the file in one editor (maybe share the editor like in the debug perspective). We could  then use double click to open into a new editor. The single click would address the annoying need to double click to see the results - what  else did i do the seach for if not to see the results. ;-) Opening in a new perspective would avoid causing the editor area from the current working  perspective to become poluted. Or seeing the editor area open in a perspective where it is hidden. To me, I see 1 perspective == 1 task I'm trying to accomplish. If I'm doing something  and need to search for something, then this become another task (albeit it could very well be a " sub-task " of the current one).  NOTES: PRODUCT VERSION:  0.131 No plans to change current behavior
Platform	Problems to create new CVS project Hello,  if I click " Share Project " in the Java perspective to share a new project in  CVS, I get the message " Unknown response received from server " ...  My current version is: Stable Build 20020321 Mirko Can you please let us know:  1. what version of the server and type (linux, CVSNT) 2. was there anything in the .log? 3. are the steps reproduceable? 4. are you sure the server was accessible?  For example could you create a repo  location for it and browse it? 1. Version is CVSNT 1.11.1.3 2. Where do I find the .log? 3. The steps are reproduceable 4. The server is accessable. If I create the project on CVS and import it, than I can synchronize it without problems. But I can't create one in Eclipse. The .log is found under the .metadata directory (your workspace location).  Usually something like c:\eclipse\workspace\.metadata\.log. What connection method did you use? We usually see this error when using an  improperly configured EXT methd. I am using pserver to connect to CVSNT.  Mirko Closing bug. Its a month old and we haven't seen anything related - not enough for us to  take action on, and its CVSNT which we don't support.
JDT	[content assist] CodeAssist should provide way to insert fully qualified type name Build 20021009  There are various situations where I want a qualified type name to be inserted by codeassist, as opposed to have a bonus import statement added. If I mean it, there should be a way to get it (like shift+accept selection?). e.g. when typing a snippet to copy/paste into a conditional breakpoint, when  evaluating code on the fly. Seconded. You can now use code assist to insert a type fully qualified but you have to enter (e.g. using code assist) qualification yourself.
Platform	[Navigator] Tree scroll bar out of sync with top item (1GEJYGD) The Tree scroll bar can get out of sync with the top item on Linux. To reproduce in Eclipse: 1. Open a standard SWT development workspace with the UIMain launcher loaded   (org.eclipse.core.launcher should be the first project in the tree). 2. Expand the project to display the UIMain class and select it. 3. Exit Eclipse and restart. - > UIMain is selected and the top item. The scroll bar is also at the  top/position 0. When you click the scroll bar the tree gets in sync with the scroll bar and  shows the first tree item as the top item (the launcher project).   NOTES: McQ (01/06/2001 9:02:42 AM) -   Scrollbar needs to be forced to update its position. Is this a Tree problem or an ITPUI bug?   KR (6/1/01 11:39:31 AM) It's the tree - only happens on Linux.   KR (6/1/01 2:02:13 PM) Note that this is only reproducable when there are no editors  open. It seems that the selected item is the top item and that the  scroll bar is set as if the top item from the last Eclipse session was still  the top item. McQ (01/06/2001 4:18:41 PM) -   Re " It's the tree - only happens on Linux. " : We have already  had several cases where they assumed that by working with the scroll bar directly  they could get widgets to position their contents, which works some places and  not others (and thus is not supported). This could be a similar case.   KR (6/4/01 11:42:26 AM) After debugging this for a while I noticed that a bunch of  viewers call Tree.getVerticalBar() to restore the old ui state. This is one of the cases where  this doesn't work.   Tree.setSelection is called to select the previously selected item (at index 10). This automatically    sets the top index and the scroll bar selection to 10. Someone (PackageExplorerPart.restoreState) then gets the  vertical scroll bar and sets its selection to 9. For some reason the Tree doesn't always update  the top index accordingly. KR (6/4/01 12:30:28 PM)   It seems that the Tree sometimes gets a selection event for the programmatic scroll bar selection   but most of the time doesn ' t.   McQ (05/06/2001 11:04:29 AM) - No further action for June.   McQ (26/06/2001 2:19:17 PM) - Time to take another look at this. PRODUCT VERSION: 114 Not sure when I saw the manual setting the vertical scroll bar selection work.  It should always fail on Linux, i.e., the scroll bar will be set but the Tree won't be notified since it was a programmatic change. I experimented with using Tree.showItem with mixed results. On Linux this always scrolls the given item to the top. However, this is spec'd to return  without doing anything if the item is already visible. On Windows, since the viewer/widget is not yet visible when the viewer state is restored in JDT, it  works as long as the given item is above the selected item. If it is below the selected item the actual top item appears to be off by one.  Bottom line: JDT should not try to restore the scroll bar position. It leads to a confusing UI state on Linux.  Test case to reproduce what can be seen in Eclipse below: import org.eclipse.swt.*; import org.eclipse.swt.widgets.*; /**  * This type was created in VisualAge. */ public class Bug_4676 { public static void main(String arguments[]) { Shell shell = new Shell();  Tree tree = new Tree(shell, 0); TreeItem item1 = new TreeItem(tree, 0);  TreeItem item1_1 = new TreeItem(item1, 0); TreeItem item1_2 = new TreeItem(item1, 0);    TreeItem item1_3 = new TreeItem(item1, 0); TreeItem item;  TreeItem item2 = new TreeItem(tree, 0); item1.setText( " item1 " );  item2.setText( " item2 " );   item1_3.setText( " item1.3 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );     (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );     (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );     (new TreeItem(item1, 0)).setText( " 1.1 " );     (new TreeItem(item2, 0)).setText( " 2.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " );  (new TreeItem(item1, 0)).setText( " 1.1 " ); item1.setExpanded(true);  tree.setSelection(new TreeItem[] {item1_2});  tree.getVerticalBar().setSelection(0); // tree.showItem(item1);  tree.setSize(400, 300); shell.open();   Display display = shell.getDisplay (); while (!shell.isDisposed ())   if (!display.readAndDispatch ()) display.sleep (); } } Moved to JDT UI for consideration Claude, can you have a look at this on yr linux box? yup, it comes up with the second child item at the top, although the vertical  scroll bar is at the top. changed package explorer to no longer save/restore scroll state. Moving to Platform UI - the ResourceNavigate is also saving/restoring the scroll state. Knut, since you're most familiar with this, could you fix the Navigator up? We should request SWT API to save/restore the top item of a tree. Like the top  index in a table. Removed the code that saves and restores the position of the horizontal and  vertical scrollbars. Trying to restore the horizontal position seems like overkill anyway. Restoring the top index would indeed be nice. We currently set the item selection which moves the selected item to the top. This is sufficient but  could be better. Opened SWT bug 24333 asking for getTopIndex/setTopIndex API.
JDT	JCK 1.4 - ICLS - field from outer class and inherited public field in top-level nested class (1GK7HBJ) http://www.ott.oti.com/uvm/OTIIBM/numbat/Testing/JCK- 14/tests/lang/ICLS/icls005/icls00504m012/icls00504m012.html - POSITIVE TEST Test case:   javac 1.4: OK javac 1.3: icls00504m012.java:14: i is inherited from javasoft.sqe.tests.lang.icls005.icls00504m012.Y and hides variable in outer  class javasoft.sqe.tests.lang.icls005.icls00504m012.icls00504m012.  An  explicit ' this ' qualifier must be used to select the desired instance.                 int x = i; ^ 1 error Eclipse compiler: ---------- 1. ERROR in icls00504m012.java (at line 14)         int x = i; ^ The field i is defined in an inherited type and an enclosing scope ---------- NOTES: *** This bug has been marked as a duplicate of 3361 ***
Platform	DCR - Need linestyle to allow dots of 1 pixel I am trying to paint a line that alternates FG/BG color every pixel.  The  closest lin e style is SWT.LINE_DOT, which is 3-pixels long on Windows. It has been noted that GC contains drawFocus().  This cannot be used in all  cases.  In fact, this is not guaranteed to alternate FG/BG colors every 1 pixel. Correct. drawFocus only makes sense if you really intend to match the " focus " look for the platform. Actually, what really looks good when drawing non-rectangular focus lines,  which is what I am tring to do, is a line style of binary 100.  That is, one pixel foreground followed by 2 pixels background.  I can simulate this roughly  by drawing LINE_DOT on top of itself, with XOR, offset by -1 or +2 pixels. Here's some code to do that:  public static void main(String args[] ){  Display d = new Display(); final Shell shell = new Shell(d);  shell.setBackground(new Color(null, 255,255,255)); shell.setSize(400, 290);   shell.addPaintListener(new PaintListener() { public void paintControl(PaintEvent e) {    int points[] = new int[]{ 50,30, 100,30, 100,40, 60,80, 30,40, 30,30    }; e.gc.setXORMode(true);    e.gc.setLineStyle(SWT.LINE_DOT); e.gc.drawPolygon(points);    points[0] += 1;    e.gc.drawPolygon(points); }  }); shell.open();  while (!shell.isDisposed()) while (!d.readAndDispatch())    d.sleep(); } *** Bug 31775 has been marked as a duplicate of this bug. *** Fixed > 20041118.  See GC.setLineDash().
Platform	IllegalArg exception while deleting projects/closing editors I just started eclipse up with many editors open (non of them where activated  yet) 1) select 3 projects (all JUnit project) 2) execute delete - push yes to delete the contents. Got the message dialog: Error restoring editor. Below is the stack trace with the illegal argument exception. Once you are in this state you can only shutdown.   !ENTRY org.eclipse.ui 4 2 Jun 01, 2002 23:47:00.21 !MESSAGE Problems occurred when invoking code from plug-in: " org.eclipse.ui " . !STACK 0 java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:1873) at org.eclipse.swt.SWT.error(SWT.java:1819)  at org.eclipse.swt.widgets.Widget.error(Widget.java:368) at org.eclipse.swt.widgets.Composite.setTabList(Composite.java:381)  at org.eclipse.ui.internal.EditorArea.updateTabList(EditorArea.java:307) at org.eclipse.ui.internal.EditorArea.setActiveWorkbook (EditorArea.java:282) at org.eclipse.ui.internal.EditorArea.setActiveWorkbookFromID (EditorArea.java:291) at  org.eclipse.ui.internal.EditorPresentation.setActiveEditorWorkbookFromID (EditorPresentation.java:358)  at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:816) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802) at org.eclipse.core.runtime.Platform.run(Platform.java:416)  at org.eclipse.ui.internal.EditorManager.busyRestoreEditor (EditorManager.java:774)  at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:764) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)  at org.eclipse.ui.internal.EditorManager.restoreEditor (EditorManager.java:760)  at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1141)  at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133)  at org.eclipse.ui.internal.EditorManager.getVisibleEditor (EditorManager.java:275)  at org.eclipse.ui.internal.WorkbenchPage.getActiveEditor (WorkbenchPage.java:1100)  at org.eclipse.jdt.internal.debug.ui.actions.ManageWatchpointActionDelegate.setEnab ledState(ManageWatchpointActionDelegate.java:282) at  org.eclipse.jdt.internal.debug.ui.actions.AbstractManageBreakpointAc tionDelegate .update(AbstractManageBreakpointActionDelegate.java:112) at  org.eclipse.jdt.internal.debug.ui.actions.ManageBreakpointActionDelegate.selecti onChanged(ManageBreakpointActionDelegate.java:174)  at org.eclipse.ui.internal.PluginAction.refreshEnablement (PluginAction.java:170)  at org.eclipse.ui.internal.PluginAction.selectionChanged (PluginAction.java:232)  at org.eclipse.ui.internal.PluginAction.selectionChanged (PluginAction.java:252)  at org.eclipse.ui.internal.AbstractSelectionService$3.run (AbstractSelectionService.java:137)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802)  at org.eclipse.core.runtime.Platform.run(Platform.java:416) at org.eclipse.ui.internal.AbstractSelectionService.fireSelection (AbstractSelectionService.java:135) at org.eclipse.ui.internal.AbstractSelectionService.reset (AbstractSelectionService.java:291) at org.eclipse.ui.internal.AbstractSelectionService.partDeactivated (AbstractSelectionService.java:274) at org.eclipse.ui.internal.WWinPartService.partDeactivated (WWinPartService.java:124) at org.eclipse.ui.internal.PartListenerList$4.run (PartListenerList.java:99) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802) at org.eclipse.core.runtime.Platform.run(Platform.java:416)  at org.eclipse.ui.internal.PartListenerList.firePartDeactivated (PartListenerList.java:97)  at org.eclipse.ui.internal.WorkbenchPage.firePartDeactivated (WorkbenchPage.java:1053)  at org.eclipse.ui.internal.WorkbenchPage.onDeactivate (WorkbenchPage.java:1547)  at org.eclipse.ui.internal.WorkbenchWindow$7.run (WorkbenchWindow.java:1157)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64) at org.eclipse.ui.internal.WorkbenchWindow.setActivePage (WorkbenchWindow.java:1152) at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages (WorkbenchWindow.java:394) at org.eclipse.ui.internal.WorkbenchWindow.hardClose (WorkbenchWindow.java:845) at org.eclipse.ui.internal.WorkbenchWindow.busyClose (WorkbenchWindow.java:322) at org.eclipse.ui.internal.WorkbenchWindow.access$3 (WorkbenchWindow.java:311) at org.eclipse.ui.internal.WorkbenchWindow$2.run (WorkbenchWindow.java:367) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)  at org.eclipse.ui.internal.WorkbenchWindow.close (WorkbenchWindow.java:365)  at org.eclipse.jface.window.WindowManager.close(WindowManager.java:103) at org.eclipse.ui.internal.Workbench$2.run(Workbench.java:202)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802)  at org.eclipse.core.runtime.Platform.run(Platform.java:416) at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:173)  at org.eclipse.ui.internal.Workbench.access$5(Workbench.java:150) at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:291)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64) at org.eclipse.ui.internal.Workbench.close(Workbench.java:289)  at org.eclipse.ui.internal.ExceptionHandler.closeWorkbench (ExceptionHandler.java:109)  at org.eclipse.ui.internal.ExceptionHandler.handleException (ExceptionHandler.java:94)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:561) at org.eclipse.jface.window.Window.open(Window.java:538)  at org.eclipse.jface.dialogs.MessageDialog.openInformation (MessageDialog.java:336)  at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1145)  at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133)  at org.eclipse.ui.internal.EditorManager.getVisibleEditor (EditorManager.java:275)  at org.eclipse.ui.internal.WorkbenchPage.getActiveEditor (WorkbenchPage.java:1100)  at org.eclipse.jdt.internal.debug.ui.actions.ManageWatchpointActionDelegate.setEnab ledState(ManageWatchpointActionDelegate.java:282) at  org.eclipse.jdt.internal.debug.ui.actions.AbstractManageBreakpointActionDelegate .update(AbstractManageBreakpointActionDelegate.java:112)  at org.eclipse.jdt.internal.debug.ui.actions.ManageBreakpointActionDelegate.selecti onChanged(ManageBreakpointActionDelegate.java:174) at org.eclipse.ui.internal.PluginAction.refreshEnablement (PluginAction.java:170) at org.eclipse.ui.internal.PluginAction.selectionChanged (PluginAction.java:232) at org.eclipse.ui.internal.PluginAction.selectionChanged (PluginAction.java:252) at org.eclipse.ui.internal.AbstractSelectionService$3.run (AbstractSelectionService.java:137) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802) at org.eclipse.core.runtime.Platform.run(Platform.java:416)  at org.eclipse.ui.internal.AbstractSelectionService.fireSelection (AbstractSelectionService.java:135)  at org.eclipse.ui.internal.AbstractSelectionService$1.selectionChanged (AbstractSelectionService.java:50)  at org.eclipse.jface.viewers.Viewer.fireSelectionChanged (Viewer.java:147)  at org.eclipse.jface.viewers.StructuredViewer.updateSelection (StructuredViewer.java:1153)  at org.eclipse.jface.viewers.StructuredViewer.handleSelect (StructuredViewer.java:544)  at org.eclipse.jface.viewers.StructuredViewer$1.widgetSelected (StructuredViewer.java:568)  at org.eclipse.jface.util.OpenStrategy.fireSelectionEvent (OpenStrategy.java:171)  at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:168) at org.eclipse.jface.util.OpenStrategy$1.handleEvent (OpenStrategy.java:297) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289) at org.eclipse.jface.window.Window.runEventLoop(Window.java:558)  at org.eclipse.jface.window.Window.open(Window.java:538) at org.eclipse.jface.dialogs.MessageDialog.openInformation (MessageDialog.java:336) at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1145) at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133) at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:782) at org.eclipse.ui.internal.EditorWorkbook$2.widgetSelected (EditorWorkbook.java:134) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634)  at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:1683) at org.eclipse.swt.custom.CTabFolder.destroyItem(CTabFolder.java:501)  at org.eclipse.swt.custom.CTabItem.dispose(CTabItem.java:99) at org.eclipse.ui.internal.EditorWorkbook.removeTab (EditorWorkbook.java:610) at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:548) at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:183)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:79)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:60)  at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:114)  at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:682)  at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1144)  at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133)  at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:782)  at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:540)  at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:183) at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:79) at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:60) at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:114) at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:682) at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1144) at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133) at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:782)  at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:540)  at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:183) at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:79) at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:60) at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:114) at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:682) at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1144) at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133) at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:782) at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:540) at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:183)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:79)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:60)  at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:114)  at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:682)  at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1144)  at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133)  at org.eclipse.ui.internal.EditorManager.getVisibleEditor (EditorManager.java:275)  at org.eclipse.ui.internal.WorkbenchPage.getActiveEditor (WorkbenchPage.java:1100)  at org.eclipse.jdt.internal.debug.ui.actions.ManageWatchpointActionDelegate.setEnab ledState(ManageWatchpointActionDelegate.java:282) at  org.eclipse.jdt.internal.debug.ui.actions.AbstractManageBreakpointActionDelegate .update(AbstractManageBreakpointActionDelegate.java:112)  at org.eclipse.jdt.internal.debug.ui.actions.ManageBreakpointActionDelegate.selecti onChanged(ManageBreakpointActionDelegate.java:174) at org.eclipse.ui.internal.PluginAction.refreshEnablement (PluginAction.java:170) at org.eclipse.ui.internal.PluginAction.selectionChanged (PluginAction.java:232) at org.eclipse.ui.internal.PluginAction.selectionChanged (PluginAction.java:252) at org.eclipse.ui.internal.AbstractSelectionService$3.run (AbstractSelectionService.java:137) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802) at org.eclipse.core.runtime.Platform.run(Platform.java:416)  at org.eclipse.ui.internal.AbstractSelectionService.fireSelection (AbstractSelectionService.java:135)  at org.eclipse.ui.internal.AbstractSelectionService$1.selectionChanged (AbstractSelectionService.java:50)  at org.eclipse.jface.viewers.Viewer.fireSelectionChanged (Viewer.java:147)  at org.eclipse.jface.viewers.StructuredViewer.updateSelection (StructuredViewer.java:1153)  at org.eclipse.jface.viewers.StructuredViewer.handleInvalidSelection (StructuredViewer.java:514)  at org.eclipse.jface.viewers.StructuredViewer.preservingSelection (StructuredViewer.java:700)  at org.eclipse.jface.viewers.AbstractTreeViewer.remove (AbstractTreeViewer.java:961)  at org.eclipse.ui.model.WorkbenchContentProvider.processDelta (WorkbenchContentProvider.java:154)  at org.eclipse.ui.model.WorkbenchContentProvider$1.run (WorkbenchContentProvider.java:189)  at org.eclipse.ui.internal.UIWorkspaceLock.doPendingWork (UIWorkspaceLock.java:53)  at org.eclipse.ui.internal.UIWorkspaceLock.acquire (UIWorkspaceLock.java:38)  at org.eclipse.core.internal.resources.WorkManager.checkIn (WorkManager.java:80)  at org.eclipse.core.internal.resources.Workspace.prepareOperation (Workspace.java:1311)  at org.eclipse.core.internal.resources.Resource.refreshLocal (Resource.java:965)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle mentInfo(CompilationUnitDocumentProvider.java:809) at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect (AbstractDocumentProvider.java:278) at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput (AbstractTextEditor.java:1615) at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput (StatusTextEditor.java:160) at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput (JavaEditor.java:546) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput (CompilationUnitEditor.java:1001)  at org.eclipse.ui.texteditor.AbstractTextEditor.init (AbstractTextEditor.java:1231)  at org.eclipse.ui.internal.EditorManager.createSite (EditorManager.java:547)  at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:596)  at org.eclipse.ui.internal.EditorManager.access$5 (EditorManager.java:592)  at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:820) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:802) at org.eclipse.core.runtime.Platform.run(Platform.java:416)  at org.eclipse.ui.internal.EditorManager.busyRestoreEditor (EditorManager.java:774)  at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:764) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)  at org.eclipse.ui.internal.EditorManager.restoreEditor (EditorManager.java:760)  at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1141)  at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133)  at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:782)  at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:540)  at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:183) at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:79) at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:60) at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:114) at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:682) at org.eclipse.ui.internal.EditorManager$Editor.getEditor (EditorManager.java:1144) at org.eclipse.ui.internal.EditorManager$Editor.getPart (EditorManager.java:1133) at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:782) at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:540) at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:183)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:79)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:69)  at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:110)  at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:712)  at org.eclipse.ui.texteditor.AbstractTextEditor$8.run (AbstractTextEditor.java:1653)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292) at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335)  at org.eclipse.ui.actions.DeleteResourceAction.run (DeleteResourceAction.java:354)  at org.eclipse.ui.views.navigator.RefactorActionGroup.handleKeyPressed (RefactorActionGroup.java:113)  at org.eclipse.ui.views.navigator.MainActionGroup.handleKeyPressed (MainActionGroup.java:185)  at org.eclipse.ui.views.navigator.ResourceNavigator.handleKeyPressed (ResourceNavigator.java:575)  at org.eclipse.ui.views.navigator.ResourceNavigator$7.keyPressed (ResourceNavigator.java:308)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:116)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:739) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:244) at org.eclipse.core.launcher.Main.run(Main.java:693)  at org.eclipse.core.launcher.Main.main(Main.java:526) This is a very strange stack.  There are calls to closeEditor that end up in  closeEditor again.  It looks like you went through the error dialog and said yes to exit.  Did this dialog indicate the same problem?  It sounds like the editors were being lazily created.  Is this possible?  Were you coming back into an existing session with open editors? I have just restarted so and deleted 3 project so editors must haben created  lazily and this happens while the underlying resource might have been gone. *** Bug 19498 has been marked as a duplicate of this bug. *** Released the fix in the HEAD stream. fixed. *** Bug 19637 has been marked as a duplicate of this bug. ***
Platform	Cannot search for German words from the browser Searching for German words from the Eclipse UI works, but searchin from the  browser for words containing " special " , German characters brings no results. Fixed.  Should appear first in the 20020425 nigthly build.
JDT	code generation and RuntimeExceptions/Errors Code generations that contains handling of exceptions (like " surround with  try/catch " and the " extract method " refactoring) tend to include handling of  RuntimeExceptions and Errors, which often is undesired. Please provide means to disable this behaviour. It should be a general coding preference whether unchecked exception should be  included in the generated method. I don't agree with this. The current behavior is as follows:  if the set of selected statements contain a method call which declaration declares thrown runtime exceptions or error, the extracted method declares the  runtimer exceptions as well. Here is an example: public class E {     public void bar() throws NullPointerException { throw new NullPointerException();     } public void baz() {     } public void foo() {         bar(); baz();     } }  extracting the method call bar creates a new method that throws a NullPointerExcpetion. Extracting the method call baz() doesn ' t.  The same is true for surround with try/catch. IMO this a proper behavior since it keeps to the " documentation " of thrown RuntimeExceptions or Errors.  Any objection to close the PR ? My problem is regarding libraries like JAXP. For example,  javax.xml.parsers.DocumentBuilderFactory.newInstance() declares to throw a FactoryConfigurationError. There are many other examples.  I would really like to disable catching these by default. Please make this an option. So you concern is more with surround with try/catch then with extract method ? Well, yes, as " surround with try/catch " generates more code and has direct  impact on functionality. So I always have to delete this code, whereas I can live with an oversized throws-clause (if I have to...). Surround with try catch doesn't generate a catch block for Runtime exceptions  anymore even if they are declared in the signature of a called method. Extract method has an option in the wizard.  Fixed in build > I20020416
Platform	[Navigator] Navigator View should have a " Collapse All " button The JDT Package Explorer has this nice " Collapse All " button on it's tool bar.  I think the Navigator view would profit from a similar feature. It is a really convenient way to " unclutter " your Navigator view.  Also, after getting used to using it in the Package Explorer one always wonders why the Navigator view (which is -- from the users perspective -- a similar view) doesn't have the same feature. The attached icon is a copy from project org.eclipse.jdt.ui.  It has to be placed into the icons/full/elcl16 folder of the project org.eclipse.ui. " Collapse All " feature  @@ CollapseAllAction @@ I copied the method getImageDescriptor(String) from org.eclipse.ui.views.framelist.FrameAction. It could be placed as a protected member function into class ResourceNavigatorAction; so future subclasses would also be able to have an icon -- I did not do so because I wanted to keep the number of affected classes down. I placed the icon's file name and path as string constants directly into the code -- instead of placing them into a properties file -- because the subclasses of FrameAction do so too.  @@ MainActionGroup @@ I added the CollapseAllAction directly to MainAction group instead of creating a CollapseActionGroup because creating a " group " for one action doesn't make sense in this particular case. *** This bug has been marked as a duplicate of 14641 *** see bug 14641
Platform	User should be returned to the last preference that was being modified If you modify a preference and then go back into the preferences dialog it  would be more intuitive if the user was returned to the last preference edited.  This mode of operation would be similar to other tools (i.e. Excel,  Powerpoint, Word) which remember the last page visited in Options and Customize. To Reproduce:  1. In WSWB, Select Window- > Preferences- > Workbench- > Appearance 2. Click OK 3. Select Window- > Preferences  Result: Back at starting window and would need to select Workbench- > Appearance  Desired Result: The preferences view opens the second time at Workbench- > Appearance. Still a problem.  Should fix in 2.0. This is particularly awkward for keyboard users. Selection should also be saved across sessions, being careful to handle case  where page is no longer there on restart. Should also save expanded state, but this needs only to be preserved for the  same session. Likewise for properties dialog. Fixed in build > 20020129 *** Bug 2110 has been marked as a duplicate of this bug. *** *** Bug 8981 has been marked as a duplicate of this bug. *** Marking closed
Platform	Launch configurations - store with workspace Clients may not want to have to store a launch configuration with a project.  Should be able to store with the workspace. There is an implied limitation that such configurations will not be shareable in a repository. Fixed. Launch configurations are now stored locally with the workspace, or as a  file in a container. There is no explicit project relationship. Re-assigning for verification. please verify. Verified. ' Local ' launch configurations are stored in metadata and are thus nor sharable  through a repository.  Local launch configs are stored without any reference to a project.
Platform	Validation of new repo: cancel on password prompt shouldn't cancel wizard When creating a new repository location, when you Finish and the validation  occurs, if you cancel the password prompt: 1. it asks you again (persistent little guy!) 2. it cancels the whole wizard It should just revert back to the wizard so that you can, say, fix the fields  in the connection which were causing the validation to fail. Also, if validation fails, the locationg gets added anyway. It shouldn't unless I chose not to validate (I believe this is what we did in  1.0). Fixed and tested in both wizards.
Platform	No UI for Eclipse execution options Mac UI applications are not started via the command line but by double-clicking. As a  consequence Eclipse's execution options are not easily accessible. The not-Mac-like  work around is to specify the execution arguments by editing a (normally invisible) file within the application bundle. Since this is rather static, the user has to duplicate the  60MB Eclipse application if she wants to work with multiple workspaces. It would be more Mac-like to have an initial dialog to choose from recent workspaces, or  to have a file which is associated with Eclipse so that  a double click would lauch Eclipse with the correct workspace.  In addition it would make sense to have some of the execution options on a preference page and would apply after a restart. *** This bug has been marked as a duplicate of 5509 ***
Platform	Order dependencies in Update I had the following changes to catch up with:  +buildAll.xml -buildall.xml  I selected both and updated. It failed (gracefully, with a dialog) because the addition could not be performed until the delete had occured.  It told me an  existing file with name.equalsIgnoreCase() already existed. Perhaps the selection should be sorted into removals and then additions. Were you using " Team- > Update " or update from the sync view? The synchronize view *** This bug has been marked as a duplicate of 21001 ***
Platform	Maximizing view causes all except navigator to disappear While testing on Windows 98, I was working in the Resource Perspective and  maximized the CVS console view. All views except the navigator disappeared. The problem is easily fixed in many ways (maximize Eclipse, reset perspective). After the problem is fixed, maximizing a view still leaves the navigator on top. Could be a dup of bug 18642.  Eduardo? Is it reproducible? Yes it likely to be a dup but it would be great if we could reproduce it to make it sure. It's not reproducable in the sense that there is a set of steps that make it  happen but it happened more than once. Please replace the workbench.jar with the one I posted in the eclipse-dev. I.E.   http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-ui- home/patches/I-20020602/workbench.jar  99% sure it will fix the problem. Michael, if you have time could you please try to reproduce this with Eduardo's  patch. I'm running with the patch. I'll let you know if the problem reoccures. I ran with the patch most of the day yesterday and never had the problem. *** This bug has been marked as a duplicate of 18929 ***
Platform	[Editor Mgmt] No notification sent when an IEditorReference is closed There doesn't appear to be any notification sent from the platform when an  editor reference is closed. I don't get part closed notifications for  editors which are restored at startup by the platform but are never activated by the user (thus, never fully instantiated).  Background: I have an editor management view which displays open editors in a table.  When the view is opened, I ask the workbench page for editor references and display these references in the table. I also listen to part open  notifications to add newly opened editors to the view when their editor part is opened. Finally, I listen to part close notifications to remove  editors from the table when they are closed. The problem is that if I don't  get a notification from the platform, I don't know when to remove the  editor from the view. Related to bug 10941. If the view becomes part of the platform and if it is  implemented only in terms of API, we need to fix this otherwise it can be closed. Since view and editor references can now be closed without activating the part,  we should support notification of this.  It's not just the editors view that  needs to track par t activation, there could be many other cases.  Simon recently added IPartListener2 to support visibility notification. Perhaps we should change these new notifications to be in terms of  IPartReference instead of IWorkbenchPart, and also add partOpened (IPartReference), partClosed(IPartReference), etc. Fix released in the HEAD stream. See IPartListener2
Platform	[boot] -nl locale argument does not work If you want to launch Eclipse with a specific locale, the -nl locale vm  argument seems to have no effect.  You have to change your machine's regional  settings to that locale for it to be used. Please provide steps to reproduce the problem. It turned out that the people reporting the problem to me had their .properties  files in the wrong places. Actually, I think there definitely is a problem, unless I'm missing something. So I'm re-opening.  Steps: 1. Go to the org.eclipse.pde.runtime plugin in your install tree. 2. Copy plugin.properties and name the copy ' plugin_fr.properties ' . 3. Edit plugin_fr.properties and give the ' views.errorlog.name ' key the value: " Le Log des erreurs " . Save. 4. *Without* changing your machine's regional settings, launch eclipse with   the -nl fr option. 5. Open the Error Log View.  You will see that its name is still in English. 6. Exit. 7. Change your machine's regional settings to ' France ' . 8. Launch Eclipse. 9. You will see that the Error log view is now in French. See related bug 12463 which also talks about search order for NL. Not that it  is completely related to this bug, but in case you would like a little light reading. :-)  This looks like a bug. When we search for JARs and libraries we check the value of NL in the BootLoader but when we search for resources we create a  resource bundle which is created on the default locale. Relavent code is in org.eclipse.core.internal.plugins.PluginDescriptor. I want to add this as a new bug .. but i found it already here...  the 2 strategies (nl directory structure (BootLoader.getNL() , and the default locale (Locale.getDefault() ) that are used in internationalization in eclipse  really causes a mess.. especially in plugin.properties i'll give you a very clear example i have the locale on my machine as arabic egypt (ar_EG) , then i started eclispe with french nl (-nl fr argument) in plugin.xml i'm contributing a object contribution action on pop menu.. the  action label is defined as < action     label= " %action.label " icon= " $nl$/icons/sample.gif " ....................  / > so it's label and icon are locale sensetive.. and i have 2 locales arabic and french and there is plugin_ar.properties and plugin_fr.properties each of them  containing action.label key with suitable value of each and i have an arabic icon and a french icon --nl ----ar ------icons ------------sample.gif ----fr ------icons -----------sample.gif when i run eclipse i got the action with an arabic label and a french icon.. that's it..  i guess this should be handeled quickly specially for plugin.xml because i don't have any control on it i suggest that BootLoader.getNL() returns the Locale.getDefault().toString() and nl argument is not used or -nl arguments sets the default locale of the vm Debbie, please investigate. Thanks. Both sets of results (from Wassim Melhem and Joseph Khalil) are expected.   There are 2 different translation mechanisms.  The following articles explain these mechanisms and where they are used:  http://www.eclipse.org/articles/index.html -- > How to internationalize your  Eclipse plug-in http://download.eclipse.org/downloads/documentation/2.0/html/plugins/org.eclips e.platform.doc.isv/guide/product_def_nl.htm Changing status ... So you are suggesting that it is " acceptable " to launch eclipse with -nl fr  option, and have my workbench half in French and half in whatever my machine's  locale is? Detailed discussion with Jim des Rivieres yields the following: - is it possible for us to change the default locale if/when we detect the presence of -nl parameter? Implications on boot, runtime, etc.? - documentation for BootLoader.getNL() states " < code > null < /code > is returned  * if the locale cannot be determined. " .  But examination of the code reveals  that null will never be returned.  If we cannot determine the locale, we default to using the default locale.  Documentation should be changed.  This  is a non-breaking API change as we are removing restrictions. Investigation continues. Reopening Fixed and released to HEAD. Yes!! so what's the final situation now does nl changes the default locale or what.... Yes, it does. If the user specifies a -nl argument then that Locale is set up  as the default. Has this bug been fixed in the 2.1 M5 Driver, if so can the fix be verified  using a raw M5 Eclipse download?  I have tried the following: eclipse -nl fr_FR_EURO with an M5 driver and it seems everything still comes  up in English? I have tested this against M5 and it works ok for me. Are you sure that you  have the correct Eclipse translation pack installed? They are available on the web site as a separate download and are not included as a part of the standard  SDK. Thanks for the tip, I had not downloaded the Language packs.  I have since  done so, thanks.  However, I still notice many things untranslated.  For example under the File menu bar, all the entries are still in English, like  Open, Close, Close All, etc?  Is it because the language packs are outdated? The translations are up-to-date with Eclipse 2.0.2 and anything added since  then (between 2.0.2 and 2.1 M5) will not be translated. Look for a new translation pack for 2.1 closer to the 2.1 release date. The fix for this bug has introduced a regression bug, so I'm re-opening: After the fix was made, when I call Locale.getAvailableLocales to set the items in the Language combo box of the Target Environment preference page, the only  values that I get are en_US, and en. Before the change was made, that same call used to return all possible locales (spanish, arabic, etc...) People are now unable to launch a runtime workbench instance in the locale of choice. Created new bug 32274 to follow this new problem. Closing.
Platform	Rebuild All does not prompt for saving (1GDVNT4) When trying to ' Rebuild All ' on project with file that has not been saved, Workbench does not prompt user to save.  1. Open Workbench 2. Create new Java project ' P ' 3. Right click on project and select New- > Class to make class ' P ' (in default package) with public static void main 4. Do some editing, e.g. add ' import java.io.*; ' and ' System.out.println(...); ' 5. Do ' Rebuild all ' , but there is no prompt to save  NOTES: SA (5/31/2001 10:01:23 AM)  See also: 1GEACBG: ITPUI:ALL - SEVERE: Performing resource operations with dirty editor open on it   1GC2UI7: ITPJUI:WINNT - ' rebuild all ' just saves all editor without a warning  KH (5/31/2001 11:45:41 AM) Workbench preference for saving before build. But would be nice if we noticed before hand. PRODUCT VERSION: 113 Stale defect. *** Bug 26442 has been marked as a duplicate of this bug. *** New bug entered as noted in annotation above. There are no plans for the UI team to work on this defect report until higher  priority items are addressed.  If you would like to work on this defect please let us know in the UI developer's mailing list. Stale defect - latest builds have option to save all before manual build.
Platform	Window- > Open Workbench hangs workbench When I select the Window- > Open Workbench menu item the workbench hangs while  using 99% CPU time. It's been hanging for 10 minutes now so I assume it's  terminal. What is that menu item supposed to do anyway? (I was trying to find out). Pls retry in latest. If it still crashes break the VM to generate a stack dump  that we can use to determine what is happening. Works in build 20011116 Closing based on comments above.
Platform	DND and fast view could have a better integration I'd like to have a better integration between DND and the fast view. For  example, if I have the navigator in the fast view and I want to drag a file from windows explorer to some folder in my workspace, I would like the  navigator to open from the fast view when I have the cursor over it so that I could drop my file in the desired folder. I'd like to add my " vote " on the importance of this PR.  Fast views are a very  important part of the UI, and as it is now they cannot be used in conjunction with drag and drop.  I have almost everything in a fast view now, which is  great, but it means no more DND! I think we should add the requested support to perspectives as well. I.e., if a  file gets dragged over a fast view button *or* a perspective button, activate the view/perspective. Sent attached fix to Nick, Randy and Simon for review.  I'm going to enter a new bug as a reminder to change the way the fast view is  looked up. Currently, the tool tip text of the tool item is the only way to identify the fast view that should be activated. We need to change  ShowFastViewContribution to provide one contribution item per fast view button. The drag and drop behavior is as follows: 1. if the mouse is hovering over a fast view button in a d & d operation for more  than 250ms the fast view is activated. 2. the activated fast view is deactivated and the old view reactivated if the  d & d operation moves off the fast view button for more than 250ms, or  immediately if the d & d operation reenters the shortcut bar after being over the  activated fast view. This is to indicate to the user how the activated fast view can be deactivated without cancelling the d & d operation.  We (Lynne, Simon and I) decided that extending the drag and drop activation to perspectives would be too heavy weight since perspectives can potentially take  a long time to activate, making the d & d operation unresponsive. Released fix
JDT	Undo doesn't preserve selection after undo Build 20021018  1. Define class A as follows: public class A {  public void foo() { String string = " hello " ;   string.com }  2. With the cursor after the " string.com " , invoke code assist 3. From the completion list, select " compareTo(Object) " 4. Now press Ctrl-z to undo the completion  After the undo, the segment " com " is selected.  This was never selected before -- the net effect is that the undo doesn't bring me back to the state I was in before.  If I immediately start typing after the undo it will delete the " com " selection. The selection behavior you see indicates the " com " has been replace by the  content assist action. In order to change this behavior content assist must be able to push custom undo objects onto the undo stack. Post 2.1 Get rid of deprecated state. *** Bug 202458 has been marked as a duplicate of this bug. *** *** Bug 103094 has been marked as a duplicate of this bug. *** *** Bug 32018 has been marked as a duplicate of this bug. ***
JDT	Format option loses place in editor (1GHQFU6) If you select the Format option from the pop up menu in a Java Editor your current selection location is lost requiring you to search around for it again. STEPS 1) Open a relatively large .java file 2) Go near the bottom 3) Select format - you are sent back to the top. NOTES: PRODUCT VERSION: 0.9 *** Bug 5559 has been marked as a duplicate of this bug. *** I can't reproduce the exact same problem. It's true that the selection gets  lost, but the cursor is put at the end of the previous selection. ok, I reproduced it. Didn't realize that it only happens for no selection. It's fixed from my point of view. There's currently a problem with the  CodeFormatter which does not calculate mapped positions correctly if multi-line comments are involved.  Once this is fixed, the range check for StyledText.setSelection() can be removed from SourceViewer. closing this bug, since the selection validation is done in TextViewer. *** Bug 7215 has been marked as a duplicate of this bug. *** *** Bug 6487 has been marked as a duplicate of this bug. ***
JDT	Error changing classpath to not use /bin (1GFQT1W) 1. create a java project, just give a name (eg. ' Bad ' ) 2. go to properties, buildpath.  Give it a /src and a /bin.  Finish. 3. go to properties, buildpath.    3.1  switch to " Use project as source folder " option   3.2  take out /bin from buildpath text field. Finishing gives  Error Setting Build Path Reason:   Invalid path: /Bad If you do 3.1, Finish, then do 3.2, Finish, it will work.  Its doing them both in the same dialog session that's the problem.  NOTES: MA (31.07.2001 11:01:58)  The Java project wizard first sets the new Output location, then the classpath. This leads to incorrect state after setting the output location.  The solution should be, that Java core offers one set routine. setBuildPaths(IClasspathEntry[] cp, IPath outputLocation) Still pending and really important is als a public verification routine, returning a displayable status.    IStatus validateBuildPaths(IClasspathEntry[] cp, IPath outputLocation) See also 1G7A1TL: ITPJCORE:WINNT - DCR - JM - Rules for classpath not specified   Move to JCORE PM (8/2/2001 4:22:27 PM)  The requested API is available in 2.0 stream (JavaConventions.validateClasspath/validateClasspathEntry). Moving to ITPJUI for making the necessary adjustments.   MA (05.09.2001 18:03:45) implemented in 200 (with JCore 2.0 stream) moved to fixed PRODUCT VERSION:  0.9 GA
Platform	Advanced search causes a JavaScript error on IE5.0(Debug = true) Use IE5.0 as my default browser. Steps. 1. Click on help. 2. Click Advanced Search 3. A dialog pops up: An error has occured on line 148 since I have Script debug on. This is similar to bug 19041, although 19041 was on IE6 running on win 98  without the latest fixpacks. Your bug report is on win 2000, but I believe it is a browser/os bug, as it  does not happen with IE5.5 or IE6. More information: Error is permission denied. May be it is some browser issue or permissions for me? (Line 148)  Here is where it goes in case I decide to debug. function restoreSelectedBooks() {  var selectedBooks = window.opener.selectedBooks; -- Error reported on this line var inputs = document.body.getElementsByTagName( " INPUT " ); Yes, it is the same bug as in bug 19041. I will mark this as a duplicate.  As I said before, we have seen this on a windows 98 machine, and it went away after applying the networking patch from Microsoft's update site. The  permission error is caused by the browser not allowing the dialog to talk to the opener frame, as the browser mistakenly thinks the access is cross domains  (which it isn't it). Try getting an OS fixpack, and maybe upgrade your browser as well. *** This bug has been marked as a duplicate of 19041 ***
JDT	Increment statement in for loop contains trailing comments for (int i= 0; i < 10; i++/**/)   ... Source end of the postfix expression is the last slash of /**/ not the + of i++ Why don't you want the trailing comment to be part of the expression? This will be fixed in the new parser I intent to release for the next  integration build. If you have code that is a workaround of this problem, let me know. Fixed and released in HEAD. The comment is no longer part of the postfix  expression.
Platform	setActiveEditor is not called when last editor closed Build 20020515  Kai reports that EditorActionBarContributor.setActiveEditor is not getting called with null when the last editor of that type is closed. This used to happen, and they rely on it to properly unhook / dispose things. This may be the cause of some of the NPEs we've been seeing since a disposed  editor may be referred to from these actions, and the actions are still hooked as listeners on the page. Kai,  Are you sure we called setActiveEditor with null before? The spec on IEditorActionContributor.setActiveEditor does not say it allows  null, so this would be a breaking API change. However, I understand that you need to do this to unhook the part listeners  for the retargetable actions. I noticed that BasicEditorActionContributor.registerListeners is not prepared  for a null part, so this will have to get fixed up. Other editors will likely not be prepared to handle null (e.g. WSAD).  Since it's somewhat of a hack to hook the listeners in setActivePart anyway  (you have to check to ensure it's done only once), I propose we add:  interface IEditorActionBarContributor2 extends IEditorActionBarContributor { public void init(IWorkbenchPage page);     public void dispose(); }  This would let you hook/unhook the listeners, without having to check that it's done only once, and it will be a non-breaking API change. I am pretty sure it used to be this way. Only code that recently has been added  is not safe. Having a new interface is fine. I suppose the workbench will check automatically whether the interface is implemented and then call the  appropriate methods. So as client, I don't have to do more than just to  implement the interface. It must be specfied when init(IWorkbenchPage) is called relative to init(IActionBar).  However, setActiveEditor(null) is still required. If you keep contributions even if the editor is gone, the text actions must somehow be notified. The  BasicTextEditorActionContributor uses a retarget mechanism, that explicitly sets the target editor to actions. This is supported since 1.0. The proposed  dispose method would be called to late. In the 20020115 build (the oldest I have at the moment) setEditor is not  called with null when the last editor is closed. I'm not sure I understand why the null call is needed since the contributions  are only visible if an editor is the top editor and setActiveEditor would have been called with the correct editor. When an editor is closed the  contributions go away or are " retargeted " to another editor.  Isn't the problem the new use of org.eclipse.ui.actions.RetargetAction by the  contributor. It adds the action (ex. fRetargetShowJavaDoc) as a page listener but never removes it. The api Nick suggests is to handle this case of adding  and removing RetargetActions as page listeners. The original contract of an editor contributor has been that its contributions  are only visible when an appropriate editor is active. Thus managing the enable and disable state of contributions depends on the activation state of editors.  If the platform ensures that this still works without limitation the setActiveEditor(null) call would not be necessary.  E.g.: Based on the original contract the text infrastructure introduced the model of RetargetTextEditorActions in 1.0. They are similar to the current  retarget actions but differ in the important point that they must explicitly be retargeted. I.e. they are not part listeners. The editor action bar contributor  plays this role based on the calls to setActiveEditor. IEditorActionBarContributor states that implementors should subclass  EditorActionBarContributor thus adding methods to this interface can be done in a non-breaking way. Suggest public void init(IActionBars bars, IWorkbenchPage page);   - save the page (add getPage accessor) and call init(bars) public void dispose();   - do nothing, subclasses may override In the init method contributors should 1) set retarget actions as global action handlers 2) add the retarget actions as part listeners 3) get the active part and if non null call partActivated on the retarget actions And in the dispose method the retarget actions should be removed as part listeners. Still need to verify whether or not we were calling setActiveEditor(null) in  R1.0.  If we have changed this behaviour in 2.0, it is a breaking change. Tspec for IEditorActionBarContributor should be strengthened to say that the  interface should not be directly implemented. We cannot do like RetargetTextEditorAction and directly set the target part for  the action based on what is passed to setActiveEditor().  RetargetAction targets the active view or editor, not the active editor.  setActiveEditor is a  bit of a misnomer in that it is called even when an editor is simply brought to front, without being made active.  Also, it is not called when the active part  changes from one view to another, or between editors and views. RetargetAction needs to use the part service. Released changes to IEditorActionBarContributor/EditorActionBarContributor  they are non-breaking but subclasses should take advantage of the new api. The issue I raised is still unanswered. Do you keep the original contract? I.e.  do you give contributions that are not RetargetActions the " impression " that  they are only visible when an appropriate editor is active. If you keep in mind that " active editor " really means " frontmost editor " , then  yes.  Whenever the frontmost editor changes, setActiveEditor should be called on the corresponding contributor. However, if you go from an editor of type A to one of type B, then I don't  believe A's contributor gets a setActiveEditor(null). Likewise, when the last editor of type A is closed, setActiveEditor(null) is not called. setActiveEditor really means " set the active editor for the corresponding type " . Reopening for verification that this was the actual behaviour on R1.0. All editor contributions are only visible when the editor is the " top (or  frontmost)editor " . In this situation contributed retarget actions are allowed  to set their own enablement (if the active part supplies a handler) all other contributions are only allowed to enable when the editor is the active part.   setActiveEditor is only sent when an editor becomes the active part. An editor can become the top editor without becoming active (ex. opening a search  result). However this does not appear to cause a problem since its contributions are not enabled until it becomes the active part.  Since it it possible to close an editor without activating it, it is possible for an editor and its contributor to be created and disposed without  setActiveEditor ever being sent. Sorry, I was confused.  The behaviour that Randy describes is correct. It is important that actions which target a part are enabled only when that part is active.  For an editor contribution, it should be -visible- when the  editor is frontmost.   But it should only be enabled if the editor is active, or if it is retargetable and the active view hooks a handler. Kai, is there still an issue here or can this be closed? Actions contirbuted by an editor are visible when the editor is the top-most editor. Such actions are only allowed to be enabled when the editor is the  active part, the exception to this being if the action is an instance of RetargetAction, such actions will enable if the active part supplies a  handler. Verified in 1.0 build 132 that setActiveEditor is not getting  called with null.
Platform	Debug Display view error msg to console on GTK Build 2.0 release Linux/GTK  The Debug Display view is writing an error to the console that does not show up in the error log. The message was only written when using GTK.  Steps: 1) Set a breakpoint in a java program and debug to that point 2) In the display view, type the following: (char) 0 3) Hilight the text and press Ctrl+D to evaluate it - The following error is written to the console several times ** ( < unknown > :19468: WARNING **: Invalid UTF8 string passed to pango_layout_set_text() I think this bug may have been responsible for corrupting my workbench state as well. When I restarted Eclipse, it told me that there was an error parsing my workbench.xml, and the UI state had to be reset. Sadly, I can't find steps to reproduce this behaviour though (the given steps are not enough). SSQ, do you remember what caused this?  Was it a null-termination problem? Fixed > 20020725.
Platform	BIDI:Import/Export of Arabic files Tested under Win2k with Arabic locale on 21-05-2002 driver. We have two scenarios for this bug: A) Export: -Make a new web project. -Right click on the project name select new - > Other- > web- > servlet -Name the Servlet with an Arabic name, click finish. -Select menu File- > export - > Zip file- > select the Servlet, click finish -Open the zip file from the file system using the WinZip the file name is  displayed as successive Underscores (____. java). NB: -This bug is generated also for any Arabic file name (Not only       Java  Servlets). -If I export the file in a jar file I have the same bug, but if I       exported the file as file system it is Exported correctly. B) Import: -Select any file with Arabic name on the file system add it to zip file (I can see the Arabic file names correctly). -Go to WSAD and select File- > import- > zip file- > select the just crated zip file. -The Arabic file name in the zip file appears as boxes. -Click finish an error message " problems were encountered during import " is  displayed. NB: - This bug is not generated if I try to import a zip file created        using scenario A, If I import a zip file created using scenario A then I can see the files names correctly inside the WSAD although I cannot        using WinZip. Eclipse build 20020602 (freeze 2)  I tried import/export to/from zip files with japanese characters without any problems.  We`ll have to dig up an arabic machine to test further. WinZIP does not neccessarily use java.util.zip which is what Eclipse uses for  all zip functions. The only viable test for zip file names is to use Eclipse itself as Eclipse only supports zip files created via the java.util.zip API.  If the roundtrip from Eclipse works with no loss of information than the import/export functionality is working. Closing. Please re-open if you have a case which doesn't involve WinZip. :-) *** Bug 35219 has been marked as a duplicate of this bug. ***
JDT	I got an NPE When I saved a Java file I got the following error.  Log: Mon Feb 04 18:38:38 MSK 2002 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug- in: org.eclipse.core.resources. java.lang.NullPointerException  at org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken (Parser.java:3935)  at org.eclipse.jdt.internal.compiler.parser.Parser.parse (Parser.java:6490)  at org.eclipse.jdt.internal.compiler.parser.Parser.parse (Parser.java:6685)  at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit (SourceElementParser.java:968) at org.eclipse.jdt.internal.core.CompilationUnit.generateInfos (CompilationUnit.java:207) at org.eclipse.jdt.internal.core.Openable.buildStructure (Openable.java:62) at org.eclipse.jdt.internal.core.Openable.openWhenClosed (Openable.java:405) at org.eclipse.jdt.internal.core.JavaElement.openHierarchy (JavaElement.java:473) at org.eclipse.jdt.internal.core.JavaElement.getElementInfo (JavaElement.java:269) at org.eclipse.jdt.internal.core.CompilationUnit.getSourceRange (CompilationUnit.java:397) at  org.eclipse.jdt.internal.ui.viewsupport.ErrorTickImageProvider.computeExtraAdorn mentFlags(ErrorTickImageProvider.java:60)  at org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.computeAdornmen tFlags(JavaElementImageProvider.java:268) at  org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.getJavaImageDes criptor(JavaElementImageProvider.java:113)  at org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.getImageLabel (JavaElementImageProvider.java:87) at  org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.modelChanged (JavaEditorErrorTickUpdater.java:71)  at org.eclipse.jface.text.source.AnnotationModel.fireModelChanged (AnnotationModel.java:160)  at org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel.update (ResourceMarkerAnnotationModel.java:123)  at org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel.access$2 (ResourceMarkerAnnotationModel.java:103)  at org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel$ResourceDeltaVisitor.vis it(ResourceMarkerAnnotationModel.java:62) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:52) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:43) at  org.eclipse.ui.texteditor.ResourceMarkerAnnotationModel$ResourceChangeListener.r esourceChanged(ResourceMarkerAnnotationModel.java:46)  at org.eclipse.core.internal.events.NotificationManager$1.run (NotificationManager.java:125)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:821)  at org.eclipse.core.runtime.Platform.run(Platform.java:395) at org.eclipse.core.internal.events.NotificationManager.notify (NotificationMana ger.java:140)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:43)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:64)  at org.eclipse.core.internal.resources.Workspace.broadcastChanges (Workspace.java:121)  at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:709)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1237)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)  at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation (AbstractTextEditor.java:1485)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio n(CompilationUnitEditor.java:601) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave (CompilationUnitEditor.java:649) at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:785)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335) at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation (EditorManager.java:643) at org.eclipse.ui.internal.EditorManager.saveEditor (EditorManager.java:790) at org.eclipse.ui.internal.WorkbenchPage.saveEditor (WorkbenchPage.java:1328) at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:844) at org.eclipse.ui.internal.Workbench.run(Workbench.java:827)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:878)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) Log: Mon Feb 04 18:38:38 MSK 2002 1 org.eclipse.core.resources 4 Save Failed Log: Mon Feb 04 18:38:38 MSK 2002 2 org.eclipse.ui 0 Save Failed java.lang.NullPointerException  at org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken (Parser.java:3935)  at org.eclipse.jdt.internal.compiler.parser.Parser.parse (Parser.java:6490)  at org.eclipse.jdt.internal.compiler.parser.Parser.parse (Parser.java:6685)  at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit (SourceElementParser.java:968) at org.eclipse.jdt.internal.core.CompilationUnit.generateInfos (CompilationUnit.java:207) at org.eclipse.jdt.internal.core.Openable.buildStructure (Openable.java:62) at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent (CompilationUnit.java:481) at org.eclipse.jdt.internal.core.Openable.save(Openable.java:448)  at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation (CommitWorkingCopyOperation.java:103) at org.eclipse.jdt.internal.core.JavaModelOperation.execute (JavaModelOperation.java:268) at org.eclipse.jdt.internal.core.JavaModelOperation.run (JavaModelOperation.java:476) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232) at org.eclipse.jdt.internal.core.JavaModelManager.runOperation (JavaModelManager.java:1136) at org.eclipse.jdt.internal.core.JavaElement.runOperation (JavaElement.java:526) at org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:42)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDoc ument(CompilationUnitDocumentProvider.java:285) at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument (AbstractDocumentProvider.java:358) at org.eclipse.ui.texteditor.AbstractTextEditor$8.execute (AbstractTextEditor.java:1467) at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation (AbstractTextEditor.java:1485) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio n(CompilationUnitEditor.java:601)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave (CompilationUnitEditor.java:649)  at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:785) at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335)  at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation (EditorManager.java:643)  at org.eclipse.ui.internal.EditorManager.saveEditor (EditorManager.java:790)  at org.eclipse.ui.internal.WorkbenchPage.saveEditor (WorkbenchPage.java:1328)  at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32) at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:844)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:827) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:878) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) Could you please give us mnore details about the source you saved? What is your build number? Without this information it is quite difficult to track down the problem. Thanks for the report. Build is 20020125 (latest stable) The file I was edited was quite large (above 50k) and it was quite ordinary Java source file. Particularly the implementation class for entity ejb if it  matters. I repeat, the file was very ordinary. And this exception has never been fired before or after. Maybe the reason why it fired - the exact modifications I made... I don't have any idea.  Well, actually, I don't think it's worth fixing now (if the reason is not obvious to you). I don't understand how the NPE is possible. I added a protective null check on the guilty  line. Fixed and released in HEAD.
Platform	eclipse.exe can't find splash screen if  no version in plugin directory name used build 20020610 rename org.eclipse.platform_2.0.0 to org.eclipse.platform launch eclipse and it can't find the splash. I used 6/11 builds - for both Eclipse and WSWB - and could not recreate.  Are you starting from a base unzip/at least a delete of all .config/workspace directories?   Are you running the eclipse.exe or calling if from another .exe? I think the no splash was actually caused by   http://dev.eclipse.org/bugs/show_bug.cgi?id=20111 It just happened to occur as I was fiddling around getting my branding to work and once I renamed the plugin directory to have a version number that caused some config magic to happen and it resolved itself.   But I am not sure. Leaveing it to your discretion. We need to verify that this is no longer a problem since related bug has been  fixed. Verified that it works in I20050105
JDT	Broken link PRODUCT VERSION:  0.126 DESCRIPTION:  There's a broken link in the Getting Started doc of the Java  Development User Guide " : " Creating Your First Java Project " has the following link: < A NAME= " pgfId-1152948 " > < /A > < A HREF= " http://www.junit.org " CLASS= " URL " > Refer to http://www.junit.org for more information. < /A > < /P > which works fine if the link is selected in the page (i.e.  in " Creating Your First Java Project " ).   The Contents view also recognizes and displays this link. Clicking on that link (i.e. clicking on " Refer to http.... " in the Contents  page) does not work. NOTES: DM (6/19/01 5:45:07 PM) This is a bug in the file " topics_GettingStarted.xml " of plug- in: " org.eclipse.jdt.doc.user " obsolete
Platform	[Open Modes] Single-click in packages/navigator views should work uniformly Currently, if you single-click on a class or file name in the packages or navigator views and the class/file is already open in an editor the editor is made active in the editor view. However, if the class/file is not already open, nothing happens and a double-click is required to open the editor and make it active. Thus, " already open " creates a mode in the packages/navigator views which is not apparent to the user. Instead, singl e-click in these views should always activate the appropriate editor, opening the editor if necessary. Double-click should just have the effect of two successive single-clicks. Have you tried " Single Click " on the Workbench / Work in Progress page?  There are some issues with doing this, mainly to do with focus management. Currently when you open an editor it gains focus, taking it away from the  opening view.  You do not want it to do this when using single click, e.g. if you need to use the view's context menu or a keyboard command on the view  (e.g. Del, or F2 to rename in Navigator). So the current " Single Click " support does not activate the editor when opened.  Note: we're aware that the labeling of the options needs work. The differences are: Double Click:    - default behaviour Single click without timer:    - single click opens editor but does activate it - keyboard navigation works the same (does not open automatically) File explorer: Single click without timer:    - single click opens editor but does activate it - keyboard navigation opens editor after some delay Active desktop: - same as above but hovering with mouse changes selection  It would be good to know if you find this useful. Note that it currently only works in the Navigator. We have not decided to include this in the final 2.0 yet. Three indefinite pronouns make Nick's comment hard to parse. > It would be good to know if you find this useful.  This information? This feature? The latter, yes, I use it all the time. Once the tabs start scrolling, they might as well be in China. If you're taking away the Switch To Editor... dialog, the feature is indispensible. > Note that it currently only works in the Navigator.  It being single click naviation? It worked in both packages and navigator in 20020321. And it should. > We have not decided to include this in the final 2.0 yet.  This the same as it? If you mean single click navigation, why would you remove it? Taking away both that and Switch To Editor, unless both are replaced by something better, would be a disaster. Quite probably I just don't understand the comment. By " it " and " this " I meant the single click feature, which is the subject of  this PR.  The editor dialog was not mentioned here. But I was tired, so sorry if my prose was confusing. Another mistake: " but does activate it " should be " but doesn't activate it " .  The single click support is currently work in progress. We reserve the right to remove it if we can't iron out the problems with it in  time for 2.0. So, any feedback you can provide will help us improve problems earlier, and  hopefully keep it in. From the first comment of Nick, I'm not sure if this is as expected or if this  is a bug: I single click on build.properties of org.eclipse.jdt.launching in the package view. A PDE properties editor is opened and takes the focus, but  remains inactive. As a user, I would assume that the focus always belongs to some widget in the active part. The problem originally described here is not a bug. It is the way it was  implemented. If you want a single click behavior try to play with the preferences in Windows- > Preferences- > Workbench- > Open Mode. Please let us know  what you think about it and if you find any problem. The problem described in " Claude Knaus 2002-05-23 09:10 " is another problem and  should be logged in separed bug report. I guess it is a PDE bug since it does not happen with other editors. They are probably setting focus when the editors  in opened instead of when the message setFocus(..) is sent. Files bug 17812 for the PDE problem.  Closing this PR. Eduardo, we had similar issues with the preference pages stealing focus. A while back I added code to steal the focus back after creating the page. Should probably do the same thing here. There are currently no plans to work on this feature
JDT	Can't see scrapbook pages in Java Browsing perspective [browsing] Build 20020508  It would be nice if you could see scrapbook pages in the Java Browsing perspective. we do not show non-Java resources in the Java browsing perspective. This will  not change for 2.0. [browsing] reopen to close Works as designed  You can replace the Projects view with the Package Explorer and set the filter to hide the Java files. This allows you to edit all the resources including the scrapbook pages.
Platform	Copy causes exception 0924 integration build.  Happens on hpux, not on linux, haven't tried Aix or  Solaris. - open an editor on a .java file - select some text, press CTRL+C to copy it - instead get the attached exception This is a P2 because of the exception. Should only try to look at the os version if we're on a Win platform. Changed to only look at version when on Windows NT. We don't use the os version  in all other cases. Also catching NumberFormatException now.
Platform	line numbers: make it smaller - specially in the segmented mode F2 no sane person has has files longer than 9999 lines the line number margin should be smaller - ideally, dynamicly scaled to 10-based logarithm of the currenly displayed document-segment (is it called sub- document?)  it is especially bad when you switch to the segmented view - who has method longer then 9999 lines? - a lot of space is lost this way defer Reopening for 2.1 consideration please implement this.  See how Randy did this with it's UI Patch.  remove the thousand dot and only show 4 numbers (9999) as adam said that is enough.  The best would be if it would be completely dynamic. (or default 3 numbers and after that dynamic so that until 999 the line would not have to jump/reflowed) My logic for not having a 1000's separator is that stack traces don't have  them, and most people don't want them anyway until you have 5 or 6 digits. I haven't removed the ' , ' separator as to is part of the locale specific output  of numbers. As anything else in eclipse, line numbers should respect locale settings.  Narrower line number ruler is available in build 20020910. i disagree. You shouldn't display them when saving screen space is the most importand  issue.and as randy said thousand seperators only are nessesary when you have 6 digits. But for linenumbers that figure is ridiculus. I don't think any normal  file should pase 9999 lines. And For that number we don't need thousand  seperator if you ask me. Make it option?
Platform	Merging incoming creation converts to outgoing creation (1GFKUF5) 1) Start with a workbench containing a project that has an incoming creation 2) In the sync view, select the file that is an incoming creation 3) In the compare panes, select " Copy current change from right to left " 4) On the left hand side, right click, and choose save.   Step 4 creates the resource, and converts from an incoming change to an outgoing change. The problem is, it leaves the change marked as a creation, so it now shows up as an outgoing creation, which is wrong. Not a major bug, basically just means the icon annotating the file is wrong (has no lower level effect).  Releasing the change works fine. NOTES:  JohnA (6/19/2001 12:56:09 PM) Added to readme. PRODUCT VERSION:  0.125 For Team 2.0, step 4 causes the resource to be created with an entry line like the following: /blah.txt/1.2/dummy timestamp// The change kind changes from incoming addition to outgoing change, though the compare viewer shows that the file contents are the same.  So the icon annotation problem has gone away. The entry line worries me. After step 4 we have a file with an entry line like this:   /zzz.txt/1.1/dummy timestamp// Doing an update works fine and results in an entry line like this:   /zzz.txt/1.2/Result of merge// Doing an update works fine and results in an entry line like this:   /zzz.txt/1.3/Result of merge// Committing it bumps the revisition and sets the timestamp correctly:   /zzz.txt/1.4/Fri Mar 22 19:38:36 2002// Also tried Replace With Latest and it works fine. So no problems here as far as I can tell. appears fixed
Platform	ant submenu with list of targets I often find myself running ant from eclipse frequently, especially for things which eclipse doesn't handle, like enhancing JDO classes. It is awkward to have the extra step of clicking OK on the dialog. Could we have a ' Run Target > ' item on the build.xml context menu, which would have a submenu of target names? This would still need to use the ant arguments specified in the dialog box. Moving to Platform-Ant *** Bug 11012 has been marked as a duplicate of this bug. *** It sounds better than the idea of having the targets per project. Not sure if  it is good or not to use the command lines from the Wizard. Moving to Platform UI (External Tools) for comment. Not essential for 2.0. Can now configure an Ant script as an External Tool with a particular target,  so you don't need to specify the target each time.
Platform	ComboBoxCellEditor does not size correctly in propery sheet From EC   Joe Winchester < JoeWin@us.ibm.com > wrote in message  news:3C407F76.31A82113@us.ibm.com... > The PropertySheetViewer lets me edit objects using a set of row that are > name value pairs in two columns, with each column being defined by an > IPropertyDescriptor.  IPropertyDescriptor has a method to create a cell > editor, and I use this to create editors that include ComboBoxCellEditor > - constructor of which can be given the strings.  The editor appears in > column two of the property sheet and the drop down button appears at the > right edge of the column.  A problem occurs if any of my strings is > wider that the width of the property sheet column.  It appears that the > combo box grows to be the width of the largest item - the problem is > that the drop down button may now be too far right and off the visible > area of the property sheet so it is clipped.  From a user experience > they can no longer see the combo drop down button without making the > property sheet view wider until the button comes into the visible area. > I would have expected behavior where the combo box is always the width > of the property sheet column.    Note that it should work the same DialogCellEditor (Button always visible) Will need to investigate to determine if this is us or SWT. The ComboBoxCellEditor.getLayoutData() now returns a minimum width of 30 pixels  instead of the length of the longest string in the its list.  This should keep the arrow button within the column most of the time.
JDT	4 exportplugin.xml Ant scripts still referencing " plugin.jars " org.eclipse.compare org.eclipse.jdt.ui org.eclipse.search org.eclipse.ui Could be more...but these are the ones I run daily pls remove the plugin.jars fixed
JDT	AST DCR: Parameter names in IMethodBinding 20021018  IMethodBinding returns the parameter types. I now would need the parameter names. Could the IMethodBinding return them? I know that this is an exotic wish, and that a IMethodBinding doesn't really  need to know about parameter names. I'm fine if you close this if it is not  trivial. I think this doesn't make sense. The IMethodBinding is an object that represents the " resolved " information of its corresponding MethodDeclaration. The names of the parameters have nothing to do with resolved information. If you want the parameter names, then simply get the declaring node and iterate the parameters collection. You can get the names of each parameter by asking the name of the corresponding SingleVariableDeclaration. Ok to close? ok to close. Closing as INVALID.
Platform	[Outline] Outline View text cut off 20020521, KDE, RH 7.2  1. Close any open editors. 2. Close the Java Perspective, if opened. 3. Open the Java Perspective.  The outline view indicates that an outline is not available.  However the text is cutoff (looks like it's sized for 1 line,  but in my scenario it takes up 2 lines). 4. Move the sash on the left side of the outline view a little to the right.   Now the text is displayed properly. *** Bug 17322 has been marked as a duplicate of this bug. *** Same problem on Win. The non-available outline message is done by the Outline  view. Moving to Platform UI cannot reproduce problem in eclipse 2.0.1 release.
Platform	[CVS UI] F3: Can't change ASCII/Binary property twice I was changing several of my files in CVS from " -ko " to " -kkv " , but found I could only load the " Set keyword substitution " wizard once.  I start eclipse F3 (on linux-gtk), highlight a file, select Team/Change ASCII/Binary property, and change it to " -kkv " . I then select another file, and do the same thing, but the UI fails. I'll attach the .metadata/.log in which is dumped an IndexOutOfBoundsException. At first glance, the stack does not seem to indicate a GTK-specific problem. Reproduced on GTK. Could not reproduce on Motif. This appears to have been fixed somewhere along the line. May have been a GTK bug that has since been fixed.
JDT	java.lang.StringIndexOutOfBoundsException during open type action From an email following an EC message.  I was using R1.0 (Build 0.127) when I was getting this problem. After obtaining the latest build (1127) I did not get the compiler error. But there were two  other problems : [...]  I hit the Type Viewer button again. This time it seemed to index all the files, but stopped at the last one and failed  with an exception saying - please see log. The message in the log is :  1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Tue Nov 27 18:20:38 MST 2001 4 org.eclipse.ui 0 String index out of range: 0 java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(Unknown Source) at  org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog$StringComparator.compare (TypeSelectionDialog.java:90)    at org.eclipse.jdt.internal.ui.dialogs.FilteredList$LabelComparator.compare(Filtere dList.java:125) at  org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.internalSort(TwoArrayQui ckSorter.java:78)    at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.sort(TwoArrayQuickSorter .java:66) at  org.eclipse.jdt.internal.ui.dialogs.FilteredList.setElements(FilteredList.java:2 07)    at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.setListEl ements(AbstractElementListSelectionDialog.java:160) at  org.eclipse.jdt.internal.ui.dialogs.TwoPaneElementSelector.createDialogArea(TwoP aneElementSelector.java:98)    at org.eclipse.jdt.internal.ui.dialogs.OpenTypeSelectionDialog.createDialogArea(Ope nTypeSelectionDialog.java:82) at  org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:301) at org.eclipse.jface.window.Window.create(Window.java:237)    at org.eclipse.jdt.internal.ui.dialogs.SelectionStatusDialog.create(SelectionStatus Dialog.java:132) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.create(Ab stractElementListSelectionDialog.java:407)    at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.create(TypeSelectionDial og.java:130) at org.eclipse.jface.window.Window.open(Window.java:510)    at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.access$su perOpen(AbstractElementListSelectionDialog.java:400) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.access$2( AbstractElementListSelectionDialog.java:399)    at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog$4.run(Abs tractElementListSelectionDialog.java:393) at  org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.open(Abst ractElementListSelectionDialog.java:391)    at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.open(TypeSelectionDialog .java:163) at  org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(OpenTypeAction.java:52) at  org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(OpenTypeAction.java:77) at  org.eclipse.ui.internal.PluginAction.run(PluginAction.java:176) at  org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionCont ributionItem.java:407)    at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContribu tionItem.java:361) at  org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem. java:352)    at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(Actio nContributionItem.java:47) at  org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54) at  org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:635) at  org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1368) at  org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1170) at  org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:775) at org.eclipse.ui.internal.Workbench.run(Workbench.java:758) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:82 0)    at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)    at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)    at org.eclipse.core.launcher.Main.main(Main.java:362) I'm not checking for Type names which are empty. I would assume that any type has a name with a length > = 1.  I could make it more robust by checking for empty type names, but that would introduce additional overhead for sorting.  I'd like to know how it is possible that a type name happens to be empty and if I should deal with it. make the code save and log when the problem occurs. implemented workaround > 20011127  the bug remains open to understand why the type name can be empty. fixed a bug in the workaround > 20011206. Olivier, can you figure out why the type name happens to be empty and file an appropriate bug? I can't reproduce this behaviour with my workspace. *** Bug 6720 has been marked as a duplicate of this bug. *** Will look into it and identify the component which is failing to produce  correct type names. I am not quite sure that this is the same as 6720, because I was able to  workaround the problem (#6720) by using an older version of org.eclipse.jdt.internal.ui.dialogs.FilteredList.LabelComparator (two weeks  old). #6720 seemed to be a problem introduced by case-sensitivity of the dialog (?) ... Trust me. It is the same bug. Sorry I cannot help. I didn't get the case myself. I simply entered a PR related  to a message on EC. no problem... see bug #6720. I should be able to reproduce it, once I get hold  of this mail api. *** Bug 6788 has been marked as a duplicate of this bug. *** I reproduced it. Duh, the search engine is returning anonymous types! workaround in > 20011211  This bug remains open until the issue with #6839 is cleared. subject: java.lang.StringIndexOutOfBoundsException: type name was empty  I am a bit confused. The bug I intended to add my comments to is marked as duplicated to this one, but I don't see too much similarities. Still I believe  the " trust me " stated below.  Anyway. With the stable build as of 20011206 I get an error dialog when opening the type browser CTRL+SHIFT+T when (trying to) use it on a big project, i.e.  with many libraries. I just try to open it, but even before the input dialog appears I get the error dialog.  Below I pasted the data from the log. The message is repeated for 455kb: Log: Wed Dec 19 19:18:38 CET 2001 4 org.eclipse.jdt.ui 1 Internal Error java.lang.StringIndexOutOfBoundsException: type name was empty  at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog$StringComparator.compare (TypeSelectionDialog.java:94) at  org.eclipse.jdt.internal.ui.dialogs.FilteredList$LabelComparator.compare (FilteredList.java:125)  at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.internalSort (TwoArrayQuickSorter.java:78)  at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.sort (TwoArrayQuickSorter.java:66)  at org.eclipse.jdt.internal.ui.dialogs.FilteredList.setElements (FilteredList.java:207)  at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.setListEl ements(AbstractElementListSelectionDialog.java:160) at  org.eclipse.jdt.internal.ui.dialogs.TwoPaneElementSelector.createDialogArea (TwoPaneElementSelector.java:98)  at org.eclipse.jdt.internal.ui.dialogs.OpenTypeSelectionDialog.createDialogArea (OpenTypeSelectionDialog.java:82) at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:301)  at org.eclipse.jface.window.Window.create(Window.java:237) at org.eclipse.jdt.internal.ui.dialogs.SelectionStatusDialog.create (SelectionStatusDialog.java:132) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.create (AbstractElementListSelectionDialog.java:407)  at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.create (TypeSelectionDialog.java:142)  at org.eclipse.jface.window.Window.open(Window.java:510) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.access$su perOpen(AbstractElementListSelectionDialog.java:400)  at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.access$2 (AbstractElementListSelectionDialog.java:399) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog$4.run (AbstractElementListSelectionDialog.java:393)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.open (AbstractElementListSelectionDialog.java:391)  at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.open (TypeSelectionDialog.java:175)  at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run (OpenTypeAction.java:52)  at org.ecl ipse.jdt.internal.ui.actions.OpenTypeAction.run (OpenTypeAction.java:77) at org.eclipse.ui.internal.PluginAction.run(PluginAction.java:181)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:635)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1368) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1170)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:775) at org.eclipse.ui.internal.Workbench.run(Workbench.java:758)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) Log: Wed Dec 19 19:18:38 CET 2001 4 org.eclipse.jdt.ui 1 Internal Error java.lang.StringIndexOutOfBoundsException: type name was empty  at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog$StringComparator.compare (TypeSelectionDialog.java:94) at  org.eclipse.jdt.internal.ui.dialogs.FilteredList$LabelComparator.compare (FilteredList.java:125)  at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.internalSort (TwoArrayQuickSorter.java:78)  at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.sort (TwoArrayQuickSorter.java:66)  at org.eclipse.jdt.internal.ui.dialogs.FilteredList.setElements (FilteredList.java:207)  at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.setListEl ements(AbstractElementListSelectionDialog.java:160) at  org.eclipse.jdt.internal.ui.dialogs.TwoPaneElementSelector.createDialogArea (TwoPaneElementSelector.java:98)  at org.eclipse.jdt.internal.ui.dialogs.OpenTypeSelectionDialog.createDialogArea (OpenTypeSelectionDialog.java:82) at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:301)  at org.eclipse.jface.window.Window.create(Window.java:237) at org.eclipse.jdt.internal.ui.dialogs.SelectionStatusDialog.create (SelectionStatusDialog.java:132) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.create (AbstractElementListSelectionDialog.java:407)  at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.create (TypeSelectionDialog.java:142)  at org.eclipse.jface.window.Window.open(Window.java:510) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.access$su perOpen(AbstractElementListSelectionDialog.java:400)  at org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.access$2 (AbstractElementListSelectionDialog.java:399) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog$4.run (AbstractElementListSelectionDialog.java:393)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at  org.eclipse.jdt.internal.ui.dialogs.AbstractElementListSelectionDialog.open (AbstractElementListSelectionDialog.java:391)  at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog.open (TypeSelectionDialog.java:175)  at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run (OpenTypeAction.java:52)  at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run (OpenTypeAction.java:77)  at org.eclipse.ui.internal.PluginAction.run(PluginAction.java:181) at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:635) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1368)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1170) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:775)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:758) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) Log: Wed Dec 19 19:18:38 CET 2001 4 org.eclipse.jdt.ui 1 Internal Error java.lang.StringIndexOutOfBoundsException: type name was empty at  org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog$StringComparator.compare (TypeSelectionDialog.java:94)  at org.eclipse.jdt.internal.ui.dialogs.FilteredList$LabelComparator.compare (FilteredList.java:125) at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.internalSort (TwoArrayQuickSorter.java:78) at org.eclipse.jdt.internal.ui.dialogs.TwoArrayQuickSorter.sort (TwoArrayQuickSorter.java:66) As stated above, it has been fixed with a workaround in 20011211. The only reason this bug is still open is because it depends on 6839. Once that is fixed, I will be able to remove the workaround and mark this bug finally as fixed. fixed > 20020207 finally removed workaround.
JDT	Right click menu in editor ruler is gone Build 20020508 Linux-Motif 1. Open a Java Editor. 2. Right click in the ruler. Nothing happens. This not only eliminates the ability to add bookmarks and such, it also  eliminates breakpoint management from the ruler. it works on Win. claude can you pls try reproduce in our latest problem is understood and a consequence of platform differences with regard to  context menu registration (win context menu is registered on composite, linux context menu has to be registered on children). Solution mimics the described bahvior. Build 20020517. *** Bug 16541 has been marked as a duplicate of this bug. ***
Platform	Takes long time for help browser to close. If Workbench is shut down, the help browser will close automaticaly, but it  does not close immidiately.  It seems frozen for about 4 seconds, after which it closes. Decreased time 5s - > 1s, waiting for a thread that is blocked trying to read or  close std input from Eclipse that has already exited.
Platform	Function key events are often lost Build 20020820 (and some earlier)  SWT-GTK seems to lose a lot of function key events. This problem is very obvious in the debugger where it often takes two key strokes to perform actions like stepping (F5, F6, F7) and resuming (F8). The same problem exists in the editor with F3. SSQ, have you ever seen this? I should ammend my report to state that the first function key press is  *always* lost. To use F3 in the java editor, you always have to press it 2 times.  I'm also having a possibly related problem in the editor management view I'm  working on (Bug 10941). I have a TableViewer with a key listener on the table (viewer.getTable().addKeyListener(...)). It seems that whenever the contents  of my table get out of synch with the data from my content provider, I stop getting function key events entirely. I believe this is a side effect of the lazy creation of the accelerator table. I will check. Here is a testcase that shows the problem. After clicking the shell, F2 have to be pressed twice. public static void main(String[] args) { final Display display = new Display();  final Shell shell = new Shell(display); Menu mb = new Menu(shell, SWT.BAR); final MenuItem item = new MenuItem(mb, SWT.NONE);  item.setText( " File " );  item.setAccelerator(SWT.F3); shell.setMenuBar(mb); item.addListener(SWT.Selection, new Listener() {   public void handleEvent(Event e) { System.out.println( " selection " );   } }); shell.addListener(SWT.MouseDown, new Listener() {   public void handleEvent(Event e) { item.setAccelerator(SWT.F2);   } }); shell.setBounds(10, 10, 300, 300);  shell.open(); while (!shell.isDisposed()) {   if (!display.readAndDispatch()) display.sleep(); }   display.dispose(); } Fixed > 20020826.
Platform	Specified icons not used for actions in action sets For the debug action set in the latest code, we are specifying the icon,  disabled icon and hover icon.  In the menu generated as a result of the action set (the Debug menu) the correct icons are not used.  It appears the same as if  only the icon attribute is specified. Perhaps Ryan could look at this one. Look into this (come see me if you need a starting point) The original problem occurred in Windows 98. I Could not reproduce results in  Windows 2000 Proffesional. This may be the result of platform behavior. In Windows 2000 Professional, the Debug menu works the same as the rest of the  menus. When an option is disabled, it's icon appears grey. When the user hovers  over it, the icon becomes colored. Icons for enabled options are always colored. There is a difference in behaviour between toolbar icons and menu icons, but  this is expected behavior. See the following matrix of expected (and in Windows 2000 Professional, actual)  behavior: |Menu    |Toolbar -----------|--------|-------- Disabled   |image   |disabled            |icon    |icon -----------|--------|-------- Enabled    |hover   |image |icon    |icon -----------|--------|-------- Hovered    |hover   |hover            |icon    |icon The icon that appears in a menu for an action that is disabled is inconsistent  with the icon for the same action in the toolbar. This is because the XML for an action set allows the developer to supply a disabled icon, but this icon is  only used by the tool bar, and not the menus. This is happening because, due to an SWT limitation, there is currently no API  to set the disabled icon of a MenuItem. A request has been sent to SWT to supply this API (see Bug 13455). SWT could not provide the needed support to fix this problem. Would it make sense to remove the attributes disabledIcon and hoverIcon from  the doc for action set menus?  No point in creating/specifying actions that will never be used. Three icons are necessary for the tool bar to differentiate between three  states. Actions available via the toolbar can be disabled, enabled, or selected (being hovered over). We do not wish to use the same (colored) icon to  represent enabled and selected states for icons in a toolbar, because color is distracting, so many items on the toolbar should not generally be colored. We  also do not want to use the same (uncolored) icon to represent both enabled and selected states because the color adds more focus to the selected icon and  differentiates it more from the other icons on the toolbar. We could drop the disabled icon and use the same disabled icon as the menu items, but by allowing  the developer to define a disabled icon, we allow more control over the look of the workbench (it allows us to use better-looking icons).  Perhaps documentation should be improved to make the function of the icons explicit, to reduce the confusion caused to the developer. We should update the action set extension point html document to indicate which  icon attributes are used in menu and toolbar, and which are ignored. By the way, I've yet to see one valid usability study that shows color icons on  the toolbar are distracting and that B & W is far better. If you notice, Windows  XP and Windows products on XP all use color instead of the B & W - probably they  realized how hard it is for users to tell the difference between enabled and disabled icons. Anyway, that part is out of the ui team control - it's a  usability team decision.
JDT	can't start jdt.debug.ui plugin (first try) I attempted a workbench launch in 20020409 (new config, new workspace). The  launch resulted in: org.eclipse.swt.SWTException: Failed to execute runnable  (org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegatingLoaderExcepti on: Plugin org.eclipse.jdt.debug.ui activation failed while loading class  org.eclipse.jdt.internal.debug.ui.display.DisplayView) at org.eclipse.swt.SWT.error(SWT.java:1887)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:96)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.run (LaunchConfigurationDialog.java:1865)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.lau nchWithProgress(LaunchConfigurationDialog.java:1828) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doL aunch(LaunchConfigurationDialog.java:1789)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.han dleLaunchPressed(LaunchConfigurationDialog.java:1749) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.but tonPressed(LaunchConfigurationDialog.java:327)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:356) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)  at org.eclipse.jface.window.Window.open(Window.java:525) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope n(LaunchConfigurationDialog.java:413)  at org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration (ExecutionAction.java:74) at org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent (ExecutionAction.java:64) at  org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent (LaunchDropDownAction.java:182)  at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:201)  at org.eclipse.ui.internal.WWinPluginAction.runWithEvent (WWinPluginAction.java:162)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) *** Stack trace of contained exception *** org.eclipse.core.internal.boot.DelegatingLoaderException:  org.eclipse.core.runtime.CoreException: Problems encountered starting up plug- in: org.eclipse.jdt.debug.ui.  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:719) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:184)  at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:52)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:130) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:771) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:751) at java.lang.ClassLoader.loadClass(ClassLoader.java:255)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:128) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:165)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:96) at org.eclipse.ui.internal.WorkbenchPlugin$1.run (WorkbenchPlugin.java:119) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.WorkbenchPlugin.createExtension (WorkbenchPlugin.java:116)  at org.eclipse.ui.internal.registry.ViewDescriptor.createView (ViewDescriptor.java:45)  at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:85) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:65)  at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:46) at org.eclipse.ui.internal.PageLayout.createView(PageLayout.java:235)  at org.eclipse.ui.internal.PageLayout.stackView(PageLayout.java:381) at  org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processView (PerspectiveExtensionReader.java:129)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processExtension (PerspectiveExtensionReader.java:75) at  org.eclipse.ui.internal.registry.PerspectiveExtensionReader.readElement (PerspectiveExtensionReader.java:174)  at org.eclipse.ui.internal.registry.RegistryReader.readElements (RegistryReader.java:119)  at org.eclipse.ui.internal.registry.RegistryReader.readExtension (RegistryReader.java:128)  at org.eclipse.ui.internal.registry.RegistryReader.readRegistry (RegistryReader.java:140)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.extendLayout (PerspectiveExtensionReader.java:49) at org.eclipse.ui.internal.Perspective.loadPredefinedPersp (Perspective.java:515) at org.eclipse.ui.internal.Perspective.createPresentation (Perspective.java:217) at org.eclipse.ui.internal.Perspective. < init > (Perspective.java:124)  at org.eclipse.ui.internal.WorkbenchPage.createPerspective (WorkbenchPage.java:728)  at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective (WorkbenchPage.java:496)  at org.eclipse.ui.internal.WorkbenchPage.access$11 (WorkbenchPage.java:487)  at org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:2010) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2008)  at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:962) at  org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$1.run (PerspectiveManager.java:138)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.run (LaunchConfigurationDialog.java:1865) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.lau nchWithProgress(LaunchConfigurationDialog.java:1828)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doL aunch(LaunchConfigurationDialog.java:1789) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.han dleLaunchPressed(LaunchConfigurationDialog.java:1749)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.but tonPressed(LaunchConfigurationDialog.java:327) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:356)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:538) at org.eclipse.jface.window.Window.open(Window.java:525)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope n(LaunchConfigurationDialog.java:413) at  org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration (ExecutionAction.java:74)  at org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent (ExecutionAction.java:64)  at org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent (LaunchDropDownAction.java:182) at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:201) at org.eclipse.ui.internal.WWinPluginAction.runWithEvent (WWinPluginAction.java:162) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836) at org.eclipse.ui.internal.Workbench.run(Workbench.java:819)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) Unhandled exception caught in event loop. Reason: Failed to execute runnable (org.eclipse.core.internal.boot.DelegatingURLClassLoa der$DelegatingLoaderException: Plugin org.eclipse.jdt.debug.ui activation failed while loading class org.eclipse.jdt.internal.debug.ui.display.DisplayView) *** Stack trace of contained exception *** Reason: Plugin org.eclipse.jdt.debug.ui activation failed while loading class org.eclips e.jdt.internal.debug.ui.display.DisplayView Unhandled exception caught in event loop. Reason: Attempt to load class org.eclipse.jdt.internal.debug.ui.display.DisplayView from deactivated plug-in org.eclipse.jdt.debug.ui. Attachment did not work, here's the log: < ?xml version= " 1.0 " encoding= " UTF-8 " ? > < log > < log-entry date= " Tue Apr 09 22:24:56 CDT 2002 " > < status      plugin-id= " org.eclipse.core.resources " severity= " WARNING " message= " Skipping builder org.eclipse.pde.ManifestBuilder for project  org.eclipse.jdt.launching.j9. Either the builder is missing from the install, or it belongs to a project nature that is missing or disabled. " code= " 1 " > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:24:56 CDT 2002 " > < status      plugin-id= " org.eclipse.core.resources " severity= " WARNING " message= " Skipping builder org.eclipse.pde.SchemaBuilder for project  org.eclipse.jdt.launching.j9. Either the builder is missing from the install, or it belongs to a project nature that is missing or disabled. " code= " 1 " > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:24:57 CDT 2002 " > < status      plugin-id= " org.eclipse.core.runtime " severity= " WARNING " message= " Problems occurred when invoking code from plug-in:  org.eclipse.core.runtime. " code= " 2 " > < exception        message= " null " trace= " java.lang.NullPointerException  at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.addHotCodeReplaceListener (JDIDebugPlugin.java:108) at org.eclipse.jdt.debug.core.JDIDebugModel.addHotCodeReplaceListener (JDIDebugModel.java:150) at  org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin.initializeHCRListener (JDIDebugUIPlugin.java:230)  at org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin.startup (JDIDebugUIPlugin.java:208)  at org.eclipse.core.internal.plugins.PluginDescriptor$1.run (PluginDescriptor.java:701)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:838)  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:713) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:184) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:52) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:130)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:771)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:751)  at java.lang.ClassLoader.loadClass(ClassLoader.java:255) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:128)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:165) at  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:96)  at org.eclipse.ui.internal.WorkbenchPlugin$1.run (WorkbenchPlugin.java:119)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchPlugin.createExtension (WorkbenchPlugin.java:116) at org.eclipse.ui.internal.registry.ViewDescriptor.createView (ViewDescriptor.java:45) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:85)  at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:65) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:46)  at org.eclipse.ui.internal.PageLayout.createView(PageLayout.java:235) at org.eclipse.ui.internal.PageLayout.stackView(PageLayout.java:381)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processView (PerspectiveExtensionReader.java:129) at  org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processExtension (PerspectiveExtensionReader.java:75)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.readElement (PerspectiveExtensionReader.java:174) at org.eclipse.ui.internal.registry.RegistryReader.readElements (RegistryReader.java:119) at org.eclipse.ui.internal.registry.RegistryReader.readExtension (RegistryReader.java:128) at org.eclipse.ui.internal.registry.RegistryReader.readRegistry (RegistryReader.java:140) at  org.eclipse.ui.internal.registry.PerspectiveExtensionReader.extendLayout (PerspectiveExtensionReader.java:49)  at org.eclipse.ui.internal.Perspective.loadPredefinedPersp (Perspective.java:515)  at org.eclipse.ui.internal.Perspective.createPresentation (Perspective.java:217)  at org.eclipse.ui.internal.Perspective. & lt;init & gt; (Perspective.java:124) at org.eclipse.ui.internal.WorkbenchPage.createPerspective (WorkbenchPage.java:728) at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective (WorkbenchPage.java:496) at org.eclipse.ui.internal.WorkbenchPage.access$11 (WorkbenchPage.java:487) at org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:2010)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2008) at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:962)  at org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$1.run (PerspectiveManager.java:138) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.run (LaunchConfigurationDialog.java:1865)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.lau nchWithProgress(LaunchConfigurationDialog.java:1828) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doL aunch(LaunchConfigurationDialog.java:1789)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.han dleLaunchPressed(LaunchConfigurationDialog.java:1749) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.but tonPressed(LaunchConfigurationDialog.java:327)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:356) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)  at org.eclipse.jface.window.Window.open(Window.java:525) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope n(LaunchConfigurationDialog.java:413)  at org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration (ExecutionAction.java:74) at org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent (ExecutionAction.java:64) at  org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent (LaunchDropDownAction.java:182)  at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:201)  at org.eclipse.ui.internal.WWinPluginAction.runWithEvent (WWinPluginAction.java:162)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Displ ay.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836) at org.eclipse.ui.internal.Workbench.run(Workbench.java:819)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) " > < /exception > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:24:57 CDT 2002 " > < status      plugin-id= " org.eclipse.core.resources " severity= " INFO " message= " Unhandled exception caught in event loop. " code= " 4 " > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:24:57 CDT 2002 " > < status      plugin-id= " org.eclipse.ui " severity= " ERROR " message= " Failed to execute runnable  (org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegatingLoaderExcepti on: Plugin org.eclipse.jdt.debug.ui activation failed while loading class  org.eclipse.jdt.internal.debug.ui.display.DisplayView) " code= " 0 " > < exception        message= " Failed to execute runnable  (org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegatingLoaderExcepti on: Plugin org.eclipse.jdt.debug.ui activation failed while loading class  org.eclipse.jdt.internal.debug.ui.display.DisplayView) " trace= " org.eclipse.swt.SWTException: Failed to execute runnable  (org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegatingLoaderExcepti on: Plugin org.eclipse.jdt.debug.ui activation failed while loading class  org.eclipse.jdt.internal.debug.ui.display.DisplayView) at org.eclipse.swt.SWT.error(SWT.java:1887)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:96)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.run (LaunchConfigurationDialog.java:1865)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.lau nchWithProgress(LaunchConfigurationDialog.java:1828) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doL aunch(LaunchConfigurationDialog.java:1789)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.han dleLaunchPressed(LaunchConfigurationDialog.java:1749) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.but tonPressed(LaunchConfigurationDialog.java:327)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:356) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)  at org.eclipse.jface.window.Window.open(Window.java:525) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope n(LaunchConfigurationDialog.java:413)  at org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration (ExecutionAction.java:74) at org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent (ExecutionAction.java:64) at  org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent (LaunchDropDownAction.java:182)  at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:201)  at org.eclipse.ui.internal.WWinPluginAction.runWithEvent (WWinPluginAction.java:162)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) " > < /exception > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:24:57 CDT 2002 " > < status      plugin-id= " org.eclipse.core.resources " severity= " INFO " message= " *** Stack trace of contained exception *** " code= " 4 " > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:24:57 CDT 2002 " > < status      plugin-id= " org.eclipse.ui " severity= " ERROR " message= " Plugin org.eclipse.jdt.debug.ui activation failed while loading  class org.eclipse.jdt.internal.debug.ui.display.DisplayView " code= " 0 " > < exception        message= " Plugin org.eclipse.jdt.debug.ui activation failed while loading  class org.eclipse.jdt.internal.debug.ui.display.DisplayView " trace= " org.eclipse.core.internal.boot.DelegatingLoaderException:  org.eclipse.core.runtime.CoreException: Problems encountered starting up plug- in: org.eclipse.jdt.debug.ui.  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation (PluginDescriptor.java:719) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation (PluginDescriptor.java:184) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin (PluginClassLoader.java:52) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:130)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:771)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:751)  at java.lang.ClassLoader.loadClass(ClassLoader.java:255) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:128)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:165) at  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:96)  at org.eclipse.ui.internal.WorkbenchPlugin$1.run (WorkbenchPlugin.java:119)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchPlugin.createExtension (WorkbenchPlugin.java:116) at org.eclipse.ui.internal.registry.ViewDescriptor.createView (ViewDescriptor.java:45) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:85)  at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:65) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:46)  at org.eclipse.ui.internal.PageLayout.createView(PageLayout.java:235) at org.eclipse.ui.internal.PageLayout.stackView(PageLayout.java:381)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processView (PerspectiveExtensionReader.java:129)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processExtension (PerspectiveExtensionReader.java:75) at  org.eclipse.ui.internal.registry.PerspectiveExtensionReader.readElement (PerspectiveExtensionReader.java:174)  at org.eclipse.ui.internal.registry.RegistryReader.readElements (RegistryReader.java:119)  at org.eclipse.ui.internal.registry.RegistryReader.readExtension (RegistryReader.java:128)  at org.eclipse.ui.internal.registry.RegistryReader.readRegistry (RegistryReader.java:140)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.extendLayout (PerspectiveExtensionReader.java:49) at org.eclipse.ui.internal.Perspective.loadPredefinedPersp (Perspective.java:515) at org.eclipse.ui.internal.Perspective.createPresentation (Perspective.java:217) at org.eclipse.ui.internal.Perspective. & lt;init & gt; (Perspective.java:124) at org.eclipse.ui.internal.WorkbenchPage.createPerspective (WorkbenchPage.java:728) at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective (WorkbenchPage.java:496) at org.eclipse.ui.internal.WorkbenchPage.access$11 (WorkbenchPage.java:487) at org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:2010)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2008) at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:962)  at org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$1.run (PerspectiveManager.java:138) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java:133)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.run (LaunchConfigurationDialog.java:1865)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.lau nchWithProgress(LaunchConfigurationDialog.java:1828) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doL aunch(LaunchConfigurationDialog.java:1789)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.han dleLaunchPressed(LaunchConfigurationDialog.java:1749) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.but tonPressed(LaunchConfigurationDialog.java:327)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:356) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)  at org.eclipse.jface.window.Window.open(Window.java:525) at  org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope n(LaunchConfigurationDialog.java:413)  at org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration (ExecutionAction.java:74) at org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent (ExecutionAction.java:64) at  org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent (LaunchDropDownAction.java:182)  at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:201)  at org.eclipse.ui.internal.WWinPluginAction.runWithEvent (WWinPluginAction.java:162)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) " > < /exception > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:29:01 CDT 2002 " > < status      plugin-id= " org.eclipse.core.resources " severity= " INFO " message= " Unhandled exception caught in event loop. " code= " 4 " > < /status > < /log-entry > < log-entry date= " Tue Apr 09 22:29:01 CDT 2002 " > < status      plugin-id= " org.eclipse.ui " severity= " ERROR " message= " Attempt to load class  org.eclipse.jdt.internal.debug.ui.display.DisplayView from deactivated plug-in org.eclipse.jdt.debug.ui. " code= " 0 " > < exception        message= " Attempt to load class  org.eclipse.jdt.internal.debug.ui.display.DisplayView from deactivated plug-in org.eclipse.jdt.debug.ui. " trace= " org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegatingLoaderExceptio n: Attempt to load class org.eclipse.jdt.internal.debug.ui.display.DisplayView from deactivated plug-in org.eclipse.jdt.debug.ui.  at org.eclipse.core.internal.plugins.PluginClassLoader.shouldLookForClass (PluginClassLoader.java:200) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java:119)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:771)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java:751)  at java.lang.ClassLoader.loadClass(ClassLoader.java:255) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:128)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension (PluginDescriptor.java:165) at  org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:96)  at org.eclipse.ui.internal.WorkbenchPlugin$1.run (WorkbenchPlugin.java:119)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchPlugin.createExtension (WorkbenchPlugin.java:116) at org.eclipse.ui.internal.registry.ViewDescriptor.createView (ViewDescriptor.java:45) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:85)  at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:65) at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:46)  at org.eclipse.ui.internal.PageLayout.createView(PageLayout.java:235) at org.eclipse.ui.internal.PageLayout.stackView(PageLayout.java:381)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processView (PerspectiveExtensionReader.java:129) at  org.eclipse.ui.internal.registry.PerspectiveExtensionReader.processExtension (PerspectiveExtensionReader.java:75)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.readElement (PerspectiveExtensionReader.java:174) at org.eclipse.ui.internal.registry.RegistryReader.readElements (RegistryReader.java:119) at org.eclipse.ui.internal.registry.RegistryReader.readExtension (RegistryReade r.java:128)  at org.eclipse.ui.internal.registry.RegistryReader.readRegistry (RegistryReader.java:140)  at org.eclipse.ui.internal.registry.PerspectiveExtensionReader.extendLayout (PerspectiveExtensionReader.java:49) at org.eclipse.ui.internal.Perspective.loadPredefinedPersp (Perspective.java:515) at org.eclipse.ui.internal.Perspective.createPresentation (Perspective.java:217) at org.eclipse.ui.internal.Perspective. & lt;init & gt; (Perspective.java:124) at org.eclipse.ui.internal.WorkbenchPage.createPerspective (WorkbenchPage.java:728) at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective (WorkbenchPage.java:496) at org.eclipse.ui.internal.WorkbenchPage.access$11 (WorkbenchPage.java:487) at org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:2010)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2008) at org.eclipse.ui.internal.ChangeToPerspectiveMenu.run (ChangeToPerspectiveMenu.java:37) at org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:305)  at org.eclipse.ui.actions.PerspectiveMenu$2.widgetSelected (PerspectiveMenu.java:93)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836) at org.eclipse.ui.internal.Workbench.run(Workbench.java:819)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) " > < /exception > < /status > < /log-entry > By the looks of this trace, the Java debug UI plug-in was starting up, but the  core Java plug-in was not started up yet. Closed the workbench & re-opened, and the same problem did not occurr. Adding John as CC Have never been able to reproduce this problem. Closing.
Platform	vertical ruler not repainted on whole file change 1. Create the below class:  package com.pkg; public class myClass {  public void myMethod(int q, int w,   int e, int r, int t) {   String a; String b;  } }  2. Save class 3. Add a bookmark to " int r, int t) { " (line 7) 4. Format 5. Note bookmark moved up to line 4 (which is correct) 6. Undo 7. Bookmark has disappeared! (Bookmark view still displays the bookmark entry  and double-clicking it does nothing) 8. Revert 9. Bookmark reappears! Actually, I found that anything on the vertical ruler, bookmars, tasks,  error/warning markings disappears when you do something that causes the whole document to reload while it is still open in the editor. Another way to recreate the problem: 1. Open a java file in editor 2. Add some items in the vertical ruler bookmarks/tasks/errors. 3. While file is still open in Java editor, edit and save the file using an editor outside of eclipse. 4. You'll get a dialog asking if you want to reload because it's been modified  elsewhere.  Say Yes/OK. 5. Document is reloaded but all markings in vertical ruler are gone! More likely an editor problem than a bookmarks problem. I might add this is a more serious problem with some other editors, such as an  HTML editor, which may be changed outside the editor on a more " regular basis " than java files ... for example, as other project settings or strucuture changes, some HTML files are updated to stay in sync. Even though these other  editors are not part of the base, just thought I'd comment that extensions to  the base are more effected than might first be thought. have there been any new developments on this bug?
JDT	Java Templates In the build 1203 i have the following problems:  1 > If i edit a template of JAVA like stderr then the dialog that gets opend will display: JAVA_DOC as type. 2 > Filecomment and Typecomment are there but empty is this wanted? Re 1: confirmed the context combo isn't properly initialized in the dialog.  Re 2: this is intentional, since we don't want to insert useless comments  like " Type type was generated by... " etc. for file comments this is good (nothing there) but for type comments it is so basic that you have:  /** * @author username  * @version: $$Id$$ */  (that last $$Id$$ is something i would like :-) I don't think this is in the way for 99% of the persons. 1) It's a bug.  2) I doubt that any kind of assumption can be made how people expect a type comment to look like. They will end up changing it anyway, so the best is to leave it out. fixed 1) > = N-20020321 > = I-20020326 Verified *** Bug 12493 has been marked as a duplicate of this bug. *** *** Bug 12308 has been marked as a duplicate of this bug. ***
JDT	JavaDOC generated for anonymous class methods [code manipulation] JavaDOC tool will not generate javadoc for anonymous inner classes.  In an  anonymous inner class, when I override a method, a " @see super.impl() " gets  inserted.  I feel that this is unnecessary.  Maybe some comment is nice to have for people reading the code, but anonymous classes are often simple enough to  have no comments. You can disable adding java doc comments in the preferences (Java- > Code  Generation). But this is currently a " all or nothing " switch. this is fixed in M2: No comments generated for methods for anonymous classes
Platform	Workbench will not start Eclipse hangs on the splash screen. This occurs when a JDK which is used by the workbench has been uninstalled. When uninstalling a JDK, the user is advised to restart the computer. If the user declines, and tries to start the workbench without rebooting, the workbench will refuse to start.  It will show the splash screen, and cease hard disk access after a few seconds, and stay there indefinitely.  After rebooting, (and cleaning up the newly uninstalled JDK) the eclipse workbench is able to start normally. I am then able to point eclipse to an  alternative JDK to use. Eclipse should be tolerant of a missing JDK on startup, and inform the user,  then continue, while ignoring the errant JDK. We can look at this, but the issue may be that the JDK is still " partially " there (i.e. some open files were not deleted), hence the need to reboot. If this is the case, then the situation is basically the same as attempting to  start Eclipse with a " damaged " JDK (i.e. bad download, etc.). Results are  likely to be unpredictable, and there's not much we can do about it.  We do check for the existance of a JDK before attempting to start up, and display an error message if one can't be found. The launcher/startup sequence has been significantly reworked.
Platform	NPE in ControlExample swt 20020920  1. Run the ControlExample 2. Go to the CoolBar Tab 3. Check the style SWT.DROP_DOWN 4. Drag the CoolItem so that you get a chevron 5. Click two time over the chevron (is not a double-click) walkback: java.lang.NullPointerException at  org.eclipse.swt.examples.controlexample.CoolBarTab$CoolItemSelectionListener.wid getSelected(CoolBarTab.java:416)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:87)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1622) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1368)  at org.eclipse.swt.examples.controlexample.ControlExample.main (ControlExample.java:103) Exception in thread " main " The bug is in the example. look at CoolBarTab#widgetSelected, you will see this code:  Display display = coolBar.getDisplay (); while (menu.isVisible ()) {  if (!display.readAndDispatch ()) display.sleep (); }  It's a problem cause during the event loop the menu can be set to null, so you  will get this NPE in menu.isVisible (). I believe this is the right code:  while (menu != null & & menu.isVisible ()) {  if (!display.readAndDispatch ()) display.sleep (); } You found it, you fix it! fix > 20020923 *** Bug 24962 has been marked as a duplicate of this bug. ***
JDT	Multiple selection in Outline should be in sync with editor (1G98VA3) [editor] DM (2/16/01 4:18:09 PM)  When I select more than one Ja va element in the  outline I would expect that the magnet in the editor covers the selected Java elements.   NOTES: moved to ' active ' PRODUCT VERSION:  Jabiru 77+, Eclipse 0.026, SDK 1.2.2_007 not critical defer SDK 1.2.2_007 . Get rid of deprecated state.
Platform	[CVS Sync View] Override and Update enabled for un-Added files If I have a new file that has not been added to CVS contro, I can still perform  an " Override and Update " on the file (which deletes it). If we are going to  hold to " must add first " than it should apply here as well. After some thought on this, I think it may be OK to leave the menu option  enabled (i.e. you could say that the file was added to version control by another user so is now under version control). ok with me Me too. Closing.
JDT	New open type dialog doesn't remember hierarchy was last used Build 20020520  I mostly use the Open Type... dialog to open hierarchies. Howver the new dialog doesn't remember that I pressed the Hierarchy button. So the second time I use  this dialog, when I press Enter it activates the OK button instead of the Hierarchy button. *** This bug has been marked as a duplicate of 16455 ***
JDT	TVT2: hardcoded " none " and " default " in java launcher Build F2  In common tab of launcher for new java application, the strings " none " and " default " seem to be unexternalized.  We have searched for an occurrence of  these that fits and we cannot find one.  Below is the intial problem description that came from a TVT tester in Toronto.  This bug was opened in response to TPRS ID=102 < TVT Tester > Steps to recreate problem: 1. Open the Java perspective - > Open the menu bar, click on Run > Debug 2. Select Java Application > New 3. On the common tab, there are two drop down list. And in there, " none " , " default " is in Eng. < /TVT Tester > moving to JDT debug - should be fixed for F4 *** This bug has been marked as a duplicate of 20066 ***
JDT	ClassCastException in CompletionEngine Build 20021030  1. create the following compilation unit: public class TestCompletion {   public String aString() { return " test " ;   } }  2. go in window > preference > java > debug > detail formatters 3. create/edit the detail formatter for TestCompletion 4. type " return aStr " in the text area. 5. hit [CTRL+SPACE] for activate the code completion. No proposals are displayed. the log file contains:  !ENTRY org.eclipse.ui 4 4 Oct 31, 2002 09:18:17.314 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Oct 31, 2002 09:18:17.317 !MESSAGE java.lang.ClassCastException !STACK 0 java.lang.ClassCastException         at org.eclipse.jdt.internal.codeassist.CompletionEngine.computeExpectedTypes(CompletionEngine.java:2626)         at org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:349)         at org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:714)         at org.eclipse.jdt.internal.core.SourceType.codeComplete(SourceType.java:74) at org.eclipse.jdt.internal.debug.ui.DetailFormatterCompletionProcessor.computeCompletionProposals(DetailFormatterCompletionProcessor.java:49) at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1279) at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:177) at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:176) at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.run(CompletionProposalPopup.java:138) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)         at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:133)         at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1199)         at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:413)         at org.eclipse.jdt.internal.debug.ui.DetailFormatterDialog$4.verifyKey(DetailFormatterDialog.java:214)         at org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:51)         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:839)         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:864) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java: 551)         at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:4859) at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:4634)         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:839)         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1464) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1284)         at org.eclipse.jface.window.Window.runEventLoop(Window.java:561) at org.eclipse.jface.window.Window.open(Window.java:541)         at org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersPreferencePage.addType(JavaDetailFormattersPreferencePage.java:254)         at org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersPreferencePage$4.handleEvent(JavaDetailFormattersPreferencePage.java:168)         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:839)         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1464) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1284)         at org.eclipse.jface.window.Window.runEventLoop(Window.java:561) at org.eclipse.jface.window.Window.open(Window.java:541)         at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47)         at org.eclipse.jface.action.Action.runWithEvent(Action.java:769) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:408) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:362) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:353) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:839) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1464)         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1284) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1419)         at org.eclipse.ui.internal.Workbench.run(Workbench.java:1402) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:831) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)         at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)         at org.eclipse.core.launcher.Main.main(Main.java:539) Protection added.  Fixed. Verified.
Platform	[Navigator] Copying out-of-sync resource over existing deletes existing and aborts copy From bug 20646: " I selected several files to be copied from one folder to another. The target  folder already had files of the same name. When I pasted the files into the target folder, I was prompted to overwrite an existing file.  [...] ...some of the resources I was coping were out-of-sync with the local file  system so the operation failed and all the conflicting files in the target folder were deleted but no resources were copied. " Should not delete files in the target folder unless they will actually be  replaced by the source. Could not reproduce in the latest. Possibly fixed by the copy/move resource  rework. Which build did you see this problem with (something pre R2.0, judging by the date of the original bug)? Can you verify that this is fixed in a recent 2.1 build? I do get an error message " A resource name collision was detected " after I  select yes to overwrite and before I get the resource out of sync error. Should not get that separate error box. I see the problem now. I misinterpreted the meaning of " conflicting files " . If file A and B are going to be overwritten and A is out of sync, the copy operation will be cancelled but B will still be deleted. The extra error message occurs when existing resources are deleted in  CopyFileAndFoldersOperation.validateNoNameCollisions and a resource is out of sync. This delete is unnecessary because we delete files during the actual  copy. The latter was originally intended for folder merging but also deletes files that were not deleted during the validation/user prompt process.  Changed the copy and move operations to catch CoreExceptions during delete so that the operations continue with the remaining resources. Now, when one file  is out of sync all other files will still be copied/moved and the failed files will be reported at the end of the operation.
Platform	should be able to duplicate a window (1GJX7HD) It would be nice to way of duplicating the entire window (e.g. " Duplicate " in the " Window " menu).  The options for opening a new window are based on opening a new perspective and using a keyboard modifier (eg. shift).  But if I already like the set of perspectives I have and simply want to look at two things at the same time, the only way I see to get the new window is by opening a perspective with ' new window ' modifier.   NOTES: PRODUCT VERSION:   135 The ability to Clone a perspective is available in latest 2.0 builds     Perspective- > Clone
JDT	Built state does not remember old pkg fragment roots (1GELFJO) Using autobuild.  Define a project P which targets jdk1.2.2 on its classpath, save/exit and reenter, have it target j9 instead (through a variable is preferrable). A build action is triggered, and when the built state is read, the old roots (jdk1.2.2) are not there, but instead j9 is there (have to inspect the re-read built state to find out). This causes the incremental builder to be confused and not react well (visible if not resetting the built state to null when classpath is changing).  NOTES: PRODUCT VERSION: SDK 115 Closed - not reproducable with new builder.  Any classpath change causes the entire project to be rebuilt.
JDT	Would like to move fields together (and to the top) (customer request) CompilationUnits occasionally end up with field definitions spread throughout the file.  It is a tedious (manual) task to get all of the fields brought  together at the top of the file. It would be useful if there was a way to make this occur.  It could possibly be  a formatting option, or a menu operation.  It is difficult to ask for a menu operation since this is not a common operation (and would add clutter).    It is possible to add a pre-processor to the formatter for code reorganization before invoking the code formatting engine. John, would fixing bug 13013 help you here? you could drag the fields and drop them over the type icon, which would drop them there - at the top of the type definition jindent supports this sorting option. The formatter is pluggable and it would  be possible to integrate jindent into Eclipse. No plans to add this to the built-in formatter. Reopening This is more a formatting issue than a refactoring issue. Moving to JDT Core  for commenting. They are investigating in a new formatter infrastructure. Still, reordering source may cause binary compatibility issues (innerclasses  numbered differently). Therefore I am reluctant to consider it as a formatting feature.  However, I would want to have such a feature too, along with a way to sort members by name (fields, types then methods).  I think this can be implemented in term of the JavaModel alone... like the fragmented source view. Just for clarification, I too think it should be some kind of pre-processing of  the source. Not part of the formatter, since they are occasions where I only want to resort, not touch the formatting. Maybe this should be part of the formatter, simply with a lightweight mode. This is a subset of the request in bug 14597.  *** This bug has been marked as a duplicate of 14597 ***
Platform	More tolarant when not finding product.ini The most common problem when starting a selfhosted eclipse is that the  product.ini is not found. - Either org.eclipse.sdk is missing, or - the install directory (eclipse/install) is not there. Would it be possible, if eclipse can start up even when product.ini is not  found? I would not mind having a default icon or default splash screen etc. I changed ProductInfo.java, PlatformInfo.java, and ConfigurationInfo.java to  allow Eclipse to boot with missing or malformed product.ini, platform.ini, product.properties, or platform.properties.  Instead of throwing a  CoreException, these prblems just get written to the log and Eclipse continues booting.  The worst case scenario now is that the workbench looks really ugly.
Platform	Decoration do not refresh. On some files that have been modified externally with orther tools (like  jalopy) the ' > ' CVS decorator stays even if the file is synchronised with the  repository. A diff between the current files and the one located  in the reporitory shows  no differences at all but the ' > ' is sitll there. When you say ' even if the file is synchronised with the repository ' do you mean ' even if I commit the file to the repository ' ? Are you using the Synchronize view to commit the file or the menu option Team- > Commit in the navigator? When I say synchronised I mean that a CLI ' cvs diff ' shows no diff. Both Head  revision and local file are the same. I use the Team- > commit in the navigator. If the timestamp changed, then eclipse will show the file as dirty, even if there are no content changes. Also, if you try to commit the file that has no changes, the operation will do nothing and the repository will report that there are no changes, and the the file will remain dirty. This is consistent with how CVS command-line works.  If you use the sync view, we reset the dirty state for you if you try to commit a dirty file with no changes.  You can select the file and Replace With- > Latest from Repository and the dirty flag will go away. If you don't want it to be marked dirty in the future, then you should try to avoid re-saving the file with external tools if the contents have not actually changed.  Closing bug report; if there are further problems please re-open.
Platform	[Preferences] Perspective changes aren't exported with preferences 1) I changed my Java Perspective in one workspace. 2) I exported my preferences and imported them into another workspace 3) I opened the Java Perspective.  It did not reflect my changes in the first  workspace. The preference export does not handle perspective changes only changes in the  preference store.
JDT	NPE in extract method 1. Added new code to JavaBrowsingPerspectiveFactory 2. Selected some of that code (no save) 3. Extract method  java.lang.NullPointerException at org.eclipse.jdt.core.dom.DefaultBindingResolver.returnBindingForQualifiedNamePart(DefaultBindingResolver.java:618) at org.eclipse.jdt.core.dom.DefaultBindingResolver.internalResolveNameForSimpleName(DefaultBindingResolver.java:660) at org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName(DefaultBindingResolver.java:146) at org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75)  at org.eclipse.jdt.internal.corext.refactoring.code.LocalTypeAnalyzer.visit(LocalTypeAnalyzer.java:45)  at org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:88) at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:957)  at org.eclipse.jdt.core.dom.QualifiedName.accept0(QualifiedName.java:81) at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:986)  at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:87) at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:957)  at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:73) at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:986)  at org.eclipse.jdt.core.dom.Block.accept0(Block.java:73) at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:957)  at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:93) at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:986)  at org.eclipse.jdt.core.dom.Block.accept0(Block.java:73) at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:957)  at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:173) at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:906)  at org.eclipse.jdt.internal.corext.refactoring.code.LocalTypeAnalyzer.perform(LocalTypeAnalyzer.java:34)  at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer.endVisit(ExtractMethodAnalyzer.java:418)  at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:140) at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:906)  at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.checkActivation(ExtractMethodRefactoring.java:166)  at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:74)  at org.eclipse.jdt.internal.ui.refactoring.actions.TextSelectionBasedRefactoringAction.run(TextSelectionBasedRefactoringAction.java:28)  at org.eclipse.jdt.internal.ui.refactoring.actions.TextSelectionAction.run(TextSelectionAction.java:80)  at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:204) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:738)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) This is a AST problem. Moving to JCore I would need a test case. Without this, it can be really long to fix the bug. Could you please provide the code you selected to " extract method " ? Please provide a test case if you want this PR to be fixed. no problem here it is:  1. Self-hosting workspace 2. Open JavaBrowsingPerspectiveFactory.java (revision 1.3) 3. Under the method declaration of " createInitialLayout " add:   if (fgJavaElementFromAction == null) return true;   int type= fgJavaElementFromAction.getElementType(); return type == IJavaElement.JAVA_MODEL || type == IJavaElement.JAVA_PROJECT || type == IJavaElement.PACKAGE_FRAGMENT_ROOT; 4. Select the code which you just added 5. Refactor - > Extract Method And this revision corresponds to which build? JavaBrowsingPerspectiveFactory.java (revision 1.3) Build where the problem appears: 20020409  The revision of the file is not part of a build (no tag). Simply use the current build (20020409) and get the correct revision from dev.eclipse.org I tried to reproduce this problem without success. Could you please tell me  exactly where in the  source of JavaBrowsingPerspectiveFactory you add the code. The method createInitialLayout returns void. So adding code that returns a boolean is invalid. I tried but I could not reproduce. Reproduced with latest code sent by email. I am working on it. The problem comes from the fact that IJavaElement.JAVA_MODEL cannot be resolved properly,  because IJavaElement cannot be resolved. So in this case when trying to resolve the name " IJavaElement " or " JAVA_MODEL " , I expect null to be returned instead of a NPE. In this case the extracted method doesn't return the proper type. This might be a bug in this code. It returns void  instead of boolean. I will fix the name resolution code to return null instead of failing with a  NPE. I am expecting you to fix the other part (return type is void instead of boolean). Another bug is to generate after the extract method a return statement like: return test(); if " test " is the name of the extracted method where the return type of the method is void. This is  invalid and I would expect the extraction of the method to fail instead of generating invalid code. The initial problem is fixed and released in HEAD.
JDT	IlegalArgumentException in path canonicalisation Hi all,  I just installed eclipse and I'm trying to create a new Java project but  I get an error every time.  Can someone shed some light on this? System info: RedHat 7.2 x86 (running OpenMotif instead of Lesstif) eclipse 20011219-linux-motif IBM Java2 SDK 1.3 eclipse installed in ~/eclipse  It spits out the following stack trace when I create a project: java.lang.IllegalArgumentException: at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:50) at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:35) at org.eclipse.core.runtime.Path.remove FirstSegments(Path.java:691) at org.eclipse.jdt.internal.core.JavaProject.canonicalizedPath (JavaProject.java:125) at org.eclipse.jdt.core.JavaCore.newLibraryEntry(JavaCore.java:561) at org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry(JavaCore.java:402) at  org.eclipse.jdt.internal.core.JavaProject.projectPrerequisites (JavaProject.java:1491) at org.eclipse.jdt.internal.core.JavaProject.hasClasspathCycle (JavaProject.java:1303) at  org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.updateClassPathSt atus(BuildPathsBlock.java:473) at org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.buildPathDialogFi eldChanged(BuildPathsBlock.java:421) at  org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.access$1 (BuildPathsBlock.java:419) at org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock$BuildPathAdapter. dialogFieldChanged(BuildPathsBlock.java:406) at  org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField.dialogFieldChanged (DialogField.java:65) at org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.dialogFieldChan ged(ListDialogField.java:367) at  org.eclipse.jdt.internal.ui.wizards.dialogfields.CheckedListDialogField.dialogFi eldChanged(CheckedListDialogField.java:101) at org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.setElements (ListDialogField.java:445) at  org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.init (BuildPathsBlock.java:322) at org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPage.initBuildPaths (NewJavaProjectWizardPage.java:206) at  org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPage.setVisible (NewJavaProjectWizardPage.java:219) at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:882) at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:646) at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:307) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:344) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled  Code)) at org.eclipse.jface.window.Window.runEventLoop(Window.java:536) at org.eclipse.jface.window.Window.open(Window.java:523) at org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:74) at org.eclipse.ui.internal.NewWizardDropDownAction.run (NewWizardDropDownAction.java:69) at org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1569) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1423) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:815) at org.eclipse.ui.internal.Workbench.run(Workbench.java:798) at  org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:821) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) I get the same exception.  I get it as soon as I click ' Next ' or ' Finish ' after entering a project name in the ' New Java Project ' wizard.  It does not matter if I use the default path or specify my own.  This happens in both the 12/19 and 1/9 builds with both Motif and GTK.  I am also running RH Linux 7.2 with the IBM 1.3 SDK.  My installation directory is /usr/local/eclipse. Joshua, could you please tell me what your project setup is, i.e. 1. Is your project under the workspace root? 2. If not, what is the path to your project? 3. Do you have external jars in the project's build path? 4. Do you use sym-links? Added protection in JavaProject.canonicalizedPath(IPath), but would still like  to undertstand the test case. *** Bug 9386 has been marked as a duplicate of this bug. ***
Platform	[CVS Core] RTag has a bug that causes test failure This needs to be fixed for tomorrows build Fix released to HEAD and 2.1 M1
JDT	Save and Save-Replace (1GDKPLF) VK (5/11/01 2:00:31 PM)   For VA users not having the distinction will be a problem ... if I change the signature Eclipse assumes save=save-replace and VA assumes save=save-new (unless you   select Save Replace). Being used to the VA way of things I keep clobering methods when I create variations of the method  NOTES: VK (5/11/01 4:54:22 PM)   I just did it half dozen more times. I have the editor showing only selected " segment " of the   class (just like VA) and when I want to add new method I just simply change the signature in the editor and do save (just like I would have done in VA). But in Eclipse I actually    loose the original method which is not what VA users are used to. EG (5/12/2001 2:22:30 PM)  This is not the first request for this VA/Java compatibility behaviour. Difficult to provide in the current segmentation model, i.e., you just  see a subset of the full CU you don't edit a separate buffe for the method. This means  when you change the method it is gone and we don't have the original  method. We could save the original method whenever a method is first modified. When it is changed and the user presses ctrl-shift-s  then the original method is inserted again. This approach will only work for leaf methods.   A related problem is that ctrl-shift-s has different meaning in VA/Java and Eclipse:  VA/Java: save-replace Eclipse: save all modified editors.  EG (24.07.2001 21:56:50) we should consider alternative commands, like support for cloning a method. moved to ' active ' PRODUCT VERSION: 0.105 please upgrade this to Priority-P1 one of the features of VAJ i really miss, there is now copy paste support for methods, you can create a new method by  copy/paste.
Platform	[Perspectives] Details in Customize Perspective dialog are weak The details for Views/Actions/wizards in the Customize Perspective dialog just  shows you an icon and short name.  I have no idea which provider has provided the item, and sometimes the short description is too vague or out of context. There are currently no plans to work on this feature
JDT	Breakpoint marker deleted without notifying breakpoint object 1. Set a breakpoint in a class. 2. Debug to the breakpoint. 3. Select the contents of the class and Cut. 4. Save. 5. Receive the following dump to the console:   Internal error logged from JDI debug model: org.eclipse.debug.core.DebugException: Breakpoint does not have an associated marker. at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.ensureMarker(JavaBreakpoint.java:115) at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.getInstallCount(JavaBreakpoint.java:542) at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.decrementInstallCount(JavaBreakpoint.java:549) at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.deregisterRequest(JavaBreakpoint.java:203) at org.eclipse.jdt.internal.debug.core.JavaBreakpoint.removeFromTarget(JavaBreakpoint.java:475) at org.eclipse.jdt.internal.debug.core.JDIDebugTarget.breakpointRemoved(JDIDebugTarget.java:875) at org.eclipse.debug.internal.core.BreakpointManager.fireUpdate(BreakpointManager.java:451) at org.eclipse.debug.internal.core.BreakpointManager.removeBreakpoint(BreakpointManager.java:208) at org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerVisitor.handleRemoveBreakpoint(BreakpointManager.java:407) at org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerVisitor.visit(BreakpointManager.java:351) at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:52)  at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:56)  at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:56) at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:43)  at org.eclipse.debug.internal.core.BreakpointManager.resourceChanged(BreakpointManager.java:287)  at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:125)  at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:812) at org.eclipse.core.runtime.Platform.run(Platform.java:395)  at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:140)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:43)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)  at org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:110)  at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:698)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1189) at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78) at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1306) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation(CompilationUnitEditor.java:556) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:604) at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:775)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:296)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335) at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:633) at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:780)  at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1211) at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:453) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:54)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1561)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1411) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:727)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:710) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at SlimLauncher.main(SlimLauncher.java:14) Fixed in JavaBreakpoint#deregisterRequest().  We no longer try to decrement the install count if the marker has been deleted. Please verify. Verified.
Platform	[Working Sets] Drop-down toolbar button for quick-setting the Working Set I find it quite common to switch between Working Sets fairly often (I work on three projects at any  given time at work). It would be nice to have a drop-down toolbar button that shows a list of the defined Working Sets, allowing me to select one or clear the working set without having to go into a  model dialog. We are moving back to per-view working set filter settings. In the Navigator, the dialog for this has a drop-down combo, but it's still in  a modal dialog. Having a drop-down on the toolbar for each view which supports working sets  would be too much clutter. The JDT team has also requested the ability to switch working sets quickly  though.  It is unlikely that this will be addressed for 2.0 however. Defering for consideration in v3. How about adding a submenu to the Select Working Set menu item which lists all the available  working sets, and an item at the bottom for opening the editing dialog (this is for the Packages view)? Like such:  Select Working Set > Set 1                    Set 2 Set 3                    ------ Edit...  This avoids clutter on the toolbar, but it still faster for switching working sets. I believe JDT is moving/has moved to incorporate the working set selection in  the filters dialog. This is what the workbench navigator does now so we won't  have separate menu items for working sets anymore. Reopen for investigation *** This bug has been marked as a duplicate of 13980 ***
Platform	Key navigation problem - Static text has text cursor Build 0528 Help- > New Updates Finish Warning dialog appears because of unsigned jar. Press left arrow to move default button to " Install " instead of " Cancel " Note that it doesn't work.  Instead of making Install the default button,  observe that there is a text cursor in the static text area at the top (see attached bitmp) and the arrows are moving the cursor around the text instead of  alternating between the 2 buttons. What should have been labels were actually protected entry fields. Fixed, but  not yet integrated *** This bug has been marked as a duplicate of 17236 ***
JDT	Goto package: Dialog shows META-INF 1. package view, select CU 2. Go to - package... 3. List contains resource folders (incl META-INF) fixed in 20060307
JDT	[preferences] Template editor doesn't inherit Java editor's background color. Set Java editor's background to black, " others " to white, template editor's  background stays white and some text elements are invisible. this is noticed in 20020425 build f1 build - problem is still there I have noticed this issue as well with Release GM5.  I prefer to use a slate-gray background color with chalk-colored text.  This bug makes certain portions of the Preferences dialog difficult to use.  The issue is not limited to just the Templates editor.  It also affects the " Code Formatter " portion of the Preferences dialog and some of the Refactoring dialogs such as " Pull Up " and " Externalize Strings. " this is all caused by bug 22990 Unassign due to staff changes. *** Bug 36104 has been marked as a duplicate of this bug. *** Fixed. Available in builds > 20031014  Moving to JDT UI to address refactoring issues mentioned in comment 3 (note: I already fixed the externalize string wizard and would have done it for refactoring as well but wasn't sure if this is desired by the refactoring guys). The refactoring issues got fixed for M6 (see bug 47856).
Platform	Error messages contains & apos received            trace= " org.eclipse.core.runtime.CoreException[0]: org.xml.sax.SAXParseException: The value of attribute & quot;name & quot; must not contain the & apos; & lt; & apos; character.  when parsing attached site.xml file Core issue, seems to be fixed
Platform	StyledText - implement better autoscrolling behavior (1GIZ7A6) I think the bidi auto scroll is slower because of the way we run the auto scroll timer proc/method. Only after the  auto scroll is finished do we start the timer again. So if the non bidi auto scroll code takes 1ms to complete and the bidi code takes 10ms to complete the actual frequency of caret changes will be 6ms in a non bidi locale and 15ms  in a bidi locale. Basically our actual auto scroll frequency depends on the speed of the auto scroll method which in turn depends  on bidi/non-bidi locale and processor speed.   Also, I think the way we auto scroll differs from what Wordpad and PageDesigner do. We scroll 1/4 of the client area width and then move the caret one column at a time until the client  area border is reached. Wordpad seems to scroll one column at a time. PageDesigner seems to scroll multiple columns and then move the caret to the client area border. Both solutions would make autoscrolling appear faster.   If I resize the client area smaller so that more scrolls occur the bidi auto scroll appears to be faster even though it isn't (or shouldn't be).  NOTES: LK (8/24/01 2:38:18 PM)  Also need to investigate why autoscrolling is noticeably slower on Win98.  The slow behavior is not bidi-specific. Autoscrolling in R0.9 is significantly slower on the same machine when running under Win98 vs. WinNT.  LK (9/3/01 12:51:37 PM) Not for NL release. One problem with selection getting out of sync when dragging back and forth  (right and left) in bidi mode.  Fixed doBidiMouseLocationChange method. PRODUCT VERSION: 132 Later, there have been no complaints about the current behavior. Post 2.0. Re-opening bug reports for review. Current behavior is sufficient.
JDT	organize imports - ' not parsed ' error should be info (1GKZ0HZ) AK (10/2/2001 3:18:00 PM)  error dialogs should be used only in error situations. othewise they scare me. organize imports should present an information dialog (not an error dialog)   if the compilation unit has syntax errors. NOTES:  MA (04.10.2001 10:02:18) fixed > 202 verified verified
JDT	redundant menu entry in variables view the ' show type names ' entry is useless - there's a toolbar button for that if we want to keep it - then other entries must be added too: ' show qualified names ' ' show detail pane ' ' show fields ' ' show static members ' ' show fields ' should be ' show final fields ' I believe the actions should all be in the menu for accessibiltiy reasons.  Otherwise there is no way to toggle the toolbar actions via the keyboard. The debug ui should contribute the " show details action " to the pop-up menu (or  via code). The java debug ui should contribute * show package names * show static fields * show final fields So this raises a bunch of work for what should be trivial.  We contribute an action to the toolbar of a view via the viewAction extension point.  Now you want to add the action to the popup menu, but this action will be a different instance contributed via the popupMenu extension point. To keep  the " checked " state of the actions in synch, we will have to create a whole  infrastructure to coordinate the state of these actions. Am I missing a better way to do this? Recommend using the view (triangle) menu for settings which affect  filtering/sorting, rather than actions on the content of the view. Agree they should be on a menu as well as the toolbar for accessibility  reasons. Unfortunately, the different interfaces for IActionDelegate and IAction  prevent us from sharing the same action instance. It would be nice to just have a single action and provide it in two different  places, but we can't do this currently. This is a general problem if you have multiple views / actions on the same model. You could use the preference store to capture the state of the setting, and hook a listener to track changes in both places. Implemented. Please verify (DarinW) Verified. But why are show static & final fields on by default now? They used  to be off (i.e. the button is on, which adds the filters, which hides statics and finals by default). I was just trying to be consistent with the rest of the ide...all of the other  views that filter statics start with the filter off so the statics are visible. Reverted...you will have to close your debug perspective as the state of the  actions is persisted. Verified.
JDT	AssertionFailedException in ProblemPosition Using stable build build 20020321 on XP Professional, while editing  uncompilable source code in Java Editor: Log: Mon Apr 29 01:21:26 EDT 2002 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Mon Apr 29 01:21:26 EDT 2002 4 org.eclipse.ui 0 Failed to execute runnable (org.eclipse.jface.util.Assert$AssertionFailedException: assertion failed; ) org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.util.Assert$AssertionFailedException: assertion failed; )  at org.eclipse.swt.SWT.error(SWT.java:1887) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:96) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1397)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:722)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:705) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:196)  at org.eclipse.core.launcher.Main.run(Main.java:555) at org.eclipse.core.launcher.Main.main(Main.java:396) Log: Mon Apr 29 01:21:26 EDT 2002 1 org.eclipse.core.resources 4 *** Stack trace of contained exception *** Log: Mon Apr 29 01:21:26 EDT 2002 4 org.eclipse.ui 0 assertion failed;  org.eclipse.jface.util.Assert$AssertionFailedException: assertion failed; at org.eclipse.jface.util.Assert.isTrue(Assert.java:162)  at org.eclipse.jface.util.Assert.isTrue(Assert.java:148) at org.eclipse.jface.text.Position. < init > (Position.java:52)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPosition. < init > (ProblemPosition.java:23)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.setProblems (ProblemPainter.java:62)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.updateProblems (ProblemPainter.java:71)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$3.run (CompilationUnitEditor.java:1085)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1397)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:722)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:705) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:196)  at org.eclipse.core.launcher.Main.run(Main.java:555) at org.eclipse.core.launcher.Main.main(Main.java:396) Assertion failed in JFace text. I'm not sure what's going on beyond that. Looks like javaeditor.ProblemPainter is creating an invalid position. The used build is more than one month old. The problem painter code has been  changed since then several times. No similar PR has been filed recently. Please try newest build and open new PR if necessary. Closed.
Platform	Device.getFontList() uses wrong constant name PFFONT_DONT_SHOW_LEGACY should be PHFONT_DONT_SHOW_LEGACY. Patch in 23745 corrects this issue. SSQ to fix constants. Fixed > 20020919.
Platform	Remove all terminated not enabled after terminating run With the prefs turned off for switching to the debug perspective, run  an " infinite loop " program.  Switch to the debug perspective, and terminate the  launch.  The remove all terminated button does not update to enabled. When code was refactored, lost the action as a debug event listener. Fixed in RemoveAllTerminatedDeleaget#init and dispose Please verify. *** Bug 10202 has been marked as a duplicate of this bug. *** Verified.
JDT	NPE in Code Assist Build M5  Everytime I ask for Code Assist for an instance of a particular class, I get the attached walkback.  Code Assist for static members of that class works OK. Note that this is the same class (FlowCommonUtils) that was causing problems  in Bug 15972. java.lang.NullPointerException  Stack trace: java/lang/Throwable. < init > ()V    java/lang/Throwable. < init > (Ljava/lang/String;)V    java/lang/NullPointerException. < init > (Ljava/lang/String;)V    java/lang/StringBuffer.append([C)Ljava/lang/StringBuffer; org/eclipse/jdt/internal/ui/text/java/ResultCollector.getParameterSignature ([[C[[C)Ljava/lang/String;    org/eclipse/jdt/internal/ui/text/java/ResultCollector.createMethodCompletion ([C[C[[C[[C[C[CIII) Lorg/eclipse/jdt/internal/ui/text/java/JavaCompletionProposal; org/eclipse/jdt/internal/ui/text/java/ResultCollector.createMethodCallCompletio n([C[C[[C[[C[C[CIII) Lorg/eclipse/jdt/internal/ui/text/java/JavaCompletionProposal; org/eclipse/jdt/internal/ui/text/java/ResultCollector.acceptMethod([C[C[C[[C [[C[[C[C[C[CIIII)V org/eclipse/jdt/internal/core/CompletionRequestorWrapper.acceptMethod([C[C[C [[C[[C[[C[C[C[CIIII)V org/eclipse/jdt/internal/codeassist/CompletionEngine.findLocalMethods([C [Lorg/eclipse/jdt/internal/compiler/lookup/TypeBinding; [Lorg/eclipse/jdt/internal/compiler/lookup/MethodBinding;Lorg/eclipse/jdt/inter nal/compiler/lookup/Scope;Lorg/eclipse/jdt/internal/compiler/util/ObjectVector; ZZLorg/eclipse/jdt/internal/compiler/lookup/ReferenceBinding;Lorg/eclipse/jdt/i nternal/compiler/lookup/InvocationSite;Lorg/eclipse/jdt/internal/compiler/looku p/Scope;Z)V    org/eclipse/jdt/internal/codeassist/CompletionEngine.findMethods([C [Lorg/eclipse/jdt/internal/compiler/lookup/TypeBinding;Lorg/eclipse/jdt/interna l/compiler/lookup/ReferenceBinding;Lorg/eclipse/jdt/internal/compiler/lookup/Sc ope;Lorg/eclipse/jdt/internal/compiler/util/ObjectVector;ZZZLorg/eclipse/jdt/in ternal/compiler/lookup/InvocationSite;Lorg/eclipse/jdt/internal/compiler/lookup /Scope;Z)V    org/eclipse/jdt/internal/codeassist/CompletionEngine.findFieldsAndMethods ([CLorg/eclipse/jdt/internal/compiler/lookup/TypeBinding;Lorg/eclipse/jdt/inter nal/compiler/lookup/Scope;Lorg/eclipse/jdt/internal/compiler/lookup/InvocationS ite;Lorg/eclipse/jdt/internal/compiler/lookup/Scope;Z)V    org/eclipse/jdt/internal/codeassist/CompletionEngine.complete (Lorg/eclipse/jdt/internal/compiler/ast/AstNode;Lorg/eclipse/jdt/internal/compi ler/lookup/Binding;Lorg/eclipse/jdt/internal/compiler/lookup/Scope;)V org/eclipse/jdt/internal/codeassist/CompletionEngine.complete (Lorg/eclipse/jdt/internal/compiler/env/ICompilationUnit;II)V org/eclipse/jdt/internal/core/Openable.codeComplete (Lorg/eclipse/jdt/internal/compiler/env/ICompilationUnit;Lorg/eclipse/jdt/inter nal/compiler/env/ICompilationUnit;ILorg/eclipse/jdt/core/ICompletionRequestor;) V org/eclipse/jdt/internal/core/CompilationUnit.codeComplete (ILorg/eclipse/jdt/core/ICompletionRequestor;)V org/eclipse/jdt/internal/ui/text/java/JavaCompletionProcessor.computeCompletion Proposals(Lorg/eclipse/jface/text/ITextViewer;I) [Lorg/eclipse/jface/text/contentassist/ICompletionProposal; org/eclipse/jface/text/contentassist/ContentAssistant.computeCompletionProposal s(Lorg/eclipse/jface/text/ITextViewer;I) [Lorg/eclipse/jface/text/contentassist/ICompletionProposal; org/eclipse/jface/text/contentassist/CompletionProposalPopup.computeProposals (I)[Lorg/eclipse/jface/text/contentassist/ICompletionProposal;    org/eclipse/jface/text/contentassist/CompletionProposalPopup.access$3 (Lorg/eclipse/jface/text/contentassist/CompletionProposalPopup;I) [Lorg/eclipse/jface/text/contentassist/ICompletionProposal; org/eclipse/jface/text/contentassist/CompletionProposalPopup$1.run()V    org/eclipse/swt/custom/BusyIndicator.showWhile (Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V    org/eclipse/jface/text/contentassist/CompletionProposalPopup.showProposals (Z)Ljava/lang/String; org/eclipse/jface/text/contentassist/ContentAssistant.showPossibleCompletions() Ljava/lang/String; org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$AdaptedSourceViewe r.doOperation(I)V    org/eclipse/ui/texteditor/TextOperationAction.run()V org/eclipse/ui/texteditor/RetargetTextEditorAction.run()V    org/eclipse/jface/action/Action.runWithEvent (Lorg/eclipse/swt/widgets/Event;)V    org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection (Lorg/eclipse/swt/widgets/Event;)V    org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent (Lorg/eclipse/swt/widgets/Event;)V    org/eclipse/jface/action/ActionContributionItem.access$0 (Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Even t;)V org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent (Lorg/eclipse/swt/widgets/Event;)V org/eclipse/swt/widgets/EventTable.sendEvent (Lorg/eclipse/swt/widgets/Event;)V org/eclipse/swt/widgets/Widget.notifyListeners (ILorg/eclipse/swt/widgets/Event;)V org/eclipse/swt/widgets/Display.runDeferredEvents()Z    org/eclipse/swt/widgets/Display.readAndDispatch()Z org/eclipse/ui/internal/Workbench.runEventLoop()V    org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object; org/eclipse/core/internal/boot/InternalBootLoader.run (Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;) Ljava/lang/Object;    org/eclipse/core/boot/BootLoader.run (Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;) Ljava/lang/Object; java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object; [Ljava/lang/Object;)Ljava/lang/Object; java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;) Ljava/lang/Object; org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;) Ljava/lang/Object; org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;    org/eclipse/core/launcher/UIMain.main([Ljava/lang/String;)V looks like parameterTypeNames or parameterNames is null. According the javadoc  this should not occur. We can make the result collector code robust, but to know for how to handle this case we should now when this happens, i.e., should  such a proposal be ignored, shown without a parameters? If it should be ignored can CORE not propose it in the first place.  Moving to JDT CORE The problem occur when a parameter type of a binary method is unresolved.  The bugs is in BinaryTypeBinding#availableMethods. The correct code must be ' return availableMethods; ' and not ' return methods; ' Fixed.
JDT	' Errors during build: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding ' error Attempted to build project in WSW and ended up with thr following error:  --- Errors during build.            org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding ---  Upon further investigation, it turns out that the problem was due to a single .java file in the project. When that one file was removed from the project the build went through okay. Interestingly enough this same project (with the problem file included) builds just fine in Visual Café?so the problem appears to be specific to WSW.   The same problem is seen in WSSAD 4.0.2 and 4.0.3. Obviously, it would be helpful if you could attach the file in question to the  PR. Without out, it will be hard to figure out what's going on. Seems like a  compiler issue to me. Moving to JDT. Hey Duong, how are the in-laws? ;)  Was their a walkback in your log file? Anything strange about this source file? After it was removed, did you try putting it back to see if the problem was  repeatable? Hi Duong !  Did you give it a try with an Eclipse R2.0 build ? Sorry guys. We tested this using Eclipse 2.0 GA and the problem is gone. Should have been closed, not marked as fixed. Closing
JDT	Refactoring Dialog can grow very big Build 20020508  - create a CU with a long name - open Rename Element... observe: the dialog is very big. We should limit the size of the input field by setting a widthHint.  Additionally the name in the pane title should be shortened using an ellipsis (...). Dirk you are the widthhint pioneer, pls take care of this. Fixed SEF and extract method.   Adam please make sure that the dialog is ok for the other refactorings. If you have questions regarding widthHints please step by. will check fixed - i think i got them all please reopen if you see it growing too big again > 20020514 Verified.
Platform	Need to pick from existing connections list When connecting a project to CVS, you need to be able to select the connection  from a list of already created ones.  This is in addition to creating a new one. Fixed.
JDT	Deleting project doesn't remove pkg fragment root in another project Build 20020530  Deleting (or closing) org.eclipse.swt.win32 doesn't update org.eclipse.swt. It  still shows the package fragment root /ws/win32/swt.jar. This is a delta problem. The removal of the package fragment root is not  reported. Fixed by looking at all package fragment roots and generating the corresponding  deltas when a project is added/removed. Verified, both closing/opening is behaving ok.
Platform	WINCE: Menu item colors don't match menu bar The background color of a menu bar on our Windows CE implementation doesn't  match that of the menu items on that bar, when colors are not explicitly set. In the following testcase, you will see that the menu bar has a gray color, but  the File and Edit menus have a white background. Here's the testcase: -------------------- import org.eclipse.swt.*; import org.eclipse.swt.widgets.*; import org.eclipse.swt.layout.*; import org.eclipse.swt.events.*; import org.eclipse.swt.graphics.*;  public class SwtMenuBarTestColors { Display display;  Shell shell; public static void main (String[] args) {  new SwtMenuBarTestColors().run(); } private void run() { display = new Display();  shell = new Shell(display); Menu menuBar = new Menu(shell, SWT.BAR);  shell.setMenuBar(menuBar); Menu fileMenu = new Menu(shell, SWT.DROP_DOWN);  MenuItem fileItem = new MenuItem(menuBar, SWT.CASCADE); fileItem.setText( " & File " );  fileItem.setMenu(fileMenu); char[] shortcuts = { ' N ' , ' O ' , ' A ' , ' T ' };  String[] labels = { " & New " , " & Open " , " S & ave " , " Exi & t " };  final MenuItem[] items = new MenuItem[4]; for (int i=0; i < 4; i++) {   items[i] = new MenuItem(fileMenu, SWT.PUSH);   items[i] .setText(labels[i]); items[i].setAccelerator(SWT.CONTROL | shortcuts[i] );   items[i] .addSelectionListener(new SelectionAdapter() {    public void widgetSelected(SelectionEvent e) { System.out.println(((MenuItem)e.getSource ()).getText() + " selected " );    } });  } fileItem = new MenuItem(menuBar, SWT.CASCADE);  fileItem.setText( " E & dit " );  shell.open(); while (!shell.isDisposed()) {          if (!display.readAndDispatch()) display.sleep(); }  } } Fixed. SWT now uses the Pocket PC menu bar widget.
Platform	' Synchronize with Stream ' Problem (KM: from newsgroup.  Have replied to post with bug # and request for more  info). " Jim Sculley " < niceguy@abraxis.com > wrote in message  news:3C019493.6050006@abraxis.com... > Using CVS on a local machine, Eclipse build 20011107 and JDK 1.4b3, if I > right click on a project in the resource navigator, and select > ' Synchronize With Stream ' , the process starts fine, and the status bar > will list some number of conflicts/differences.  At this point, Eclipse > hangs, and must be killed.  Piping stderr to a file doesn't show any > errors when running Eclipse with the -debug option. > > Bugzilla turns up nothing. > > Any thoughts? > > Jim S. > Additional Information:  CVS server is version 1.11.1 The CVS server and Eclipse are both running on the same Mandrake Linux 8.1 machine. While I am relatively new to CVS, it appears to be set up properly.  From a terminal window I can checkout and commit without problems. Inside Eclipse, the problem is wider than originally reported.  While working in  the Repositories pane of the Resources Perspective, any attempt to view the resources in a particular project will cause Eclipse to hang.  In other words, I can expand the ' Project Versions ' node and the ' Streams.....HEAD ' node, but any attempt to drill further down into the trees causes Eclipse to hang. Can you run Eclipse with the following VM argument:  -Dcvsclient.debug=true This will print to stdout all CVS server communication and should provide a  hint as to where it hangs. Also are you using pserver or extshh connection method? I've been investigating the problem more thoroughly, and it appears to be more widespread than I originally thought.  The hang is not specific to CVS operations, but appears to be related to the window manager being used in Linux.  Any attempt to expand a tree control to display leaf elements is resulting in a hang in KDE 2.2  (and some others) while Enlightnement (and others) work OK.  This report should be closed (or perhaps it should simply be reassigned?) and I will file a report against the one of the UI categories when I have finished  evaluating which window managers are having problems. Closing as per initiator's request
JDT	Refactoring / renaming a parameter does not change " @param " According to  http://java.sun.com/j2se/1.4/docs/tooldocs/windows/javadoc.html#@param a Javadoc - @param tag should be followed by the name of the parameter that's documented by the tag.  So if I use " refactor " to rename the parameter, I expect that name change to be propagated to the parameter's @param tag, too.  That does not happen. I enclose a screen shot of a minimal example that demonstrates the problem. *** This bug has been marked as a duplicate of 6224 ***
Platform	ClipboardTest internal example paste problem (1GETAWB) This is probably just a bug in the example, but I decided to log the PR and move on.  Run org.eclipse.swt.internal.ClipboardTest. Type some text in the Text widget. (it is just a regular text widget).  Select all of the text, and press the Copy button. Open Windows Wordpad. (NOTE: Must be Wordpad or Word, not Notepad - you need to see colors & fonts).  Paste your text into Wordpad. Notice that the text is pasted in bold italic font.  After looking briefly at the code, this is expected. However it should also be colored red.   It is most likely the RTF code in the example that is wrong. NOTES: n PRODUCT VERSION:  118 Noticed problem on Windows, will try on Motif later. This is intentional.  RTF formatting is applied before setting the clipboard content.
JDT	[resources] Ability to hide resources from the builders I've had discussions with a person who would like to use Eclipse but can't  because of how his company organizes their source directories. Part of his problem would be addressed by the current proposal for allowing directory  mounting inside a project. The other part of the problem is that he would like to only include some of the Java files in a source folder in the build for his  project. He claims that this is possible with javac and with some other IDEs. One possibility would be to allow the user to mark certain files as being  hidden (similar to team-private flag). These files would no longer be visible to the builder and could be filtered out of views. To be considered in flexible project structure work. This will be handled by the java builder exclusion filters to be added as part of the flexible project structure work.  Each source folder will allow you to add filters that omit certain resources or patterns of resources from the compilation.  Moving to JDT Core. UI is being built at the moment, the support is in JDT/Core already. Closing
JDT	Fails to refactor code using " Move " from its context menu 1. Create " JUnit " java project as explained in the JD Users guide 2. Import junit37src.jar file 3. Expand JUnit- > junit.samples.money. 4. Select Money.java and from its context menu Select " Move " 5. A dialog pops up to select the Move destination 6. Select any of the other packages Eclipse fails to refactor the code and all the corrections needed are listed as tasks Eclipse drop: Version 2.0(pre-release), March 21, 2002 OS: IBM AIX 4.3.3 (Maintenance level package: 4.3.3.0.09) Hardware: PowerPC JRE: 1.3.1 IBM build ca1311-20011123a Desktop: AIX CDE v1.0.3  Motif: 2.1.0 class Money is package-visible so, after moving it is not visible the only thing that can be done here is issuing a warning (i do not want to change the class visibility, although it would be possible  too) why is this bug critical for you, Sridhar? *** This bug has been marked as a duplicate of 13741 ***
Platform	PRE_DELETE delta not sent when deleting a project Build 20020319  Deleting a project does not send a PRE_DELETE resource delta event any longer. Same when moving a project.  Note that JDT core heavily relies on this event. Workspace notification for projects was accidently removed during refactoring of resource move and delete. Will fix. Also ensure that it is added to the project.move cases.  Review all cases: - name change - case change - content area change < - not needed here since the resource is not changing in  the tree Fixed. Test cases written. Awaiting review before release. Released into HEAD. Available in builds > 2002-03-20.
JDT	Unindent selected element in outliner [editor] It would be nice if an element displayed by the outliner in " Show Source of  Selected Elements Only " mode is _visually_ unindented to the left border of the  view. not for 2.0 We won't fix that in the current stream.
JDT	Code assist does not work sometimes Sometimes code assist stops to work (note: I mean at positions where it normally works). If I then open the context menu and then do code assist it works. I don't have a reproducable case right now, but it happened several times suspect it is releated to the widget token mechanism.  disabled the widget token mechanism for build 20021512. Problem no longer exists. Code base changed in this respect.
Platform	Message entry for Decorators Pref. Page has multiple lines The explanation message for decorators preference page in the  message.properties file should be occupying only one line to make translation easier.  DecoratorsPreferencePage.explanation = \ Label decorations show extra information about an item on its label or  icon.\n\ Select which additional decorations should be displayed. Fixed in build > 20021112 Marking closed
JDT	External Locations for Output Files Would like a way to automatically copy .class files to a location OUTSIDE the  Eclipse directory tree, each time the files are compiled.  For example, I want my .class files to go to a WebLogic server directory (IN ADDITION to my Eclipse  project directory) so I can quickly run my servlet under control of the server. You can register a listener to resource changes, and react to changed class  files. You likely want to be listening for POST_AUTO_BUILD events. Closing, please reopen if you find a defect in JDT/Core when doing so.
Platform	Two menu bar items highlighted at the same time F1  1) Hover the mouse over the window item the menu bar so that it highlights (perhaps this requires the OS single click option to be on - I have it on). 2) Press Alt, notice that both File and Window are highlighted although File has focus. Tried this in IE and it does not show the problem. Able to repeoduce in Lotus notes on XP No fix required - OS behavior.  - Explanations - Appears on XP with single click option only (for the record: this can be set through Windows Explorer > Tools > General > Single-Click...).  Verified to be the native behavior of the widget. Notepad behaves the same way. IE behaves slightly differently but it is not any better - after clicking  on the menu (without moving the mouse), you can end up with the File menu selected, the Window menu not selected but opened nevertheless). For memo: IE does not behave the same way because it does not use a menu bar -  it uses a ToolbarWindow32 class for the ' menus ' .
JDT	NPE evaluating from anonymous inner type referencing enclosing type Breakpoint on line 34 In the details pane of the Variable view, inspect InnerAnon.this.description Thread [Evaluation thread] (Suspended (exception NullPointerException)) JDIFieldVariable.retrieveValue() line: 51  JDIFieldVariable(JDIVariable).getCurrentValue() line: 52 JDIFieldVariable(JDIVariable).getValue() line: 74  JDIObjectValue.getField(String, String) line: 138 EvaluationObject.getField(String, String) line: 44  PushFieldVariable.execute() line: 58 Interpreter.execute() line: 35  InstructionSequence.evaluate(IRuntimeContext) line: 43 ASTEvaluationEngine$1.run() line: 124  Thread.run() line: 536 [local variables unavailable] Fixed. The given snippet " InnerAnon.this.description " is invalid because it's being evaluated in the context of a static method. We weren't properly generating the source for static methods which enclose an anonymous inner class. This has been fixed, so the compiler is now returning the appropriate error message. Please verify. I'm still getting the NPE Fixed.  The new NPE was caused by a completely unrelated bug that was just introduced. We weren't appending " () " to the end of the inner type evaluation methods, which was generating an error. Please verify. Verified.
JDT	Exceptions when moving CU 1. Selected  org.eclipse.jdt.internal.ui.refactoring.actions.StructuredContentProvider.java 2. Move to org.eclipse.jdt.internal.ui.actions (Update References)   Log: Tue Oct 23 11:32:59 GMT+02:00 2001 4 org.eclipse.jdt.ui 1 Internal Error org.eclipse.jdt.internal.ui.JavaUIException: Status at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.doReorg (ReorgDestinationAction.java:154) at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.run (ReorgDestinationAction.java:93) at org.eclipse.jface.action.Action.runWithEvent(Action.java:451)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:658) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:433) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)  4 org.eclipse.jdt.ui 0 Status 2============= < children > =============   4 org.eclipse.jdt.core 966 Core exception: Core exception: Problems encountered while copying resources. org.eclipse.jdt.core.JavaModelException[966] :  org.eclipse.core.internal.resources.ResourceException: Problems encountered while copying resources.  at org.eclipse.core.internal.localstore.FileSystemResourceManager.copy (FileSystemResourceManager.java:58)  at org.eclipse.core.internal.resources.Resource.copy(Resource.java:324) at  org.eclipse.jdt.internal.core.refactoring.changes.CopyResourceChange.doPerform (CopyResourceChange.java:38)  at org.eclipse.jdt.internal.core.refactoring.changes.ResourceReorgChange.perform (ResourceReorgChange.java:57) at  org.eclipse.jdt.internal.core.refactoring.CompositeChange.createUndoList (CompositeChange.java:108)  at org.eclipse.jdt.internal.core.refactoring.CompositeChange.perform (CompositeChange.java:133)  at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.execute (PerformChangeOperation.java:146) at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at  org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange (PerformChangeOperation.java:143)  at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run (PerformChangeOperation.java:125)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java: 335)  at org.eclipse.jdt.internal.ui.reorg.ReorgAction.perform (ReorgAction.java:52)  at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.doReorg (ReorgDestinationAction.java:151)  at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.run (ReorgDestinationAction.java:93)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:451) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:658)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) 4 org.eclipse.jdt.core 966 Core exception: Problems  encountered while copying resources. org.eclipse.core.internal.resources.ResourceException: Problems encountered  while copying resources. at org.eclipse.core.internal.localstore.FileSystemResourceManager.copy (FileSystemResourceManager.java:58) at org.eclipse.core.internal.resources.Resource.copy(Resource.java:324)  at org.eclipse.jdt.internal.core.refactoring.changes.CopyResourceChange.doPerform (CopyResourceChange.java:38) at  org.eclipse.jdt.internal.core.refactoring.changes.ResourceReorgChange.perform (ResourceReorgChange.java:57)  at org.eclipse.jdt.internal.core.refactoring.CompositeChange.createUndoList (CompositeChange.java:108) at org.eclipse.jdt.internal.core.refactoring.CompositeChange.perform (CompositeChange.java:133) at  org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.execute (PerformChangeOperation.java:146)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78)  at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange (PerformChangeOperation.java:143) at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run (PerformChangeOperation.java:125) at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335)  at org.eclipse.jdt.internal.ui.reorg.ReorgAction.perform (ReorgAction.java:52)  at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.doReorg (ReorgDestinationAction.java:151)  at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.run (ReorgDestinationAction.java:93)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:451) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:658)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) 4 org.eclipse.core.resources 1 Problems  encountered while copying resources. 5============= < children > =============      4 org.eclipse.core.resources 274 Resource is out of sync with the file  system: /org.eclipse.jdt.ui/icons/full/clcl16/th_horizontal.gif. 5============= < /children > =============   2============= < /children > ============= Log: Tue Oct 23 16:34:31 GMT+02:00 2001 4 org.eclipse.vcm.core 4 Cannot close connection java.io.IOException: crc error at  org.eclipse.vcm.internal.core.ccvs.ssh.ServerPacket$PacketInputStream.close (ServerPacket.java:49)  at org.eclipse.vcm.internal.core.ccvs.ssh.Client$StandardInputStream.close (Client.java:111) at org.eclipse.vcm.internal.core.ccvs.ssh.SSHServerConnection.close (SSHServerConnection.java:42) at org.eclipse.vcm.internal.core.ccvs.client.Connection.close (Connection.java:75) at org.eclipse.vcm.internal.core.ccvs.client.Client.disconnect (Client.java:245) at org.eclipse.vcm.internal.core.ccvs.CVSAdapter.internalFetchRemoteTree (CVSAdapter.java:832) at org.eclipse.vcm.internal.core.ccvs.CVSAdapter.fetchRemoteTree (CVSAdapter.java:694) at org.eclipse.vcm.internal.core.Subscriber.refresh(Subscriber.java:600)  at org.eclipse.vcm.internal.core.Subscriber$3.run(Subscriber.java:563) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232) at org.eclipse.vcm.internal.core.Subscriber.run(Subscriber.java:627)  at org.eclipse.vcm.internal.core.SharingManager.run (SharingManager.java:771)  at org.eclipse.vcm.internal.core.Subscriber.refresh(Subscriber.java:557) at org.eclipse.vcm.internal.ui.sync.Repository.doServerDelta (Repository.java:207) at org.eclipse.vcm.internal.ui.sync.Repository$2.execute (Repository.java:252) at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at org.eclipse.vcm.internal.ui.sync.Repository.localServerDelta (Repository.java:256) at org.eclipse.vcm.internal.ui.sync.SyncCompareInput$3.run (SyncCompareInput.java:434) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1232) at org.eclipse.vcm.internal.ui.sync.SyncCompareInput.prepareInput (SyncCompareInput.java:440) at org.eclipse.compare.CompareEditorInput.run (CompareEditorInput.java:291) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) Log: Tue Oct 23 17:50:32 GMT+02:00 2001 4 org.eclipse.jdt.ui 1 Internal Error Java Model Exception: Java Model Status [StructuredSelectionProvider.java does  not exist.] at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException (JavaElement.java:442) at org.eclipse.jdt.internal.core.Openable.getUnderlyingResource (Openable.java(Compiled Code)) at  org.eclipse.jdt.internal.core.CompilationUnit.getCorrespondingResource (CompilationUnit.java(Compiled Code))  at org.eclipse.jdt.internal.core.Openable.openWhenClosed(Openable.java (Compiled Code))  at org.eclipse.jdt.internal.core.JavaElement.openHierarchy (JavaElement.java(Compiled Code))  at org.eclipse.jdt.internal.core.Java Element.getElementInfo (JavaElement.java(Compiled Code)) at org.eclipse.jdt.internal.core.SourceType.isInterface(SourceType.java (Compiled Code)) at  org.eclipse.jdt.internal.ui.viewsupport.JavaImageLabelProvider.computeBaseImageD escriptor(JavaImageLabelProvider.java(Compiled Code))  at org.eclipse.jdt.internal.ui.viewsupport.JavaImageLabelProvider.getLabelImage (JavaImageLabelProvider.java(Compiled Code)) at org.eclipse.jdt.ui.JavaElementLabelProvider.getImage (JavaElementLabelProvider.java(Compiled Code)) at  org.eclipse.jdt.internal.ui.search.JavaSearchResultLabelProvider.getImage (JavaSearchResultLabelProvider.java:74)  at org.eclipse.search.internal.ui.SearchResultLabelProvider.getImage (SearchResultLabelProvider.java:42)  at org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java (Compiled Code))  at org.eclipse.jface.viewers.StructuredViewer.updateItem (StructuredViewer.java(Compiled Code))  at org.eclipse.jface.viewers.TableViewer.add(TableViewer.java:99) at org.eclipse.jface.viewers.TableViewer.add(TableViewer.java:117)  at org.eclipse.jface.viewers.TableViewer.insert(TableViewer.java:403) at org.eclipse.search.internal.ui.SearchResultViewer.handleAddMatch (SearchResultViewer.java:451) at org.eclipse.search.internal.ui.SearchManager.handleAddMatch (SearchManager.java:385) at  org.eclipse.search.internal.ui.SearchManager.handleSearchMarkerChanged (SearchManager.java:361)  at org.eclipse.search.internal.ui.SearchManager$7.visit (SearchManager.java(Compiled Code))  at org.eclipse.search.internal.ui.SearchManager$7.visit (SearchManager.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java(Compiled Code))  at org.eclipse.search.internal.ui.SearchManager.handleResourceChanged (SearchManager.java:353)  at org.eclipse.search.internal.ui.SearchManager$8.run (SearchManager.java:466)  at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:121) at org.eclipse.ui.internal.UISynchronizer.syncExec (UISynchronizer.java:18) at org.eclipse.swt.widgets.Display.syncExec(Display.java:1572)  at org.eclipse.search.internal.ui.SearchManager.resourceChanged (SearchManager.java:476)  at org.eclipse.core.internal.events.NotificationManager$1.run (NotificationManager.java(Compiled Code))  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java(Compiled Code))  at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code)) at org.eclipse.core.internal.events.NotificationManager.notify (NotificationManager.java(Compiled Code)) at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java(Compiled Code)) at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java(Compiled Code)) at org.eclipse.core.internal.resources.Workspace.broadcastChanges (Workspace.java(Compiled Code)) at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java(Compiled Code)) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1237) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at  org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange (PerformChangeOperation.java:143)  at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run (PerformChangeOperation.java:125)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335) at org.eclipse.jdt.internal.ui.reorg.ReorgAction.perform (ReorgAction.java:52) at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.doReorg (ReorgDestinationAction.java:151) at org.eclipse.jdt.internal.ui.reorg.MoveAction.doReorg (MoveAction.java:162) at org.eclipse.jdt.internal.ui.reorg.ReorgDestinationAction.run (ReorgDestinationAction.java:93) at org.eclipse.jface.action.Action.runWithEvent(Action.java:451)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:658) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:433) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)  4 org.eclipse.jdt.core 969 StructuredSelectionProvider.java does not exist. cannot reproduce need simple test case
Platform	' rebuild all ' just saves all editor without a warning (1GC2UI7) AK (4/12/01 5:56:34 PM)  1. modify a java file, don't save  2. workbench/rebuild all 3. the file is saved without any interaction with the user.   NOTES: EG (4/21/2001 5:45:46 PM)  this is a good default behaviour. I always want to build my latest code. Workbench could provide a preference for this, but this is not critical.  Moving to ITPUI CM (10/3/01 11:24:13 PM)  See also: 1GDVNT4: ITPDUI:WIN2000 - Rebuild All does not prompt for saving PRODUCT VERSION:  smoke 106 Obsolete defect resport.
Platform	New Stream menu item is incorrectly enabled (1GI7HU4) prefix        test name          181178 reference      abstract      New stream menu item is incorrectly enabled duplicate       state         open                        priority severity      4                           target                             age           10                          due product                         hasApar                             compName      wsa.web.oti                 answer release                                   symptom       io                   envName                                   phaseFound    dt level                                     phaseInject                         addDate       2001/07/30 10:16:16         assignDate    2001/07/30 10:16:16 lastUpdate    2001/07/30 10:16:16         responseDate                       endDate ownerLogin    decandio                    originLogin   jheidebr             ownerName     George DeCandio             originName " Heidebrecht, Josh ( ownerArea     9ZVA                        originArea    123 apar                                      pmr                           test tracks: none.  verify: none. history:     addDate              action          userLogin (userName) -------------------- --------------- ----------------------------------     2001/07/30 10:16:16  open            jheidebr ( " Heidebrecht, Josh (J.) " )  duplicate defects: none. duplicate features: none.  sizing: none. notes: < Note by jheidebr ( " Heidebrecht, Josh (J.) " ), 2001/07/30 10:16:16, seq: 1 rel: 0  action: open > In the team perspective the popup menu for the repositories editor incorrectly enables menuitems. When no repositories exist the new stream menu-item is enabled. Since, a user cannot create a new stream without a repository this menu item should not be enabled until a stream exists.     NOTES: JEM (9/19/2001 11:48:03 AM)  This can be fixed only by making the action be a VCM event listener. PRODUCT VERSION:  R09, Win2000 Obsolete, this bug does not exist in the new 2.0 team codebase. Closing.
Platform	The tab of editors is huge (1GE8JG0) Created a java project and added an external jar.  Opened the file .classpath (the emacs editor was opened) Closed it.  Opened with " Default Text Editor " The icon in the tab is too big. The tab is about 2 cm high. NOTES:  KH (5/28/2001 12:08:56 PM) This does not look good. PRODUCT VERSION:  Build jre-111 - RedHat 6.2 - KDE. Could not be reproduce using 2.0 code stream (2001-12-11 build). I think  Eduardo fixed this as part of another fix.
Platform	Overaggressive focus grabbing 1. Run the attached test case. 2. Drop down the Test menu and execute Run Test. 3. Press Ok on the prompt and give focus to a window OUTSIDE of Eclipse. 4. Processing will continue until " DONE " is written in the window.  At this point, the test case window has focus.  This behavior is different than on Windows (i.e., the focus will remain on the window you selected in Step 3)  and is causing problems with Eclipse on Linux. See Eclipse UI bug   http://dev.eclipse.org/bugs/show_bug.cgi?id=2891 for more information. What is the status of this? Fixed > 0516.  Decorations.bringToTop() is now more cautious about taking  focus, based upon the current focus widget.  Checked by SSQ. *** Bug 23823 has been marked as a duplicate of this bug. ***
JDT	[java launching] Launch config: show cmd line before launch The launch config wizard should have a page/tab that displays the exact command line that is going to be executed.  This would improve the users experience by showing them exactly what we are going to launch for them.  If it was a page (should be the last one), users could skip over it by hitting " Finish " , or investigate it by clicking next. Another good idea - but currently deferred. *** Bug 80787 has been marked as a duplicate of this bug. *** No plans to implement. We do show the command line after launching via Properties...
Platform	[2.0.2 tp1] One-click update updates uninstalled software Step F4 of the Test Scenario for optional features. Observed: Feature Root 1.0.1 and both optional children features are enabled. Even worse, XYZ Feature is now labeled 1.0.1, not 1.0.0. If you toggle ' Show Disabled Features ' , you see the following: 1. a disable Root 1.0.0 feature with all its children labeled 1.0.1 ??? 2. a disabled Bogus Feature 1.0.0 (standalone) 3. a disabled standalone (XYZ & Bogus Feature 1.0.0) with children labeled 1.0.1??? *** This bug has been marked as a duplicate of 24533 ***
Platform	HttpClient should ignore leading CRLFs when receving responses Build 20011025  The HTTP/1.1 spec (RFC2616) states that clients should ignore initial blank lines when retrieving a response from a request -- such blanks are commonly  caused by HTTP/1.0 servers / proxies. Deferring until post 2.0
JDT	JM - ' Cycle detected ' should not be a marker attribute (1G8VTSA) The new markers of the java model define an attribute ' cycle_detected ' which every marker in the plugin will have  (it used to be defined per instance only). Instead we should use a common attribute with the compiler (e.g. problemID). When a cycle is detected, we would  use a special value for this attribute. NOTES: Time permitting Cycle detection got disabled when markers for these became transient. Changing the implementation so as to couple these marker detection to the other classpath ones. Fixed.
JDT	Performance problem under Sun's JDK1.3 (1GGNI8M) Test case: Start a self-hosting workbench that was saved with 2 windows opened:  - Java perspective - Hierarchy perspective (opened on JavaElement)   Running under the debugger with: - Sun's JDK1.3 (build 1.3.0-H): 27min 17s  - Sun's JDK1.2.2 (build JDK-1.2.2_005): 3min 13s  - IBM's JDK1.3 (build cn130-20010502): 1min 59s  - J9 (build 20010510): 3min 21s Running with no debugger:  - Sun's JDK1.3 (build 1.3.0-H): 1min 17s  - Sun's JDK1.2.2 (build JDK-1.2.2_005): 1min 21s  - IBM's JDK1.3 (build cn130-20010502): 1min 22s  - J9 (build 20010510): 1min 23s Runing inside VAJ (INTERNAL-DEVELOPMENT - 2.0 (NC) 28/11/2000 [JDK1.2] IV3.5: 1min 38s  NOTES: JBL (7/10/2001 4:07:48 PM)  There seems to be a bad performance problem with Sun's JDK1.3 (27minutes compared to 2minutes with IBM's JDK1.3).  DS (7/10/01 4:53:22 PM) I am not seeing your kind of times for SUN JDK1.3  I have profiled (using OptimizeIt) a self hosting session to bringing up a workbench in debug mode and that only took ~20 minutes.  I did not have exactly the workbench you described but...  JBL (7/11/2001 10:55:23 AM) Here are the projects I have loaded in my development workbench:   Eclipse Core Launcher (binary: startup.jar) org.apache.xerces (binary)  org.eclipse.ant.core (binary) org.eclipse.ant.ui (binary)  org.eclipse.compare (binary) org.eclipse.core.boot (binary)  org.eclipse.core.resources (binary) org.eclipse.core.runtime (binary)  org.eclipse.core.target (binary) org.eclipse.debug.core (binary)  org.eclipse.debug.ui (binary) org.eclipse.help (binary)  org.eclipse.help.ui (binary) org.eclipse.jdt.core (source)  org.eclipse.jdt.debug (source) org.eclipse.jdt.doc.isv (binary)  org.eclipse.jdt.doc.user (binary) org.eclipse.jdt.launching (source)  org.eclipse.jdt.launching.j9 (source) org.eclipse.jdt.ui (source)  org.eclipse.jdt.ui.vcm (source) org.eclipse.pde (binary)  org.eclipse.pde.core (binary) org.eclipse.pde.doc.user (binary)  org.eclipse.pde.runtime (binary) org.eclipse.platform.doc.isv (binary)  org.eclipse.platform.doc.user (binary) org.eclipse.scripting (binary)  org.eclipse.search (binary) org.eclipse.swt (binary)  org.eclipse.ui (binary) org.eclipse.update (binary)  org.eclipse.vcm.core (binary) org.eclipse.vcm.core.cvs (binary)  org.eclipse.vcm.core.cvs.ssh (binary) org.eclipse.vcm.ui (binary)  org.eclipse.vcm.ui.cvs (binary) org.eclipse.webdav (binary)   Example of the layout of a source project: org.eclipse.jdt.core  - External jars: /org.eclipse.core.resources/resources.jar      /org.apache.xerces/xerces.jar /org.eclipse.core.runtime/runtime.jar  - Variables: path= " JRE_LIB " rootpath= " JRE_SRCROOT " sourcepath= " JRE_SRC  - Source folders: Eclipse Java Batch Compiler      Eclipse Java Code Assist Eclipse Java Compiler      Eclipse Java Core Search Eclipse Java Evaluation     Eclipse Java Model Eclipse Java Formatter     Example of the layout of a binary project: org.eclipse.ui  - Internal jars: workbench.jar  - External jars: /org.apache.xerces/xerces.jar      /org.eclipse.core.runtime/runtime.jar /org.eclipse.core.resources/resources.jar /org.eclipse.help/help.jar   /org.eclipse.swt/swt.jar - Variables:   path= " JRE_LIB " rootpath= " JRE_SRCROOT " sourcepath= " JRE_SRC " They all use the same JRE_LIB which is Sun's JDK1.3 rt.jar. The content of the target workbench is exactly the same (made a copy of the development one).   I have the above 4 JREs define in my Preferences- > Java- > Installed JREs Before each test, I set a custom JRE in the Eclipse Core Launcher project's Properties.   I launch the target workbench using UIMain in startup.jar with the following program arguments: -dev bin -data d:\eclipse\target\plugins   I start my stopwatch when I press the ' running man ' or the ' debug ' button, and I stop it when the hierarchy perspective  on JavaElement is up. DS (7/18/01 4:16:53 PM)  Using JBL's workspace, after ~10 mins I consistently lock up:   1GH2UOQ: ITPCORE:ALL - Deadlock starting workspace in debug mode on Sun 1.3 But we are very busy for those first 10 minutes...can investigate that part at least PRODUCT VERSION:  R0.9 (for VM versions see below) Running under the debugger with: Sun's JDK1.3 (build 1.3.1_01) the times are in  line with the other VMs. Not currently investigating since performance problem does not occurr with  newest 1.3 VM. Deferred Re-open to mark as invalid Not a debugger issue closed
JDT	NPE setting Java editor to show source of selected element I have an open JavaEditor Toggling the " Show Source of Selected Element " action in the toolbar results in:  4 org.eclipse.ui 0 java.lang.NullPointerException java.lang.NullPointerException  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.handlePreferenceSto reChanged(CompilationUnitEditor.java:979) at  org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChan ge(AbstractTextEditor.java:242)  at org.eclipse.jface.preference.PreferenceStore.firePropertyChangeEvent (PreferenceStore.java:107)  at org.eclipse.jface.preference.PreferenceStore.setValue (PreferenceStore.java:493)  at org.eclipse.jdt.internal.ui.javaeditor.TogglePresentationAction.run (TogglePresentationAction.java:71)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:453) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:712) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) Build > 20011203.
JDT	Underline parameter without meaning? R2.0  1) Turn on the preference to fill argument names on method completion 2) Start writing a method name that have different signatures 3) Choose one 4) The argument name appears and has a underlined in green 5) Select the argument name and paste some other name on it 6) It remains underlined and only seems to get rid of that if you change the  original name used for the paste (although, changing the original does not change the new argument).  What is the meaning of the underline? Why would it stay around after a paste (looks like a bug)?. This is the template mechanism. The green underline indicates that you can tab  through the paramter list. So if the first one is correct simply press tab to jump to the second one.
Platform	Still sucking resources (image handles) on Win98 (1GE40E9) Can't realistically selfhost on Win98.  With just two workbenches (one each for selfhosting) I am down to 15% resources after launching second Eclipse.  This is with Notes etc closed. With VCM perspective opened and RPRS I am down to 2%.  Closing the VCM perspective you get back to 14%. Opening the Java one you run out and die (both eclipses).  NOTES: NE (6/8/01 5:19:06 PM)  See 1GE8K2O: ITPUI:WIN98 - GDI usage stats for opening perspectives PRODUCT VERSION:  109 See also bug 7465 Duplicate *** Bug 24991 has been marked as a duplicate of this bug. ***
Platform	[PropertiesView] Copy enabled when category selected in property sheet F2  1) Open the property sheet 2) Select a file in the navigator 3) Select the name property and perform copy from the context menu 4) Paste to a text editor to see that you copied the property correctly 5) Select the Info category and perform copy from the context menu 6) Paste to a text editor to see that nothing was copied  Not sure whether copy should be disabled here or should be made to work. Probably the latter it might be useful to copy a category name. I'd expect Copy on a category to copy text for the whole category, including  its property values. agreed. additional comments: copy/paste from category name actually does paste the  most recent clipboard (for instance, the ' name ' property in the example below). i'm  running 2.0.1 release. *** Bug 26046 has been marked as a duplicate of this bug. *** Cleaning up defect lists by setting ones without recent traffic to ' REMIND ' .
Platform	Ant and Javadoc from the newsgroup:   Hi, this is probably different but related somehow.  Jake Thompson wrote: > Ok, I solved this, > because eclipes likes to find the JRE automatically, it was finding the > wrong one, therefore when it went to look for javadoc, it could not find > that.  Therefore, I just made sure that javadoc was in my path (I usually do > not have jdk\bin there) and it works fine.  I tried to execute a javadoc target and got an IOException I think. I'm  using a german XPHome, M5 with j2sdk1.4 and tools.jar for ant to have the standard compiler together with ant.  After setting -verbose to ant it was telling javadoc.exe could not be found at " C:\Programme\Java\j2re1.4.0\..\bin " . j2re1.4.0 is always  installed to that location and I used to have the rest in C:\java. After reinstalling everything to " C:\Programme\Java " the javadoc target  works. But this seems to be more a workaround to me. Markus Seems to be working as expected. Closing.
Platform	Auto-load plugin at startup We require the option to force a plugin to load automatically when the  workbench is started. A sample use case is as follows: Our application needs to start and begin displaying data specific to an event  initiated outside the Workbench. This requires starting the workbench, auto- loading our plug-in, bringing its perspective up, and displaying data all  without any user action or intervention. *** Bug 7131 has been marked as a duplicate of this bug. *** I am not sure if the 2 bugs have anything in common. 7679 is about starting a plugin automagically ! 7131 is about creating a no ui version of eclipse. that has exetensions like  what happens when the user right click dbl click etc ... This should be fixed. In addition to this base level of support, there also  needs to be a preference page to view and configure them. This could arguably be implemented entirely in the UI.  Since the Workbench owns  the main event loop, it might make sense for them to control when " daemon " activation occurs.  That would also allow UI-based progress, cancellation, and error feedback for daemon initialization.  This would also mean a single  extension point for daemon implementors, on which they would provide a runnable, an icon, and a human-readable name. There could conceivably be headless clients that need this as well (e.g. a  background indexer). CodePro Studio includes a very powerful task scheduler that can schedule a wide  variety of tasks (e.g., Ant builds, any export operation, arbitrary Eclipse actions, repository synchronize operations, etc.) at startup, shutdown, at  specific times or in response to specific events (like launching an app). The scheduler could be easily configured to perform all of the activities described  in this bug description. http://www.instantiations.com/codepro/ws/docs/features/scheduler/ To clarify: does the task scheduler runs headless? That is, does it currently have a dependency on org.eclipse.ui (for running the tasks, as opposed to entering them)? They must be activated after the workbench so it makes sense to do this in UI  code. Just a quick thought, could introduce an extension point which will always be  loaded when starting up the workbench? > To clarify: does the task scheduler runs headless?  Currently, no (although we might be able to refactor it to run headless). Since many of our existing tasks require the UI to be in place, we run the startup  tasks as soon as the UI has appeared and finished initializing itself. Any progress on this? Our release will most likely use M6, so if this could  make in M6, that would be great!!! M6 is targetted for tomorrow though...  Any updates would be appreciated! Jindong. Support has been added in 20020515. Need to document it. We will actually be building on Tuesday May 21 for M6. Nick, Eduardo,  I'm looking for the build notes on this one, any hints?  I hope it was added as  an extension point... Sorry, did not have the time to write the doc about it yet. Here is the info  you need: * The plugin.xml has to include < extension point= " org.eclipse.ui.startup " / > * The plugin class must implement the interface IStartup; * The method earlyStartup() will be called from another thread. * Your plugin will be included in Window- > Preferences- > Workbench- > Startup Please close this and file a separate PR for the doc. Opened bug 18486 about the doc. Closing this one.
JDT	Can't rename local variable Selected the local variable parameters and tried to rename it using Refactor- > Rename. Always got a message box saying that the operation isn't available.  Selected only the name and the whole declaration. Neither worked. public void checkInput(RefactoringStatus status, String methodName) {   TypeBinding[] parameters= getArgumentTypes();   ReferenceBinding type= getEnclosingMethod ().binding.declaringClass;   status.merge(Checks.checkMethodInType(type, methodName, parameters));   status.merge(Checks.checkMethodInHierarchy(type, methodName, parameters));  } ' rename local ' is invoked by selecting ' rename local variable ' from the Refactor menu, not ' Rename ' current limitation
JDT	ArrayIndexOutOfBounds in JavaBuilder With the latest jdt.core (as of 11:00 am MST 20020212), I got the following dumped to my host eclipse console: org.eclipse.core.runtime.CoreException[2]: java.lang.ArrayIndexOutOfBoundsException: 32899072  at org.eclipse.jdt.internal.core.newbuilder.State.read(State.java(Compiled Code)) at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.readState(JavaBuilder.java:59) at org.eclipse.jdt.internal.core.JavaModelManager.readState(JavaModelManager.java:888) at org.eclipse.jdt.internal.core.JavaModelManager.getLastBuiltState(JavaModelManager.java:676) at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.getLastState(JavaBuilder.java:216) at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.findDeltas(JavaBuilder.java:198) at org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build(JavaBuilder.java:94)  at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java :358)  at org.eclipse.core.intern al.runtime.InternalPlatform.run(InternalPlatfo rm.java(Compiled Code)) at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))  at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager .java:116)  at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager .java:181)  at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager .java:191)  at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java :140)  at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatfo rm.java(Compiled Code))  at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code)) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager .java:154) at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java :216) at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace. java:701) at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1237 ) at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOp eration.java:78) at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(Abs tractTextEditor.java:1496) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performS aveOperation(CompilationUnitEditor.java:602) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(C ompilationUnitEditor.java:650) at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:785)  at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalCont ext.java:296)  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDi alog.java:335) at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(Edi torManager.java:643) at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:7 90) at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1 380) at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(Act ionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContri butionItem.java:352) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handle Event(ActionContributionItem.java:47) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled C ode)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled C ode)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled  Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compile d Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:771)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoa der.java:781)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:323) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) Fixed since you got the early patch. Closing *** Bug 9726 has been marked as a duplicate of this bug. ***
Platform	" Share " with CVS wizard: repo connection list disabled if empty When sharing a project, its great that we now allow the user to either create a  new repository connection or pick from the list of existing connections. However, if the list of existing repos is empty, that option should be  disabled.  We try to be clever right now and Next takes you to the creation page, but this is a bit confusing. Fixed.
Platform	New dialog header text not visible (1GETDSA) Open the File- > New- > Other dialog. As you select items in the right  hand column, the text at the top of the dialog should change. On Solaris, no text is visible, but the icon in the header is visible. If you select CVS - Stream and hit Next, the following page displays  the error message " Enter the name of the new stream " if the text  widget is empty. Enter any character and the error message disappears but neither the text " Stream " or " Create a new stream " are visible.   NOTES: KC (6/13/2001 4:17:04 PM)  The problem is probably that the text colour is white and the dialog background area for the text is also white. On Solaris, the default  system colour (e.g., text in the menus, window titles, etc.) is white. PRODUCT VERSION:  118 (Linux version ported to Solaris) Verified fixed in build 20020109 on Solaris. This was likely due to us hard  coding the colours which we no longer do.
Platform	[Preferences] Should use SafeRunnable for preference store callbacks Build 20020409  When sending preference store callbacks, we should wrap them in a SafeRunnable to make the system resilient to callback handler failure. Still an issue in 20020803 SafeRunnable added for both FontRegistry and PreferenceStore. Marking closed
Platform	Fast switching between workspaces Ability to FAST switch between workspaces without shutting down WB. Will investigate post 2.0.   *** This bug has been marked as a duplicate of 5509 ***
Platform	replace string becomes the find string open find dialog. enter some string to find (options: incremental+wrap) and some string in replace field press find. press replace. the string in the find field becomes the string that is in the replace field.  build: integration 20020517 *** This bug has been marked as a duplicate of 16014 ***
JDT	[render] no icon shown for transient, volatile keywords For a .java file that has fields which are volatile or transient, there is no  visual indication in the Outline view of these keywords.  Here is the EC posting:  Subject: Field icons on java editor From: padilha@lcmi.ufsc.br (Ricardo S. Padilha) Newsgroups: eclipse.tools Organization: EclipseCorner Date: Nov 30 2001 21:35:41 Hi,  The Eclipse java editor is great but I miss something useful that VAJ had: different icons overlays for field modifiers.  More specifically: volatile and transient fields have special icons, to help identify them (a little ' T ' and a little ' V ' ). We are reaching the limit of number of information we can present on a single  icon. *** Bug 169097 has been marked as a duplicate of this bug. *** *** Bug 56073 has been marked as a duplicate of this bug. *** Reopening for reconsideration.  Volatile is mutually exclusive with final, so it could go top-right. Transient is only for fields, which cannot have any of the lower-right adornments, so it can go lower-right.  See JavaElementImageDecorator. Martin, could you request artwork for the overlays ( " V " and " T " )? > See JavaElementImageDecorator  I mean JavaElementImageProvider and JavaElementImageDescriptor. Need to do this for M6, since the latter is an API class. Visual design request sent. (request number 2919) New API in org.eclipse.jdt.ui.JavaElementImageDescriptor:   /** * Flag to render the ' volatile ' adornment.   * @since 3.3 */  public final static int VOLATILE=  0x800; /** * Flag to render the ' transient ' adornment.   * @since 3.3 */  public final static int TRANSIENT=  0x1000; API request for 3.3 M6 sent in separate mail to pmc +1 patches released > 20070313
JDT	Copy of a read only file is read only too When copying a file that is read only, the newly created file is marked as read only too. I would have  expected it to be writeable. In addition, if a java file is copied through the Java Package  Browser, the package information cannot be updated, resulting in an incorrect java file. Behaviour in Win98 and Linux is that the destination file is also read-only.  Is there a particular use case or filesystem that you are using where you do not see the read-only attribute copied? This seems to be the desired behaviour.  Copying directly in Windows 2000/NT has  the same effect.  See also: bug 6058 - copying IFolder loses read-only flag setting  which reports the opposite behaviour as a defect. Moving to JDT/UI for comments on second problem. (moving a Java file causes the  package information to be incorrect) I agree with Birgit, at least when performing a copy in the JDT UI.  One of the  advantage of using the copy (rename and move also) features in the Java perspective is the refactoring that takes place to insure that the correct  package, class name, and constructors are maintained.  Our VCM is clearcase and we develop right on top of the ' repository ' .  This means that the only way to  make a file writable is to check it out.  It is not desirable to be forced to checkout a file simply to copy it.  If the copy is performed without the  checkout.  The new file will not compile. I could see an argument for maintaining the read-only status for files copied  in the Resource perspective.  However, the semantics of copy in the Java perspective are very different.  A Java perspective copy implicitly changes a  file and therefore needs to remove the read-only attribute. The behavior in Win NT seems to be dependent on the file system.  When using  explorer to copy a file in an NTFS partition, the read-only attribute. However, when you copy a file in a clearcase view (they have their own file  system.) The new file does not have the read-only attribute. *** This bug has been marked as a duplicate of 4210 ***
JDT	F3 opening more than one class build 20020502  1) Get JDT Core from HEAD. 2) Add antadapter as a source folder 3) Create a package under antadapter called org.eclipse.jdt.core 4) Move the JDTCompilerAdapter class from default to the new package 5) Add ant.jar to the classpath 6) There are error indicating the class Util cannot be resolved 7) Highlight a Util reference and press F3 8) 8 Util classes open in the editor view Fixed in build > I20020508
Platform	[Bookmarks] Bookmark " go to " is misleading R2.1M1  The bookmark " go to " menu action actually seems to perform an " open " on the  target resource. This is quite painfull if targeting an html file, which by default opens in external viewer.  The menu action should clearly state " open " then, and likely also offer " open  in text editor " and these sort of variations.  IMO, " go to " should simply do what " show in navigator " currently does. fixed. behaves as per your suggestion, includes an ' open with ' menu item as  well. reopening. discussed with nick. will most likely revert this change. we feel  that one does ' go to ' and bookmark, not open it. I think my initial request was to be able to navigate from a bookmark back to  the resource in Eclipse. This is what " goto " is supposed to mean. Now I noticed  it was actually doing " open " instead, possibly using an external editor.  The behavior I would like is to navigate to the resource (goto), not open an external editor (since it becomes useless to do most synchronize operations).  Note also that I would expect the navigator to show me the bookmarked resource, so that I can easily do resource actions. This is thus somewhat related to bug  30002 maybe. In order to " go to " a bookmark it is necessary to open the bookmark's  resource. Renaming the action to " open " would imply that there is  some ' bookmark editor ' , which would be incorrect. This behavior is consistent  with the Tasks view. Also note that Bookmarks view has a ' Show in Navigator ' action.
Platform	[JFace Text] Exception in JFace related to StyledText (1GE8ZOY) This exception occured shortly after creating a new Java editor in Eclipse as a result of deleting a line of text by selecting it with Shift-End and hitting Delete. Then an Internal Error message box popped up. Only after the " Ok " button was pressed did the line get deleted from the screen.  Same error occured whenever any character was inserted or deleted after that. Log: Thu May 24 16:40:41 EDT 2001 4 org.eclipse.ui 0 Argument not valid java.lang.IllegalArgumentException: Argument not valid  at org.eclipse.swt.SWT.error(SWT.java:1795) at org.eclipse.jface.text.DocumentAdapter.getLineAtOffset(DocumentAdapter.java(Compiled Code))  at org.eclipse.jface.text.DocumentAdapter.getLineAtOffset(DocumentAdapter.java(Compiled Code)) at org.eclipse.swt.custom.StyledText.setStyleRange(StyledText.java(Compiled Code))  at org.eclipse.swt.custom.StyledText.setStyleRange(StyledText.java(Compiled Code)) at org.eclipse.jface.text.TextViewer.addPresentation(TextViewer.java(Compiled Code))  at org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java(Compiled Code)) at org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegionCollection(PresentationReconciler.java(Compiled Code))  at org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.textChanged(PresentationReconciler.java(Compiled Code)) at org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.textChanged(PresentationReconciler.java(Compiled Code))  at org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.textChanged(PresentationReconciler.java(Compiled Code)) at org.eclipse.jface.text.TextViewer.updateTextListeners(TextViewer.java(Compiled Code))  at org.eclipse.jface.text.TextViewer$DocumentListener.documentChanged(TextViewer.java(Compiled Code)) at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java(Compiled Code))  at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java(Compiled Code)) at org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java(Compiled Code))  at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java(Compiled Code)) at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java(Compiled Code))  at org.eclipse.swt.custom.StyledText.doDelete(StyledText.java:1469) at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java(Compiled Code))  at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java(Compiled Code)) at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java(Compiled Code))  at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:612) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:857)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:67) at org.eclipse.core.launcher.Main.run(Main.java:299)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:43) JB (24/05/2001 4:43:09 PM) NOTES: LK (5/24/01 6:23:46 PM)  For the Eclipse impaired, what do you mean by " creating a new Java editor " ?  Double   clicking on a *.java resource?  Also, is this error reproduceable? KR (5/24/01 6:42:57 PM)  This actually looks like a Eclipse java editor problem, not SWT StyledText. LK (5/25/01 10:53:41 AM)  As Knut suggest it appears that style ranges are being set for bogus lines.  setStyleRange(StyleRange range) sends getLineAtOffset for the range.start and rangeEnd (range.start + range.length), so it appears that the  input StyleRange for setStyleRange has bogus values.  Moving to ITPUI. KUM (5/30/01 8:39:36 PM)  Cannot reproduce on 114. PRODUCT VERSION: Build 108 Closing based on Kai's comments
JDT	Build Problems When trying to build my sources it says: Build Problems Errors during build.    java.lang.ArrayIndexOutOfBoundsException encountered while running org.eclipse.jdt.internal.core.builder.impl.JavaBuilder  The code compiles just fine with both, javac and jikes. Could you please provide a test case? Build number? We might need a source code in order to  reproduce the problem. At least we need the stack trace which should be in the .log file in the .metadata folder. Markus: where you really running a 1.0 Build ? Yes, it was R1.0. I downloaded the latest stable build in the meantime and it  works just fine with that one. Seems to be an old problem fixed by now. I'll put it to FIXED.  Just for completeness, the log file was (quite a stack trace!): Log: Thu Feb 07 13:18:38 CET 2002 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug- in: org.eclipse.core.resources. java.lang.ArrayIndexOutOfBoundsException at  org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariab les(CodeStream.java:120)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:247) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:245) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153)  at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode (IfStatement.java:136)  at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode (AbstractMethodDeclaration.java:167) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:613) at  org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode (QualifiedAllocationExpression.java:90)  at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode (FieldDeclaration.java:70)  at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode (ConstructorDeclaration.java:181) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:628) at  org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode (CompilationUnitDeclaration.java:129)  at org.eclipse.jdt.internal.compiler.Compiler.process(Comp iler.java:383)  at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202) at  org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile (AbstractImageBuilder.java:90)  at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build (BatchImageBuilder.java:84)  at org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat e(JavaDevelopmentContextImpl.java:146) at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild (JavaBuilder.java:148) at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build (JavaBuilder.java:51) at org.eclipse.core.internal.events.BuildManager$1.run (BuildManager.java:93) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758) at org.eclipse.core.runtime.Platform.run(Platform.java:393)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:114)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:73)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:41)  at org.eclipse.core.internal.events.BuildManager$2.run (BuildManager.java:140)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:154) at org.eclipse.core.internal.events.BuildManager.build (BuildManager.java:174) at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:663) at org.eclipse.core.internal.resources.Resource.refreshLocal (Resource.java:905) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle mentInfo(CompilationUnitDocumentProvider.java:244)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect (AbstractDocumentProvider.java:172)  at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput (AbstractTextEditor.java:855)  at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput (JavaEditor.java:151)  at org.eclipse.ui.texteditor.AbstractTextEditor.init (AbstractTextEditor.java:1300)  at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:379) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)  at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:374)  at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:426)  at org.eclipse.ui.internal.EditorManager.access$6 (EditorManager.java:406)  at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:517) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758) at org.eclipse.core.runtime.Platform.run(Platform.java:393)  at org.eclipse.ui.internal.EditorManager.restoreState (EditorManager.java:471)  at org.eclipse.ui.internal.WorkbenchPage.restoreState (WorkbenchPage.java:1169)  at org.eclipse.ui.internal.WorkbenchPage. < init > (WorkbenchPage.java:78)  at org.eclipse.ui.internal.WorkbenchWindow.restoreState (WorkbenchWindow.java:743)  at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:632) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:506)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState (Workbench.java:490) at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:547)  at org.eclipse.ui.internal.Workbench.init(Workbench.java:401) at org.eclipse.ui.internal.Workbench.run(Workbench.java:652)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) Log: Thu Feb 07 13:18:39 CET 2002 4 org.eclipse.ui 0 CompilationUnitDocumentProvider.createElementInfo Log: Thu Feb 07 13:18:39 CET 2002 2 org.eclipse.core.resources 566 Errors during build. 1============= < children > =============  2 org.eclipse.jdt.core 566 java.lang.ArrayIndexOutOfBoundsException encountered while running  org.eclipse.jdt.internal.core.builder.impl.JavaBuilder. java.lang.ArrayIndexOutOfBoundsException  at org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariab les(CodeStream.java:120) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:247)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:245)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153) at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode (IfStatement.java:136) at  org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode (AbstractMethodDeclaration.java:167)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:613)  at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode (QualifiedAllocationExpression.java:90) at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode (FieldDeclaration.java:70) at  org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode (ConstructorDeclaration.java:181)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:628)  at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode (CompilationUnitDeclaration.java:129) at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:383)  at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202) at  org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile (AbstractImageBuilder.java:90)  at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build (BatchImageBuilder.java:84)  at org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat e(JavaDevelopmentContextImpl.java:146) at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild (JavaBuilder.java:148) at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build (JavaBuilder.java:51) at org.eclipse.core.internal.events.BuildManager$1.run (BuildManager.java:93) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758) at org.eclipse.core.runtime.Platform.run(Platform.java:393)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:114)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:73)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:41)  at org.eclipse.core.internal.events.BuildManager$2.run (BuildManager.java:140)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:154) at org.eclipse.core.internal.events.BuildManager.build (BuildManager.java:174) at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:663) at org.eclipse.core.internal.resources.Resource.refreshLocal (Resource.java:905) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle mentInfo(CompilationUnitDocumentProvider.java:244)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect (AbstractDocumentProvider.java:172)  at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput (AbstractTextEditor.java:855)  at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput (JavaEditor.java:151) at org.eclipse.ui.texteditor.AbstractTextEditor.init (AbstractTextEditor.java:1300) at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:379)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98) at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:374) at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:426) at org.eclipse.ui.internal.EditorManager.access$6 (EditorManager.java:406) at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:517)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.ui.internal.EditorManager.restoreState (EditorManager.java:471) at org.eclipse.ui.internal.WorkbenchPage.restoreState (WorkbenchPage.java:1169) at org.eclipse.ui.internal.WorkbenchPage. < init > (WorkbenchPage.java:78)  at org.eclipse.ui.internal.WorkbenchWindow.restoreState (WorkbenchWindow.java:743)  at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:632) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:506)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState (Workbench.java:490) at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:547)  at org.eclipse.ui.internal.Workbench.init(Workbench.java:401) at org.eclipse.ui.internal.Workbench.run(Workbench.java:652)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) 1============= < /children > ============= Log: Thu Feb 07 13:19:03 CET 2002 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug- in: org.eclipse.core.resources. java.lang.ArrayIndexOutOfBoundsException  at org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariab les(CodeStream.java:120) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:247)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:245)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153) at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode (IfStatement.java:136) at  org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode (AbstractMethodDeclaration.java:167)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:613)  at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode (QualifiedAllocationExpression.java:90) at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode (FieldDeclaration.java:70) at  org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode (ConstructorDeclaration.java:181)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585)  at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:628)  at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode (CompilationUnitDeclaration.java:129) at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:383)  at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202) at  org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile (AbstractImageBuilder.java:90)  at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build (BatchImageBuilder.java:84)  at org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat e(JavaDevelopmentContextImpl.java:146) at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild (JavaBuilder.java:148) at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build (JavaBuilder.java:51) at org.eclipse.core.internal.events.BuildManager$1.run (BuildManager.java:93) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758) at org.eclipse.core.runtime.Platform.run(Platform.java:393)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:114)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:73)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:41)  at org.eclipse.core.internal.events.BuildManager$2.run (BuildManager.java:140)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:154) at org.eclipse.core.internal.events.BuildManager.build (BuildManager.java:174) at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:663) at org.eclipse.core.internal.resources.Resource.refreshLocal (Resource.java:905) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle mentInfo(CompilationUnitDocumentProvider.java:244)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect (AbstractDocumentProvider.java:172)  at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput (AbstractTextEditor.java:855)  at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput (JavaEditor.java:151)  at org.eclipse.ui.texteditor.AbstractTextEditor.init (AbstractTextEditor.java:1300)  at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:379) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)  at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:374)  at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:426)  at org.eclipse.ui.internal.EditorManager.access$6 (EditorManager.java:406)  at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:517) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758) at org.eclipse.core.runtime.Platform.run(Platform.java:393)  at org.eclipse.ui.internal.EditorManager.restoreState (EditorManager.java:471)  at org.eclipse.ui.internal.WorkbenchPage.restoreState (WorkbenchPage.java:1169)  at org.eclipse.ui.internal.WorkbenchPage. < init > (WorkbenchPage.java:78)  at org.eclipse.ui.internal.WorkbenchWindow.restoreState (WorkbenchWindow.java:743)  at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:632) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:506)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState (Workbench.java:490) at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:547)  at org.eclipse.ui.internal.Workbench.init(Workbench.java:401) at org.eclipse.ui.internal.Workbench.run(Workbench.java:652)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) Log: Thu Feb 07 13:19:03 CET 2002 4 org.eclipse.ui 0 CompilationUnitDocumentProvider.createElementInfo Log: Thu Feb 07 13:19:03 CET 2002 2 org.eclipse.core.resources 566 Errors during build. 1============= < children > =============  2 org.eclipse.jdt.core 566 java.lang.Arr ayIndexOutOfBoundsException  encountered while running org.eclipse.jdt.internal.core.builder.impl.JavaBuilder. java.lang.ArrayIndexOutOfBoundsException at  org.eclipse.jdt.internal.compiler.codegen.CodeStream.addDefinitelyAssignedVariab les(CodeStream.java:120)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:247) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153)  at org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedCondit ionalAnd(AND_AND_Expression.java:245) at  org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.generateOptimizedBoolea n(AND_AND_Expression.java:153)  at org.eclipse.jdt.internal.compiler.ast.IfStatement.generateCode (IfStatement.java:136)  at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode (AbstractMethodDeclaration.java:167) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:613) at  org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.generateCode (QualifiedAllocationExpression.java:90)  at org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.generateCode (FieldDeclaration.java:70)  at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.generateCode (ConstructorDeclaration.java:181) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:585) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode (TypeDeclaration.java:628) at  org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode (CompilationUnitDeclaration.java:129)  at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:383) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202)  at org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile (AbstractImageBuilder.java:90) at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build (BatchImageBuilder.java:84) at  org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat e(JavaDevelopmentContextImpl.java:146)  at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild (JavaBuilder.java:148)  at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build (JavaBuilder.java:51)  at org.eclipse.core.internal.events.BuildManager$1.run (BuildManager.java:93)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:114) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:73) at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:41) at org.eclipse.core.internal.events.BuildManager$2.run (BuildManager.java:140) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758) at org.eclipse.core.runtime.Platform.run(Platform.java:393)  at org.eclipse.core.internal.events.BuildManager.basicBuild (BuildManager.java:154)  at org.eclipse.core.internal.events.BuildManager.build (BuildManager.java:174)  at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:663)  at org.eclipse.core.internal.resources.Resource.refreshLocal (Resource.java:905)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle mentInfo(CompilationUnitDocumentProvider.java:244) at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect (AbstractDocumentProvider.java:172) at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput (AbstractTextEditor.java:855) at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput (JavaEditor.java:151) at org.eclipse.ui.texteditor.AbstractTextEditor.init (AbstractTextEditor.java:1300) at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:379)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98) at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:374) at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:426) at org.eclipse.ui.internal.EditorManager.access$6 (EditorManager.java:406) at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:517)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.ui.internal.EditorManager.restoreState (EditorManager.java:471) at org.eclipse.ui.internal.WorkbenchPage.restoreState (WorkbenchPage.java:1169) at org.eclipse.ui.internal.WorkbenchPage. < init > (WorkbenchPage.java:78)  at org.eclipse.ui.internal.WorkbenchWindow.restoreState (WorkbenchWindow.java:743)  at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:632) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:506)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:758)  at org.eclipse.core.runtime.Platform.run(Platform.java:393) at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState (Workbench.java:490) at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:547)  at org.eclipse.ui.internal.Workbench.init(Workbench.java:401) at org.eclipse.ui.internal.Workbench.run(Workbench.java:652)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) 1============= < /children > =============
Platform	[Editor Mgmt] Editor tabs change scroll position when editor unzoomed (1GH2NLM) - open several editors, until the editor tabs scroll to make more space - double-click on the last one to expand it - double-click again to restore it - the tabs are now scrolled all the way to the left - the active tab is not shown  Zoo ming should preserve the scroll position of the editor tabs.  NOTES: PRODUCT VERSION: 0.9 Reproduced in 20020125. Even if it doesn't preserve the exact scroll position, the tab for the active  editor should be shown. Verify this is still a problem with the latest Eclipse UI code. If so,  investigate source of problem and potential solution for it. Build: 20020205  The problem still exists. Also, I've noticed a related problem. When changing  perspectives sometimes the active editor's tab becomes not visible. For  example, I switched from a debu perpsective (in which the editor area was wide enough to show all the tabs without scrolling) to a java perspective with a  narrowed editor area (which required scrolling to show all the tabs), while viewing the last editor. The active tab became hidden, and I had to scroll to  see it again. Reassigning to SWT for feedback.  Would the SWT team be willing to commit to having the active editor tab of a tab folder visible at all times? If so, this would solve this bug. If not, do  you have any API we could use to do this from the UI side, or any other suggestions? setSelection(getSelectionIndex()) would seem to do the trick, since it calls  ensureVisible(). Is this the recommended way to go?  It's not spec ' ed in API anywhere. I'd prefer if CTabFolder was responsible for keeping the active tab visible  after resize (if the tab was visible prior to the resize that is). I think adding the API showItem(CTabItem) and showSelection() are reasonable  for the CTabFolder but I do not think the CTabFolder should try to keep the selection visible as the window is resized.  I can think of several scenarios  where this would be the wrong choice so I think it should be the applications choice to enforce this.  This would be consistant with other widgets that have  items. Agree SWT should not assume visibility policy. It should provide API for making the item visible, consistent with other areas of SWT. In > M5 I have provided new API:  CTabFolder.showItem() and CTabFolder.showSelection(). I have also fixed bug report http://dev.eclipse.org/bugs/show_bug.cgi?id=13194  so that when editors are closed or the folder is resized, the maximum number of editors are made visible (i.e. you will not have only one tab showing but still  have arrow buttons to get to the rest of the tabs). Need to use the new APIs on our side. Still a problem in the 2.1 stream. *** Bug 24878 has been marked as a duplicate of this bug. *** working in R3.0 stream N20040419 build
Platform	Unable to have Save Dialog do overwrite? check (1G21QFN) When using native system dialogs, I am unable to have the " Save " dialog check to see if  the file exists and cause an " Overwrite? " message box. The dialog returns only a String  representing the filename that was entered and overwrite checking can be done once the " Save " dialog has been closed.  However, the correct behaviour should be to have the " Save " dialog do the file exists check and have the user able to choose Yes/No, and be  able to choose another filename if no (automatically returning to the " Save " dialog without  closing it).  That is, the " Save " dialog would be the parent of the " Overwrite? " message box.  NOTES: KWMK (9/29/00 12:03:23 PM) -   The work around is to have the " Save " dialog close and then do file exists checking   afterwards.  If the user clicks " no " to the overwrite message box, however, they are   not automatically returned to the " Save " dialog on which they clicked the " save " button.  VI (10/5/2000 11:44:37 AM) The OFN_OVERWRITEPROMPT flag will give this behaviour.   SN (2/5/01 1:10:15 PM) It is not easy (possible?) to offer this functionality on Motif.  The problem is that there   is no hook into file dialog on Motif and that means we will not be able to implement this feature.  If we offer the feature on Windows, the code/behavior will not be portable. PRODUCT VERSION:   com.ibm.swt.widgets < win32 0.047a > Can not provide this functionality portably. Couldn't this be implemented as a hint that would not do anything on Motif and  other platforms that don't support this? If this is implemented as a hint, then code will be written to rely on this and  that code will not check for overwrite on platforms other than Windows.  David and MCQ, do you have any ideas? Sorry MCQ, reassigning to me. On those other platforms, the method that answers whether the save operation  was successful would always return true, since that's basically what is  happening right now without the overwrite check. How is the application supposed to know whether it needs to prompt for an  overwrite?  It will either never prompt or prompt twice on Windows.  I suppose we could prompt on the other plaforms after the user selects the file, if the  file exist and the user doesn't want to overwrite then open the file dialog  again. This is currently low priority. *** This bug has been marked as a duplicate of 4727 ***
Platform	Initial fast view size is suboptimal Build 20020115  When a new fast view is opened, e.g. when doing a sync for the first time, it has a very narrow width.  While this may be OK for some views like the Outline  or Properties views, it is really poor for wide views like the task list and sync views.  It would be nice if we could somehow compute the preferred width, e.g. using SWT's computeSize, and limiting it to the available width (or a bit less).  Alternatively, views themselves could specify their preferred dimensions,either programmatically or in the plugin.xml. Having preferred dimensions could help in determining the best place to dock a view.  E.g. if it's wide but not too high, group it with the Tasks view. If it's not too wide but high, group it with the Navigator or Packages view. Or, allow views to specify their preferred group-mates. Developers can now specify a fast view ratio when declaring their views in XML.
JDT	[Console] Terminate button disabled on Clear Console, even when app still running Steps to reproduce: 1 - Launch a Java application 2 - Press ' Clear Console ' button on the  console 3 - Console is cleard, and ' Terminate ' button is disabled, but app is still  running Build F3. Moving to debug Awaiting approval. Marked wrong bug... re-opening. Deferred for post 2.0 consideration. Reopen to investigate. The console terminate button was incorrectly updating on text selection changes  within the console. The console terminate action only updates its state based on the current  process associated with the console view. Please verify. Would love to, if I could access the relevant build. Verified. *** Bug 21014 has been marked as a duplicate of this bug. ***
JDT	Search does not find folders (1GE8PT8) When you search only files are found, no folders.  STEPS 1) Create a java project  2) Select search and enter bin with no extensions selected 3) Nothing is found.  No extensions should be interpreted as * NOTES: EG (5/28/01 10:07:42 PM) we only support searching inside files. Use the goto resource when  looking for a folder. moved to ' active ' PRODUCT VERSION: 110 see comment below
Platform	Loading changes of source files doesn't work I change a .java file of a proyect using an external editor. Them I select the file and the system ask: " The file has been changed on the file system. Do you want to load the changes? " Then I click " Yes " . But nothing happens. I can´t see the changes in the IDE.  Regards. Rafa. Spain. Tod pls verify this case in the latest 2.0 builds. Works in build 20020501
Platform	[Editor Mgmt] Using the keyboard, I can not get focus to the pages contained in the MultiPageEditorPart Using the keyboard, I can not get focus to the pages contained in the  MultiPageEditorPart. When selecting using Shift-CTRL-W and selecting the editor, the tab of the editor is highlighted but focus remains in the  navigator. The setFocus() method in the editor never gets called. Maybe there is a keystroke I am missing? I have tried every tab combination known. I marked  it critical because it is blocking my accessibablity checklist. Brad, I do not see the behavior you are describing.  Here is what I did:  1. Open a Resource Perspective. 2. Open a plugin.xml file. 3. Open a *.java file. 4. Give focus to navigator.   5. Ctrl-Shift-W.  Select plugin.xml.  Focus goes to Alerts and Action Items. 6. Switch to Source page in Editor. 7. Give focus to navigator. 8. Ctrl-Shift-W.  Select plugin.xml.  Focus goes to the text.  Tried on Win2K in both 2.0 and 2.0.1.  Closing as WORKSFORME.  Reopen with steps to recreate if I'm misunderstanding you. agree
Platform	Java & Compare editor's Next/Previous toolbar buttons shouldn't be retargetable In F2 the Next/Previous buttons in toolbar of compare & Java editor are using  the same ID as the global actions in the Navigate menu. As a consequence these buttons are retargeted if a View is opened while a Compare or Java editor is  open. This happens for the Search result view and the Synchronize View. However if no Compare and no Java editor are open, there are no Next/Previous buttons  in the toolbar and the Search and Synchronize views cannot retarget these actions.  This is confusing for the user because sometime they get the buttons, sometimes not. See bug #19231. If the toolbar actions are no longer retargetable the Synchronize view will  loose its Next/Previous buttons. The Search result view already has Next/Previous buttons in its local toolbar. *** Bug 19231 has been marked as a duplicate of this bug. *** 20020606 The Next/Previous toolbar buttons of the Compare editor are now independent from the gloable actions and are not retargeted bySearch and Synchronize view. Fix reviewed by Dirk Baeumer. Verified. TB
Platform	Debug event handlers performing runnables after " dispose " The debug event handlers are not protected from operating on widgets after they  have been disposed. For example the ExpressionViewEventHandler#expressionRemoved operates on its  tree viewer without checking that the viewer is disposed. Sample exception on shutdown:  org.eclipse.swt.SWTException: Widget is disposed at org.eclipse.swt.SWT.error(SWT.java:1887)  at org.eclipse.swt.SWT.error(SWT.java:1819) at org.eclipse.swt.widgets.Widget.error(Widget.java:368)  at org.eclipse.swt.widgets.Control.getDisplay(Control.java:664) at org.eclipse.swt.widgets.Widget.isValidThread(Widget.java:571)  at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:299) at org.eclipse.swt.widgets.Tree.setSelection(Tree.java:904)  at org.eclipse.jface.viewers.TreeViewer.setSelection (TreeViewer.java:213)  at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget (AbstractTreeViewer.java:1141)  at org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget (StructuredViewer.java:790)  at org.eclipse.jface.viewers.StructuredViewer.preservingSelection (StructuredViewer.java:579)  at org.eclipse.jface.viewers.AbstractTreeViewer.remove (AbstractTreeViewer.java:967)  at org.eclipse.jface.viewers.AbstractTreeViewer.remove (AbstractTreeViewer.java:987)  at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.remove (AbstractDebugEventHandler.java:98)  at org.eclipse.debug.internal.ui.views.LaunchViewEventHandler$1.run (LaunchViewEventHandler.java:204)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.swt.widgets.Display.release(Display.java:1258)  at org.eclipse.swt.graphics.Device.dispose(Device.java:198) at org.eclipse.ui.internal.Workbench.run(Workbench.java:815)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:895)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at SlimLauncher.main(SlimLauncher.java:14) Calls to remove/refresh etc that originate from #handleDebugEvent are  protected, but other calls are not. Fixed. Please verify. Verified.
JDT	available actions in menus differ depending on location of .java file Build F1:  scenario: a.java is inside project A inside a package ' com.test.aaa ' , a copy of  a.java (let's call it b.java)is also in project A but in a ressource  folder ' res ' . None of the two files are open in the editor. Rightclick on  b.java brings up the context menu. Following actions are missing compared to the ones available for a.java: - Add From Local History - References, inclusively submenu - Declarations, inclusively submenu - Generate getter & setter - Organize Imports - Open Type Hierarchy  For the pull down menus the following actions are disabled compared to the ones available for a.java: Search: References > Workspace                Hierarchy Workingset     Declarations > Workspace                  Workingset Navigate:     Go Into (missing) Open Type hierarchy     Open External javadoc Source:     Organize Imports Generate Getters & Setters     Externalize Strnigs File:     Move (is enabled - eventhough it isn't for a.java)     Rename (is enabled - eventhough it isn't for a.java) some difference are OK since Java files that are not on the class path are 2nd  class citizens. verified that the differences can indeed be explained, they are OK. changed milestone from F1 to F2
Platform	GTK:Selecting a Checkbox from within the selection callback causes infinite loop(BBAWT) The following example works on Windows but does not work on GTK. This emulates the way our AWT works with the Button. This test has two classes, but the second class should be run(TestSWTRadiobutton).  ----------- CheckboxGroup class starts here ------------------ import java.io.Serializable;  import org.eclipse.swt.widgets.Button; public class CheckboxGroup {  Button selectedCheckbox; public CheckboxGroup() { } public Button getCurrent() {  return getSelectedCheckbox(); }  public Button getSelectedCheckbox() { return selectedCheckbox; } public void setCurrent(Button checkbox) {  setSelectedCheckbox(checkbox); }  public void setSelectedCheckbox(Button checkbox) { if (selectedCheckbox == checkbox) {   return; }  if ((checkbox != null) ) { return;  } if (selectedCheckbox != null) selectedCheckbox.setSelection(false);   selectedCheckbox = checkbox; if (selectedCheckbox != null) selectedCheckbox.setSelection(true); }  void updateSelectedCheckbox(Button checkbox, boolean state) { if (state) {   setSelectedCheckbox(checkbox); } else {   if (checkbox == selectedCheckbox) { selectedCheckbox = null;   } } } }  -------------------CheckboxGroup class ends here ---------------------- --------------TestRadioButton class starts here ---------------  import org.eclipse.swt.SWT; import org.eclipse.swt.events.SelectionAdapter; import org.eclipse.swt.events.SelectionEvent; import org.eclipse.swt.layout.FillLayout; import org.eclipse.swt.widgets.*; public class TestSwtRadiobutton {   public static void main(String[] args) {   final Display disp = Display.getDefault(); final Shell shell = new Shell(disp);   shell.setLayout(new FillLayout()); final CheckboxGroup group = new CheckboxGroup();   final String names[] =    { " button1 " , " button2 " , " button3 " , " button4 " , " button5 " };   for (int i = 0; i < names.length; i++) {    final Button box = new Button(shell, SWT.RADIO); box.setText(names[i]); box.addSelectionListener(new SelectionAdapter() {     public void widgetSelected(SelectionEvent e) { boolean state = box.getSelection();      if (!state) { box.setSelection(true);       group.updateSelectedCheckbox(box, true); return;      } group.updateSelectedCheckbox(box, state);     } });   } shell.setSize(800, 400);   shell.open(); while (!shell.isDisposed()) {    if (!disp.readAndDispatch()) { disp.sleep();    } }   } }  ---------------TestSWTRadiobutton class ends here --------------- Still happens in 2.1 RC1.  The problem comes from GTK doing the radio button  behavior and sending a signal and the application responding to that signal and trying to do radio button behavior.  I believe that the signal that is  coming in is on another button, not the one we are blocking in setSelection(). More investigation required. Is there any workaround for this problem? SSQ: I don't think there is workaround for this. Anyway, the bug is fixed. fixed head > 20030707
JDT	Step Over stops working after some conditions When debugging it quite often happens that I must restart session  because " Step Over " acts as " Resume " . Everything works perfectly at least till first not-caught NPE in the debugging application, afterwards (usually) only " Step Into " performs line-by-line  execution. P.S. The problem was recognized quite long ago with betas of 2.0 (we started  to work only with 2.0) and it's repeatable on all developer workplaces around  (~30 developers). We thought it's known bug, however I've not found on the  Bugzilla any open report with similar description. Sorry if I missed the one. What VM are you debugging with. There are known problems with JDK1.4.0 that are  fixed in 1.4.1. *** This bug has been marked as a duplicate of 8441 ***
JDT	DCR - search synchronized references to type Build 20020602  It would be worth supporting search actions to synchronized references to types/fields so as to better track down deadlock scenarii. Post 2.0
JDT	IllegalArgumentException while creating AST 20020409 1. create this code (project contains JUnit source) 2. do Quick Fix on ' fActiveTestDeathCount1 ' , wait for the hover on ' Create  field... ' ----- package junit.extensions; import junit.framework.*;  public class ActiveTestSuite  { public void run(TestResult result) { fActiveTestDeathCount1= 0;      } public void runTest(final Test test, final TestResult result) {} Thread t= new Thread() {                         public void run() { try {                                         // inlined due to limitation in VA/Java //ActiveTestSuite.super.runTest(test,  result); test.run(result);                                 } finally { ActiveTestSuite.this.runFinished(test);                                 } }                 }; t.start();         } }    java.lang.IllegalArgumentException at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:1034)  at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration (ASTConverter.java:2365)  at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration (ASTConverter.java:243) at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations (ASTConverter.java:209) at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:155)  at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:73) at org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:234)  at org.eclipse.jdt.internal.ui.text.correction.NewVariableCompletionProposal.addEdi ts(NewVariableCompletionProposal.java:186) at  org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getChange (CUCorrectionProposal.java:56)  at org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getCompilationU nitChange(CUCorrectionProposal.java:130) at  org.eclipse.jdt.internal.ui.text.correction.CUCorrectionProposal.getAdditionalPr oposalInfo(CUCorrectionProposal.java:72)  at org.eclipse.jface.text.contentassist.AdditionalInfoController.computeInformation (AdditionalInfoController.java:185) at  org.eclipse.jface.text.AbstractInformationControlManager.showInformation (AbstractInformationControlManager.java:536)  at org.eclipse.jface.text.contentassist.AdditionalInfoController$1.run (AdditionalInfoController.java:145)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled Code))  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) Using a fresh new workspace with build 0409, I could not reproduce this exception. The field is  created properly. However I had to change the test case for : package  junit.extensions; import junit.framework.*; public class ActiveTestSuite {  public void run(TestResult result) { fActiveTestDeathCount1= 0;    } public void runTest(final Test test, final TestResult result) { Thread t= new Thread() { public void  run() { try { // inlined due to limitation in VA/Java //ActiveTestSuite.super.runTest(test, result); test.run(result); } finally  { ActiveTestSuite.this.runFinished(test); } } }; t.start(); } }  If you can reproduce it in your workspace, please try again with a fresh new workspace containing only this  test case. If it works, please provide the whole workspace. I can reproduce it with an empty workspace: Only the one CU. There are many build errors, but the result is the same.  Send you the zipped workspace. I reproduced the bug now. Thanks for the workspace. The problem is located in the recovery in the  Parser. The field declaration has an invalid declarationEnd and then the ASTConverter is trying to create a field for which the length is negative. That is not possible and explains the  IllegalArgumentException. The ASTConverter assumes that the CompilationUnit retrieved from the Parser is properly initialized. Ok, I located the bug. It was in updateTypeDeclaration() in the class RecoveredType. The field  declaration source end was set, but not the field declaration end. Setting the field declaration end with the same value than the field declaration source end fixed the problem. I will release as soon as all tests are passed. Fixed and released in HEAD. Set the milestone.
JDT	Timeout when launching From Eclipse Corner: " I am continuing to experience problems with timeouts with both JDK 1.3 and JDK 1.4. I think, however, that I found one resonably reproducible quirk in this. It seems that when I am connected to the network I do not experience any timouts, but when I am disconnected (I use a laptop), I get the timeouts, though if I try again it does connect to the VM. Any ideas on why this may be happenning, and how to solve it? " Please verify (Jared). Sorry, updated wrong bug. Re-openned. Darin, here is one :   I have never been able to get Debug to work on my work PC.  I have tried almost all nightly and stable builds till Dec06.  Here are my specs  Windows NT Pentium 800 MHz 256M Ram I am on a lan and can ' ping localhost ' JDK 1.3.1 and JDK 1.4Beta 3  But the 1127 build can debug on my home laptop (1.1G 512Mb Win XP). JDK 1.3.1 and JDK 1.4Beta 3  Hope it helps I often get VM timeout messages when debugging a program. I assume that it is because the machine I am running eclipse on only has 128 MB of RAM, running Win98, and I am in the habit of running several applications at one time (Eclipse, Mozilla, XFree86, several xterms, etc). Usually the problem does not occur when only eclipse is running and I am only debugging one application at a time. If I press retry often enough, eventually the debug process will start.  The number of times I have to press retry seems to vary with the mood my computer is in, as well as with how much stuff I have going on I notice similar behavior. When launching times out, it is usually on the first  launch of a VM that I have not yet launched. After the first launch works (perhaps pressing " re-try " several times), subsequent re-lanuches work fine.  Thus, launching time outs could be related to VM startup, DLL loading, etc. Debug is not working on my machine either - I get the timeout message.   Linux 2.4.7-10smp Redhat 7.2 Dual P3s with 1GB RAM JDK 1.3.1_01Eclipse build 20011206 I can run the application within Eclipse. I am on a LAN. *** Bug 6919 has been marked as a duplicate of this bug. *** I've tried doing " Retry " for 10 minutes, having hit " Retry " 23 times.  Not  working.  The VM comes up fairly quickly in R1.0 installed in the same machine. See bug#1613  The new error reporting that will be avialable in the next build should shed some light on what is going wrong. To better diagnose problems with VM launching, a patched org.eclipse.jdt.debug.ui plugin is available. This patch is only for the 20011206 build.  If you are not experiencing problems with launching a VM in debug mode, this patch will not be of interest.  http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-debug- home/patches/20011206.1/org.eclipse.jdt.debug.ui.zip This is the error I get when trying to debug with the new patch installed.  I  know this has been reported elsewhere, but just so people reading this bug will know what is going on:  ================= err:: No such file or directory Error[2] in gethostbyname() call! Socket transport failed to init. Transport dt_socket failed to initialize, rc = -1 ================= This sounds very much like a the problem someone mentioned where eclipse was  trying to launch the vm with invalid options for hostname. This is what I found :  This works: =========== c:\ > j:\Apps_pub\jdk13110\bin\java.exe -Xdebug -Xnoagent -Djava. compiler=NONE -Xrunjdwp:transport=dt_socket,address=localhost:8000 This fails with the gethostbyname message: ========================================= c:\ > j:\Apps_pub\jdk13110\bin\java.exe -Xdebug -Xnoagent -Djava. compiler=NONE -Xrunjdwp:transport=dt_socket,address=127.0.0.1:8000 What I mean by works is that I get (I assume because there is no server running  on localhost). Error [2] in connect() call! err:: No such file or directory Socket transport failed to init. Transport dt_socket failed to initialize, rc = -1.   whereas in the failed testcase I get Error [2] in gethostbyname() call! err:: No such file or directory Socket transport failed to init. Transport dt_socket failed to initialize, rc = -1. FATAL ERROR in native method: No transports initialized BTW I can ping both localhost and 127.0.0.1   I tried this on another machine on which debugging works and there both the test cases ' worked ' .  I guess it has something to do with my network configuration. I found that when I " un-plug " my internet connection, I get a timeout error  (but I succeed on " retry " ). When I am connected, there are no problems. I  experimented with using " localhost " instead of " 127.0.0.1 " , and when  using " localhost " I have no problems launching (even when uplugged).  Released fix to HEAD. From Eclipse Corner: > I found a solution to the timeout problem on my machine [I was getting a > gethostbyname() error]. > > On windows NT: > open c:\winnt\system32\drivers\etc\hosts > > add the line > > 127.0.0.1       127.0.0.1 > > (This should trick the socket libraries to resolve 127.0.0.1 to 127.0.0.1 > !!!) > > restart eclipse. Marking as verified. I have not heard of any launching timeout problems  recently. If anyone is still having trouble with the latest code base (20020109) please re-open this PR. Am still experiencing timeouts when launching the Sun 1.4.0 JVM from Eclipse.  The problem is 100% repeatable. My hosts file now reads:  # For example: # #      102.54.94.97     rhino.acme.com          # source server #       38.25.63.10     x.acme.com              # x client host  127.0.0.1       127.0.0.1 127.0.0.1       localhost  I have set timeout to large values - it is currently 40000. Ping works:  C:\Documents and Settings\Administrator > ping 127.0.0.1  Pinging 127.0.0.1 with 32 bytes of data: Reply from 127.0.0.1: bytes=32 time < 1ms TTL=128  Other commands that may be relevant: C:\Documents and Settings\Administrator > java.exe -Xdebug -Xnoagent - Djava.compil er=NONE -Xrunjdwp:transport=dt_socket,address=localhost:8000 Error [2] in connect() call! err:: No such file or directory Socket transport failed to init. Transport dt_socket failed to initialize, rc = -1. FATAL ERROR in native method: No transports initialized  C:\Documents and Settings\Administrator > java.exe -Xdebug -Xnoagent - Djava.compil er=NONE -Xrunjdwp:transport=dt_socket,address=127.0.0.1:8000 Error [2] in connect() call! err:: No such file or directory Socket transport failed to init. Transport dt_socket failed to initialize, rc = -1. FATAL ERROR in native method: No transports initialized This is all on WindowsXP -  Version: 2.0.1 Build id: 200208291828  ...any ideas? Tim, the error you're getting from that command is expected. You're not  specifying a main class to run or setting a classpath. If you have other issues, please open a new bug report. *** Bug 49659 has been marked as a duplicate of this bug. *** *** Bug 49659 has been marked as a duplicate of this bug. ***
Platform	Double-clicking on view or editor tab should zoom it (1GJA4Y4) Double-clicking on a view tab should zoom the view. Likewise for editors. NOTES:  CM (10/2/01 10:42:35 PM) Double-clicking on an editor tab does zoom the editor. PRODUCT VERSION: 133 This has worked this way for a while.
JDT	previous and favorite config names gone 20020412 (no steps, sorry. might be related to the fact that i tried switching to the latest latest for a  while - but had to revert to 0412 vanilla because of bug 13864) the names of my configs are gone see attachment Yes, this is likely due to the switching. The 0412 version stored labels in  hisoty items, and the new code renders labels dynamically. Do not intend to addres unless it is a problem in builds > 20020418.
Platform	Improved workflow for " Delete " - we should watch for resource deltas - we should create a task which is " resource was deleted, remember to tell  server " - either by using " Fix it " or a custom task action, we can allow the user a  place to later say " tell the server about the deletion " - if the user commits the parent (eg. in the sync view) we'll need to watch for  that and remove the task I've added code to listen for the delete delta. It currently marks the sync  info as a deletion. Here are the changes related to deletions  1) The user will be prompted with a warning on deletion of files to indicate that the file will be marked as an outgoing deletion. An information marker  will appear in the task view which indicates this. The user can use the Auto Fix item in the task's context menu to restore the file (from the server or  local history) or commit the deletion. The user can also commit the deletion as before (Commit on ancestor in Team menu or Sync view) as well.  2) A similar warning will appear for folder deletions. However, the folders themselves will not be deleted and files in the folders will appear as outgoing  deletions. On commit, any empty folders that contained outgoing deletions will be pruned.  3) When files are added to a folder shared with CVS, an information marker will appear in the task view until the file is either added to CVS control or  ignored (Autofix items are available for this). Options are available in the CVS preferences page to disable both the prompting  and markers. Verified.
JDT	Organize Imports unable to handle ambigous type [code manipulation] Steps to reproduce: 1) Import java.util.* 2) Create a field of type List (want  java.awt.List) 3) Organize Imports and CodeAssist both provide the option to use  java.awt.List, but no action is performed. It should fully qualify the type in order to avoid  the ambiguity. This can occur as a result of the Organize Imports option to automatically  import an entire package (.*) once a certain number of classes within that package are used. *** This bug has been marked as a duplicate of 23693 ***
JDT	AST: SingleVariableDeclaration needs extra dimensions? 20028303 Similar to VariableDeclarationFragment, SingleVariableDeclaration can also have dimensions appended to the name  (it is possible to write public void foo(int[] i[] ))  How is this expressed in a SingleVariableDeclaration? I think we missed that case. Jim - any comment? In this case, int[] i[] , what do you expect for the type: - an array of int with dimension 2 - an array of int with dimension 1?  The extra dimensions would be 1. SingleVariableDeclaration is different from VariableDeclarationFragment in  that the former always contains both the type and the identifier. " int[] i[] " is represented exactly the same as " int[][] i " .  The other similar case is: public abstract int foo()[]; which is represented exactly the same way as:       public abstract int[] foo();  So there should be no problem here. Ok, but how do we know that there are brackets behing the local name? This information is not represented in the AST. So it has the same status as  whitespace and comments, which aren't in the AST either.  Recommended usage is to always put " [] " after the type rather than the  variable. So it is auguably not a great loss that the distinction between " int  a[] " and " int[] a " is lost in the conversion to an AST. The current implementation of SingleVariableDeclaration with having the extra  dimensions folded in the variable type has the problem that the resulting ArrayType has invalid positions.  There are use cases of the AST where simplifications fictions like this gives the AST user lots of work: - Flattening an AST: Having an AST to create the source string. Not possible to express how many brackets are behind the name (I know and totaly agree that  this is bad style, but I don't think its up to the AST to teach about this) - Rewriting an AST: The rewriter needs to add and remove dimensions. To find out where the brackets are located now involves counting the brackets (with the  scanner) to find out how many brackets are after the name. As VariableDeclarationFragment already introduced the concept of ' extra  dimensions ' I vote to add this to SingleVariableDeclaration and also to the  MethodDeclaration. Or the doc defines that types in SingleVariableDeclaration and  MethodDeclaration can contain components that have no source location set. (Note that this would introduce a general special handling for ArrayType  locations) (1) For the SingleVariableDeclaration " int a[] " , the type child should have  source range that extends through the " ] " . In this case, the source range of  the type overlaps the source range of its sibling, the name. There is currently a bug here (MethodDeclaration has a similar problem).  Clients should be able to see that there's something funny going on because of the existence  of siblings with overlapping source ranges. (It is always the case that the source range of the child is contained within the source range of the parent.)  (2) Concur that we could add ' extra dimensions ' to SingleVariableDeclaration  and MethodDeclaration. The number would be 0 by default, but could legitimately be any number as high as the number of dimensions in the array  type. The extra dimension would not really do anything, other than record that some number of the dimensions were/should be placed outside the type. Done this way, this would not be a breaking API change, and should be easy to implement at the same time the above bug is fixed. It is fine for me. Jim - Could you please add these new APIs and I will implement them in the same time I am fixing (1). Added two API methods to MethodDeclaration and to SingleVariableDeclaration:   public int getExtraArrayDimensions(); public void setExtraArrayDimensions(int dimensions); Unlike VariableDeclarationFragment, these fields are *not* considered by the standard implementation of ASTMatcher; that is, the ASTs for " int foo()[]; " and " int[] foo(); " would match. Fixed and released in 2.1 stream. One last question regardin overlapping source range (it is not clear to me how  the proposed solution will deal with this). The rules for source ranges are as follows:  - sibling ranges do not overlap - the parent range covers all sibling ranges.  For an example like " int[] i[] " the node representing the type int[] spawns " int [] " not " int[] i[] " . Is this correct ? What do I get now for int foo[] ;  type: PrimitiveType.INT name: foo extra dimension 1 is that correct? (that's what I would expect) I would rather say: type: ArrayType dimension: 1 elementType: PrimitiveType.INT name: foo extra dimension 1 And the type binding for the type is an array type binding (int[]). For the fragments, it makes sense to have a type for the declaration which would be a  primitive type int and a binding for the fragment which is an array type. In the case of a single variable declaration they are the same thing, so the type  of the variable declaration fragment has to be an array type. re: Dirk's comment  No. Sibling source ranges overlap in the case of SingleVariableDeclaration and MethodDeclaration. But it is still true that the parent source range covers  all sibling ranges. Jim this violates lots of our assumptions we have made in AST rewriting and in  the text change infrastructure. What is the reason that you want to support overlapping siblings ?  And this seems to be different from what we do for variable declaration fragments. Why don't we handle this the same way ? I took Martin's comment to mean that it was inconvenient because the source  range excluded the " [] " tokens that we legitimately part of the type. But if non-overlapping sibiligs is important, we should back out of this part of the fix. We should clarify the API to make it clear that the extra array  dimensions are not included in the source range. The type child of the SingleVariableDeclaration contains all the array  dimensions, including the ones after the variable. This is the way it is in 2.0, and I would be reluctant to change this because it would be a breaking  API change. The proposed methods provide the new functionality in a non- breaking way. Could we clarify what we want to do?  So far we have: 1) The type positions doesn't contain the brackets 2) The extra dimensions field reflects the number of brackets defined after the parameter of the method declaration or after the name of a single variable  declaration. 3) The type of both nodes are still array types if the extra dimensions is  different from 0. For now we have: 1) No 2) Yes 3) Yes Are these three statements fine for everybody? If yes, I will modify the code  to get 1) right. think the type not contain dimensions from the name. This is consistent with  variable declaration fragments. Please consider this as a fix, don't be compatible on unspec ' d, unclear code. (Its also a really rare case) Do not compare with the variable declarations fragments. It is not the same  thing. The fragments have their own bindings. They don't have a type. The type  is set on the variable declaration statement and it is common to all fragments. This is why the type of the statement doesn't contain the extra dimensions. In the case of a single variable declaration, the type is on the single variable declaration. Therefore it has to be an array type if there is an extra  dimension specified after the variable name. I think we might want to have a phone conversation instead of writing notes in this PR. It can be quite long to  convince everybody. Before we dicuss the topic on the phone here are my minimal " requirements " - siblings should not overlap. - parents must include all siblings. - we should be homogeneous whenever possible.  Otherwise the AST isn't really a tree < g > .  Here is my idea how to solve the problem. Consider the following example int[3] variable[] ;  will produce the following nodes: < SingleVariableDeclaration > < ArrayType > int[]     resolveBinding() returns a binding for int[] < /ArrayType/ > < SimpleName > variable < SimpleName > extraDimensions() returns 1   resolveBinding().getType() returns a binding for int[] [] < /SingleVariableDeclaration > So the nodes and their bindings map to what their source ranges reprensent in  code. And how do you handle this:  String[] foo(int i)[] { return null; } My point is that we introduce too much complexity in the tree. I don't like the idea that getType().resolveBinding() and resolveBinding().getType() don't return the same binding. It should be the same! I disagree that all the siblings should not overlap. As long as a parent contains all its children, it should be enough. Jim - any thoughts? I've posted this to jdt-core-dev mailing list:  The JDT DOM/AST API is does not make it clear how method declarations like int foo()[]; and parameter declarations like       int a[] are handled.  The issue concerns the extra " [] " s:       - for the return type of a MethodDeclaration (the ones after the parameter list)       - for the type of a SingleVariableDeclaration (the ones after the variable)  (Note that there is no confusion with field declarations and regular local variable declarations, which are represented partly with VariableDeclaratrionFragment nodes and do not have this confusion). The 2.0 API does not clearly state what happens to the extra array dimensions. In the 2.0 implementation, the extra array dimensions are built in to the type but excluded from the type's source range. This has led to much confusion (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=23284) Not addressing these, albeit obscure, cases does not seem wise because they will be a source of obscure bugs in the future. So for 2.1 we propose fixing the MethodDeclaration and SingleVariableDeclaration API as follows:       - Add new API methods (get/setExtraArrayDimensions) for record the number of extra array dimensions.       - State that extra array dimensions are not included structurally in the type.       - State that extra array dimensions are not included in the source range of the type.  Implementing these changes would break existing clients that are depending explicitly on certain readings of the current API contract, or ones implicitly relying on the currently implemented behavior. Before proceeding, we want to hear from others on the potential impact of this change. Corrected API spec for MethodDeclaration and SingleVariableDeclaration as per above proposal. Also added words to AST.parseCompilationUnit to the effect that source ranges are properly nested within they paraents and siblings never overlap. This item is a minor breaking API change, and should be documented in the  2.1 release notes. The javadocs of SingleVariableDeclaration.setExtraDimension(int) and MethodDeclaration.setExtraDimension(int) are wrong. They are just copy of the associated methods getExtraDimension(). Thanks Luc. I've corrected the mistakes. Fixed and released in 2.1 stream. Now both SingleVariableDeclaration and VariableDeclarationFragement have  methods set/getExtraDimensions. Since they are subclasses of VariableDeclaration wouldn't it make sense to pull the methods up ? Good suggestion.  I've pulled set/getExtraDimensions up to  VariableDeclaration. I've annotated the javadoc specs for both methods on  VariableDeclarationFragement with @since 2.0 to make it clear that they are part of the 2.0 API. Verified. Regression tests added (test0393, test0394, test0395, test0396, test0397).
JDT	Java Browsing: Filter support Add filters to Java Browsing views - e.g. working set filter *** Bug 11765 has been marked as a duplicate of this bug. *** done.
Platform	Wrong icon used in showing action sets (customize dialog) (1GFDDP0) Open the " Customize Perspective " dialog. Click on the Other category,  then on the Readme Actions. Notice the icon displayed is not the coloured one, its the one representing " enable " state in a toolbar (i.e. black & white).   Assuming you have the latest plugin.xml file and icons for the readme example, you will notice the action set definition specifies the three  icons to use (enable, disable, and hover). If only the " icon " attribute  is specified, then swt will generate the disable and enable version of the icon, but these look bad in low color res, especially on Linux.  NOTES: SA (6/15/2001 3:56:49 PM)  This is no longer the case as the plugin.xml was reverted back to its original content. Only the color image is provided - so SWT gen's the disable and enable  version of it...which on linux looks bad (and sometimes on windows too). Why then do we have Linda producing these enable and disable images if  we are not using them? PRODUCT VERSION:  0.124 + latest readme tool changes Obsolete
Platform	JavaDoc error in ImageRegistry F2  From ImageRegistry.java: * An image registry owns all of the image objects registered  * with it, and automatically disposes of them when the SWT Display * that creates the fonts is disposed.   Presumably this should read ' ...images is disposed. ' ? Fixed
JDT	Java core dump in debugger Build 20020416  I was debugging a run-time workbench, and target died.  The debugger thought that the run-time workbench was still running, and I had to exit and restart  Eclipse to get working again.  Not sure if this is a debug or UI PR. The following messages were on the console: java.lang.NullPointerException at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:123) Writing java dump to C:\Eclipse\20020416\eclipse/javacore1948.1019753125.txt... The contents of the javacore are:  Exception code: C0000005 ACCESS_VIOLATION Fault address:  71518E46 01:00027E46 C:\Program Files\IBM\Java13 \jre\bin\classic\jvm.dll Registers: EAX:0026BBC4 EBX:00236500 ECX:00236500 EDX:26C27FF9 ESI:008BF198 EDI:0026BBC4 CS:EIP:001B:71518E46 SS:ESP:0023:0006FBAC  EBP:0006FBF4 DS:0023  ES:0023  FS:0038  GS:0000 Flags:00010293  Thu Apr 25 17:45:25 2002 J2RE 1.3.0 IBM build cn130-20020117 C:\Program Files\IBM\Java13\bin\javaw.exe -classpath C:\Eclipse\20020416 \eclipse\plugins\org.eclipse.pde.ui\launcher\slimlauncher.jar;c:\download\eclips e\workspace\org.eclipse.core.boot\boot.jar;C:\Program Files\IBM\Java13 \jre\lib\rt.jar -Xdebug -Xnoagent -Djava.compiler=NONE - Xrunjdwp:transport=dt_socket,suspend=y,address=localhost:7346 EclipseRuntimeLauncher org.eclipse.ui.workbench  c:\download\eclipse\workspace\.metadata\.plugins\org.eclipse.pde.core\C__eclipse _20020409_eclipse_runtime-workspace\plugin_path.properties -dev bin -data  C:\eclipse\20020409\eclipse\runtime-workspace System Properties ----------------- Java Home Dir: C:\Program Files\IBM\Java13\jre Java DLL Dir: C:\Program Files\IBM\Java13\jre\bin Sys Classpath: C:\Program Files\IBM\Java13\jre\lib\rt.jar;C:\Program  Files\IBM\Java13\jre\lib\i18n.jar;C:\Program Files\IBM\Java13\jre\classes User Args:  -Djava.class.path=. -Djava.class.path=C:\Eclipse\20020416 \eclipse\plugins\org.eclipse.pde.ui\launcher\slimlauncher.jar;c:\download\eclips e\workspace\org.eclipse.core.boot\boot.jar;C:\Program Files\IBM\Java13 \jre\lib\rt.jar -Xdebug  -Xnoagent -Djava.compiler=NONE  -Xrunjdwp:transport=dt_socket,suspend=y,address=localhost:7346 Current Thread Details ---------------------- " main " (TID:0x8e87e0, sys_thread_t:0x2366d8, state:R, native ID:0x7c4)  prio=5 at org.eclipse.jface.resource.ImageRegistry.handleDisplayDispose (ImageRegistry.java:86) at org.eclipse.jface.resource.ImageRegistry.access$0 (ImageRegistry.java:82) at org.eclipse.jface.resource.ImageRegistry$1.run (ImageRegistry.java:100) at org.eclipse.swt.widgets.Display.release(Display.java:1254)  at org.eclipse.swt.graphics.Device.dispose(Device.java:198) at org.eclipse.ui.internal.Workbench.run(Workbench.java:824)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:14) I believe the core dump problem is specific to the IBM VM. Please try with a  sun 1.3.1_01 VM to reproduce. The PDE launcher problem is solved (see bug# 12816). The only remaining issue here is the fact that after the target crashes we still show it as running in the debug view. A possible solution to this problem would be lightweight polling. We could poll launched processes once every 30 seconds (or so) to see if they're still running. It's ugly, but in the face of a crash it may be the only chance we have of updating the view automatically. Of course, the user can just select " Terminate and Remove " to get rid of ghost launches manually. Deferred. The workaround to remove procceses is to use the " Terminate & Remove " action from the pop-up menu. Closing.
Platform	post 2.0: aix travseral differences This is a follow-up to John Rose's report about rename failing on aix.  We  should try to disable aix free traversal behaviours for < return > and < esc > .   The following widgets show this problem: Text    Combo List    Table Tree Note that John's original report was bug 20214 . no longer an issue, closing report
Platform	TextViewer does not support selections with caret on the left Build 2.0 release  It does not appear to be posible to use TextViewer to set a selection with the caret on the left. The offending code in setSelectedRange is given here:  int[] selectionRange= new int[] { offset, length }; validateSelectionRange(selectionRange); if (selectionRange[0] > = 0 & & selectionRange[1] > = 0) {  fTextWidget.setSelectionRange(selectionRange[0] , selectionRange[1]); selectionChanged(selectionRange[0], selectionRange[1] ); } I have filed bug 21272 to expose API in StyledText to set the selection with the caret on the left. Adam, it would help to indicate what you need this for. Sorry.  I would be using this for improvements to incremental search. In Emacs, the position of the caret relative to the selection indicates the direction of the  search. For a forward search, the caret is on the right. A reverse search has the caret on the left. I am trying to emulate this behaviour.  It is important to give the user this feedback so that they know which direction the search will proceed in when they add a character to the search  string. M2.
JDT	assign other key to content assist the default key is ctrl-space,which is also the key windows switching input  methods.In Visual age java ,ctrl-l will works too. Changing to JDT - UI This should be fixed as soon as the platform provides support for customizable  key bindings (see corrsponding proposals on the platform ui mailing list). after 2.0 Got address by custom key bindings. Tagged as works for me
JDT	DCR: Java Browsing " Types " list should be " Contents " I would like the list of Types in the Java Browsing perspective to be a list of  everything in the package (so the label should be " Contents " ). Then, I would also like to be able to filter on various predefined types, i.e. .java files, .c/h files, and graphic files, based on the type of editors  that are defined. The filter tools should be view tools, just like the Show/Hide Static, and Show/Hide Public, tools in the Outline view. I agree that this would be useful sometimes, but we have developed with VA/Java  and LeapFrog in the same style without problems. In addition, several people that have asked for this perspective wanted it to  be pure VA/Java style, i.e., no pollution with non-Java resources. Therfore low priority for 2.0 I agree with Erich and there are other issues here. Simply opening the Types view and name it Contents is not the solution. Should we then rename Packages to Contents2 because it would also have to show non-java files in projects and source folders? What about folders not on the build path? Should they then show up in the Projects view.  I suggest t o mark as duplicate of bug: 9843 : View resources in Java Browsing perspective which is a more general PR for the problem. SWT has lots of C files, H files, batch files for building, etc. These are part  of the source code, and they need to be modified every bit as often as any java file. When I try to use the Java browsing perspective, I feel very restricted  because I can't see all of my source code. Obviously, you would provide this as  optional behavior through filters. So it would not " pollute " the types view,  because I would have the filter on, and somebody else would have the filter off. Also, this is a " Java browsing perspective " so clearly the answer to the " other  issues " question " how do you show packages " is that you show them as packages,  just like usual. I personally want the packages merged when they are in multiple source folders, but that issue is for a completely different PR.  So, to reiterate, SWT does not use the Java Browsing perspective because: - it does not show all of our source code - it does not show merged packages - it does not show type hierarchies I agree and know about the issues and there are already some PRs for those:  9843: View resources in Java Browsing 10053: Java Browsing: Allow to show hierarchy in Types view  Once bug 8748: Link Type Hierarchy view selection to active editor is fixed then you could open the type hierarchy view in the current perspective (either on your project or your package). Switching the active editor would select the class in the hierarchy.  What I argue (and also meant when speaking about packages) is the naming (which the PR summary is about): My point was/is that " Contents " is not a good name because the Packages view would also (have to) show Packages _and_ resources. So I think what you're looking for is feature 9843 and not just a better name for the " Types " view. OK to mark as duplicate of 9843? You might want add a feature for the " merged package fragments " feature Q: You say this is one reason why you not use the perspective. I guess you can not use this as " - " factor (only as " + " if it would be there) or is there another tool/view that supports this? There's now also a PR for the merged packages: 9843 Closing this one. *** This bug has been marked as a duplicate of 9843 ***
Platform	Incorrect dependencies: result is NPE in DebugActionGroupsManager self hosting off 0409 candidate for M5.  - Imported binary projects for JDT-UI, Debug-UI, and " All Required " - launched, in new workbench created a new java project, got the exception  below. I was missing org.eclipse.jdt.debug.ui.  There were no compilation errors. It  suggests that there is an implied dependency in the code that shouldn't be  there, or that the plugin requires list (that PDE reads off to do the required import) is incorrect.  FYI: here are the projects I got on import: ===============  org.apache.lucene org.apache.xerces org.eclipse.ant.core org.eclipse.compare org.eclipse.core.boot org.eclipse.core.resources org.eclipse.core.runtime org.eclipse.debug.core org.eclipse.debug.ui org.eclipse.help org.eclipse.jdt.core org.eclipse.jdt.debug org.eclipse.jdt.launching org.eclipse.jdt.ui org.eclipse.sdk org.eclipse.search org.eclipse.swt org.eclipse.team.core org.eclipse.team.cvs.core org.eclipse.team.cvs.ssh org.eclipse.team.cvs.ui org.eclipse.team.ui org.eclipse.ui =========================  org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.NullPointerException)  at org.eclipse.swt.SWT.error(SWT.java:1887) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:96) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:14) *** Stack trace of contained exception *** java.lang.NullPointerException at  org.eclipse.debug.internal.ui.DebugActionGroupsManager.processContributionItems (DebugActionGroupsManager.java:188)  at org.eclipse.debug.internal.ui.DebugActionGroupsManager.updateDebugActionGroups (DebugActionGroupsManager.java:173) at org.eclipse.debug.internal.ui.DebugActionGroupsManager$1.run (DebugActionGroupsManager.java:220) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836) at org.eclipse.ui.internal.Workbench.run(Workbench.java:819)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:14) Can also be tested by closing jdt debug ui project. No incorrect dependancies...just code expecting an intialized collection based on at least one plugin defining an extension point...no defined extensions,  collection was null. Fixed in DebugActionGroupsManager. *** Bug 13640 has been marked as a duplicate of this bug. *** Verified Workaround for M5: Add the following within the plugin.xml of the debug ui plugin (org.eclipse.debug.ui): < extension point = " org.eclipse.debug.ui.debugActionGroups " >         < debugActionGroup                 id = " fakeActionGroup "                    visible= " false "                    name= " Fake " >         < /debugActionGroup > < /extension > *** Bug 15567 has been marked as a duplicate of this bug. ***
Platform	Help is not reindexed after installation of the SDK Translations After installing the Eclipse SDK Translations (NLS-SDK-2.0.1-Translations.zip)  the help is not reindexed. The help is now localized (German in my case) but search only works with  english terms. The temporary workaround is to remove the .metadata\.plugins\org.eclipse.help  directory. I have released the code to react to fragment changes, not only plugin version  changes.
Platform	API: reading project name from description file A .project description file along with project contents should be fully self  describing. That is, when we create a project and the .project file already exists then we should be using the project name that is specified in the file.  The implementation should be roughly equivalent to: IPath basePath = new Path(myFileName); IPath filePath = basePath.append( " .project " ); IProjectDescription description = (IProjectDescription) new ModelObjectReader ().read(filePath); description.setLocation(basePath); IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject (description.getName()); project.create(description, null); project.open(null); This new API will have to reside somewhere other than IProject since we do not  have the name of the project yet to create the handle. We propose adding new API to IWorkspace:  /** * Reads the project description file ( " .project " ) from the given location  * in the local file system. This object is useful for discovering the * correct name for a project before importing it into the workspace.  * < p > * The returned value is writeable.  * < /p > *  * @param projectDescriptionFile the path in the local file system of an *   existing project description file  * @return a new project description * @exception CoreException if the operation failed, either because the  *   project description file does not exist, or cannot be opened, or *   cannot be parsed as a legal project description file  * @see #newProjectDescription * @see IProject#getDescription  * @since 2.0 */ public IProjectDescription loadProjectDescription(IPathprojectDescriptionFile) throws CoreException;   This makes it possible to discover the name of the project as recorded in the project description file before importing/adding the project to the workspace: IProjectDescription pd = ws.loadProjectDescription( " c:\junk\.project " ); // handle error cases IProject projectHandle = ws.getRoot().getProject(pd.getName()); projectHandle.create(pd, null); We also need to specify that: - during the project create, the project description read on disk will be taken as correct for all values except name and location - what should the user set the location to be in the description? Or should we set it in the load method? One case which will be especially tricky is the case where the user extracts  the project zip file into their workspace directory but to a different name than is contained in the project description file. Consider the following  scenerio: - workspace is ~/workspace and thus the default content area for newly created  projects is ~/workspace/ < projectName > - Project AAA has been unzipped/copied to ~/workspace/BBB - therefore ~/workspace/BBB/.project contains the name AAA - the Platform cannot allow the user to create project AAA in that location  for a number of reasons one being that if the user was to try and create project BBB in the default area at a later time, then that would be disallowed  In summary, trying to create a project in the default content area but with a name in the description which doesn't exactly match the parent directory name,  will result in failure to create the project. Note that " exactly match " includes character casing as well. Tod, please see the comments above. I think that we are ok. The API for IProject.create already states that if a  project description file exists on disk then it will be taken rather than the one being passed into the method.  And if the user tries to set the project location to be within the workspace, then the IProject.create method will fail.  So in short, users will not be able to unzip a project into their default content area in the workspace and then use our API to discover the project  name. But that's ok.  Code implemented. Needs further testing and review. Fixed and released. Available in integration builds > 2002-04-29. Reassigning to UI for integration with Project Import dialog Fixed and released for build > 20020501 Marking as closed.
JDT	Stopping on breakpoint no longer switches to debug perspective March 5 integration build  Stopping on a breakpoint no longer switches to debug perspective. I've kept the same workspace and replaced the plugins, so this is using the  workbench preferences from before.  It looks like UI team changed some things around perspectives (the dropdown with them is gone), perhaps this is related. *** This bug has been marked as a duplicate of 10816 ***
Platform	[typing] copy whole line without selection Editor should have option for copying whole line under cursor when pressing  Ctrl-INSERT | Ctrl-C without any text selection. Are there any other editors supporting this kind of feature? If anything, I  think it should be a different accelerator. At least Visual SlickEdit supports this feature. Moreover, it supports cut (SHIFT-DEL) of current line.  I agree with your, it may be different accelerators. But I think, that it will be good, if your will add settings to standard copy/cut to perform such ' whole  line ' actions. *** Bug 73526 has been marked as a duplicate of this bug. *** *** Bug 80347 has been marked as a duplicate of this bug. *** Do you plan to add it to Eclipse 3.1? Setting target to 3.1 (time permitting). *** Bug 96561 has been marked as a duplicate of this bug. *** in reply to the question in comment #1: idea / intelliJ supports this as well Please, please?  As a long-time Slickedit user, I am having a hard time living without copy-line if nothing selected.  If anyone can point me to a plug-in that provides this functionality, I'd appreciate that in the mean-time. IntelliJ IDEA can do that. *** Bug 201297 has been marked as a duplicate of this bug. *** Let's do this for 3.4.
Platform	[Welcome] Editor View not displaying properly (I am a newbie - please excuse any errors in terminology)  Version 2.0.1 - Win NT4 The (text) editor view (upper right rectangle, with " Welcome " in the title on startup) does not display properly. The heading " Eclipse Platform " appears correctly. After this, the following is displayed (Each - > below represents an arrow icon which is displayed):  T T  - > I    T a  - > P    A a     T b    i - > C    Y a    T O    Y y    a f  (etc..) It looks like display width = 1 ...  (Sorry I cannot be more articulate. I could send a gif which shows the display, if needed.) *** Bug 23212 has been marked as a duplicate of this bug. *** WelcomeEditor. Moved to Platform UI. Which build were you using (Help - > About Eclipse). I have not been able to reproduce the issue on any platform.  Are you still experiencing the problem? > About window showing same problem Did you overwrite an existing eclipse installation?  Do you remember which  version you downloaded?  The timestamp of the files in the eclipse directory may be helpfull here.  When downloading new versions of eclipse, do not overwrite an existing installation. The directory was emptied before the new release was installed.  Timestamp(s): 8/29/02 7:01pm I installed eclipse R2.0.1 (Thu, 29 Aug 2002 -- 18:28 (-0400)) on Win NT4.0  with no issues. Assuming you have decoupled your workspace from your eclipse install directory  I would recommand re-installing (rename old eclipse directory).  Use the -data option on the command line to point to your workspace.  For example:  d:\ide\eclipse -vm d:\jdk\ibm\jdk1.3.1\jre\bin\java -data d:\ide\workspace- R2.0.1 -showlocation  The -showlocation will place the location of your workspace in the title bar. If you could provide more information on how you reproduced this problem I can investigate further.  From what I can tell a clean installation works fine.
JDT	Search does not find patterned type reference in binary project Build 20021009  Searching for type references to junit.framework.* in org.junit (as a binary project) does not find any match. Simple refences to " junit " and " framework " were not added to the index. Fixed BinaryIndexer to add these references. Verified.
JDT	Show Javadoc has no mnemonic The Show Javadoc menu item in the Edit menu has no mnemonic. Build 20020312.
Platform	[Workbench] Context menus too slow The context menu on the ' Packages ' view takes an inordinately long time to  appear.  The time seems to be proportional to the number of items expanded in the tree view.  With a fresh packages view, the menu appears less than one  second after right clicking (on a 550MHz Athlon running WinNT).  If I expand a about thirty classes, the menu takes more than five seconds to appear!  As I  expand the tree further, the menu gets even slower. (Tested against 20011219) The speed seems to depend on how many elements of the tree widget have ever  been expanded.  Collapsing the tree widget does not make the menu fast again. The only way to restore the original speed is to close the ' Packages ' view and  re-open it. I cannot reproduce this. The context menu pops-up fast even when I have  hundreds of tree nodes expanded. Questions: Is the speed different dependening on what type of element you select (project, package, CU, member)?  Do you have additional plugins installed over the SDK or are you running the vanilla SDK?  What other views are visible? Can you reproduce the problem when only the editor and the packages view are open and no other views?  Is changing the selectio slow as well once you have many nodes expanded. It does not seem to matter what kind of nodes are displayed, or what kind of  node I right click on.  The menu takes longer and longer to appear as I expand more nodes.  For a concrete example, I closed all of the views in my Java perspective and opened a new Packages viewer.  I right clicked on the first project, and a menu  appeared fairly quickly (not instantaneous, but quick enough). I then expanded the project.  The first child of the project is an archive  variable, JRE_LIB, pointing at the HDK1.3 rt.jar file.  I expanded that node and expanded all of the packages from com.ibm.CosNaming to java.lang.ref.  Then I scrolled back up to the top and right clicked on the first project again.  It took about 4 seconds for the context menu to appear.  I then expanded the rest of the java.* and javax.* packages.  It took 9 seconds for the first project's context menu to appear.  I then expanded the rest of the packages.  It took 16 seconds for the first project's context menu to appear.  Note that my machine is a relatively slow 550MHz Athlon w/256MB RAM. I'm using HDK1.3 as the VM running Eclipse. Eclipse version is 20011219 (last stable build). Note: changing the selection also seems to slow down, although not nearly as  badly as the context menu.  With all the packages in rt.jar expanded, it takes about 1 second to select a node. (And 16 seconds to get its context menu).  To get the times that I gave for the context menu I first selected the first project, then I right clicked on it.  I'm running a completely vanilla Eclipse install. I saw the post on eclipse corner about this problem and came to check it out.  I definitely experience this problem too. (The first time I open the context menu after selecting an item is the worst - subsequent attempts are much faster.  I do not however seem to be affected by the number of expanded nodes.   I expand all of SWT and the performance seemed to be the same as with only a few nodes expanded.)  Silenio suggested that it may have to do with calls to Program - on KDE we had this disabled for a while and the context menu came up faster.  Erich, is the info regarding the node (such as system editor, system icon) cached? The Open With menu is a standard menu provided by the workbench that we just  reuse. Carboned Nick for advise. I noticed in the Navigator's context menu, that it's doing more work than  necessary for the New... submenu, which the packages view also reuses. It's reading the registry each time, although the impact didn't actually seem  that bad when I profiled it.  It doesn't care about the selection or which  elements are in the viewer, so I doubt it's the culprit. The Open With menu may also have problems.  I'll have a look.  Note that the cost of getting the selection from a Tree is proportional to the number of items in the tree, not the size of the selection. In SWT, it actually iterates over all items.  This does not scale well, but I don't see what SWT can do about it since the OS widget was never designed to  support multi selection, and having the widget cache OS state is generally a bad idea. Since we lazily populate the widget in the TreeViewer, it's not so bad if the  nodes aren't expanded.  Many of our actions (in Workbench and in JDT) get the selection each time to update their enablement, or to determine whether they should be added to the  context menu.  Abstractions like IUpdate or action groups tend to encourage this pattern (which is why I have reservations about pushing IUpdate down into  JFace). I will profile this and try to improve any bits that JDT reuses from  Workbench, and point out anything else I see. Peter, since you seem to be hit worse than other people, I may come by and  profile on your setup, if that's OK. I was able to reproduce it on Windows using Peter's steps. Veronika, you mentioned Linux, but the OS for this PR is Win NT. It might well be worse on Linux though.  Profiling showed the following: - Almost all of the time is in Tree.getSelection() and related SWT  SendMessages. This is called 48 times.   - JDT: RefactoringAction accounts for 16 of these (via IUpdate) - UI: ObjectActionContributor takes 14   - JDT: JavaSearchSubGroup takes 5 - the rest are about 3/4 JDT, 1/4 UI   - see the attached data.html for more details Leaks: - JDT: The getClipboard() methods in PasteSourceReferencesAction and PasteResourceFromClipboardAction leak Clipboard.  This probably has no impact  on performance though. - UI: ActionContributionItem.fill seems to repeatedly add a listener. - UI: There's some evidence of images being loaded and leaked too.  I will investigate the UI ones.  We should try to minimize the number of calls to getSelection() both in JDT and in UI.  If it's much worse on Linux, perhaps  Veronika could investigate why. See defect 11484 for details on the repeated allocation of images. This could  end up being the " image leak " We should redo the measurments given that we reorganized the menus and payed  attention to reduce the number of getSelection calls. Erich, will your team do the measurement or would you like me to? Peter, please let us know whether you see an improvement when you switch to the M5 stable build. Just did a simple test on 20020412: - create Java project - select it - set breakpoint in Tree.getSelection() - pop up menu  I tried it in both the Navigator and the Packages view. In the Navigator, it got one in fillContextMenu where it gets the selection  for the ActionContext passed to the ActionGroups. It also got a bunch in the object contribution management.  It was getting it  once for each of the contributions.  I've changed this to get the selection  once and pass it to all the contributions. So the Navigator now does a total of 2 calls to getSelection().  The Packages view still does 34.  Most are due to the continued use of IUpdate. Also, PackageExplorerPart.saveExpansionState should be changed to use  AbstractTreeViewer.getVisibleExpandedElements() instead of getExpandedElements (). To clarify the previous suggestion, if you use getExpandedElements() it  includes -all- expanded elements, including those that are under collapsed elements.  So if you use this to persist the state, then the viewer is always  populated with all elements you've ever visited, even after shutdown/restart. Using getVisibleExpandedElements() loses a bit of state (the expanded elements under collapsed elements), but it does save the top level expansions which the  user sees. Storing just the selection and revealing it on restore is another option, but  then you do lose some visible state, e.g. I might have 2 projects expanded but the selection only in one.  Using getVisibleExpandedElements() is a reasonable tradeoff between storing every expanded element and storing none. There's a thread in the newsgroup from earlier today where somebody with a  killer fast machine on Win2K is hitting this problem. The new packages views context menu got released in 20020418. All actions in there (with the exception of the refactoring actions) no longer call getSelection but use the selection from the SelectionEvent.  Dirk pls take care of the refactoring actions and verify that getSelection isn't call multiple times anymore. In Build 20020502 getSelection is only called once per context menu in the  packages view. Nick anything else we can do in JDT UI ? I don't think you can reduce the calls to getSelection() any further < g > . I'll run it under the profiler and see if there are any other improvements to  be had. changed prio, but keep it open. we have done what we can do fix the component it was JDT-UI but the assignee is from Platform UI Closing.
Platform	[resources] Could not restart the workspace after an OutOfMemoryError (1GKEZ5V) org.eclipse.core.internal.resources.ResourceException()[567]: java.io.EOFException at java.io.DataInputStream.readUTF(DataInputStream.java(Compiled Code))  at java.io.DataInputStream.readUTF(DataInputStream.java(Compiled Code)) at org.eclipse.core.internal.dtree.DataTreeReader.readNode(DataTreeReader.java(Compiled Code))  at org.eclipse.core.internal.dtree.DataTreeReader.readTree(DataTreeReader.java:121) at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDelta(ElementTreeReaderImpl_1.java:39)  at org.eclipse.core.internal.watson.ElementTreeReader.readDelta(ElementTreeReader.java:87) at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDeltaChain(ElementTreeReaderImpl_1.java:75)  at org.eclipse.core.internal.watson.ElementTreeReader.readDeltaChain(ElementTreeReader.java:97) at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTrees(WorkspaceTreeReader.java:210)  at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTree(WorkspaceTreeReader.java:149) at org.eclipse.core.internal.resources.SaveManager.restoreTree(SaveManager.java:703)  at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:487) at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:988)  at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1311) at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1122)  at org.eclipse.core.resources.ResourcesPlugin.startup(ResourcesPlugin.java:141) at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:647)  at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:758) at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:659)  at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:204) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java:128) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:624)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:618) at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass(DelegatingURLClassLoader.java:60)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java:359) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:632)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:604) at java.lang.ClassLoader.loadClass(ClassLoader.java:257)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:254)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:156) at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:185)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:97) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable(InternalPlatform.java:423)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable(InternalBootLoader.java:468)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:811) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:433) at org.eclipse.core.launcher.Main.main(Main.java:306)  4 org.eclipse.core.resources 567 Problems reading workspace tree. java.io.EOFException  at java.io.DataInputStream.readUTF(DataInputStream.java(Compiled Code)) at java.io.DataInputStream.readUTF(DataInputStream.java(Compiled Code))  at org.eclipse.core.internal.dtree.DataTreeReader.readNode(DataTreeReader.java(Compiled Code)) at org.eclipse.core.internal.dtree.DataTreeReader.readTree(DataTreeReader.java:121)  at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDelta(ElementTreeReaderImpl_1.java:39) at org.eclipse.core.internal.watson.ElementTreeReader.readDelta(ElementTreeReader.java:87)  at org.eclipse.core.internal.watson.ElementTreeReaderImpl_1.readDeltaChain(ElementTreeReaderImpl_1.java:75) at org.eclipse.core.internal.watson.ElementTreeReader.readDeltaChain(ElementTreeReader.java:97)  at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTrees(WorkspaceTreeReader.java:210) at org.eclipse.core.internal.resources.WorkspaceTreeReader.readTree(WorkspaceTreeReader.java:149)  at org.eclipse.core.internal.resources.SaveManager.restoreTree(SaveManager.java:703) at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:487)  at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:988) at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1311)  at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1122) at org.eclipse.core.resources.ResourcesPlugin.startup(ResourcesPlugin.java:141)  at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:647) at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:758)  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:659) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:204) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java:128) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:624)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:618) at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass(DelegatingURLClassLoader.java:60)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java:359) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:632)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:604) at java.lang.ClassLoader.loadClass(ClassLoader.java:257)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:254)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:156) at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:185)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:97) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable(InternalPlatform.java:423)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable(InternalBootLoader.java:468)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:811) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:433) at org.eclipse.core.launcher.Main.main(Main.java:306) Log: Fri Sep 21 13:33:06 EDT 2001 4 org.eclipse.core.runtime 2 Plugin org.eclipse.ui was unable to instantiate class org.eclipse.ui.internal.Workbench. org.eclipse.core.internal.boot.DelegatingLoaderException: org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-in: org.eclipse.core.resources. at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:661)  at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:204) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java:128) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:624)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:618) at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass(DelegatingURLClassLoader.java:60)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java:359) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:632)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:604) at java.lang.ClassLoader.loadClass(ClassLoader.java:257)  at java.lang.Class.newInstance0(Native Method) at java.lang.Class.newInstance(Class.java:254)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:156) at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:185)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:97) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable(InternalPlatform.java:423)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable(InternalBootLoader.java:468)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:811) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:433) at org.eclipse.core.launcher.Main.main(Main.java:306)  NOTES: OT (21/09/2001 2:06:51 PM)  workspace.zip is available on Q:\viper\problem_reports\1GKEZ5V JohnA (9/24/2001 10:38:14 AM)  The core .tree file has been corrupted.  If an OutOfMemoryError occurred as the workbench was being saved, the file on disk will be corrupt.   His tree file is 123.tree, but the safetable file says tree=124.  So if it failed while trying to write tree 124, shouldn't it revert to trying to load the old 123.tree instead?  RTP (10/1/01 9:55:41 AM) Sounds like a good solution for this case. Should look at how much we can trust in this numbering sequence. PRODUCT VERSION:  135 Was this work done by the recent work involving better failure case when  starting the workspace with bogus files? John, please investigate. No, I did not fix the corrupt tree file case.  The reasoning is partly that if  the .tree file is corrupt, you're dead.  We could create a new tree, but the  user would be left with an empty workspace... perhaps this is better than not starting at all.  Ideally we could use the safetable to grab the previously  saved tree, if available (ie., always leave around current tree plus previous tree).  But then, what happens if the safetable is corrupt? *** Bug 14123 has been marked as a duplicate of this bug. *** Investigate options for robust startup for bogus safe-table file and tree. *** Bug 18008 has been marked as a duplicate of this bug. *** *** Bug 23932 has been marked as a duplicate of this bug. *** *** Bug 27774 has been marked as a duplicate of this bug. *** *** Bug 28826 has been marked as a duplicate of this bug. *** *** Bug 29431 has been marked as a duplicate of this bug. *** There is a thread on the newsgroup about this, and it seems pretty clear from  this bug report that this is not easy to solve at its root. Perhaps as a workaround, core.resources could provide a " Recover Projects " facility that would read an old workspace's .projects directory and rebuild  those projects in the new workspace.  They would still lose other metadata, but most people can probably live with resetting preferences.  This is an  alternative to " File-- > Import-- > Existing Project " many times.   Obviously a better solution would be for each plugin to have the ability to recover what metadata it can from another workspace, but that is well beyond  the scope of this bug. -Andrew What about saving a checksup of key files (MD5 could do) to detect that they are not what they are supposed to be? and if this is indeed the case, just recover whatever possible? We actually have started a tool which does what you describe above. You point  it at a corrupt workspace and it tries to rebuild it the best it can. Reviewing this code and releasing this tool is on the " to-do " list... The ' new ' point in my comment (or maybe not new), is a way to detect a  corrupted workspace automatically. for this, you need support from the core (to keep a the checksum every time it  saves). I think there are a few things that might be done to make this less traumatic for the user if he happens to stumble upon an OOM error (which seem to be the most common cause of workspace corruptions, based on the bug reports listed above).  1) Making shutdown as tight as possible, not requiring persisting of so much critical data. I don't know the internals, but perhaps more of the info can be persisted " as you go " instead of waiting for workbench shutdown. Possibly in the background. The goal should be to get shutdown as small as possible, so VM failure at that point is not so tragic.  2) A fallback to " last known good " configuration (as has been discussed in this and other bugs) could be implemented in Eclipse startup. The process to recover a workspace that has bad .tree and/or .snap files is pretty simple to fix without losing a lot of data, but it should be built in as much as possible. 3) In lieu of the above, a little more helpful logging pointing to the exact file(s) that are corrupt is needed, as well as some prominent documentation about how to recover from a corrupt workspace. It should not be so difficult for users to learn what to do to get back to work. *** Bug 34321 has been marked as a duplicate of this bug. *** Increasing priority so this bug doesn't get lost. (like it already seems to  have for 2.1) For RC3 investigate any short-term fixes to help the user when encountering  this problem. Find more definate solution for 2.2. The problem is that the master table is saved in the finally block of  SaveManager.save(); So this looks like what is happening:  - start saving workspace tree (1.tree is ok and on disk, we are saving 2.tree) - get an exception saving 2.tree so this file is now only half there - run the finally block - removes 1.tree - writes master table which has reference to 2.tree So on startup we read the master table, it tells us to read 2.tree and then we  blow up. Ouch. We need to refactor the code so if we have a failure when saving, we do not  delete any files. We should ensure that all the old files are there so we can at least try to use them to bring the platform up.  Unfortuanatly too risky to make changes in this area for 2.1. *** Bug 35201 has been marked as a duplicate of this bug. *** > Increasing priority so this bug doesn't get lost. (like it already seems to > have for 2.1)  hmm, bugs of this severity should not simply get lost *** Bug 36626 has been marked as a duplicate of this bug. *** Fixed.  Cleanup code has been moved out of the finally block.  This means cleanup of unused files will not happen on abormal save termination, so the valid tree file will not be deleted.  Also moved the code to commit the master table immediately after writing the tree, otherwise an error between those operations would result in a master table pointing to the wrong tree. Here is the revised timeline from DJ's comment:  - start saving workspace tree (1.tree is ok and on disk, we are saving 2.tree) - get an exception saving 2.tree so this file is now only half there - abort the save immediately Now, the master table still has a reference to 1.tree, and we have 1.tree and 2.tree on disk.  On next startup, 1.tree will be read, and on next shutdown, 2.tree will be overwritten with the next valid save state. *** Bug 33138 has been marked as a duplicate of this bug. *** *** Bug 39131 has been marked as a duplicate of this bug. *** *** Bug 40516 has been marked as a duplicate of this bug. *** *** Bug 42954 has been marked as a duplicate of this bug. *** *** Bug 45216 has been marked as a duplicate of this bug. ***
Platform	OperationCanceledException is logged. F1 build. After starting help search and clicking cancel during indexing, the log gets filled with the OperationCanceledException.  This exception should be handled  internally and not be logged. !SESSION May 23, 2002 18:54:06.836 --------------------------------------------- java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT enabled: jitc) BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US Command-line arguments: -os win32 -ws win32 -arch x86 -feature  org.eclipse.platform -install file:D:/eclipse 0521test/ !ENTRY org.eclipse.core.resources 1 4 May 23, 2002 18:54:06.836 !MESSAGE Reference action not found: additions !ENTRY org.eclipse.help 4 0 May 23, 2002 18:54:19.904 !MESSAGE Exception occured executing help search !STACK 0 org.eclipse.core.runtime.OperationCanceledException at org.eclipse.help.internal.search.IndexingOperation.checkCancelled (IndexingOperation.java:73) at org.eclipse.help.internal.search.IndexingOperation.execute (IndexingOperation.java:131) at org.eclipse.help.internal.search.SearchManager.updateIndex (SearchManager.java:191) at org.eclipse.help.internal.search.SearchManager.search (SearchManager.java:138) at org.eclipse.help.ui.internal.search.SearchOperation.execute (SearchOperation.java:70) at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:64) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1361) at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:78) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) Fixed for M2
JDT	no refactoring should be available on .java files from resource folders (1GF5UQM) AK (6/11/01 4:35:16 PM) 1. add a resource (not source) folder to your project  2. create a java class in it (or, rather, drag and drop a compilation unit in there) 3. observe: you cannot rename the compilation unit (i mean, it only renames the file then)   which is correct - it just happens to ba a .java file but it is just a resource 4. however, you can invoke all other refactorings - which is wrong  AK (6/11/01 4:39:54 PM) why is it a ICompilationUnit then?  why opening it opens the java editor? why is the outliner populated?  why ... it is just a resource file with .java extension moved to ' active ' PRODUCT VERSION:  122 refactorings should only be enabled for java files on the build path. otherwise refactorings don't makes sense since we only index Java files on the  build path. not a problem now - i did nothing but .java files are in folders (out of  classpath) are not reported as cus anymore (only as resources) closing
JDT	Stepping is slow 20011127  Stepping appears very slow.  Underlying steps appear to happen in reasonable time, but UI takes VERY long time to update.  Test case involves recursive  method that generates 500 stack frames.  Hold down F6 key. There were two issues that Jared & I found and addressed:  (1) Out of synch detection was creating one image descriptor per stack frame. This has been optimized to only create unique image descriptors, and reuse  existing ones. (2) A long standing problem of not caching as much data in JDIStackFrame as  could be cached.  Data such as ' this object ' , ' declaring type name ' , and others  are now being cached.  This dramatically improves performance because it eliminates one or more JDWP calls per stack frame.  Also, in  JDIThread.computeStackFrames(), we now only recreate stack frames that need to be created.  Previously, if the top stack frame had changed, ALL stack frames  were recreated.  This also had a problem of missing cases when the top stack frame had NOT changed, but deeper stack frames had changed (step filtering can  lead to this situation). Fixed.  Created a ' last underlying stackframe ' field in JDIStackFrame to get  around problem of nulled out underlying stack frame.  This is only accessed from computeStackFrames, and is only used for an equality check. Please verify. Please verify. Changed one thing: When the stack is the same size and the methods in the top  frames (prev and current) are not the same, create all frames rather than just replacing the top frame. (There is a theoretical case where you could be in a  different method on the call stack if a native called back into java code, after a step). Verified. Stepping is slow...about half of the time, when I step, the icons for all the  stack frames flicker to grey ( with running overlahy), and then back. This seems  to cut the speed of stepping way down. A Win2000 issue? Unable to reproduce on either a fast or slow Win2000 machine. Verified.
Platform	[Viewers] Performance: Viewer refresh need not setData or update map if elements identical (1GHWGFH) In TreeViewer.updateChildren,  there is the following code:     if (newElement.equals(oldElement)) { // update the data to be the new element, since although the elements      // may be equal, they may still have different labels or children item.setData(newElement);     mapElement(newElement, item); }     else { ...    } If newElement == oldElement, this need not be done.  The new code should be: if (newElement == oldElement) {     // don't need to update data or map when elements are identical    } else if (newElement.equals(oldElement)) { // update the data to be the new element, since although the elements      // may be equal, they may still have different labels or children item.setData(newElement);     mapElement(newElement, item); } else {     ... }  The same change should be made to TableViewer's refresh.  NOTES: PRODUCT VERSION: 128 AbstractTreeViewer.updateChildren has had this check in since 2.0.
Platform	[JFace Text] Internal error in PDE XML source editor when opening context menu The following NPE is thrown when opening the context menu in the PDE XML source  editor. This is due to an unchecked access to the ids of the text editor's  context menus. java.lang.NullPointerException  at org.eclipse.ui.texteditor.AbstractTextEditor$2.menuAboutToShow (AbstractTextEditor.java:738)  at org.eclipse.jface.action.MenuManager.fireAboutToShow (MenuManager.java:220)  at org.eclipse.jface.action.MenuManager.handleAboutToShow (MenuManager.java:253)  at org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:250) at org.eclipse.jface.action.MenuManager$1.menuShown (MenuManager.java:280) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:112) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:839) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)  at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:2920) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2613)  at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1116) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1794)  at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method) at org.eclipse.swt.widgets.Menu.setVisible(Menu.java:777)  at org.eclipse.swt.widgets.Control.WM_CONTEXTMENU(Control.java:2745) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2596)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1794) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1155) at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:71)  at org.eclipse.swt.widgets.Control.WM_RBUTTONUP(Control.java:3595) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2644)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1794) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)  at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1160) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1198) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:815)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:798) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:821) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) *** Bug 7096 has been marked as a duplicate of this bug. *** Fixed. Tested in 20020129.
Platform	Focus not given to project name field in wizard (1GEV88H) On linux (have not tried on windows)...  - Self File- > New- > Project...  - Select " Basic " , select " Project " - Click on the " Next " button   Notice focus is no given to the project name field. It looks like the " Back " button has focus. This could be the same  for other wizards as well (have not verified). NOTES:  KH (6/5/2001 5:33:31 PM) Verified that this is a Linux only problem.  Fixing this would be a significant usability improvement on Linux. SN (6/7/01 1:13:05 PM)  Here is the problem - on X, a control will not take focus when it is not " viewable " .  In addition to the usual restrictions about being enabled and visible, the control must also be " showing " .  For example, if the control is clipped by the parent so  that is cannot be seen by the user, it will not take focus.  There is nothing I can do to work around this behavior on X (but I'm still thinking about it because I know  that this behavior is unwanted). So, on Windows we implemented to X behavior but we didn't emulate the " showing " part because there is no Windows API to determine this and it would be too expensive  and error prone to compute this.  On Windows, all of the controls in the hierarchy are " visible " , but one has size (0,0) so we allow the focus to happen on Windows.   The fix should be for focus to somehow be refused on Windows (the unwanted behavior).  I would also really love to have focus be accepted on X and I will try  again after the freeze to make this happen, rather than implement the unwanted but correct X behavior on Windows.   McQ (08/06/2001 1:32:20 PM) - Not for June.   McQ (26/06/2001 2:48:55 PM) - SN to try again. PRODUCT VERSION:  0.118 (SDK) This has been fixed for a while.  We modeled the X behavior on Windows.
Platform	Edit button in working set dialog does nothing Build 20020425: Open the working sets dialog " Window > Working sets " and select an existing working set and select it from the list then select the edit button nothing happens. This has been working properly for ages, now it's broken. The working set you are trying to edit was probably created with build 20020418  or 20020419. Editing a new working set was broken in these builds because the edit page id was not saved when the working set was created. See bug 14195. To fix your old working sets that you created with these builds you can either delete them and recreate them or fix your existing working sets in the  workingsets.xml file in the org.eclipse.ui plugin metadata directory. The missing edit page id is the editPageId= " org.eclipse.ui.resourceWorkingSetPage " attribute/value pair in the workingSet tag. Also added code to automatically add the missing editPageId when an old working  set is read from xml.
Platform	VCM: remembering version info for a loaded project version (1GDQYDS) If you have an empty workspace and add a project version to it, the project  version contents are added, but the sharing is not saved (we don't even know  from which repository it came from). This causes the following usability problems: 1. The user cannot determine his project lineup. For example, in VAJ the user could see the version name in brackets beside the project, even if it was a  version or an open edition: ProjectFoo (v102). Also in CVS, if you update from a version, the local cvs workspace tracks that you have a version loaded and  not a team stream. 2. To update your workspace with another version or with a team stream contents,  you have to guess from which repo the original contents came from. There may be other issues as well...   NOTES: Jean-Michel (5/14/01 11:03:50 PM)  We must soon agree on this PRs priority. KM (5/15/01 7:30:08 PM)  If we just connected it to HEAD of the repo it came from we would do what most people would expect. Optionally we could prompt, but that's a bonus.  JohnA (5/16/2001 7:40:03 PM) Connecting to HEAD makes sense, but it feels icky to be automagically setting sharing when the  user may not want it.  Could prompt... KM (21/05/01 10:30:20 PM)  If someone wants in a different stream they are likely advanced and will know to change it. Could make a preference with default=connect to HEAD, but this is PRI 2. PRODUCT VERSION: 106 jdk We now correctly set the repo location information on project load, and display  the tag in the decorator.
Platform	Internal error when invoking " Restore from Local History " in Outline view smoke for 20021001  1. Open TestCase.java 2. Select the method at the end of the Outline view 3. From context menu select " Delete " 4. Now you must be fast: in the dialog press " Yes " , go to the previously selected method, open the context menu and select " Restore from Local History... " fixed for I20030306:  Showing Info dialog: " Selection is no longer valid " (applies to Restore, Compare, and Replace JavaElement actions)
JDT	Can add the same exception breakpoint multiple times Click on the add exception breakpoint button Select AccessControlException Repeat indefinately. The list should be filtered based on what is already added. This will make this dialog even slower to realize...would it be too ugly to let  the user select the duplicate and then not create the breakpoint but rather select and scroll to the one already existing? Attempting to prefilter the list was exceedingly slow. Now there is validation on the selected type to see if that exeption breakpoint already exists.  Status is displayed to the user. Please verify. Verified.
Platform	[resources] IndexedStoreException during shutdown Build 20020528 Linux-GTK I got the following exception written to my log many times when I shut down  Eclipse. The stack traces in my log were coming from different entry points, but all ended up in the same place.  !ENTRY org.eclipse.core.resources 4 272 May 29, 2002 11:26:31.772 !MESSAGE Could not close indexed store:  /home/jburns/tmp/eclipse/.metadata/.plugins/org.eclipse.core.resources/.root/.properties. !STACK 0 IndexedStoreException:null at  org.eclipse.core.internal.indexing.IndexedStore.commit(IndexedStore.java:137) at  org.eclipse.core.internal.indexing.IndexedStore.close(IndexedStore.java:105) at  org.eclipse.core.internal.properties.IndexedStoreWrapper.close(IndexedStoreWrapper.java:68) at  org.eclipse.core.internal.properties.PropertyStore.shutdown(PropertyStore.java:429) at  org.eclipse.core.internal.properties.PropertyManager.closePropertyStore(PropertyManager.java:38) at  org.eclipse.core.internal.properties.PropertyManager.shutdown(PropertyManager.java:177) at  org.eclipse.core.internal.resources.Workspace.shutdown(Workspace.java:1443) at  org.eclipse.core.internal.resources.Workspace.close(Workspace.java:260) at  org.eclipse.core.resources.ResourcesPlugin.shutdown(ResourcesPlugin.java:180) at  org.eclipse.core.internal.plugins.PluginRegistry$2.run(PluginRegistry.java:274) at  org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802) at  org.eclipse.core.internal.plugins.PluginRegistry$1.visit(PluginRegistry.java:287) at  org.eclipse.core.internal.plugins.PluginRegistry.accept(PluginRegistry.java:51) at  org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins(PluginRegistry.java:290) at  org.eclipse.core.internal.plugins.PluginRegistry.shutdown(PluginRegistry.java:256) at  org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown(InternalPlatform.java:496) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at  org.eclipse.core.internal.boot.InternalBootLoader.shutdown(InternalBootLoader.java:842) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:744) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)  at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24) Are we still seeing this on Linux? I haven't seen this in a long time. Closing. Please re-open if you see this in the latest builds.
Platform	Copy in Package Explorer should not copy CVS files When I copy a folder in the Package Explorer, the associated CVS files get  copied as well. This leads to problems with CVS in the future. Steps to reproduce:  1. Create a Java project TestCVS 2. Select " Properties " of the Java project. 3. Under the source tab, select " Use source folders contained in the project " . 4. Delete the JRE_LIB from the project (don't know if this is necessary) 5. Create a folder foo. 6. Create a folder com under foo. 7. Create a folder oti under com. 8. Create a folder bar under oti. 9. Put the following class in the folder bar: package com.oti.bar; public class Foo { } 10. Synchronize outgoing changes with CVS, and commit everything. 11. Now, create a folder copyfoo under TestCVS. 12. Select the folder com under foo, and press ^C. 13. Select the folder copyfoo and press ^V. 14. You now have two folder structures that look the same. 15. Now open an explorer on the Workspace directory, and look in TestCVS\copyfoo\com\CVS\Repository 16. Note that the Repository is TestCVS/foo/com, and not what it should be (TestCVS/copyfoo/com). This means the IDE will get out of sync with the  repository, mistakenly telling you everything has been updated when it hasn ' t,  and replacing the wrong files in the repository. we use IResource::copy not sure how we could cause that problem or make it disappear. *** This bug has been marked as a duplicate of 24156 ***
Platform	Bug when switching to another application  when find dialog holds the focus build 20020521  1) On the Java editor, press Ctrl+F, keep the focus on the find dialog 2) Using Atl+TAB (or the windows task bar) switch to another application  3) Toggle back to Eclipse 4) Only the find dialog will return to front, the eclipse workbench itself will  stay on the back. Same problem do not happens for another dialogs like the search dialog. Note on step 2: Is easy to see the bug when switching to a maximized application. Tested on W2K, and test on Linux Motif where the bug is not present. Probably because FindReplaceDialog is created with SWT.MODELESS. Moving to SWT for comment. Platform behavior.
JDT	Ant javac adapter always reports build successful even if there are compiler errors The execute() method of our ant javac adapter always return true even if compile errors are found during the compilation process. This can be easily fixed and would make our custom javac task consistent with the ant default javac task. Fixed and released in 2.1 stream. We should backport it to 2.0.2 stream. Change milestone. Backported to 2.0.2 stream. Verified.
JDT	Move multiple files: Bug with progress monitor [Refactoring] 20020803  - Select multiple CU's and drag & drop them to a different package. - Progress monitor goes quickly to 100% and stays there while doing things. will decide for rc1 what to do fixed now
Platform	cvs syncronize with repository doesn;t work correctly i have some file changed in  dir/sub_dir/sub_sub_dir/SomeClass dir/sub_dir/sub_sub_dir/sub_sub_sub_dir/SomeOtherClass  when i make syncronize with repository on dir and sub_dir, SomeClass and SomeOtherClass was not found as changed file syncronize with repository from sub_sub_dir return SomeClass ad changed files but after i commited SomeClass in syncronize with repository view  SomeOtherClass was displayed as changed sorry for such complex schema :-) but that's what i have if i wrote something wrong i will change dir,sub_dir, SomeClass ... and so on with real names i inspected the bug take a look at http://bugs.eclipse.org/bugs/show_bug.cgi?id=15093
Platform	List get/setSelectionIndex inconsistency (1FMQFZY) RJS (12/06/99 19:02:34) Display this code in the scrapbook.  The result is 2 on motif and 0 in windows. Shell s = new Shell();  List l = new List(s, SWT.MULTI); String[] items = { " text1 " , " text2 " , " text3 " };  l.setItems(items); l.setSelection(items);  l.getSelectionIndex(); NOTES:  JM (12/07/99 10:41:04)- The method is speced as returning the first selected index, so the motif behaviour is incorrect.  DR (04/25/00 09:09:39) The method is actually speced as returning the index of  a selected item that contains the focus rectangle or the index of the first selected item is return.   On Windows the first item gets the focus rectangle, on AIX the last item gets the focus rectangle so the  behaviour of getSelectionIndex() is correct.  I'll check  with steve to see if we want to rationalize the behaviour of the focus rectangle between the two platforms.  The following  code displays the list so we can see the focus rectangle. Shell s = new Shell();  List l = new List(s, SWT.MULTI); String[] items = { " text1 " , " text2 " , " text3 " };  l.setItems(items); l.setSelection(items);  l.getSelectionIndex(); s.setBounds(10,10,200,200);  l.setBounds(20,20,100,100); s.open();  DR (4/25/00 11:22:56 AM) Consulted with Steve.   Moving to inactive.  Since the only  discrepency case is getSelectionIndex() on a multi select list. McQ (27/11/2000 3:04:23 PM) -   Moving back to inactive for future review. PRODUCT VERSION:  SWT 0.33 We will not get in the way of the platform behavior.
Platform	Launcher: Splash screen on unix 8 bit display can change color(s) Observed on Aix (8 bit color palette). Build F1. Start Eclipse. Splash screen comes up - then changes one or more colors as Eclipse is being  loaded. (Netscape was not run) I'm not sure if there is anything we can do about this. If Eclipse is  acquiring the colors, and the palette is limited, then color values can change.  I believe this is expected, but you can investigate a possible workaround. More items related to splash screen display on unix/linux 8 bit depth.  1. splash screen ' completing install ' hard to read on Solaris 8 bit (splash screen uses anti-alising font which renders pretty badly) 2. -critical- line missing in NgImageData.c function ng_palette_bucket_t *NgRGBIndexCreate () misses the line: return table; As a result of 2., new launchers must be built for linux/unix systems, in time  for F2. I suggest doing that on friday may 31st. I'm still looking into 1., to  see if further changes to the code are required. I'll keep you posted. checked-in fix for splash screen ' completing install ' . The motif 8 bit code in  NgImageData.c was assigning the black color to a bogus palette index. Fix available in build 20020531. Won't fix. Workaround is to allocate and free colors for the pixmap but at  this time we prefer to have the launcher do minimal work and not consume the palette resources.
Platform	GP opening two files at the same time - File - > New - > Project - Plug-in Development - > Plug-in Project, Next - set Project Name = asdf, Next, Next - click Create a new plug-in using... radio - select Hello World, Next, Finish - expand the new project in the Navigator, including the contained src/asdf tree - hold CTRL and select in this order: .classpath and asdfPlugin.java - right-click - > Open - get the attached dump after a few seconds *** Bug 14522 has been marked as a duplicate of this bug. *** Fixed with Steve.  The focus widget was becoming invisible as a result of the  java editor opening, which was prompting motif to move focus elsewhere and fire spurious focus events.  So we now detect invalid focus cases and act  appropriately before Motif gets a chance to " fix " things < g > . *** Bug 18515 has been marked as a duplicate of this bug. *** *** Bug 18899 has been marked as a duplicate of this bug. ***
Platform	file editors pref page - buttons should be top-aligned with tables buttons on the file editors pref page should be top-aligned with tables - like  in Perspectives pref page Obsolete
JDT	Duplicate non-qualified class names no handled by import generator If I have two types: org.acme.goodstuff.MyType and  org.acme.coolstuff.MyType and I use Code Completion (or something that invokes the smart import logic).  The smart import stuff generates imports for both references to these types, ignoring the fact that one of them has to remain qualified in the code in  order not to conflict with the other.  You cannot have two import statements which resolve the same non-qualified type identifier.   The standard library has some instances of this (for instance the Interface ' Certificate ' and the abstract Class ' Certificate ' ). Bug is in UI side, the codeassist engine did indicate qualification was  necessary given an import was already there for the other type. Before adding an import for a qualified type, it should first double-check if  another single type import is targeting the same type simple name. If so, then it should not insert an import, and go for a qualified type name insertion  (don't think you need to interact with user there). *** Bug 9474 has been marked as a duplicate of this bug. *** I would like some way to indicate at code assist time that I want to insert the  fully qualified type name versus adding the import statement.  Often I already am familiar with the collision types.  Perhaps a shift+enter or something like  that could mean " code assist without import assist " . fixed for 20020430 (If there is already a import statement for a different type with the same  simple name, code assist (add all stub generators) adds the fully qualified name instead)  The feature Randy suggested is also on my wishlist. Time is a problem.
Platform	Error message does not have you investigate different case in directory name. CVS server on a Linux box, client on a Windows machine, and changing letter case - that's asking for trouble, and I know I have no reason to complain.  (It wasn't me changing the letter case, either.)  But the error message you give on project checkout could be improved: " Resource ' Project/src/images/beans/ ' could not be created because a resource of the same name already exists, except with different cased letters. " This sent me looking for " Beans/beans " trouble. None to be seen.   In fact, the problem was that the upper directory is no longer " Images " , but has been renamed to " images " .  I suggest the error message should hint that this may be the problem: " ...except with differently cased letters somewhere in the string given above (including the directory names given). " Or something to this respect.'m talking about. Fix released to HEAD
JDT	ManageWatchpointAction doesn't handle configs with no projects The ManageWatchpointAction performs a java model search for an IField.  Currently, the search is limited to the project associated with the launch configuration. For launch config types with no associated project (e.g.  Runtime Workbench), we don't perform any search.  The end result is that watchpoints can't be added via the variables view or  expressions view for such launches. When no project is found, we should search the workspace. Fixed. When no project is associated with the launch config, we search all  java projects in the workspace. We can now set watchpoints in the variables view while selfhosting. Please verify. Verified.
JDT	Java structure compare fails too many times Using 1009, when I synchronize with the cvs server and I compare my outgoing changes with the repository contents, I get too many times " Java Structure Compare (Can't Compare Structures) " . This didn't happen in the past. I don't know what changed, but this is frustrating and make the whole synchronization process very difficult to use. It is not always the same files which are failing. I didn't get anything in a .log file. Forwarding to JDT since the problem is in the Java Structure Compare My guess that this comes from different line delimiters used. Different line delimiters should not let the structure compare fail. Since I didn't touch the code since 2.0, the parser must have changed. Will investigate. I see the same problem with   Build 2001015 1. Checkout TextViewer (I took revision 1.5) (org.eclipse.jface.text) 2. In line 84 change value of TRACE_ERRORS from " false " to " true " 3. Synchronize with repository == > Can't Compare Structures is displayed  Note: also happens when comparing with latest or local history Increased severity to critical: couldn't compare 2 out of 6 files. Since 2.0 the parser reports problems that are not syntax related, e.g. tasks like " todo " etc. Changed Java str ucture compare so that only syntax errors abort the parsing. Fix released on 20021016.
JDT	organize impors: should not touch files if it does not modify them 2.0 select a package and run organize imports on it - every file is touched (cvs dirty flag appears) regardless if it was modified or not happens for files not open in an editor *** Bug 23022 has been marked as a duplicate of this bug. *** fixed > 20020924
JDT	preference to toggle auto indent (on/off) I would like to be able to turn off the " auto indent " feature for Java source  file editors.  I've always found this feature to be counter-productive. I hope you mean only autoindention for Methods, fields,... Not the indent at  all. This will be really quite nice. It saves space. Especially, if you only show  one method in makes no sense to indent the whole text. no action planned
JDT	missing mnemonic  in jarpackage wizard Page 2 no mnemonic on label ' Build projects if not built automatically ' Page 3 no mnemonic on label ' Main Class ' (Is this one because the user should always  use to Browse button? > 20020409. JRT. Fixed > 20020410
Platform	[find/replace] find in scope - java only or not is find in scope limited to java editor?  if so - then this option should be disabled when i open the dialog in other places  if not, then the color preference should be move out of java editor and chacking ' Selected Range ' in the dialog should actually do someting  (currently it just clears the selection without even coloring it) Given that the scope is not properly indicated I suggest to remove the line  background highlighting to indicate the " selected range " .  When clicking " selection only " the selection should not be cleared. It can be  changed on first replace. If the background highlighting is removed, it's even worse, since the user  expects the selected range to be accurate to the character, while it is not. That's much more surprising. The way it is now, the user will notice the first time he uses the feature that the scope precision is accurate to the line, and will probably accept it.  I will consider leaving the selection untouched when the scope is set to " selected lines " . Unassign due to staff changes. Confirm that this is still not fixed in I20030924: the functionality is here but the lines are not highlighted. Oops. should not be marked as fixed. the only missing thing is a preference UI to set PREFERENCE_COLOR_FIND_SCOPE. Right component is Platform Text. *** Bug 50546 has been marked as a duplicate of this bug. *** *** Bug 129242 has been marked as a duplicate of this bug. *** Fixed in HEAD. Available in builds > N20060224-0010. *** Bug 134409 has been marked as a duplicate of this bug. ***
Platform	[TM] sync info does not get purged when deletion conflicts are autoresolved GetSyncAction#run() does not get rid of the local sync info for files which have been deleted locally. The reason for this is that there doesn't apear to be an API through which sync info can be deleted without attempting to delete the file as well.  Possible solutions include: a) Modifying the appropriate get() method to ignore failure upon file deletion attempt if the file doesn't exist ... Or b) Adding a method to allow purging the sync info on a resource. This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this  bug is important, feel free to reopen it.
JDT	Java Model not updated properly Win32 0412 Integration  I am not sure how to describe the various problems I am now seeing since I have seen a variety of problems.  However, they all seem to have a common  theme.  The underlying Java Model for a given class is not being updated properly as new methods are added or methods are changed.  The two examples that I am consistently running across now are: 1) Search for a given method, and double click in the Task window to bring up  the java source.  Add a new method to the file.  I noticed that the Outline view nor the Type Hierarchy were updated with the new method.  The subclasses  which did not implement the abstract method were not flagged with errors. 2) Modified a method signature by adding a new parameter.  I received two  errors in my task where classes were using the API.  The first one was changed without a problem.  However the second one, when I try to use Context Assist,  the method is showing 2 parameters instead of 3, and the new API added above does not appear as an option.  After closing the window with the added  parameter, the Context Assist is showing 3 parameters but the new method is not appearing as a valid choice.    Its almost like there are multiple working copies and what I see is the wrong one.  So when I close the window and re-open the file, everything is ok. I think the problem is related to the fact that I marked all my source read- only.  I open the source as read-only then modify the properties to disable the read-only flag.  The editor changes to writable, but I notice that my  changes are not showing up in the Outline view. The internal buffer implementation used to cache the read-only flag. It now  checks the underlying resource.
Platform	[Standard Components] Wrong help for file system import wizard page (1GIV8L6) Select File- > Import  Select File System wizard and press Next Press F1 and notice the help is for the Export File System wizard.  NOTES: SA (10/9/2001 2:59:05 PM)  As of build 0.202, pressing F1 says there is no help available. It's the  same for the export wizard also. PRODUCT VERSION:  0.131 Obsolete
Platform	DBCS: Add from Local History incorrect for DBCS project name M5, WindowsXP Japanese  STEPS 1) create project with DBCS 2) create and edit some files under the project 3) right click at the project and select the " Add from Local History... " Problems - Upper left pane displays bogus for the DBCS project name - If I click and select the one in the Available files, nothing happnes in the right upper pane and bottom pane. This case DBCS project name was \uff33\uff37\uff34\u30b5\u30f3\u30d7\u30eb in Unicode representation Please investigate and make recommendations to Compare. Please try on JDK 1.4. I've confirmed that it also occurred with Sun java 1.4. Tried this using the Husrsley 1.4 VM. There are two problems   1) The name of the project shows up correctly in the dialog but the path in the list has garbage characters 2) When you select an entry the resource history does not show up. Moving to Core prioritised must fix for 2.0 release Fixed.  The problem was in HistoryStoreEntry.getPath(). Paths are encoded in the  entries using UTF8, but it was converting back to a string using the default encoding.  The fix was to convert back to UTF8 using our conversion helper  class: return new Path(Convert.fromUTF8(pathBytes));  Released. verified with 20020426 *** Bug 14257 has been marked as a duplicate of this bug. *** verified
JDT	class files not updated Build 20011025  1) switch to the navigator 2) drill down into a folder with class files for which the source    belongs to the project 3) open a class file - remember the outline 4) close the editor 5) open the corresponding source file 6) rename a method 7) build - > a new class file is produced 8) open the class file again - > the outline you see is the same as the one in step 3) Refresh from local, etc. don't have any affect.  Expectation: In step 8) the outline should refect the rename of the method. Was the classfile located in the binary output ? If so, I am surprised we did  allow to do anything for it (mapping source etc...) Defer Jerome - pls ensure the case where the output of P1 is a lib folder of P2 works  in this case. If above scenario works, then pls close this defect. Verified it now works. Closing.
Platform	[Outline] Outline View text cut off on Linux On Linux the text for the Outline View is cut off if there is no input for it.  STEPS 1) Open a plugin.xml 2) open an Outline View - it will have the contents of the PDE editor 3) Close plugin.xml 4) Outline View will show " An Outline is not Available " but it will be cut off Do you mean that the view is just not wide enough to show the string? This seems like correct behaviour. Wrapping the string would look strange. No - the top and bottom of the text are cut off. Problem with computeSize on Linux. Logged Bug 15538 Unable to reproduce with I20030520 on either linux-motif or linux-gtk.  On both of these platforms, I did the following: - in the resource perspective, open a plugin.xml (org.eclipse.ui/plugin.xml) - note that the outline view is populated with data - close the plugin.xml - note the error " An Outline is not Available " appears (entirely) - reopen the plugin.xml - resize the Outline view so it is too narrow to have " An Outline is not Available " on one line  - close plugin.xml - error message did appear and wrapped on the screen so that all characters were visible However, I did note that if the size of the Outline view was too narrow to hold a single word (e.g. " Available " ) this word would not wrap on the screen but would be cut off and there was no scrollbar to get at the rest of the characters. Tod and I both agree that this bug is now fixed.
Platform	[Workbench] user specified titles for eclipse.exe windows Eclipse requires a new command line argument so the user can specify a titles  for eclipse.exe windows as follows: -title aString  ---------------------------------------------------------------------------- " John Arthorne " < john_arthorne@o_ti.com > wrote in message  news:3C7EB740.22732468@o_ti.com... > The main title is supplied by the product configuration.  It can be changed > by editing: > > plugins/org.eclipse.sdk/product.ini > > You can also change the icon in this file, which is really useful for > distinguishing between different installs. > > > > David Corbin wrote: > > > dave- wrote: > > > It appears we are requesting a new feature, a new command line argument > > > -title aString > > > > Yep.  you came up with it.  Why don't you file the " bug " . > > > > > > > > " David Corbin " < dcorbin@mperitek.com > wrote in message > > > news:3C7E632A.5080307@mperitek.com... > > > > > > > Veronika Irvine wrote: > > > > > > > > > Use Shell.setText(). > > > > > > > > > > Note that you need to have the correct style bits when you create the > > > > > > > > Shell > > > > > > > > to get the title displayed.  The correct style bits are any of: > > > > > - new Shell(display) - no style bits specified, get the default > > > > > - SWT.TITLE (can be combined with several other styles such as > > > > > SWT.RESIZE and SWT.CLOSE) > > > > > - SWT.DIALOG_TRIM > > > > > > > > > > Here is a quick example: > > > > > > > > > > public static void main(String[] args) { > > > > > Display display = new Display(); > > > > > //Shell shell = new Shell(display); > > > > > //Shell shell = new Shell(display, SWT.TITLE | SWT.CLOSE | > > > > > > > > SWT.RESIZE); > > > > > > > > Shell shell = new Shell(display, SWT.DIALOG_TRIM); > > > > > shell.setText( " Hello " ); > > > > > shell.open(); > > > > > while (!shell.isDisposed()) { > > > > > if (!display.readAndDispatch()) > > > > > display.sleep(); > > > > > } > > > > > display.dispose(); > > > > > } > > > > > > > > > > > > > > > > > > > > > > > > I can't speak for the original poster, but I want to know if there is an > > > > argument for eclipse.exe that will control this.  I often have two > > > > different workspaces in play, and would like to be able to tell them > > > > apart by just the title. > > > > > > > > > > > > > > > What he really wants is the ability to distinguish what underlying workspace is  being used by a particular runtime instance of Eclipse.  This is a good point, because I don't think that it's possible to find out the workspace location from  anywhere in the UI. Moving to UI for consideration. Are any of you interested in implementing this feature and contributing it to  the eclipse project? I've uploaded a patch that uses " -title foo " on the commandline.  The title is normally " < perspective > - < product > " What I've done is make so the -title argument is appended to this, rather than replacing.  So it would be " < perspective - < product > foo " in this case.  If someone else wants to do it differently, it will be pretty easy to do so. I had a look at the patch. BootLoader should not be modified to have UI-specific attributes. The Workbench can get the command line arguments itself. See the current code in the WorkbenchWindow constructor. Note that there is currently a command line arg: -showlocation which shows the  workspace location in the title.  Does this suffice? Yes, that's fine as 90% (if not more) of the problem solution, for me. We need to document this command line (there's a PR for this already). Defering consideration of user-specified titles to v3. Reopen to investigate We have another PR about documeting this commant line but I could not find it  now. *** This bug has been marked as a duplicate of 23513 *** Wrong defect # *** This bug has been marked as a duplicate of 23519 *** This is an absolutely great feature, thanks! [use -showlocation to show workspace]  It was quite confusing working with 2 different workspaces before. My setup is that the workspaces correspond to two actively developed branches of the same code base, so all the files are the same and without -showlocation it was very difficult to tell them apart, resulting in me actually sometimes editing the wrong versions...
Platform	gp - Eclipse disapears - core dump file shows exception in swt.dll I was trying to close an editor, and eclipse simply crashed. I have attached the  core dump log file that was written to $ECLIPSE_HOME after the crash. This happened yesterday a couple of times. To note, the core files are for when I am running a target Eclipse in debug  mode. The target Eclipse crashes but the development Eclipse is fine. I have seen this happen consistently on XP and Win2K.  I am switching to j9 today to see if it still happens. Only the first 2 seem to be SWT but if memory is getting trashed, anything  could happen. Can't recreate it.  Feel free to reopen this PR if it happens again.
JDT	Debugger source lookup dialog needs viewer label There is currently no way to " keyboard " into the list of source lookup items. Adding a label to the viewer would fix this problem Fixed, please verify. Verified.
JDT	[pde.junit] Unable to find class UIMain When running org.eclipse.pde.junit_20020508 I get java.lang.NoClassDefFoundError: org/eclipse/core/launcher/UIMain Exception in thread " main " Which seems to be logical as UIMain apparently is no more part of startup.jar Am I missing something ? this is fixed in 20020510  http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-ui- home/plugins/org.eclipse.jdt.junit/org.eclipse.pde.junit_20020510.zip broken link ;-( and another attempt...  i'm afraid that the latest eclipse update change have broken it again, so just  reopen it < g >
JDT	Editor not opening for suspended stack frame with modified prefs 20020205++  Set prefs to not switch to the debug perspective on launch Set a breakpoint  You switch to the debug perspective because of the breakpoint. The stack frame is selected but the source editor does not open unless you set  focus to the launch view. Check that the debug view watches for perspective activation, and re-displays  source. Fixed in LaunchView. Please verify. Verified. Reopening for defect. It looks like you added the line: ((LaunchViewEventHandler)getEventHandler()).removeTerminatedLaunches(null); to LaunchView#pageActivated() as part of fixing this bug.  Every time you switch to the Debug Perspective now, all terminated launches are removed. I believe this code is to blame. We don't want to remove all terminated launches every time the debug view is activated. Fixed in the LaunchView. Please verify. Verified.
Platform	[Properties dialog] Proje ct Property Pages not synchronized Hi,  add the following extension to extension point " org.eclipse.ui.propertyPages " .  After restarting Eclipse the new page will only be visible if you right click on a project and select " Properties " inside Navigator view but not inside  Packages view. < page name= " Project Capabilities " id= " org.eclipse.ui.internal.dialogs.ProjectCapabilityPropertyPage " objectClass= " org.eclipse.core.resources.IProject " class= " org.eclipse.ui.internal.dialogs.ProjectCapabilityPropertyPage " > < /page > Cu, Gunnar Nick, AFAIK the property dialog considers getAdapter(IResource.class) to  compute the set of property pages. Or is there a need to register the page for IJavaProject as well ?  Moving to platform for commenting. Gunnar, as a work around you can contribute the property page for IJavaProject  as well. You need to specify adaptable= " true " in order to have it do the getAdapter  trick. But why are you trying to reactivate our project capabilities page? It is currently disabled and unsupported. We discovered this page and tried to enabled it to get an impression of its  functionality. BTW, why is it disabled? Will it be supported later? For more context, see (link to proposal off of the UI team's development  resources page): http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-ui- home/project-capabilities/Proposal.html We had to back out of this work for 2.0 because (and I'm over-simplifying): - not all clients were prepared to step up to using capabilities as the new story for creating projects, - we ran out of time figuring out how to integrate them smoothly on the side (i.e. as a project properties page), - we had various usability issues with multi-stage wizards. We will be reinvestigating Capabilities for 2.1, but have no commitments to  bring them back at this stage. I'm closing this PR since it should work if you add adaptable=true. Please reopen if not.
JDT	Confused by Rename Dialog contents [refactoring] I had a java class.  In the packages view, I invoked Copy and then paste,  creating CopyOfX.java.  So I invoked Rename.  After typing Y for the new class name, I pressed Next, and found the following contents in the Changes to Be  Performed tree .. - CopyOfX.java - project   - CopyOfX Type declaration update       - CopyOfX(args) Rename constructor   Rename CopyOfX.java to Y.java My brain hurts every time I look at the contents of this dialog.  I think it's  because it's a tree of nouns, with no verbs to indicate what is really going to  happen.  In addition, if I click on the first 3 items the contents of the preview viewer flicker but remain unchanged.  Can you make it a little simpler,  and consolidate the changes for the file within one subtree?  I need to see three things, really.  - Update File: CopyOfX.java Rename to: Y.java     Update type declaration: CopyOfX Rename constructor: CopyOfX(args) no action planned for 2.0 [refactoring] Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state.
JDT	Line highlight line doesn't like undo 20020409 1. enter a new line 2. set the cursor at the line next to the new line - > line is highlighted 3. undo. the new line is removed - > 1 1/2 line is highlighted fixed: - cheese production < g > - line number caching to reduce redraws           prevents flickering of line background under motif
Platform	Internal error: Rename a project then sync I thought that this shouldn't be a problem. Sync info is still valid but maybe  the session objects used to cache the sync info are being purged. Fixed and released to HEAD. Added testRenameProject test to suites. Renaming the project does not affect any sync info, it simply renames the root  of the local cvs workspace.
Platform	[View Mgmt] Please bring back floating/detached views I really thought this was a great feature. In my case, I have a lot of screen  real estate and found it useful to detach the object browser and task list. Out of curiousity, why was it taken out? There were several problems with them.  The most immediate problem was that  they were inaccessible to keyboard users or those with disabilities. They did not get the accelerators for menu items from the main window. Also: You could not switch back to the main window using keyboard. It only worked on Windows (and even that was a hack). The context menu occasionally disappeared).  We will not be adding this support back for 2.0, but will reconsider them post 2.0. As a workaround you can choose Window / New Window and arrange the new  perspective the way you want.  You can also save your arrangement using Window / Save Perspective As... *** Bug 15981 has been marked as a duplicate of this bug. *** I submitted something similiar (Nick suggested I look at this), where you  could have your editor windows at least in a separate (I suggest defaulting to all in one window, but you can also detach a particular editor ' tab ' ).  I am not sure how the detached views were originally implemented, but if you could make it so they are SDI windows that you can, on Windows, ALT-TAB  between, that would be great for keyboard users ... certainly does get a bit more complicated to manage them when the current system supports multiple  perspective windows (ie double click to open, does it open in the perspective, existing external editor...probably best to associate the ' editor tab  control/window ' to a given perspective, so if it is dragged out, you could  know where the editor windows shoudl be opened into) In terms of folks with disabilities, if they aren't going to detach, then it  should never be an issue, as long as you assume attached first. Sorry just rambling out loud. Mine feature request was number 20529, for those  that are curious. FYI: I love Eclipse, been quite happy with it since I started using it three  days ago. To clarify the accessibility requirements, any feature we provide must be  accessible to those with disabilities. For more on this interesting area, click on Guidelines at http://www- 3.ibm.com/able/. However, accessibility was not the only reason for removing detached views.  Note that you can get an editor in a new window by opening a Java perspective, closing all views, saving this perspective under a new name ( " Java Editor " ),  then opening it in a new window and using Navigate / Open Type... (or Ctrl+Shift+T) to open a type in the new perspective. *** Bug 21802 has been marked as a duplicate of this bug. *** Reopen to investigate *** Bug 12841 has been marked as a duplicate of this bug. *** Will not be in 2.1. Consider for 2.2 When working on this PR, please review the following related PR:     [View Mgmt] View Locks To Prevent Views from being Moved     http://bugs.eclipse.org/bugs/show_bug.cgi?id=14369 *** Bug 43325 has been marked as a duplicate of this bug. *** Isn't this bug duplicated with  https://bugs.eclipse.org/bugs/show_bug.cgi?id=19725 (proposing floating windows : editors/views, instead of only views ?) *** Bug 19725 has been marked as a duplicate of this bug. *** Yes, bug 19725 is a dup of this one, with the added request to support detached  editors. Here is a quick summary of the state of affairs with detached views:  In recent builds, you can turn the Workbench support for detached views back on by passing -detach on the command line.  However, this is currently broken.  Apparently the SWT call Control.isReparentable() is returning false where it used to return true on  Windows.  This should be discussed with the SWT team. Note that using reparenting is preferable to disposing and recreating the view,  since there may be interesting widget state that is not captured by the view's  saveState method.  For example, the Navigator saves the top-level expanded elements, but not expanded elements under collapsed elements.  Many views save  the selection, but not the scroll position.  On shutdown/restart, it's  acceptable to just restore the selection and make it visible, without the scroll position being exactly the same as before, but when rearranging views  users don't expect state like the scroll position to change.  Having the view's saveState method capture more state to support detached views  is not a good answer.  For example, the Navigator used to save the complete expanded state (including the state for hidden elements), but that turned out  to cause a major performance hit on startup and also for popping up the context menu (believe it or not, since Tree.getSelection() in SWT is O(N) in the number  of items in the tree).  There may also be UI state that is not possible to capture and restore on the widget via API.  Even when SWT control reparenting works, detached views have the following defects:  1. Once detached, dragging the titlebar to move the detached window does not work.  This is apparently a regression in the DnD support in the Workbench (we  need to use DnD since the titlebar is not a regular window titlebar, it's a  view titlebar).  Compare with R1.0. 2. In the following scenario, context menus stop working: - detach a view - restart Eclipse - drag the view back to dock it in the main window This is due to menus in SWT being associated with the shell rather than the  control passed to the Menu constructor (unlike regular controls).  So when the detached window's shell is disposed, the menu gets disposed with it. The SWT team was investigating a solution to this, but I'm not sure what the  status is. 3. Accelerator keys (and the keybinding story) don't work on detached views.   This is one of the main reasons we backed away from detached views for 2.0 (see above).  Previously the only way to get accelerators was via menu items.  Since  detached views don't have their own menubar, accelerators were not possible.   Now that keybindings are implemented using the new SWT support for filtering events, we should be able to make them work in secondary windows like detached  views (preference pages and wizards would be nice too).  Should coordinate with Chris and Doug on this.  In addition to the above defects, there are some usability problems with detached views:  a) DnD is overloaded, being used for detaching the view, moving it around while detached, and redocking it.  In the current implementation, it's not possible  to reposition a detached view over the main window without it being redocked. I see two possible approaches to this:   i) Reduce the overloading, e.g. use DnD only for repositioning, and have explicit titlebar context menu actions for detaching/docking views.   ii) Refine the DnD support to have more specific areas for redocking, so that dragging a detached view over most areas of a main window repositions the view  rather than redocking it.  This approach requires strong cues to communicate what the result will be (e.g. cursor changes and/or highlighting the  destination area in the main window). b. Detached views currently always appear in front of the main window.  On  single monitor systems with Eclipse running maximized, this really restricts the usefulness of detached views.  Approaches here could include: an easy way  to temporarily hide detached views, allowing detached views to be stacked under the main window (should they appear in the task tray?), transparency.  In the short term, we should get detached views working as they were before: - coordinate with the SWT team on why isReparentable() is returning false on  Windows - fix up DnD for repositioning detached views  This will at least make detached views usable on Windows. We can then focus on fixing the remaining defects, and experimenting with  different approaches to the usability problems. I am partway through a fix for this. My plan is as follows:  The new implementation will try to use SWT's reparenting if available, but will fall back to destroying and recreating views if this is impossible. This will allow the feature to work on all platforms, even if the scroll position changes on some platforms. Use of SWT's reparenting will be temporarily disabled for the first version to ensure that the " destroy-and-recreate " approach is well tested.  I have started working on a fix for 1). Haven't examined 2 or 3 yet. I think we should fix them before enabling this feature by default. Issues a) and b) could probably wait until later. Just for consideration, we might want to try this: rather than treating undocked windows as part of the current perspective, we could actually create a new workbench window for the new view (one that only contains the view). This would seem to solve a lot of problems: - The window would not rely on DnD support for movement, fixing 1. - Keyboard users could alt-tab to the undocked window. - The undocked window would have its own menubar, allowing keyboard accelerators to work (fixing 2) - The undocked window could be moved and dragged on top of the main Eclipse window without docking. Dragging the view would dock it back to the main Eclipse window, and dragging the window would allow it to be repositioned. - Unwanted windows that appeared on top of the Eclipse window could easily be minimized using the OS's native facilities.  I'm just offering this for discussion -- this is not the approach I'm taking right now. Here's why undockable windows stopped working:  We made the faulty assumption that SWT reparenting either worked or didn't work for all controls on the windowing system. In the latest SWT, they've removed reparenting for Shells, and the widget we test to determine our reparenting policy is a Shell. Since we don't need to reparent Shells anyway, this isn't a problem for us. Due to the urgency here, I'll attach a fix that brings the code up to a state similar to what it was before... but I am certain that there will be serious bugs for platforms that don't support reparenting. This patch will not fix any problems -- it just brings back detached views in exactly the same state they were in before they disappeared. I selected the wrong content type above. The patch has been applied to the head.  Remember, this patch does not fix any problems with the original detachable views code.  This only moves the check for detachable to a bogus composite. 1) The isReparentable() returning false in Shell is a bug fix in SWT.  Shells  are not reparentable on Windows.  You should be asking whether the widget you are about to reparent is reparentable, not a " bogus composite " .  2) The context menus (and other internal SWT things) should be getting fixed up when the reparenting occurs.  The context menu moves over with the  composite and gets reparented to be in the new shell. 3) The key binding story should work in dialogs.  We are fixing bugs as they  are reported. See also bug 46565 (dragging editors between windows). This is a patch for DetachedWindow in the new_look stream.  It enables the OS-native title bar and trim, allowing windows to be dragged, maximized, and minimized. This isn't as pretty as before, but it is much more useful. Note that this should be revisited again once the appearance and behavior of detached views is finalized for 3.0. Stefan, does your patch address points 1,2,3 in comment #15? This is an alternative patch for detached windows. This patch fixes some of the problems with drag-and-drop, and lets you move around detached windows without enabling the OS trim.  This is much prettier than the previous patch, but it does not provide any way to drag a detached window on top of the main workbench window without docking.  This patch was created against the org.eclipse.ui.workbench project in the new_look stream at 8:00pm on Saturday Jan 24th.  Both this patch and the previous one address the window dragging bugs. Neither patch addresses the problems with context menus or hotkeys, however I cannot reproduce either problem in the new_look stream, so it is likely that both issues were fixed by other bugfixes. Chris, can you commit the patch in comment 26? *** Bug 50311 has been marked as a duplicate of this bug. *** Patch released. What about the patch in comment #23? I like Stefan's proposed solution in  comment #16. Is it possible? I'm not entering a new bug report because it is related to this one so I just  like to reference bug #37997 comment #131. Isn't is possible to support tear off views on all platforms if we go another  way of implementation and create non blocking child windows for tear off views (like for dialogs)? These windows would conatain another tab folder and  multiple views can be dragged an dropped into them. This would also allowus to place and move the views all over the workbench or to other monitors without having to watch the mouse cursor every time such a  view is moved. I don't like the current behavior because it is somewhat uncommon for me as I  never had an application with a similar behavior. Most apps behave like multiple window apps. Of curse this requires another button for docking the  view back into the workbench but this could be also implemented using drag and drop again (the window can be moved the regular way and the view can be dragged  when clicking its tab. IMHO if an environment doesn't support reparenting some necessary elements we  can even close and reopen the view in the new window. This is ok when we document this in a views API. If a view doesn't save and restore its state  correctly and this is a bug of the specific and should not prevent other clients from using this feature. In an extreme case it might be even possible  to force views to overwrite a specific API like " supportsUndockable " (which  returns false by default) although I would not like it ;). Yes , I think it is a needed feature. As former smalltalker, I've always found that the ability to detache views form the workench and to put them wherever I want (or even iconify them separatly) is very useful for an experimented user... regards Xavier fixed for supported platforms *** Bug 40599 has been marked as a duplicate of this bug. *** It seems a while since anyone looked at this issue - Any chance of getting this added again in the future? Beirti, detached views -were- added back in 3.0, on platforms that support widget reparenting, and this bug has been RESOLVED/FIXED since then.  If there's an outstanding issue for you, please file a separate bug. (In reply to comment #36) > Beirti, detached views -were- added back in 3.0, on platforms that support > widget reparenting, and this bug has been RESOLVED/FIXED since then.  If > there's an outstanding issue for you, please file a separate bug. > My mistake, I confused this bug with the desire for detaching an Editor.
Platform	Need option to suppress " Links " view For products that use the help system in a stand-alone or infocenter scenario,  they need the ability to suppress the Links view when they either don't have  context-sensitive help, or when their C.S. help consists of simply going direcly to a particular topic. Fixed. Please read the org.eclipse.help\doc\org_eclipse_help.html file (Also available under extension points in the online docs).
JDT	Performance issue with Undo command Eclipse F1 Windows 2000 1) Open a Java file that contain several pages of content (e.g. OleEditor but  could be anything) 2) Select all. 3) Select Source - > Shift Right. The visible text shifts to the right and editor does not scroll 4) Select Undo  Sit back and watch the movie. The editor scrolls to the bottom and scrolls slowly up to the top fixing itself  all the way along. this scenario is the same problem as replace all ( " e " ). however, this one can happen for real and undo can take minutes. Undoing compound changes does no longer causes intermediate UI updates.  However, undoing a " Shift right " will not become as fast as " Shift left " due to  limitations of the current undo manager. Build F2. pls verify Need to clear resolution due to bugzilla bug (it changed the resolution to NEW) Marking bug as fixed again (due to bugzilla bug) Its really fast now. *** Bug 174510 has been marked as a duplicate of this bug. ***
Platform	Replace with tag - need option to not recurse Now that we have tags at multiple levels, its important to be able to replace a  folder with a tag and only replace that folder and files, not its child folders. This is especially true with packages. Fixed and released to HEAD.
Platform	Combo is truncated and unresponsive M5, XP Updates view Click on Available Updates Expand " Query Settings " . Notice: (1) The combo says " ailable Updates " (the first part is cut off) (2) Try to drop the combo down. You can ' t. In fact, I can't get the combo to  respond to any mouse input at all. Combo is unresponsive because it is disabled. There are some searches that are  generated and they users are not allowed to change some settings (for example, search category). Among those searches, ' Available Updates ' is read-only  because it looks for updates to all the installed features. Users can create their own searches where they can cherry-pick features they are looking for  (this function is not entirely finished). Combo box cut off problem is due to a SWT bug (#13888).  *** This bug has been marked as a duplicate of 13888 ***
JDT	Move To Top Level:  incorrect this in constructor calls Discovered at the same time as bug 24571  I tried the " move to top level " refactoring on a static inner class. The class constructors were migrated correctly to the new top level class. The constructor calls however had gained an extra " this " parameter. 1) There is a compile error becuse the constructors don't match up 2) There is no need to pass an explicit reference to the original enclosing class when moving a static inner class.  Will attach the before and after classes. This also demonstrates the problem in bug 24571 cool - thank for the test case will fix fixed
JDT	Launching without default classpath doesn't include i18n.jar (Actually using Eclipse M1.)  I need to use a launched with an extra bit of classpath information (an external folder) so I unticked the " Use default classpath " checkbox on the launcher properties. I expected this to leave me in a state where I could edit the classpath but it was set as the same as the default to start with. Unfortunately, it doesn't look like the JRE libraries include the i18n.jar. Sample test program: import java.text.DateFormat; import java.text.SimpleDateFormat; import java.util.Locale;  public class Test {     public static void main(String[] args)     { Locale loc = Locale.UK; SimpleDateFormat sdf = (SimpleDateFormat)             DateFormat.getDateInstance (DateFormat.SHORT, loc); System.out.println (sdf.toPattern());     } }  When run with the default classpath, this correctly prints out dd/MM/yy. Just by unticking " use default classpath " the output is changed to M/d/yy.  Is this deliberate? I can fix it for my launcher by manually including the i18n.jar library, but it's a shame that I have to do that at all... This appears to indicate that more than " rt.jar " is placed on the  bootpath/classpath for free. We need to update our " default libraries " to  reflect this. *** Bug 25760 has been marked as a duplicate of this bug. *** Fixed in conjunction with bug 28818. Please verify, Joe. Verified. *** Bug 36602 has been marked as a duplicate of this bug. *** The general problem with unchecking " use default classpath " changing behavior  is not fixed yet in 2.1. Here's some sample code which I run under SDK  1.4.1_02 (same results under 1.4.1_01): import java.security.*;  import javax.crypto.KeyGenerator; public class Main {    public static void main(String[] args) {     try { Provider provider = Security.getProvider( " SunJCE " );       KeyGenerator keyGenerator = javax.crypto.KeyGenerator.getInstance ( " Blowfish " , provider);       System.out.println( " success " );     } catch (NoSuchAlgorithmException e) {       e.printStackTrace(); }   } }   With " use default classpath " checked the output is:  success With " use default classpath " unchecked the output is:  java.lang.SecurityException: The provider SunJCE may not be signed by a trusted party  at javax.crypto.SunJCE_b.a(DashoA6275) at javax.crypto.KeyGenerator.getInstance(DashoA6275)  at Main.main(Main.java:10) Exception in thread " main "
Platform	Release selection pane flashes a lot (1FVQNQD) Populate a Java or Web project with a bunch of files in different folders. Choose release on the project. In the release dialog, expand the resource hierarchy a few levels. It redraws completely each time. NOTES:  GDA (5/30/2000 1:42:56 AM) JDK or VAJ?  NE (5/30/00 10:01:09 AM) Sorry, VAJ GDA (5/30/2000 1:38:58 PM)  moving to jface EG (5/31/00 10:54:53 AM)  the ReleaseAction is using a TableTree in the ServerSynchronizationDialgo. We observe the same flicker in our TableTreeViewer test cases   com.ibm.jface.examples.viewertest.TestTableTree when you expand nodes. On the JDK the flickering is still disturbing when you are having a large tree. KH (5/31/00 9:33:51 AM)   VI pls investigate VI (5/31/2000 11:51:25 AM)   The code that is causing the flicker is this: TableTreeItem::public void setExpanded (boolean expand) {     getParent().setRedraw(false); if (expand)     expandItem(); else     collapseItem(); getParent().setRedraw(true);   } Unfortunately, if I remove the setRedraw calls, while the top part of the tree no longer flashes, on collapse the bottom part  of the tree is redrawn for every item that is being hidden. The Tree widget also redraws the bottom part of the tree for each item on collapse but does so much faster.   What is worse, one flash or multiple redraws as the tree collapses? There may also be some issues concerning editable table cells and multiple redraws.   McQ (2/2/01 1:17:42 PM) - We are stuck with the above behavior, as long as we keep the existing API.   It might be possible to have an " add a collection " of items. PRODUCT VERSION: 016a Later Post 2.0. Re-opening bug reports for review. Nick, I ran across this PR and am going to close it because it's really old.   You can reopen it if you want, with some code that shows the problem.  Thanks.
Platform	InterruptedIOException: connection failure (1GF9OON) When the connection to the repositories fails, InterruptedIOException is not caught.  Log: Wed Jun 13 12:13:40 EDT 2001 4 org.eclipse.vcm.core 4 Cannot connect to host cvslnxtest java.io.InterruptedIOException: Operation timed out: no further information at java.net.PlainSocketImpl.socketConnect(Native Method)  at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:329) at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:141)  at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:128) at java.net.Socket. < init > (Socket.java:285)  at java.net.Socket. < init > (Socket.java:112)  at org.eclipse.vcm.internal.core.ccvs.client.PServerConnection.createSocket(PServerConnection.java:140) at org.eclipse.vcm.internal.core.ccvs.client.PServerConnection.open(PServerConnection.java:190)  at org.eclipse.vcm.internal.core.ccvs.client.Connection.open(Connection.java:224) at org.eclipse.vcm.internal.core.ccvs.client.Client. < init > (Client.java:227)  at org.eclipse.vcm.internal.core.ccvs.CVSAdapter.internalFetchMemberNames(CVSAdapter.java:778) at org.eclipse.vcm.internal.core.ccvs.CVSAdapter.fetchProjectNames(CVSAdapter.java:485)  at org.eclipse.vcm.internal.core.Repository.fetchProjectList(Repository.java:128) at org.eclipse.vcm.internal.ui.model.ProjectVersionsCategory.internalGetChildren(ProjectVersionsCategory.java:92)  at org.eclipse.vcm.internal.ui.model.ProjectVersionsCategory$1.run(ProjectVersionsCategory.java:48) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java(Compiled Code))  at org.eclipse.vcm.internal.ui.model.ProjectVersionsCategory.getChildren(ProjectVersionsCategory.java:46) at org.eclipse.ui.model.WorkbenchContentProvider.getChildren(WorkbenchContentProvider.java:51)  at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:568) at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren(StructuredViewer.java(Compiled Code))  at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren(StructuredViewer.java(Compiled Code)) at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java(Compiled Code))  at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:611) at org.eclipse.jface.viewers.AbstractTreeViewer$2.treeExpanded(AbstractTreeViewer.java:631)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java(Compiled Code))  at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java(Compiled Code)) at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java(Compiled Code))  at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code)) at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))  at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method) at org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java(Compiled Code))  at org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java(Compiled Code)) at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))  at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code)) at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:620) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:126)  at org.eclipse.core.launcher.Main.run(Main.java:408) at org.eclipse.core.launcher.Main.main(Main.java:281)  NOTES: The behavior of the UI has been changed in build 205 to show the proper error  to the user and not log it. *** Bug 122 has been marked as a duplicate of this bug. *** *** Bug 146 has been marked as a duplicate of this bug. *** *** Bug 4894 has been marked as a duplicate of this bug. *** [Fixed in v205] PRODUCT VERSION: 122 SDK Windows 2000
Platform	' Convert Nature to Property ' needs better progress 20020612 i select all my source projects (around 12) and pressed ' convert ... ' have been waiting 10 minutes now and the progress monitor dialog is still empty saying ' updating. ' canceling did not help - dialog still there will have to kill, i think hey, it did finish after all but progress is really a must here still ' major ' but a bit less Adam, was there anything in the .log? nope Was titled: ' Convert Nature to Property ' hangs  We do use a progress monitor but it can be improved.  I'm not sure why this is  causing so much side effect - more than it should really.  However, we can improve progress monitoring (the actual work it does is negliable, its all  these builders and decorators!). Interim until everyone moves their workspaces to F3.  Likely won't change it. This class won't exist post 2.0
Platform	[GlobalActions] Can't show in Navigator from a simple text editor Build: 20020409 I have a text file open in an editor and I wanted to perform a Team operation on it. In the navigate top level menu the " Show in Navigator " was disabled. I also has the " link to navigator " turned off. Which perspective were you in? And did you have any Java views open? That action is contributed by JDT, not UI, but it makes it look inconsistent. Yes, I was in the Java Browsing perspective. Either JDT, which provides this action, should also handle the case for non- Java files, or the Workbench should provide a Resource action set which provides this action and handles it for all files. Action set actions don't currently have a way of determining the current editor  input, though, so enablement would be difficult for JDT if they weren't  activated. This menu item no longer exist. Now the Navigate menu has a " Sync with editor " item which each view can implement. The Navigator does this. With the new changes, this PR is invalid now
Platform	[Navigator] Moving files from Windows Explorer to Navigator build 20020821  Bug 22566 reports that cutting a file in the Explorer and pasting it into Eclipse actually copies the file. It remains in the Explorer.  There are two options to fix this: 1. Cutting from Windows Explorer and pasting in Eclipse does nothing. 2. Fully support moving files from the file system into Eclipse, removing them in the source location. This includes drag and drop.  Bug 21372 suggests that the Navigator should copy files by default when they are (move) dragged from the Explorer. This is what the package view does for  drag and drop. It copies independent of whether the copy modifier key is pressed and indicates this in the drag feedback icon. If we decide that option 1. is correct a drag move from Eclipse to the file system should force to default to a drag copy. This operation currently works  as a move and the behavior would thus be different depending on the direction of the transfer which is confusing.  Going for option 2 is the fact that drag moving already works in the direction of Eclipse- > Windows Explorer.  Kevin, do we want to support move transfers between Eclipse and Windows Explorer or do we restrict to copy transfers? Talked to Nick and Lynne. The prevailing opinion is that drag into Eclipse  should default to copy/import. This means that we should also default to copy when dragging from Eclipse to  Windows. Having different defaults, depending on direction seems counter intuitive. However, we don't necessarily have to remove the DND move behavior. We could  still support move when the move modifier (shift on Windows) is held down. Move behavior would have to be added for Navigator and Package Explorer drop targets.  Adding Erich to cc to comment on JDT part. Package view already mostly behaves as suggested, it defaults to copy when dragging from Windows to Eclipse but  defaults to move when dragging from Eclipse to Windows. This would need to be changed to keep it consistent with itself and with Navigator. It should also  add move drop support. Note, to emphasize, instead of adding move support for Windows- > Eclipse we  could also drop move support for Eclipse- > Windows direction. Whatever we do, it  should be consistent. *** Bug 32258 has been marked as a duplicate of this bug. *** Reassigning to Nick since he is taking ownership of Navigator
Platform	Search view should have toolbar actions in context menu Build 20020123  I wanted to do a search, and figured I could find the action on the search view in addition to the toolbar button. It's there on the search toolbar, but not on its context menu. This is awkward for accessibility.  Toolbar buttons are hard to get to with keyboard only. Now, search also appears in the Edit menu, and even has an accelerator  (Ctrl+H), but this is not the most visible. In general, toolbar buttons should be shortcuts for what's available on the  menus.  In the case of the view toolbar, toolbar actions should also appear on its context menu. I don't mind to change this, but we have flipped this already more than once.  For 1.0 the rule was to not replicate View actions that are not selection sensitive in the context menu. I agree with your accessability concern.   There is need for some guidelines: - which actions go into a View's context menu - which actions go into the View's drop down menu - which actions go into the View's toolbar. Usability rather than accessibility issue as the tool bar can be navigated to The global Search menu will make search more visible.  Most actions are now also available on the context menu. The only exception is the search history. We should consider adding the search  history dialog as an action to the global Search menu. This will improve accessability and it is also a function that belongs there. pls check the user interface guidelines with regard to the View menu Could not find this in UI guidelines: it says they have to be in the menu which I understand as being in the (main) menu and not the context menu. This would mean to add the following actions to the global Search menu: - Next Match (should be merged with Next error - retarget) - Previous Match (should be merged with Next error - retarget) - Remove Match - Remove All Searches - History Actions on toolbars also have to be available via the menus. Toolbar items should be thought of as shortcuts for what's on the menus. Generally we put actions which apply to the selection in the context menu. Actions which apply to the view as a whole (e.g. filtering / sorting) should  go on the view menu (the triangle). History operations are still not in a menu. Should offer a Search History view. Consider after 2.0. reopen to mark as duplicate The last remaining issue (Search History view) is covered by the another PR.  *** This bug has been marked as a duplicate of 10265 ***
Platform	Right-clicking on coolbar grabber causes strange behavior Build F3 (20020612) Redhat 7.2, KDE 2.2-10 (Both Motif and GTK2)  If you right click and release on a coolbar grabber (like a regular mouse click), then the 4-way arrow cursor appears (as if to say, you may now move the  coolbar). The coolbar will follow the mouse from now on, but only if you go really slow, if you slide too fast then the coolbar stops following (but the 4- way arrow is still there). If you move on the grabber again then it starts following the mouse again.  Also, after right clicking on a grabber, if you move your mouse under the coolbar and then back up on a different grabber, then the coolbar jumps. You  can even lock the coolbars and the 4-way arrow is still present. The only way to get out of the 4-way arrow cursor mode is to left click on the original  grabber. Workaround: Don't do this.  To be fixed post R2.0. The fix is: CoolBar.java void onMouseDown(MouseEvent event) {  if (isLocked || event.button != 1) return; dragging = getGrabbedItem(event.x, event.y); ... We should ignore when mouse down is not caused by the first button. That's what Windows does. Fix > 20020703
JDT	Duplicate mnemonic: W in packages view (1GHBRAQ) The mnemonic W is used for both Ne & w... and Open & With... in the packages view. Should consider this for 1.0.  NOTES: NE (07/23/01 12:14:19 PM)  Note: Navigator uses Open Wit & h...  EG (27.08.2001 10:52:01) fix released for 133  AK (9/11/2001 2:38:32 PM) not fixed - now he have duplicate ' h ' PRODUCT VERSION: 0.9 Still exists in build 20020214.  When the project is selected we have a duplicate p. Why is Show in Packages view in the packages viewer's context menu ?? show in packages view should not be contributed as an object contribution but  it should be contributed explicitly. moving to DB for action clean up ShowInPackages view isn't an object contribution anymore.  Fixed > I20020416.
JDT	Source Goto missing options If I have a Package View selected with a class selected within that view if I right click and select Goto, I get 5 options, Back, Forward, Up one level, Type... and Package....  However if I select the Source- > Goto from the action bar I only get the first three options, I am not offered Type and Package. This means that I am forced to use the mouse, and presumably will make  accessability enabling difficult. This was observed on M5 running on Linux, but it is probably OS independant. All the goto actions are available in the Navigate menu when the packages view  has focus. When in the Packages View, in the Navigate menu there is an Open Type...  entry but there is no Open Package as there is in the popup Goto To menu using right mouse.  This is running M5. ack, verified that this is no longer a problem in 20020508. We have fixed several menu related problems.
Platform	[Key Bindings] Cannot associate a key binding with a dialog 20021022  I would like to have the copy functionality on the MultiErrorDialog but I need API to register the widget (a list) with the copy action. You should not need special API outside the key binding service.  SWT's accelerator implementation doesn't allow the key binding service to  define accelerators on dialogs. Moving to SWT and upgrading to critical. SN to investigate and advise Steve,  This is marked critical.  Please investigate and adjust  severity/prioerity accordingly. FYI we have a workaround for this case currently in place for 2.1 There is not plan to implement an accelerator service that is independent of  the menu bar.  With the advent of Display.addFilter() and recent changes to SWT.KeyDown, programmers who insist on defining an accelerator mechanism that  is non-standard can do so.
JDT	Decorators don't appear on Java projects in packages view build 2002-01-25 on Win98.  Not sure if this should be JDT/UI or Platform/VCM. - I have the text labels turned on and the icon overlays turned off for the CVS  decorators. (so it now shows " > " in front of resources which are dirty locally) - I change a file locally - in the Navigator all of the container resources are marked as dirty  (including the project) - but in the Packages view the project is not marked as dirty. Non- " Java " elements are decorated (e.g. a .properties file is decorated) but  compilation units, packages, source folders, and IJavaProjects are not decorated. I suspect something is wrong with the code that should be doing the  adaptable work. I.e. ICompilationUnit should adapt to IFile, so it should be decorated. ICompilationUnit adapts to IFile. The problem is the upward propagation of  changes in the packages view. This requires custom viewer code to do properly this code isn't in yet. *** Bug 8172 has been marked as a duplicate of this bug. *** Tod has fixed a bug today and the java elements are now decorated first time. However, reverse lookup of java element given a decorator change event on an IResource is still not occuring.  Thus decorators get out of sync, and turning  CVS decorators off then on results in loss of IJavaElement decorators. It is basically unusable. *** This bug has been marked as a duplicate of 9774 ***
Platform	[resources] No way to differentiate between refresh local and a resource chance Build 20020412: Some plugins must cache information about local files that is expensive to compute, for example, repository providers. The providers need to update the cache when files are refreshed from local. In a ResourceChangeListener there is no way of differentiating between a resource change because it was modified in the workspace versus one that has just been sync in a refresh local. I'm not sure I understand the usecase.  Shouldn't team providers be interested in (for instance) CVS files no matter  whether they were modified via the IResource APIs or via the filesystem/refreshLocal? Basically the problem is that the resource change listener can't differentiate  between changes that were brought in via refreshLocal, and changes that the repository provider made itself from within Eclipse.  JM, in your situation  I assume you use sync info to cache that information?  If you can discover if the cache has changed, then you should be able to  distinguish between the two cases: If CVS files changed AND the cache changed (sync info changed)   - > Then I know I made the change myself  If only the CVS files changed - > I know this was brought from outside and I need to update my cache This is not really a 2.0 requirement, but more of an enhancement request.  What John said was somewhat correct. The point to be made is that you can't  distinguish between changes caused by refresh local and changes made by any other plugin in the workbench.  The suggestion John makes is fine only if your plugin is guaranteed to be the only one modifying certain resources. This is exactly how we implemented  command compatibility with CVS, we listen to deltas on CVS/* (team-private) files and when one occurs we check the basestamp we cached the last time we  made a change against the new basestamp. If they are different they were modified outside of Eclipse. If you are listening for resource changes you can check whether there are  changes in just the resource, or a change in the resource and in its sync info by checking the flags.  Please re-open if this does not satisfy your request.
JDT	NullPoint on ctlr-space on 0214 stable Happens when I ctrl-space on a " var. " . If I do it on " var.get " then it works.  org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.NullPointerException)  at org.eclipse.swt.SWT.error(SWT.java:1887) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:96) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:771) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) *** Stack trace of contained exception *** java.lang.NullPointerException  at java.lang.StringBuffer.append(Unknown Source) at  org.eclipse.jdt.internal.ui.text.java.ResultCollector.getParameterSignature (ResultCollector.java:186)  at org.eclipse.jdt.internal.ui.text.java.ResultCollector.createMethodCompletion (ResultCollector.java:312) at org.eclipse.jdt.internal.ui.text.java.ResultCollector.acceptMethod (ResultCollector.java:204) at org.eclipse.jdt.internal.core.CompletionRequestorWrapper.acceptMethod (CompletionRequestorWrapper.java:80) at org.eclipse.jdt.internal.codeassist.CompletionEngine.findLocalMethods (CompletionEngine.java:1516) at org.eclipse.jdt.internal.codeassist.CompletionEngine.findMethods (CompletionEngine.java:1789) at  org.eclipse.jdt.internal.codeassist.CompletionEngine.findFieldsAndMethods (CompletionEngine.java:1037)  at org.eclipse.jdt.internal.codeassist.CompletionEngine.complete (CompletionEngine.java:362)  at org.eclipse.jdt. internal.codeassist.CompletionEngine.complete (CompletionEngine.java:651) at org.eclipse.jdt.internal.core.Openable.codeComplete (Openable.java:113) at org.eclipse.jdt.internal.core.CompilationUnit.codeComplete (CompilationUnit.java:64) at  org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.computeCompletionP roposals(JavaCompletionProcessor.java:331)  at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals (ContentAssistant.java:1197) at  org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals (CompletionProposalPopup.java:103)  at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeFilteredProp osals(CompletionProposalPopup.java:430) at  org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$15 (CompletionProposalPopup.java:423)  at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.run (CompletionProposalPopup.java:412)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:771) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) *** Bug 10045 has been marked as a duplicate of this bug. *** Cannot reproduce on I-20020314. Do you have a specific scenario in which it  does not work? No additional reports. Closed.
Platform	Should support decorators in the sync view Currently, the sync view does not show the branch that we are syncing with.  Showing this is complicated since different resources in a project could be shared with different branches. Therefore, we need resource level decoration  for this information. We may want to investigate custon decorators for the sync view to support this and other types of decorations (remote folder mapping for  instance). Fixed. the sync view uses the standard cvs decorators.
JDT	code assist: Create parameter does not work when method thorws The create parameter feature does not work proprtly when method has a throws  clause in the delaration. replicate: create void foo() throws Exception { s = " Hello " ; } move the cursor to s and press ctrl 1. choose create parametr. the result will be:  public void foo() throws ExceptioString an {     s = " Hello " ; } This is related to bug 21768 fixed > 20020911
Platform	" Disable all " breakpoints action We need a " Disable all " action in the breakpoints view.  Justification: I am in a situation where I have around ten breakpoints that I don't want to get rid of because they're in code I'm not very familiar with.  I am continually enabling one or two of them and then running.  After I determine where the bug is I want to disable them all so that my program runs to completion.  NOTE: The current enable/disable just toggles the state. *** This bug has been marked as a duplicate of 1721 ***
JDT	DBCS package and Class name not recognised (1GJORR7) When I wrote Java prgram with DBCS name for package and class name,  java.lang.NoClassDefFoundError with garbled the DBCS was shown at console to run.   NOTES: The build 134 did not have the error.  STEPS 1) create project with DBCS name 2) create package with DBCS name 3) create class with DBCS name 4) edit the class with putting System.out.println() with DBCS out put 5) save and run  EG (07.09.2001 19:10:47) * The problem also exists in 134.     *  The problem shows up when the package name or CU name includes a DBCS character.  * Running the class file outside of eclipse fails on both IBM JRE 1.3, SUN JDK 1.2.2, SUN JDK 1.3  * The same problem shows up when compiling the source with the javac from SUN JDK!  * The disassembled class file looks OK, i.e., the DBCS characters are shown properly. KH (9/10/2001 12:12:53 PM)  Moving to JUI for disposal. EG (11.09.2001 09:45:07)  JDT can't fix this moving to active issues until we know were to file  this PR. EG (12.09.2001 09:54:14)  we will README the problem and document the JAR file workaround. moved to ' active ' disposing
JDT	Problem in Installed JREs preferences 1) open Preferences Java > Installed JREs. 2) edit a VM in the list. 3) uncheck " Use default system librairies " . 4) remove all the JAR. 5) do OK 6) redo OK An error message appear : " Could not set classpath variables " if there is no JAR in Edit JRE window then OK button must be disabled. Should not allow " empty " JREs. Fixed Please verify. Verified.
Platform	F2: back/forward missaligned The first time I opened eclipse help (via F1 infopop links) the back/forward  arrows were rendered to the left of the separator. Once I did a refresh things were properly aligned. post 2.0 Re-opening the bug... *** This bug has been marked as a duplicate of 15993 ***
JDT	Allow tab groups to define default classpath/bootpath Right now the enviroment tab automaticly calculated the default classpath when  the checkbox is selected.  It would be nice if the tab group could decide what the defaults should be instead. A custom tab group could do this, but the Java tabs are not a framework, so we  do not intend to address this problem.
Platform	TVT Harcoded string " System Editor " The option System Editor is not translated in the menu but it has been  translated in the translation files. Steps to recreate: In the Packages view, select a java file. Right click Select Open With " System Editor " is in english *** This bug has been marked as a duplicate of 5296 ***
Platform	[Bookmarks] Should be able to bookmark external sources Problem:  When viewing source code from a Jar file such as Eclips's own source, the " Add Bookmark " menu choice is disabled.   How I would prefer that it work and a rationale for that opinion: I'm working on learning to use TableView.  The task list provides a nice example of working with Tables and I'd like to bookmark places in the task list source so I can find them again easily. Since I don't intend to modify the task list source, I don't believe I should have to import it into a project in order to bookmark its code.  Rather I believe I should be able to use the Packages view to go to the appropriate package of the appropriate plugin, find the code, view it straight from the source jar, and bookmark it right there.  Then I can more easily manage/grok the Eclipse source and post fewer " help " messages to the newsgroup that could be easily answered if I could just remember where I saw that thing in the source... Apologies if this was incorrectly filed.  I put it against Platform/UI because my understanding is that the bookmark view is more general than JDT.  I hope that was correct.  :-) An interesting request.  JDT has the support for opening files in external  jars.  This is not something that the workbench itself (Platform-UI) directly supports.  There may well be other plugins that want to bookmarks completely  different kinds of things (e.g. databases, forms within databases, etc.). The bookmarks facility should be made more extensible. There are currently no plans to work on this feature
Platform	Font preference not saved build 2002-03-07 on Win98.  - open Eclipse and set the Workbench Text font to be something other than the default - close Eclipse - open Eclipse - notice that the font setting is reset back to the windows default Pls check this case in the latest 2.0 builds. Works in build 20020501
Platform	accessibility: shift+F10 does not display view menu - go to the Navigator view in Resource perspective - press shift+F10 - on Windows this displays the view's context menu, on Motif it doesn't - without this context menu items are not accessible through the keyboard Shift+F10 is the key sequence on Windows.  What is the standard key sequence on  Motif?  If there is none, we could consider supporting Shift+F10. Fixed > 20020201.
Platform	Delta notification for team private member deletion Philippe reports that he is receiving delta notification when team private  folders (CVS folders) are being deleted.  We should investigate what the delta looks like in this case.  He should only see team private members if the  INCLUDE_TEAM_PRIVATE_MEMBERS flag is set when traversing the delta. See bug 18953 for steps. Reproduced in build 20020610  The problem is, we don't record in the delta whether the resource was a team  private member.  So when we're traversing the deletion delta, we call  IResource.isTeamPrivateMember(), which is spec ' ed to return false if the  resource does not exist. To fix this we need to record a TEAM_PRIVATE bit in the delta flags so we can  detect the case on traversal. Fixed.  We didn't need an extra bit on the delta, since the delta already keeps  track of the oldInfo and newInfo.  I just changed the " is team private " logic to  use the oldInfo in the deletion case, and it now correctly omits team private deletions from the delta.
JDT	ESC does not work in pattern editor of Java - > Temples preference page In the EditTemplateDialog of the preference page for Java- > Templates, the ESC  key for closing the dialog works everywhere except when focus is on the pattern editor or on the OK key when it is disabled. the same is true for the tab key since it is consumed by the styledtext widget. We should accept this limitation.
JDT	Packages view: can't open MANIFEST.MF of JAR file 1. Drill into a JAR with a manifest file (MANIFEST.MF) in the Packages view. Note: The JAR must be on the build path. 2. Double-click MANIFEST.MF - > nothing happens 3. From the context menu select " Open " - > nothing happens  I used ant.jar in org.eclipse.ant.core as my test case. There is no editor registered for a .MF JAR. We should give at least give an  info dialog in this case. I don't agree (or must editors for files in a JAR be registered for each file  ending?). When I have MANIFEST.MF in a " normal " folder I can open it. Also x.y  can be opened. It rather seems that being in the JAR is the problem. This isn't the final solution. The deeper problem is that there is no API from  the workbench to open the default editor. This is a pending request. *** Bug 49801 has been marked as a duplicate of this bug. *** > This isn't the final solution. The deeper problem is that there is no API from > the workbench to open the default editor. This is a pending request. This is now improved: for file types which have an external editor (defined in OS) we show a dialog box (because the Platform's external editor cannot work on JarEntryEditorInput - it would probably have to create a temporary file). For files that do not have a registered editor we use the default text editor. This is the same behavior as when opening an IFile called MANIFEST.MF. If filed two PRs against Platform UI: Bug 50287: Support for opening external/default editor on IStorageEditorInput Bug 50285: Provide API for code in IDE.openEditor which gets editor descriptor API *** Bug 47467 has been marked as a duplicate of this bug. ***
Platform	[CVS Core] CVS somewhat slow with big files. We got some big files under our CVS repo. [14Meg.] While updating them Eclipse is slower than using CVs on the CLI. Will investigate post 2.0 Reopening Adding my name as this is listed as a performance issue. Please remove the keyword (and my cc) if this is not a performance bug. Adding my name to the cc list as we are now tracking performance issues more closely. Please remove the performance keyword if this is not a performance bug. I haven't seen any problems with bug files recently. If you still have  problems in 3.0 or later, please reopen.
Platform	[ExternalTools] Dependancy-added jar files not found This bug is related to bug 17327.  It is possible for a fragment to add a dependancy to a plugin. This occurs when a fragment is created that has a < requires > tag in its fragment.xml.   Jar files that are exported by dependancies that are added via a fragment are not listed on the classpath on the External Tools- > Ant preferece page.  An example fragment.xml that demonstrates this behaviour is given below. This fragment.xml file is designed to add junit.jar to Eclipse Ant's classpath by  adding the org.junit plugin as a dependancy to org.apache.ant. < ?xml version= " 1.0 " encoding= " UTF-8 " ? > < fragment    id= " org.eclipse.ant.optional.junit " name= " Junit Fragment " version= " 1.1.0 " plugin-id= " org.apache.ant " plugin-version= " 1.4.1 " > < requires > < import plugin= " org.junit " optional= " true " / > < /requires > < runtime > < /runtime > < /fragment > Setting resolution to later. No work planned here.
Platform	[CVS UI] keyword expansion is off by default, should be on Eclipse initially installs with CVS keyboard expansion for new files set by default to be off (same as CVS -ko option). This is extremely annoying, as command-line CVS and most CVS IDEs default to keyboard expansion on (-kkv). So most people will assume that the expansion is on, and create a bunch of files with it turned off, before they realize that it is turned off. Then repairing things is a big pain, where you essentially have to do a    cvs admin -kkv < filename > for all the affected files, to turn off the option at the server, and also manually edit the entries files in the CVS directory. I had to fix up over a hundred files like this. Eclipse does allow you to use the ' Team|Change Ascii Binary Property ' to change the mode for a file, but this does not seem to actually affect the entries file on disk for the local properties, and presumably also doesn't do the admin command to affect the repository.  I recommend that keyword expansion is on by default, as for the command-line client. On reinvestigation, it looks liek the ' Team|Change Ascii/Binary Property ' function does change both the setting in the local entries file and on the CVS server, so this is generally an effective way to resolve the problem, other than the fact that other team members must blow away their local copies of the source tree and pull it out again, or their local settings will override the server. In any case, the default value should still be on for the expansion. Thank you for reporting this bug. I was about to file a bug wrt Eclipse not " refetching " a commited file when it contained a CVS keyword, and found your bug report. I agree with Colin that it's extremely annoying, and it's confusing for people with CVS experience. Fix released to HEAD Thank you very much
Platform	Save of read-only file should prompt for new name (1GJZZI7) Select a file and mark it as read-only. Edit the file and select  File- > Save. You get an error message about the file being  read-only. We should do like other editors (like MS Word, notepad, etc) and open the save as dialog instead of  showing the read-only error message. NOTES: PRODUCT VERSION:  0.135 Win 98 SE Duplicate
Platform	proxyserver Hi, Is it possible to specify a proxyserver in the update component? Otherwise I can't access the update pages of the Eclipse application. *** This bug has been marked as a duplicate of 19258 ***
JDT	Packages view has " Show in Packages view " option build 20020319  Why is the option " Show in Packages view " available in the packages view? Show in packages view is currently contributed as an object contribution for  JavaElements. We will change to contribute this action in code to the context menu. The action will still show up in the planned Navigate Menu even when the  packages view is active. Dirk you are working on the Navigate menu, pls take care of this issue as well. Fixed in build > I20020418
Platform	Accelerator keys send wrong key Events (1G58RK9) 1- This is a windows bug, (ie. doesn't happen under Linux.)  When an acclerator is pressed, the keypressed Event that is heard is different from what is expected, it is actually a keyEvent from the last key that has been pressed. 2- I also found another bug (possibly a connected to the one above).  I noticed that if you hold down multiple keys, say 10, and then slowly release them one at a time, the keyEvents that are heard all have the same character. NOTES:  Here's the code to reproduce the error:   /* Imports */ import com.ibm.swt.events.*; import com.ibm.swt.*; import com.ibm.swt.widgets.*;   public class PR_1G58RK9 { public static void main(String[] args) { Shell shell = new Shell();   Menu menuBar = new Menu(shell, SWT.BAR); MenuItem item = new MenuItem(menuBar, SWT.CASCADE); /**   * This accelerator can be set to any character that I've   * tried. */  item.setText( " Press \ ' a\ ' " );  item.setAccelerator( ' a ' );    shell.setMenuBar(menuBar); shell.addKeyListener(new KeyAdapter() {   public void keyReleased(KeyEvent e) { System.out.println((int)e.character);   } }); shell.open();    Display display = shell.getDisplay(); while(!shell.isDisposed())   if(!display.readAndDispatch()) display.sleep(); } }   VI (21/12/2000 8:32:27 AM) Hold down the alt ' a ' keys and then release ' a ' key and then alt key:   On Windows: Get two callbacks.  The first callback has e.character = 97, e.keyCode = 0.    The second callback has e.character = 97, e.keyCode = 65536. On Linux:    Get multiple (continuous) callbacks as keys are held down with e.character = 97, e.keyCode = 0. Continuous callbacks stop when ' a ' key is released. After alt key is released, get a callback    with e.character = 0, e.keyCode = 65536. SN (2/6/01 3:51:27 PM)  This is a very old problem.  It goes as follows.  Windows (and Motif in some cirumstances, on J and G platforms) does not give enough information in the " key up " event to find out  the key that was pressed in " key down " .  So, SWT saves the key that was pressed in " key  down " and delivers that key in key up.   This strategy has at least 2 problems: - if there is no key down (ie. it was eaten by an accelerator), then there is no key up   - if multiple keys are held down and released, the wrong key is reported in some key ups No plan to fix this at this time. PRODUCT VERSION: swt [0.49] Win NT " No plan to fix this " == WONTFIX
Platform	[CVS Repo View] Generate Patch from two versions. I am trying to make a diff from within eclipse.  Normally I would use the team- > patch command but I have already checked in my change.  What I would like to do is generate a patch from version 1.31 to 1.32 of the cvs tree within eclipse.  Normally you can do this if you haven't commited 1.32 but I have.  Is there a way to do this?  I would think the intutive way to do it would be to select the file, view in resource history, select both versions and then right click and select patch.  Unfortunetly there is no patch in this menu. We do not support this.  Usually one creates a patch because one can't commit  the changes, so its a bit unusual (though in some cases I guess useful) to do so from two revisions.  The CVS diff command supports rev1/rev2 diffing, so would just need to add it to the UI and ensure compare knows how to consume it. I think we run a fairly typically developement environment.  We have a product and we release different versions of it, as I am sure you do with eclipse.  Now lets say I have two releases P1-1 and P1-2.  The P1-1 is branched and the trunk is P1-2.  Now in the early stages P1-1 = P1-2, so if I make a patch to P1-2 and it is deemed worthy of backporting then what we typically do is a diff b/t the versions of the files in P1-2 which is different from P1-1, this diff is then reviewed for backporting.  Once the review is finished, I copy the new version from P1-2 and copy it into the branch 1-1 project and then compile and commit. So in my case - and I think in general - it is definitely a valuable feature. So since eclipse can't do it I either have to remember not to checkin the file to p1-2 or I have to manually use cvs via the commandline - something I would rather avoid given the GREAT!!! interface in eclipse for using cvs. The best place for this would be the repo view There is a better work around that I figured out recently but I still think this would be a valuable feature. The work around is after checking in the file, get the revision that you want to apply the patch to.  So showInResourceHistory, rc, get contents.  Now create your patch.  When applying just check the little reverse patch checkbox.  Still requires one to be more careful since you have to remember to go back to the latest revision in your project. I too would really like this feature.  When managing both a HEAD and a  Maintenance branch, we fix a bug/add a small feature in HEAD and wish to apply the changes to the maintenance branch.  THis works great with the Create patch  feature, but it's a real PITA if you forget to create it before committing to  HEAD. I would really love a Resource History create patch between two versions of a  file, in a few of ours cases simply getting the HEAD version for the Maintenance version is not sufficient, as it's really the Diff/changes that are applicable. I agree with the " feature " of being able to generate a patch from the ressource  history. However, this can only be applied to one file. A bug correction often requires several files to be modified.  I don't see how a post-commit patch could be created on many files. The problem  with the " many files " case is that we need: . the list of files . the start revision for each file . the end revision for each file If anyone has an idea... *** Bug 49261 has been marked as a duplicate of this bug. *** Should consider for 3.0, time permitting No time for 3.0. In response to Comment #6:  This is indeed a problem, but one that has been solved: Compare with - > Another Branch or Version solved them all: - the list of files is the list selected when the context menu was invoked - the start revision of each file is the one currently checked out (including local changes, probably) - the end revision of each file is the one of the selected branch/version  Actually I'd welcome it if the compare view had a little context menu entry that would allow to create a patch from all the changes visible right now. This way it would be possible to re-use existing functionality/UI and to reap greater benefits from any advances in that areas. There is currently no plan to address this item. *** Bug 72982 has been marked as a duplicate of this bug. *** *** Bug 103659 has been marked as a duplicate of this bug. *** *** Bug 113866 has been marked as a duplicate of this bug. *** Is there are any plans to address this for 3.2? No, there is currently no plan to address this but patches will be accepted.
JDT	ResourceException while importing plugins Build 20021016  When I upgraded my 20021015 workspace by importing external plugins on top of the 20021015 plugins, I got the following stack trace in the console and all my  breakpoints were removed. I cannot reproduce the problem though.  !ENTRY org.eclipse.debug.core 4 120 Oct 17, 2002 10:53:04.808 !MESSAGE Error logged from Debug Core: !STACK 1 org.eclipse.core.internal.resources.ResourceException: The resource tree is  locked for modifications. at org.eclipse.core.internal.resources.Workspace.beginOperation (Workspace.java:116) at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1377) at org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints (BreakpointManager.java:412) at org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints (BreakpointManager.java:150) at  org.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints (BreakpointManager.java:277)         at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0 (BreakpointManager.java:248)         at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints (BreakpointManager.java:257)         at org.eclipse.jdt.internal.debug.ui.JavaModelListener.elementChanged (JavaModelListener.java:48)         at org.eclipse.jdt.internal.core.JavaModelManager$3.run (JavaModelManager.java:710)         at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:839)         at org.eclipse.core.runtime.Platform.run(Platform.java:413) at org.eclipse.jdt.internal.core.JavaModelManager.fire (JavaModelManager.java:705) at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged (DeltaProcessor.java:1445) at org.eclipse.core.internal.events.NotificationManager$1.run (NotificationManager.java:128) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:839) at org.eclipse.core.runtime.Platform.run(Platform.java:413)         at org.eclipse.core.internal.events.NotificationManager.notify (NotificationManager.java:143)         at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:67)         at org.eclipse.core.internal.resources.Workspace.broadcastChanges (Workspace.java:133)         at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:753)         at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1383)         at org.eclipse.pde.internal.ui.wizards.imports.PluginImportWizard$2.run (PluginImportWizard.java:136)         at org.eclipse.jface.operation.ModalContext$ModalContextThread.run (ModalContext.java:98) !ENTRY org.eclipse.core.resources 1 4 Oct 17, 2002 10:53:04.808 !MESSAGE The resource tree is locked for modifications. *** This bug has been marked as a duplicate of 16817 *** This is not a duplicate. The breakpoint manager listens to resource deltas  via " POST_AUTO_BUILD " , but this request to load breakpoints is coming from the  java debug UI, when the resource tree is locked. It does not appear that the java model support java element changes for " POST_AUTO_BUILD " as the core does.  Is this true Jerome? Need an alternative way to fix this one. Yes this is true. However it supports PRE_AUTO_BUILD. Would this work for you? I do not think that PRE_AUTO_BUILD will work for us, as the Java model will not  be consistent. For example, when a method is removed, we also remove any method entry breakpoints on that method. If the model is not consistent, the method  will not appear as removed. We want to make sure that the java model is always consistent. Please open a  bug if you have a case where it is not consistent. I'm just looking at the javadoc - which states that it can be inconsistent. Is  this incorrect (ElementChangedEvent.PRE_AUTO_BUILD) * Note: this notification occurs during the corresponding  PRE_AUTO_BUILD * resource change notification. The delta, which is notified here,  only contains * information relative to the previous JavaModel operations (i.e.  ignores the * possible resources which have changed outside Java operations). In   * particular, it is possible that the JavaModel be inconsistent with respect to   * resources, which got modified outside JavaModel operations (it will only be   * fully consis tent once the POST_CHANGE notification has occurred). You're right. Sorry. We talked about changing this, but we never did it.  Moreover if a builder was to modify a .java file, PRE_AUTO_BUILD would not work. Could you please enter a feature request for a POST_AUTO_BUILD  notification (where we would ensure that the java model is consistent)? *** Bug 25511 has been marked as a duplicate of this bug. *** *** Bug 24750 has been marked as a duplicate of this bug. *** I experienced this problem again when starting build 20021113 for the first time.  I will attach the log file. Never mind, I realize now that this isn't the error I got on startup.  It occurred with the 20021105 build when I was doing plugin imports.  The stack trace I got today is identical to the one in the original bug report, so I won't bother attaching it. We need to find an alternate solution to this problem, if bug 25513 will not be  fixed for 2.1 *** Bug 28661 has been marked as a duplicate of this bug. *** Fixed. This particular problem is caused by the fact that we were explicitly  setting the " registered " attribute for all breakpoints when the breakpoint  markers are loaded and breakpoint objects are created. Since the default value of the registered attribute is " true " , there is no reason to set it.  Modified the code to only update those breakpoints that have an incorrect " registered " value (which should not happen). The only way it can  happen is if a client adds an unregistered breakpoint to the breakpoint manager. Please verify, Darin (S). Verified code.
JDT	Indendation in generated getters/setters of inner classes The generated getter and setter-functions of Java beans are not indented in a  consistent way. The getters are indented with one tab, whereas the setters have two tabs as a prefix for every generated line of code. Move to jdt.core The content passed to IType.createMethod is correctly indented for the inner class. createMethod seems to add a TAB. The problem is the insertion position. The source code for the getters/setters  is inserted after the tab. This results with an extra tab in from of the first line of the added method and the tab is missing in from of the closing brace of  the type. It seems that the DOMField are updating their source range positions in the  normalizeEndPosition method. I don't see any reason for that. The added method  should contain the extra line breaks. Need to investigate more deeply this update. Fixed and released in HEAD.
Platform	unable to start...... Here is a ConsoleLog.   ########################################################### ./eclipse -debug -consoleLog Start VM: /usr/bin/java -cp /home/andy/eclipse/./startup.jar org.eclipse.core.launcher.Main -os linux -ws motif -arch x86 -showsplash /home/andy/eclipse/./eclipse -showsplash 600 -debug -consoleLog Startup: unable to load configuration java.io.FileNotFoundException: /home/andy/eclipse/.config/platform.cfg (No such file or  directory) Boot URL:     file:/home/andy/eclipse/plugins/org.eclipse.core.boot_2.0.0/boot.jar Startup: splash path = /home/andy/eclipse/plugins/org.eclipse.core.boot_2.0.0/splash.bmp Workspace location: /home/andy/eclipse/workspace Debug-Options: file:/home/andy/eclipse/.options Install URL: file:/home/andy/eclipse/ ################################################################## After that I get a messagebox " JVM terminated. Exit code=11 " . I use JRE 1.3.1 What's wrong? Does exit code 11 come from update? Not from update. DJ, is this the VM check done in core? We check the VM version in org.eclipse.core.launcher.Main and return exit code  14 if it is not compatible. I did a search and couldn't see who might  explicitly returning exit code 11. I'm curious about the following paths:  config file: /home/andy/eclipse/.config/platform.cfg workspace dir: /home/andy/eclipse/workspace  Vlad, does this make sense?  Shouldn't .config/ be found under  workspace/.metadata? Andy, when you run eclipse do you have write access to the install directory, or  was it installed as root? I've unzipped the archive into my home directory and, naturally I have full access to ~/eclipse/* There is a scenario where .config is created under the root. This is in support  of guys who are doing native installs and want to do a post-install step to pre- initialize Eclipse (to get rid of the " completing install " pass). They would  lay down the files, and run eclipse -initialize. This creates a default configuration that is saved in the root.  At startup, the code in Main/BootLoader (can't remember) checks for the  presence of pre-initialized config, and if found use it, if not create a brand new one (doing the " completing install " dance). On multi-user systems, this  means that if multiple users are sharing Eclipse, if it has been pre- initialized then all users start with that configuration when they first launch  eclipse. When running with -debug we trace the attempt to access the preinitialized  state. That is what you are seeing. root#./eclipse -initialize -debug Startup: unable to load configuration java.io.FileNotFoundException: /home/andy/eclipse/.config/platform.cfg (No such file or  directory) Boot URL:     file:/home/andy/eclipse/plugins/org.eclipse.core.boot_2.0.0/boot.jar Workspace location:    /home/andy/eclipse/workspace Debug-Options:     file:/home/andy/eclipse/.options Install URL:     file:/home/andy/eclipse/ Start VM: /usr/bin/java -cp /home/andy/eclipse/./startup.jar org.eclipse.core.launcher.Main -os linux -ws motif -arch x86 -showsplash /home/andy/eclipse/./eclipse -showsplash 600 -initialize -debug Eclipse: JVM terminated. Exit code=11 /usr/bin/java -cp /home/andy/eclipse/./startup.jar org.eclipse.core.launcher.Main -os linux -ws motif -arch x86 -showsplash /home/andy/eclipse/./eclipse -showsplash 600 -initialize -debug root# Andy, is there a log file? And if so, is there any more information in it?  This  is located at < workspace-directory > /.metadata/.log.  If the VM is crashing there  may also be a VM core dump file (javacore... file). What is the vendor and version of your VM? andy@localhost:~/eclipse > > ls -a workspace/.metadata/ ./  ../  .cache.properties  .keyring  .lock andy@localhost:~/eclipse > > java -version java version " 1.3.1 " Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.1-b24) Java HotSpot(TM) C lient VM (build 1.3.1-b24, mixed mode) andy@localhost:~/eclipse > > Is this still a problem for you with the latest builds? Closing, no further information from originator.
JDT	Mouse cursor jumps down and right during Java Code Assist I am using the Integration build 200208150800. When I place the mouse pointer over some Java code, after half a second or so, it jumps down 4 lines and right by a number of characters. I can't detect any  pattern to the amount it jumps to the right, only it is always the same amount for a given original position.  I presume it is to do with the code assist window that should come up here. On some java code elements, I see it flashing very briefly. This is a known issue (has to do with enabling " Move pointer to the default  button in dialog boxes " ). It got fixed for I20020821 (2.0.1) stream and will be  fixed in the next 2.1 build. Either install newer build or disable the " Move pointer " in Control  Panel_ > Mouse- > Motion Dirk, Thanks, for that. Changing the snap to default button fixed this problem. I should have said I was using the 2.0.1 integration build (not 2.0.0). But of  course, I got last weeks build and not the 21st. I'll try with the latest.  Ciao, Jonathan
Platform	block delete of resources does not prompt for deletion of  sub-resources If you click on a resource in the Navigator pane, hold down shift and click again (i.e., block select a list of resources) and then right-click to popup the menu and select " Delete " , there is a dialog box requesting confirmation of the delete, but no indication of whether we are just deleting the resources from the project or the resources and their sub-resources (i.e., those contained in the resource). This is inconsistent with the delete behavior when deleting just one folder resource. Actually, I've got it wrong. It's deleting the directories on my hard drive. I'm trying to remove directories from an existng project directory tree and I don't want them in my eclipse project.  closing until I decide to open a bug as an enhancement
Platform	horizontal scrollbar doesn't scroll page-wise F1 on linux-gtk  If hit beside the horizontal scroll bar in package view or outline view, I expect the view to scroll horizontally by the amount of the visible region. This works on w2k. Do we need to set the " page scroll " amount on the native widget? This is a well-known bug in the underlying platform.  The original PR contains  a trivial snippet of native C code demonstrating this. *** This bug has been marked as a duplicate of 11732 ***
Platform	Reverting when platform:/base/ changed When reverting, sites that used to be the platfrom:/base/ at the time the  history was created should be reverted as platform:/base/ even when the resolved URL is not the same as the current platform:/base/  In particular, the bootstrap entry and primary feature location entry in the platform.cfg file should be set relative to platform:/base/ NOt likely an issue in a customer scenario, but is an issue in self-hosted  development where users are picking up new drops frequently. InstallConfiguration#getRuntimeConfigurationURL(IPluginEntry,ConfiguredSite) calculates the URL of platform plugins and features and transform them in platform: URL if need be.  the previous algorithm was doing GetPlatformURL (may return platform:base) GetPluginURL Resolve platform URL  Find relative URL of PluginURL / resolved PlatformURL create new URL (PlatformURL,relativeURL)  Now: GetPlatformURL (may return platform:base) GetSiteRootURL (the PlatfromURL resolved at that time) GetPluginURL Find relative URL of PluginURL / resolved SiteRootURL create new URL (PlatformURL,relativeURL)  tested. Start eclipse 0519 with -data < path > Shutdown Start eclipse 0521 with -data < path > Revert to previous history Here is platform.cfg # Mon May 27 08:26:05 EDT 2002 version=1.0 stamp=-1021253805018 stamp.features=660881074 stamp.plugins=-1021667204460 bootstrap.org.eclipse.core.boot=platform:/base/plugins/org.eclipse.core.boot_2.0.0/ feature.default.id=org.eclipse.platform  feature.0.id=org.eclipse.platform feature.0.version=2.0.0 feature.0.application=org.eclipse.ui.workbench feature.0.root.0=platform:/base/plugins/org.eclipse.platform_2.0.0/  feature.1.id=org.eclipse.platform.source feature.1.version=2.0.0  feature.2.id=my.alphabet feature.2.version=1.0.0 feature.2.root.0=platform:/base/plugins/my.alphabet_1.0.0/ feature.3.id=org.eclipse.platform.win32 feature.3.version=2.0.0 feature.4.id=org.eclipse.jdt.source feature.4.version=2.0.0 feature.5.id=org.eclipse.pde feature.5.version=2.0.0 feature.6.id=org.eclipse.platform.win32.source feature.6.version=2.0.0 feature.7.id=org.eclipse.jdt feature.7.version=2.0.0 feature.8.id=my.alphabet.round.letters feature.8.version=1.0.0 feature.9.id=org.eclipse.pde.doc.user feature.9.version=2.0.0 feature.10.id=my.alphabet.straight.letters feature.10.version=1.0.0 site.0.url=platform:/base/ site.0.stamp=1022007248723 site.0.stamp.features=660881074 site.0.stamp.plugins=-1021667204460 site.0.updateable=true site.0.policy=USER-EXCLUDE eof=eof  Shutdown, restarted, reverted to 0521 Here is platform.cfg  # Mon May 27 08:35:19 EDT 2002 version=1.0  stamp=-1022965395941 stamp.features=660881074 stamp.plugins=-1022371630935 bootstrap.org.eclipse.core.boot=platform:/base/plugins/org.eclipse.core.boot_2.0.0/  feature.default.id=org.eclipse.platform feature.0.id=my.alphabet.more.round.letters feature.0.version=1.0.0 feature.1.id=org.eclipse.platform feature.1.version=2.0.0 feature.1.application=org.eclipse.ui.workbench feature.1.root.0=platform:/base/plugins/org.eclipse.platform_2.0.0/ feature.2.id=org.eclipse.platform.source feature.2.version=2.0.0 feature.3.id=my.alphabet feature.3.version=1.1.0 feature.3.root.0=platform:/base/plugins/my.alphabet_1.1.0/  feature.4.id=org.eclipse.platform.win32 feature.4.version=2.0.0  feature.5.id=org.eclipse.jdt.source feature.5.version=2.0.0  feature.6.id=org.eclipse.pde feature.6.version=2.0.0  feature.7.id=org.eclipse.platform.win32.source feature.7.version=2.0.0  feature.8.id=org.eclipse.jdt feature.8.version=2.0.0  feature.9.id=my.alphabet.round.letters feature.9.version=1.1.0  feature.10.id=org.eclipse.pde.doc.user feature.10.version=2.0.0  feature.11.id=my.alphabet.straight.letters feature.11.version=1.1.0  site.0.url=platform:/base/ site.0.stamp=1022712108398 site.0.stamp.features=660881074 site.0.stamp.plugins=-1022371630935 site.0.updateable=true site.0.policy=USER-EXCLUDE site.0.list.0=plugins/my.alphabet.round.letters_1.0.0/plugin.xml,plugins/my.alphabet.letter.b_1.0.0/plugin.xml,plugins/my.alphabet.letter.c_1.0.0/plugin.xml,plugins/my.alphabet.round.letters_1.0.1/plugin.xml,plugins/my.alphabet.letter.b_1.0.1/plugin.xml,plugins/my.alphabet.letter.c_1.0.1/plugin.xml,plugins/my.alphabet.straight.letters_1.0.0/plugin.xml,plugins/my.alphabet.letter.a_1.0.0/plugin.xml,plugins/my.alphabet.letter.e_1.0.0/plugin.xml,plugins/my.alphabet.straight.letters_1.0.1/plugin.xml site.0.list.1=plugins/my.alphabet.letter.a_1.0.1/plugin.xml,plugins/my.alphabet.letter.e_1.0.1/plugin.xml,plugins/my.alphabet_1.0.0/plugin.xml,plugins/my.alphabet_1.0.1/plugin.xml eof=eof version v20020527_16507 Verified 0528
JDT	livelock during indexing? build 20020610 - Windows XP - Japanese  In a fresh workspace, I imported all the plug-ins and ran a runtime-workbench. Closed the runtime workbench. CTRL+SHIFT+O and a dialog showed up with 185  files to index, CPU at 100% and nothing else seems to be happening neither the progress monitor is updating. I've done a CTRL+Break and will attach the  stack. The UI seem to be alive (I can move the progress dialog and the perspective is repainted). Adding more stacks (not sure if useful but different times could provide more  info). Hiting cancel works but if I try to search again, the same problem happens. Correction: I meant CTRL+SHIFT+T and not O. I restarted Eclipse and it now  says 124 files need to be indexed. So it seems it actually has done some work? Which VM are you using ? Seems like the indexing thread is waiting on a sleep (50) for ever... Oops, misread the trace. The search is paused while the indexer is processing  all files to be added. Need to double check. Could be indexing is slower on japanese due to encoding ?   Would you notice such a performance degradation when compiling ? I was using: java version " 1.4.1-beta " Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-beta-b08) Java HotSpot(TM) Client VM (build 1.4.1-beta-b08, mixed mode) It works with IBM 1.3.1 although I noticed it being slower than usual. I  waited a few minutes when using the 1.4.1 but nothing seemed to have happened. Although, as I wrote above, the number of files to index decreased after I  restarted. Will try again with 1.4.1 and leave the machine on for a while and see what happens. Also, you might want to enable some of the tracing of org.eclipse.jdt.core. I recommend: # Turn on debug tracing for org.eclipse.jdt.core plugin org.eclipse.jdt.core/debug=true # Reports background indexer activity: indexing, saving index file, index  queries org.eclipse.jdt.core/debug/indexmanager=true I left it running for 1 hour and the dialog did not change (185 files to  index). Restarted with .options and the dialog is now showing 124 files to index like previous test (note that I started a new workspace after I ran with  JDK 1.3.1). Attaching console with debug info. pls investigate I left it running yesterday and today I've got the Open Types dialog. So it  se ems to be really slow. Will attach what I've got in the console but I'm not  sure if it helps. The info is truncated because it seems the console did not have enough buffer. It seems that indexing works but is very slow. Perhaps indexing is slower on  japanese encoding. Japanese encoding support seems really slow. This would be a runtime issue. Closing
Platform	Poor message after ' Reset ' Perspective STEPS: 1. Open a new instance Java perspective  2. Go menu Perspective - > Reset   RESULT: A dialog displays the following message: " Do you want to reset the current perspective (Java)? " EXPECTED: Why would you put Java in parenthesis? How about this: " Do you want to reset the current Java perspective to its default? " Fixed in build > 20020514
Platform	Previous values not remembered in new CVS repo location wizard If you create a repo location from the " Share " menu, then another the same way,  the dropdowns in that page do not contain previous values. Interesting, if you create the location from the cvs repo view, they do. Fixed.
Platform	Cannot activate ' Reset ' in Perspectives Prefs (1GF9HMM) I cannot figure out what the ' Reset ' button is for in the Prefs page for Perspectives.  I could not get it to become active.  I tried changing the default perspective, deleting a custom Perspective and it remains disabled.  Tooltip is disabled for disabled buttons so I could not use that to determine what it does. NOTES: PRODUCT VERSION: 122 Working as intended.
Platform	DCR: double clicking on a closed project opens it (1GEYJ3W) There is currently a double-click listener for projects that causes them to expand.  This only works if they are ' open ' obviously.  Double clicking on a closed project does nothing, it would be nice if double-clicking a closed project invoked the ' Open Project ' action.  NOTES: PRODUCT VERSION: 119-JDK Duplicate
Platform	crash when double-clicking a .js file Eclipse M5  1) Created a CVS Repo entry for a remote CVS server, access method = ssh, external tool 2) expanded the tree under VERSION for that repo, until I gou to a Javascript file 3) Double-clicked teh file, got the exception below java.lang.IllegalArgumentException:              at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:50)              at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:35)              at org.eclipse.core.runtime.Status.setPlugin(Status.java:151) at org.eclipse.core.runtime.Status. < init > (Status.java:59)              at org.eclipse.ui.editors.text.StorageDocumentProvider.setDocumentContent(StorageDo  cumentProvider.java:83) at org.eclipse.ui.editors.text.StorageDocumentProvider.setDocumentContent(StorageDo cumentProvider.java:106)              at org.eclipse.ui.editors.text.FileDocumentProvider.setDocumentContent(FileDocument  Provider.java:217) at org.eclipse.ui.editors.text.StorageDocumentProvider.createDocument(StorageDocume ntProvider.java:126)              at org.eclipse.ui.editors.text.StorageDocumentProvider.createElementInfo(StorageDoc  umentProvider.java:138) at org.eclipse.ui.editors.text.FileDocumentProvider.createElementInfo(FileDocumentP rovider.java:379)              at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvi  der.java:247) at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java: 1503)              at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:1146)               at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:485)              at org.eclipse.ui.internal.EditorManager.access$1(EditorManager.java:483)              at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:467)              at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)              at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:460)               at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:529)               at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:361)              at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:264)              at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1559)              at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1523)              at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1515)              at org.eclipse.team.internal.ccvs.ui.actions.OpenRemoteFileAction$1.run(OpenRemoteF  ileAction.java:74) at org.eclipse.team.ui.actions.TeamAction$1.run(TeamAction.java:153) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.team.ui.actions.TeamAction.run(TeamAction.java:150) at org.eclipse.team.internal.ccvs.ui.actions.OpenRemoteFileAction.run(OpenRemoteFil eAction.java:68)              at org.eclipse.team.internal.ccvs.ui.RepositoriesView.handleDoubleClick(Repositorie  sView.java:230) at org.eclipse.team.internal.ccvs.ui.RepositoriesView.access$2(RepositoriesView.jav a:220)              at org.eclipse.team.internal.ccvs.ui.RepositoriesView$7.doubleClick(RepositoriesVie  w.java:158) at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java :286)              at org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.j  ava:444) at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected(AbstractTre eViewer.java:627)              at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)              at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)              at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)              at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)              at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)              at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)              at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:77 7)              at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)              at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)              at org.eclipse.core.launcher.Main.main(Main.java:390) Why don't we catch exceptions in OpenRemoteFileAction and revert to opening in default text editor? It's obvious that a lot of editors out there don't support opening files where the content is not local. That *is* the default text editor. We currently have not enabled any code which opens in the appropriate editor - we always use the text editor. We can't see the real exception due to dependent bug 14235. We can't fix this because we don't realy know what happened. Bug 14009 has been  fixed, so if the bug happens again we'll get the proper stack trace.
JDT	Compiler probleme: continue statement with label identifier In the case of multiple label before a loop statement (for, do, while), if there is a continue statement with a label identifier which not represent the label just before the loop statement, the compiler should generate a compilation error.  Example: public class Test {   public static void main(String[] args) {     a : b : for (int i= 0; i < 10; i++) {       if (i % 2  == 0) continue b;       if (i % 2  == 1) continue a;     } } } see the Java Language Spec, §14.15 " A continue statement with label Identifier attempts to transfer control to the enclosing labeled statement (§14.7) that has the same Identifier as its label; that statement, which is called the continue target, then immediately ends the current iteration and begins a new one. The continue target must be a while, do, or for statement or a compile-time error occurs. (...) " javac generate the correct error: > javac Test.java Test.java:7: not a loop label: a continue a;         ^ 1 error Good find. Note that javac 1.3.1 did allow such code. Fixed (LabelStatement#concreteStatement()). Verified.
JDT	Crash on " Organise Imports " corrupts workbench directories The above crash closed the workbench but left the JAWAW task still running.  Even killing the Lock file failed to allow the workbench to be restarted. I had to build a new workbench.   I am running M5 on JDK1.4.1 on an NT4 laptop. The Trace for the error is:  org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException: Index out of bounds)  at org.eclipse.swt.SWT.error(SWT.java:1887) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:96) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)  at org.eclipse.jface.window.Window.open(Window.java:525) at org.eclipse.ui.internal.dialogs.InternalErrorDialog.openQuestion (InternalErrorDialog.java:171) at org.eclipse.ui.internal.ExceptionHandler.openQuestionDialog (ExceptionHandler.java:140) at org.eclipse.ui.internal.ExceptionHandler.handleException (ExceptionHandler.java:60) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:839)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)  at org.eclipse.core.launcher.Main.main(Main.java:390) *** Stack trace of contained exception *** java.lang.IllegalArgumentException: Index out of bounds at org.eclipse.swt.SWT.error(SWT.java:1873)  at org.eclipse.swt.SWT.error(SWT.java:1819) at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:5451) at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.draw (ProblemPainter.java:220) at  org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.handleDrawRequest (ProblemPainter.java:169)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.disablePainting (ProblemPainter.java:77)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.access$1 (ProblemPainter.java:72)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter$1.run (ProblemPainter.java:119)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:93) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1389)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)  at org.eclipse.jface.window.Window.open(Window.java:525) at org.eclipse.ui.internal.dialogs.InternalErrorDialog.openQuestion (InternalErrorDialog.java:171) at org.eclipse.ui.internal.ExceptionHandler.openQuestionDialog (ExceptionHandler.java:140) at org.eclipse.ui.internal.ExceptionHandler.handleException (ExceptionHandler.java:60) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:839)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:819) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:190) at org.eclipse.core.launcher.Main.run(Main.java:549)  at org.eclipse.core.launcher.Main.main(Main.java:390) this one is fixed in F1
JDT	Open Type Dialog box and focused searching [dialogs] In addition, I would like to sep between classes that are available in the project vs classes that are available in general. If I type in H, for HelloWorld in the Open Type Dialog box, I only want to see  those classes which are in my project. If I wanted to see ALL classes that have H, I should flip a check box to see those classes. When I bring up the dialog again, the box wouldn't be checked. (Since as a general rule I am more interested in classes that are in my project an not ALL the classes that exist! *** This bug has been marked as a duplicate of 44957 ***
JDT	junit pref page: buttons are not aligned the 2 buttons should be top-aligned with the table fixed
JDT	Useabilty -  Consider making completion proposals case sensitive on the first letter Code assist is used to " explore " what is available but in many cases it is used  to simply complete what I am typing so that I don't have to type all the  characters. In this case it is optimal that the list not appear at all. I want to be able to type " just enough " characters (to narrow the possible  completions to just one), hit ctrl-space, and have the completion automatically appear.  I think this would require 2 changes from the current behavior 1) An option (on by default) to auto-complete if there is only one completion  in the list. This saves having the list popup and a keystroke. Ctrl-z will get rid of the completion if it is incorrect.  2) The lists have to be more " precise " (in order to have a chance of narrowing  them down to one completion). The problem is type names. If you include all valid type completions then the lists will always be long. I think that a  reasonable approach to this problem is to require that type completions are only included in the list if they match on the case of the first character.  Requiring users to use proper case on the first letter if they want type completions is not overly restrictive and I suspect that 98% of the time users  are doing this anyway. Restricting it to the first letter means that we will not miss SubView as a completion for Subvi. It strikes me that options are good things here. If I type " s " and hit  ctrl-space, it takes a while to build up the list of things beginning with s or S. If I'm confident I'll get the case right, I'd like to  restrict it to those matches which *just* being with s. I'd like to then  be able to expand it if I wish, without changing preferences. So, there could be a preference:  Default code-completion action: [] Case-insensitive matching, sorted case-insensitively [] Case-insensitive matching, correct case first [] Case-sensitive matching with a hotkey to toggle between which you want to use for the *current*  code completion when it's up.  I know it's a bit more work, but that would certainly be best for me. I  can't instantly think of any downsides to it (other than effort) -  anyone? Jon java core now proposes matches in a relevance order that is case sensitive
JDT	Java editor changes lost on save Latest WSWD build running Eclipse R1.0.  Ken Walker and others on his team have encountered the following several times: - open .java file - paste some text in (or make any kind of edit) - save and close editor - reopen file - changes aren't there  He has autobuild on, and it wasn't triggered on save, so it looks like it's not  even making it to the workspace. I'm investigating. Sorry, I meant WSDD. Ken has filed the following in RPRS: 1GNYLZW: IVERE:ALL - Resource changes lost even though save seemed to work closing this was a J9 JIT bug
Platform	2.0.1 introduces Coolbar cheese I believe that what I am seeing is caused by: 1) coolwidget.setRedraw(false) 2) Perspective changes, refreshing the Coolbar with new actions 3*) coolwidget.setBounds(newBounds) 4) coolwidget.setRedraw(true)  Which, on Windows does not expose the old region occupied by the control. To reproduce this, start with a plain 2.0.0 release of Eclipse, and apply my  uihack.jar to the org.eclipse.ui plugin.  The effect of this hack is that the shortcut bar appears horizontally in front of the stardard workbench windows  coolbar.  As the shortcut bar grows and shrinks (such as when changing perspective), the main coolbar's left edge is moved to accomodate the new  shortcut bar size.  This *WORKS* fine in 2.0.0. Now, replace only the SWT plugins with their 2.0.1 versions.  Open the Java  Perspective and the Resource Perspective in the same workbench window.  Pin a single view in one of the windows, such that when switching between the 2  perspectives, the shortcut bar changes size by one item.  Note the painting problem.  The first Action in the Coolbar get's left behind when the Coolbar  moves right.  To me, it appears that redraw is set to false for some reason, the bar moves, and then redraw is set to true.  Yes, the workbench code does  not exhibit this behavior in 2.0.0, so I'm speculating that SWT is turning off  redraw internally. Randy, can you provide a simpler test case - preferably a simple SWT only wad.  Fixes were made to the coolbar particularly in the area of resizing to address bugs in Eclipse 2.0.  Felipe to investigate. I saw this problem when I tried this UI hack.  When you setRedraw to false and start dancing if the widget around (changing the bounds) is something bad, the application should not do this.  Are you using setRedraw(false), setBounds(), setRedraw(true) in this order ? If so, you should changed this (move this bug to UI).  If I'm wrong, please, give me a small example and I will work on it.  BTW, the hack works in 2.0 because setRedraw for Coolbar does nothing in this version. If the Workbench is calling setRedraw(false) in 2.0.0, and it had no effect,  and now it does, then I guess there is nothing wrong with SWT or the Workbench. Presumably, the Workbench does not reposition the bar, so there will be no such  painting problems.  Only my change causes the bar to resize. On a different note, it would be ideal if setRedraw(false) followed by setBounds (rect) were consistent across platforms.  I've opened such a bug before, and SN  said that it was platform behavior, so tough. I'm going to verify what Felipe said and followup here. eclipse.ui.WorkbenchPage line 2174 in 2.0.0 calls setRedraw(false) on Coolbar.   That must be causing the cheese. If you're sure this changed from a no-op to normal implementation, then mark  this bug invalid. If the widget had its position changed while setredraw was set to false so this  PR is invalid.
JDT	AST: CompilationUnit.findDeclaringNode only finds bindings from its own ast 20020917  1. CU A has a expression that has a TypeBinding to a type in CU B. I need to get the type declaration in B 2. I create an AST for B and do CompilationUnit.findDeclaringNode(typeBinding). Unfortunatly, the binding is not found: It seems typeBinding.equals goes for  identity, but is not comparing keys. TypeBinding equals is using the Object's implementation. I will see how to improve this. This method is only intended to be used to retrieve declaring node from a binding created in the same compilation unit. Jim - we might want to propose a new mecanism to achieve this. Keys are our general mechanism for relating bindings arising from one AST to  those from another AST. This suggests adding a new API method CompilationUnit.findDeclaringNode(String key) so that a binding key can be  used to do the lookup. Martin: would like solve your problem? That would solve the problem! Added API method; marked it @since 2.1; added other minor clarifications. Ignore previous comment. We won't add the method until implementation is ready. Here is the API spec for the new method: /**   * Finds the corresponding AST node in the given compilation unit from * which the binding with the given key originated. Returns   * < code > null < /code > if the corresponding node cannot be determined.   * This method always returns < code > null < /code > if bindings were not  requested * when this AST was built.   * < p > * The following table indicates the expected node type for the various   * different kinds of binding keys: * < ul > * < li > < /li > * < li > package - a < code > PackageDeclaration < /code > < /li > * < li > class or interface - a < code > TypeDeclaration < /code > or a   * < code > ClassInstanceCreation < /code > (for anonymous classes) < /li > * < li > primitive type - none < /li > * < li > array type - none < /li > * < li > field - a < code > VariableDeclarationFragment < /code > in a    * < code > FieldDeclaration < /code > < /li > * < li > local variable - a < code > SingleVariableDeclaration < /code > , or   *    a < code > VariableDeclarationFragment < /code > in a    * < code > VariableDeclarationStatement < /code > or    * < code > VariableDeclarationExpression < /code > < /li > * < li > method - a < code > MethodDeclaration < /code > < /li > * < li > constructor - a < code > MethodDeclaration < /code > < /li > * < /ul > * < /p > *    * @param key the binding key, or < code > null < /code > * @return the corresponding node where a binding with the given   * key is declared, or < code > null < /code > if the key is < code > null < /code > * or if the key does not correspond to a node in this compilation unit   * or if bindings were not requested when this AST was built * @see IBinding#getKey   * @since 2.1 */  public ASTNode findDeclaringNode(String key) When this method is added, the Javadoc for the other method should be changed  to add: * Use < code > findDeclaringNode(binding.getKey()) < /code > when the  binding comes * from a different AST. and * @see #findDeclaringNode(java.lang.String) Is this urgent? In the next weeks, I will spend time on the DOM side only if  the bug needs to be fixed asap, otherwise I will defer its resolution. Jim - put the previous version of CompilationUnit as an attachement. You had a  change to the findDeclaringNode(IBinding) method API as well. As soon as the implementation is ready I will release the version attached to this PR in the  same time. Ok, I released it. If you find any problem with it, reopen it or create a new bug. Fixed and released in 2.1 stream. Regression tests added. Verified.
Platform	Info message with the word when repeated twice in a row. The information message in error has the following text: " Your changes have been saved.  When when you are finished, select ' Mark as  Merged ' to make this file an outgoing change.  The error is that " when " is repeated. fixed
Platform	IndexOutOfBounds exception during Save Build 20021105  Got an IndexOutOfBounds exception during save. The stack trace is java.lang.IllegalArgumentException: Index out of bounds  at org.eclipse.swt.SWT.error(SWT.java:2166) at org.eclipse.swt.SWT.error(SWT.java:2110)  at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:6087) at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.draw (ProblemPainter.java:331) at  org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.handleDrawRequest (ProblemPainter.java:268)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.enablePainting (ProblemPainter.java:86)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.updatePainting (ProblemPainter.java:145)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.access$1 (ProblemPainter.java:142)  at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter$1.run (ProblemPainter.java:162)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:94) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1431)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1414) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:831) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) !ENTRY org.eclipse.ui 4 4 Nov 08, 2002 12:36:13.687 !MESSAGE Save Failed !ENTRY org.eclipse.ui 2 0 Nov 08, 2002 12:36:13.703 !MESSAGE Save Failed !STACK 0 org.eclipse.swt.SWTException: Failed to execute runnable  (java.lang.IllegalArgumentException: Index out of bounds) at org.eclipse.swt.SWT.error(SWT.java:2180)  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:97)  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)  at org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop (EventLoopProgressMonitor.java:88)  at org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled (EventLoopProgressMonitor.java:67)  at org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled (ProgressMonitorWrapper.java:87)  at org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled (ProgressMonitorWrapper.java:87)  at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure (CompilationUnit.java:68)  at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent (CompilationUnit.java:655)  at org.eclipse.jdt.internal.core.Openable.save(Openable.java:447) at  org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation (CommitWorkingCopyOperation.java:121)  at org.eclipse.jdt.internal.core.JavaModelOperation.execute (JavaModelOperation.java:326)  at org.eclipse.jdt.internal.core.JavaModelOperation.run (JavaModelOperation.java:626)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1439)  at org.eclipse.jdt.internal.core.JavaElement.runOperation (JavaElement.java:562)  at org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:80) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDoc ument(CompilationUnitDocumentProvider.java:926)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument (AbstractDocumentProvider.java:449)  at org.eclipse.ui.texteditor.AbstractTextEditor$10.execute (AbstractTextEditor.java:2578)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run (WorkspaceModifyOperation.java:65)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1439)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run (WorkspaceModifyOperation.java:79)  at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation (AbstractTextEditor.java:2596)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio n(CompilationUnitEditor.java:797) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave (CompilationUnitEditor.java:847) at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1015)  at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:884) at org.eclipse.jface.operation.ModalContext.runInCurrentThread (ModalContext.java:296) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)  at org.eclipse.jface.window.ApplicationWindow$1.run (ApplicationWindow.java:391)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65) at org.eclipse.jface.window.ApplicationWindow.run (ApplicationWindow.java:388) at org.eclipse.ui.internal.WorkbenchWindow.run (WorkbenchWindow.java:1149) at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation (EditorManager.java:890) at org.eclipse.ui.internal.EditorManager.saveEditor (EditorManager.java:1020) at org.eclipse.ui.internal.WorkbenchPage.saveEditor (WorkbenchPage.java:2051)  at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:30) at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)  at org.eclipse.ui.internal.WWinKeyBindingService.invoke (WWinKeyBindingService.java:130)  at org.eclipse.ui.internal.WWinKeyBindingService.pressed (WWinKeyBindingService.java:108)  at org.eclipse.ui.internal.WWinKeyBindingService$5.widgetSelected (WWinKeyBindingService.java:325)  at org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent (AcceleratorMenu.java:53)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1431) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1414)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:831)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)  at org.eclipse.core.launcher.Main.main(Main.java:539) *** This bug has been marked as a duplicate of 25812 *** *** Bug 28289 has been marked as a duplicate of this bug. ***
Platform	[Contributions] Update code to reflect supported extension attributes In the code, there are constants with attribute names which we do not support  (and are also not in the documentation). These should be removed. See bug 19833 for more details. Post 2.0 work Reopened for investigation Code changed and released.
Platform	[Tasks] Order of tasks is wrong build 2.0 release I do like to see the compile errors first when I switch to sort by priority. At the moment I see the the deprecated tasks before. Compile errors are more  urgent and should be showed first. Randy Hudson does this in his ui patch. As I can not attach resources at the  moment, please indicate when you need the patch. I think I could extract the necessary changes from the patch. Please let me know if you consider this as  useful. there have been changes here jeff.. the tasks order my be correct now (or  still wrong.. :) fixed
Platform	[2.0.2 tp1] Dialog are too big Try to disable the platform, you wil get a dialog This dialog seems big no ? it doesn't seem to resize around the text ? The size of the dialog is dictated by the platform - we just call ' openError ' .
Platform	Should be able to compare class with class in external jar Import some code from a jar. Make some changes. Now try to compare the changed code to the code in the jar - you can ' t. You can, however you have to import the jar-file into your workspace first. Not for M3. No direct support for external files in 2.0. reopened to mark as duplicate *** This bug has been marked as a duplicate of 21817 ***
JDT	Hidden watchpoint support We should allow the setting of watchpoints from the variables view.  The current technique of adding a watchpoint from the outliner seriously hides this functionality. Implemented. Please verify. Enhanced code to make this work for old launch style too. Fixed to work with old launches. Please verify (Jared) Verified.
Platform	Attempting to modify locked resource tree in BreakpointManager 20020205  Occurs at startup. Turns out that a resource changed is the first reason to get breakpoints.  Results in breakpoints getting created. Log: Wed Feb 06 13:27:46 CST 2002 4 org.eclipse.debug.core 120 Internal error logged from Debug Core: org.eclipse.debug.core.DebugException: The resource tree is locked for  modifications. at org.eclipse.debug.internal.core.BreakpointManager.createBreakpoint (BreakpointManager.java:321) at org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints (BreakpointManager.java:123) at  org.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints (BreakpointManager.java:249)  at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0 (BreakpointManager.java:219)  at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoint (BreakpointManager.java:198)  at org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerVisitor.handl eRemoveBreakpoint(BreakpointManager.java:472)  at org.eclipse.debug.internal.core.BreakpointManager$BreakpointManagerVisitor.visit (BreakpointManager.java:433) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:52) at org.eclipse.core.internal.events.ResourceDelta.accept (ResourceDelta.java:43) at org.eclipse.debug.internal.core.BreakpointManager.resourceChanged (BreakpointManager.java:366) at org.eclipse.core.internal.events.NotificationManager$1.run (NotificationManager.java:125) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:832) at org.eclipse.core.runtime.Platform.run(Platform.java:395)  at org.eclipse.core.internal.events.NotificationManager.notify (NotificationManager.java:140)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:43)  at org.eclipse.core.internal.events.NotificationManager.broadcastChanges (NotificationManager.java:64)  at org.eclipse.core.internal.resources.Workspace.broadcastChanges (Workspace.java:121)  at org.eclipse.core.internal.resources.Workspace.endOperation (Workspace.java:709)  at org.eclipse.core.internal.resources.Workspace.run (Workspace.java:1237)  at org.eclipse.debug.internal.core.BreakpointManager$3.run (BreakpointManager.java:536)  at java.lang.Thread.run(Thread.java:536) What resource are we modifying? We protect against registering/setting the  registered property. What is happening: We are removing breakpoints (deleting non persisted) This triggers the BreakpointManager to initializeBreakpoints which results in  created all of the breakpoints from the markers. We currently do not add as a resource listener until after " deleting " but the  deleting is occurring in a workspace runnable so we get added in time to hear about the non-persisted breakpoints getting removed. More problems because of bug 7683. Added fix to BreakpointManager. Please verify. Verified code. I can't say we like the " fix " . Filed bug# 9267 against core.
JDT	turn off the debug info on a project by project basis Eclipse gives control over the depth of debug information but only at the  platform level (inside windows- > preferences). I believe that this preference  setting is misplaced. As I go from debugging a project to production code, I would like to see debugging information removed (if for no other reason, class  file size). This decision would not be on a global basis but rather on a project by project or even a package by package basis. *** Bug 7395 has been marked as a duplicate of this bug. *** Deferring to next milestone. Deferring post 2.0 Reopening Clearing resolution *** Bug 22289 has been marked as a duplicate of this bug. *** *** Bug 14062 has been marked as a duplicate of this bug. *** *** Bug 19663 has been marked as a duplicate of this bug. *** Solved in latest, IJavaProject can be specified custom options. Custom  preferences are not shareable (yet). Still need a good UI to exploit this. Until UI happens, it is possible to manually update the .jprefs file inside the  project JDT/Core metadata area to specify custom options (based on the workspace JDT/Core metadata file: pref_store.ini contents). Verified.
Platform	bin directory not excluded even if in .cvsignore On upgrading to 2.1 stream M2 we have a reproducable problem that the bin/ dir  of projects is not ignored and always registers as a change.  Both with synchronise with repository and it shows the cvs changed ( > ) decoration. Does the bin directory exists in the repository? (you can check by expanding  the project in the CVS Repositories View). *** This bug has been marked as a duplicate of 25636 ***
JDT	Green and Blue colors are too close to denote different states (1GKKD34) The Green and Blue colors used to denote breakpoint states are  too close together visually. We need two colors that are readily distinguished by our brains.  VAJ used grey and blue and it lead to common complaints. NOTES: EG (9/24/2001 8:17:36 AM) we should check with Andre whether we can use some pattern  change in addition to color. A color only difference is also a problem when it comes  to accessability. The debugger should provide a marker message that  gives more information about the breakpoint, e.g., Line 999 - Enabled. The editor provides support for this all that is needed is to define a message attribute  for the marker. PRODUCT VERSION: 201 Received new artwork. Will use check mark overlay to denote installed. *** This bug has been marked as a duplicate of 4383 ***
JDT	No revealing in type hierarchy when " show members in hierarchy " 1) open a type hierarchy on JavaElement 2) *** This bug has been marked as a duplicate of 6057 ***
Platform	infopops: & lt;b & gt; should resolve to < b > , not to a tag In infopops, in the description, if I have the following text: & lt;b & gt;This is example showing tags & lt;/b & gt;  It should resolve to this: < b > This is an example showing tags < /b > Instead, it's resolving to the following string, presented in bold: This is an example showing tags I should only get text in bold if the XML contains < b > , not & lt;b & gt;  Otherwise, I can't describe to users how to tag HTML in bold tags, for example.  Note that if the XML says this: & lt;xsd:example/ & gt;   It does resolve correctly to this: < xsd:example/ > It seems it only resolves incorrectly for & lt;b & gt; and & lt;/b & gt; Fixed. Should appear in the next nightly build (20020425 or later).
JDT	extract method: syntax errors after extracting a block [refactoring] package p; class A{ void m(){   int i= 1 + 1; if (i < 0)/*[*/{    i += i; return;   }/*] */ else    m(); } } Everything works fine if you select the statement inside a block. Since this is  a rare case I would like to postpone > 2.0 Changed resolution to LATER Should simply not allow this. btw, still broken in 20030217 Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state.
Platform	Checkout deletes project! Checkout deletes the project before checking out!!! This is very bad; you can no longer create a Java project and check out over top of it. We should delete the contents, not the project itself. Must fix before next integration build. Reassigning to Jean-Michel, he made the change. :-) Checkout leaves the project and deletes all children. This should allow the  project nature to remain valid so that the current workaround for getting a java project works. fixed in M4
JDT	avoid unhelpful javadoc comments (1GI95SQ) 1. Create a new class named Pass1 with superclass Object and check the box for creating a constructor. Observe: The generated constructor is: =======8 < =========  /** * Constructor for Pass1   */ public Pass1() {   super(); } =======8 < =========  The template javadoc comment is not helpful. Having the wizard supply such a comment probably does more harm than not supplying any javadoc comment, since the programmer can easily forget to change the comment to something more meaningful. As a general rule, the Java UI should not attempt to write the developer's program for them in cases where it has no clue as to what to put there. Expectation: The generated constructor should be: =======8 < =========  public Pass1() { super();  } =======8 < =========  NOTES: MA (15.08.2001 17:10:52)  I suggest that we should offer a preference setting to turn on / off Java Doc comment stubs. The Java Doc generated are mosty just stubs, and the user has to change them.  Grtting created stubs however is helpful, even for the mentioned Constructor comment. moved to ' active ' PRODUCT VERSION:  Eclipse R0.9 it would be better to have the option on the wizard page rather than " hidden " in the preferences. Perference page allows you to disable JavaDoc comment creation > 11122
Platform	When re-installing after concelling, there is no security prompt 20020409  Attempt to install RedDot 1 When security dialog opens click cancel Attempt to re-install RedDot 1 You are not prompted for any security dialog, and you never accepted the first dialog FeaturePackagedContentProvider.getVerifier() now returns a new verifier all the time  This method is called in Feature.install() which will then create a new Verifier for each install  So if we cancel an install, and re-install a new install is created, a new verifier is crested, a new state is created, the user is prompted even if s/he accepted teh cert previously
JDT	Keyboard shortcut for run/debug We should have keyboard shortcuts for run & debug. Added F11 for Debug and Ctrl+F11 for run. Please verify. Verified.
Platform	Opened window list labels too long Under the Window menu, the last part of the menu is a list of opened windows.  The labels for each of these items is way too long. We need to truncate them (i.e use the " ... " as we do in the file MRU list). It seems the first segments  of the label is more interesting than the last segments. Oh, this is on build 2002-02-12 Now trims the end of the window name (max out at 40 characters just like the  MRU list of perspectives). Also, a number is assigned to each and the first 9 are given mnumonics. Fix in build > 2002-03-05
Platform	StyledText - SWT.WRAP style and widthHint specification Look into this and how it should work. 2) When StyledText is created with the WRAP style, StyledText.computeSize  ignores the width hint and seems to get its width from the current width of the widget.  Here is a simple example that demonstrates this.  Note that in the example I have given a width hint so the wrapping should just be factored into the  calculation: public static void main(String[] args) { Display display = new Display();  Shell shell = new Shell(display); shell.setLayout(new FillLayout());  StyledText styledText1 = new StyledText(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY);  styledText1.setText( " NOT WRAPPED: When you are working with  the\nEnterprise Services Toolkit,\nyou may find it easier to do\nyour development and testing all within\nthe Enterprise Services perspective.\nTo  suppress the switching of perspectives,\nread Opening the Enterprise Services Perspective. " );  StyledText styledText2 = new StyledText(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.WRAP);  styledText2.setText( " WRAPPED: When you are working with the Enterprise  Services Toolkit, you may find it easier to do your development and testing all within the Enterprise Services perspective. To suppress the switching of  perspectives, read Opening the Enterprise Services Perspective. " );   Point p = styledText1.computeSize(100, SWT.DEFAULT, true); System.out.println( " styledText NOT WRAPPED before - preferred size  is " +p.x+ " " +p.y);  p = styledText2.computeSize(100, SWT.DEFAULT, true); System.out.println( " styledText WRAPPED before - preferred size  is " +p.x+ " " +p.y); styledText1.setSize(100, 100);  styledText2.setSize(100, 100); p = styledText1.computeSize(100, SWT.DEFAULT, true);  System.out.println( " styledText NOT WRAPPED after size set - preferred  size is " +p.x+ " " +p.y);  p = styledText2.computeSize(100, SWT.DEFAULT, true); System.out.println( " styledText WRAPPED after size set - preferred size  is " +p.x+ " " +p.y); shell.open();  p = styledText1.computeSize(100, SWT.DEFAULT, true); System.out.println( " styledText NOT WRAPPED after open - preferred size  is " +p.x+ " " +p.y);  p = styledText2.computeSize(100, SWT.DEFAULT, true); System.out.println( " styledText WRAPPED after open - preferred size  is " +p.x+ " " +p.y); while (!shell.isDisposed()) {   if (!display.readAndDispatch()) display.sleep();  } display.dispose(); } Opened based on [Bug 20094]. Look into post 2.0 Reopen The reason the widthHint in computeSize is relevant is because the following  code needs to be changed: Point p = infoArea.computeSize(SWT.DEFAULT, SWT.DEFAULT, true);   sc.setMinHeight(p.y); sc.setMinWidth(p.x);   Doing a compute size with default for the width should return the size required for the StyledText widget without any wrapping which is not what the userwants  or they wouldn't have created the widget with the wrap style.  The code should read something like: Point p = infoArea.computeSize(200, SWT.DEFAULT, true);   sc.setMinHeight(p.y); sc.setMinWidth(p.x);  This way the horizontal scrollbar will only come into play when the width is less than 200.  (The correct value should actually be determined by getting the  default width with all widgets except the wrapped styled text). Related bug that was fixed [Bug 9191] and is the cause for the incorrect width. Changed computeSize.
Platform	JVM terminated with EXCEPTION_ACCESS_VIOLATION on Eclipse startup I came in this morning and started my machine, ready to start the week with a  bang. Unfortunately, when I started Eclipse, an error displayed shortly after the splash page was shown. I am including the contents below. An entry was also  added to my Eclipse directory that included log information. I am also attaching those contents below. My company runs many things in a shared server  environment, so I tried installing the JVM on my local machine - no difference. I have also tried rebooting with no success. This is a fairly old machine  (400MHz Dell Dimension), but it was recently scratched and installed with Windows NT Workstation (4.0 w/SP6a & hotfixes). I have also run a complete  hardware diagnostic and everything pertinent came out OK (errors on CD-ROM and Diskette drives only). I have recently had experiences when Eclipse would just  shut down in the middle of editing or opening a java file, but most of the time I have been able to restart it and continue. Now, I am unsure what to do to get  going again - please help. ERROR DISPLAY CONTENTS: ============================== JVM terminated. Exit code=1 p:\sun-java\jdk1.3.1_02\bin\javaw.exe -classpath P:\eclipse\eclipse-SDK-20020321-win32\startup.jar  org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 -endsplash P:\eclipse\eclipse-SDK-20020321-win32\eclipse.exe -endsplash 5833142 ============================== HS_ERR_PID230.LOG file contents: ============================== Unexpected Signal : EXCEPTION_ACCESS_VIOLATION occurred at PC=0x6d44a920 Function name=(N/A) Library=p:\sun-java\jdk1.3.1_02\jre\bin\hotspot\jvm.dll  NOTE: We are unable to locate the function name symbol for the error just occurred. Please refer to release documentation for possible       reason and solutions. Current Java thread:         at java.util.zip.Inflater.inflateBytes(Native Method) at java.util.zip.Inflater.inflate(Inflater.java:195)         at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:127) at sun.misc.Resource.getBytes(Resource.java:67)         at java.net.URLClassLoader.defineClass(URLClassLoader.java:245) at java.net.URLClassLoader.access$100(URLClassLoader.java:56)         at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC lassLoader.java:106)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:771) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLCl assLoader.java:765)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:65) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(D elegatingURLClassLoader.java:425)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:779) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:751)         at java.lang.ClassLoader.loadClass(ClassLoader.java:255) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:315)         at org.eclipse.ui.internal.WorkbenchActionBuilder.makeActions(WorkbenchActionBuilde r.java:624) at  org.eclipse.ui.internal.WorkbenchActionBuilder.buildActions(WorkbenchActionBuild er.java:137)         at org.eclipse.ui.internal.WorkbenchWindow. < init > (WorkbenchWindow.java:215)         at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:678) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:524)         at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817 ) at org.eclipse.core.runtime.Platform.run(Platform.java:395)         at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:509)         at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:559) at org.eclipse.ui.internal.Workbench.init(Workbench.java:407)         at org.eclipse.ui.internal.Workbench.run(Workbench.java:702) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:77 7)         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)         at org.eclipse.core.launcher.Main.basicRun(Main.java:196) at org.eclipse.core.launcher.Main.run(Main.java:555)         at org.eclipse.core.launcher.Main.main(Main.java:396) Dynamic libraries: 0x00400000 - 0x00405000         p:\sun-java\jdk1.3.1_02\bin\javaw.exe 0x77F60000 - 0x77FBE000         C:\WINNT\System32\ntdll.dll 0x77DC0000 - 0x77DFF000         C:\WINNT\system32\ADVAPI32.dll 0x77F00000 - 0x77F5F000         C:\WINNT\system32\KERNEL32.dll 0x77E70000 - 0x77EC5000         C:\WINNT\system32\USER32.dll 0x77ED0000 - 0x77EFC000         C:\WINNT\system32\GDI32.dll 0x77E10000 - 0x77E67000         C:\WINNT\system32\RPCRT4.dll 0x78000000 - 0x78043000         C:\WINNT\system32\MSVCRT.dll 0x6D420000 - 0x6D4F0000         p:\sun-java\jdk1.3.1_02\jre\bin\hotspot\jvm.dll 0x77FD0000 - 0x77FFA000         C:\WINNT\System32\WINMM.dll 0x6D220000 - 0x6D227000         p:\sun-java\jdk1.3.1_02\jre\bin\hpi.dll 0x6D3B0000 - 0x6D3BD000         p:\sun-java\jdk1.3.1_02\jre\bin\verify.dll 0x6D250000 - 0x6D266000         p:\sun-java\jdk1.3.1_02\jre\bin\java.dll 0x6D3C0000 - 0x6D3CD000         p:\sun-java\jdk1.3.1_02\jre\bin\zip.dll 0x10000000 - 0x10007000          P:\eclipse\eclipse-SDK-20020321-win32\plugins\org.eclipse.core.resources\os\win3 2\core_2_0_5.dll 0x08FB0000 - 0x08FF4000 P:\eclipse\eclipse-SDK-20020321-win32\plugins\org.eclipse.swt\os\win32\x86\swt-w in32-2031.dll 0x77B20000 - 0x77BD1000         C:\WINNT\system32\ole32.dll 0x716F0000 - 0x7177A000         C:\WINNT\system32\COMCTL32.dll 0x77D80000 - 0x77DB2000         C:\WINNT\system32\comdlg32.dll 0x77C40000 - 0x77D7B000         C:\WINNT\system32\SHELL32.dll 0x65340000 - 0x653D5000         C:\WINNT\system32\OLEAUT32.dll 0x76AB0000 - 0x76AB5000         C:\WINNT\System32\IMM32.dll 0x76AC0000 - 0x76ADD000         C:\WINNT\System32\imagehlp.dll 0x690A0000 - 0x690AB000         C:\WINNT\System32\PSAPI.DLL Local Time = Mon Apr 15 08:17:13 2002 Elapsed Time = 18 # # HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION # Error ID : 4F530E43505002C4 # Please report this error at # http://java.sun.com/cgi-bin/bugreport.cgi # # Java VM: Java HotSpot(TM) Client VM (1.3.1_02-b02 mixed mode) # ============================== Could you please try the workaround referred to in bug 12972: Set the following environment variable before launching Eclipse. SET JITC_COMPILEOPT=NINLINING   Please let us know whether this works for you. Note: That workaround was for the IBM 1.3.1 VM. This user is running Sun  hotspot. Thanks very much for the suggestion - it did not work, though.   This is really wierd -- After submitting the original bug report, I figured that the local JVM wasn't doing me any good, so I pointed Eclipse back at the JVM on  our server's P: drive. Just for grins, I then gave it another try - it worked!!!  Unfortunately, as soon as I tried to do anything, Eclipse closed down (without any errors). I am attaching the contents of HS_ERR_PID223.LOG below.   After setting the JITC_COMPILEOPT=NINLINING environment variable to be active when I startup my machine, and then rebooting, I am back to the original message  box error. BTW - interestingly enough, there are 3 other developers here that have about  the same setup (2 of them actually have even older 300MHz machines) - and their systems are working OK. I can't think of anything I have done that is out of the  ordinary. Thanks for any other ideas you may have.... Contents of HS_ERR_PID223.LOG log file: ============================== Unexpected Signal : EXCEPTION_ACCESS_VIOLATION occurred at PC=0x6d44a937 Function name=(N/A) Library=p:\sun-java\jdk1.3.1_02\jre\bin\hotspot\jvm.dll  NOTE: We are unable to locate the function name symbol for the error just occurred. Please refer to release documentation for possible       reason and solutions. Current Java thread:         at java.util.zip.Inflater.inflateBytes(Native Method) at java.util.zip.Inflater.inflate(Inflater.java:195)         at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:127) at sun.misc.Resource.getBytes(Resource.java:67)         at java.net.URLClassLoader.defineClass(URLClassLoader.java:245) at java.net.URLClassLoader.access$100(URLClassLoader.java:56)         at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC lassLoader.java:106)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:771) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:751)         at java.lang.ClassLoader.loadClass(ClassLoader.java:255) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:315)         at org.eclipse.jdt.internal.debug.core.hcr.JavaHotCodeReplaceManager. < init > (JavaHot CodeReplaceManager.java:140) at  org.eclipse.jdt.internal.debug.core.hcr.JavaHotCodeReplaceManager.getDefault(Jav aHotCodeReplaceManager.java:157)         at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.startup(JDIDebugPlugin.java:1 00) at  org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:7 01)         at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817 ) at  org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(Pl uginDescriptor.java:713)         at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDesc riptor.java:184) at  org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLo ader.java:52)         at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC lassLoader.java:130) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:771)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLCl assLoader.java:765) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass (DelegatingURLClassLoader.java:65)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(D elegatingURLClassLoader.java:425) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:779)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:751) at java.lang.ClassLoader.loadClass(ClassLoader.java:255)         at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:315) at java.lang.ClassLoader.defineClass0(Native Method)         at java.lang.ClassLoader.defineClass(ClassLoader.java:493) at  java.security.SecureClassLoader.defineClass(SecureClassLoader.java:111) at java.net.URLClassLoader.defineClass(URLClassLoader.java:248)         at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195)         at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188)         at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC lassLoader.java:106) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:771)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:751) at java.lang.ClassLoader.loadClass(ClassLoader.java:255)         at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(Pl uginDescriptor.java:665) at  org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDesc riptor.java:184)         at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLo ader.java:52) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC lassLoader.java:130)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:771) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:751)         at java.lang.ClassLoader.loadClass(ClassLoader.java:255) at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(Plu ginDescriptor.java:128) at  org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(Plu ginDescriptor.java:165)         at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension (ConfigurationElement.java:96) at  org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.createTextHover(JavaTe xtHover.java:245)         at org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.checkTextHovers(JavaTe xtHover.java:224) at  org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInfo(JavaTextH over.java:292)         at org.eclipse.jface.text.TextViewerHoverManager.computeInformation(TextViewerHover Manager.java:56) at  org.eclipse.jface.text.AbstractInformationControlManager.showInformation(Abstrac tInformationControlManager.java:536)         at org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouse Hover(AbstractHoverInformationControlManager.java:233) at  org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:207) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420)         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:722)         at org.eclipse.ui.internal.Workbench.run(Workbench.java:705) at  org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:77 7)         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)         at org.eclipse.core.launcher.Main.basicRun(Main.java:196) at org.eclipse.core.launcher.Main.run(Main.java:555)         at org.eclipse.core.launcher.Main.main(Main.java:396) Dynamic libraries: 0x00400000 - 0x00405000         p:\sun-java\jdk1.3.1_02\bin\javaw.exe 0x77F60000 - 0x77FBE000         C:\WINNT\System32\ntdll.dll 0x77DC0000 - 0x77DFF000         C:\WINNT\system32\ADVAPI32.dll 0x77F00000 - 0x77F5F000         C:\WINNT\system32\KERNEL32.dll 0x77E70000 - 0x77EC5000         C:\WINNT\system32\USER32.dll 0x77ED0000 - 0x77EFC000         C:\WINNT\system32\GDI32.dll 0x77E10000 - 0x77E67000         C:\WINNT\system32\RPCRT4.dll 0x78000000 - 0x78043000         C:\WINNT\system32\MSVCRT.dll 0x6D420000 - 0x6D4F0000         p:\sun-java\jdk1.3.1_02\jre\bin\hotspot\jvm.dll 0x77FD0000 - 0x77FFA000         C:\WINNT\System32\WINMM.dll 0x6D220000 - 0x6D227000         p:\sun-java\jdk1.3.1_02\jre\bin\hpi.dll 0x6D3B0000 - 0x6D3BD000         p:\sun-java\jdk1.3.1_02\jre\bin\verify.dll 0x6D250000 - 0x6D266000         p:\sun-java\jdk1.3.1_02\jre\bin\java.dll 0x6D3C0000 - 0x6D3CD000         p:\sun-java\jdk1.3.1_02\jre\bin\zip.dll 0x10000000 - 0x10007000 P:\eclipse\eclipse-SDK-20020321-win32\plugins\org.eclipse.core.resources\os\win3 2\core_2_0_5.dll 0x08FB0000 - 0x08FF4000          P:\eclipse\eclipse-SDK-20020321-win32\plugins\org.eclipse.swt\os\win32\x86\swt-w in32-2031.dll 0x77B20000 - 0x77BD1000         C:\WINNT\system32\ole32.dll 0x716F0000 - 0x7177A000         C:\WINNT\system32\COMCTL32.dll 0x77D80000 - 0x77DB2000         C:\WINNT\system32\comdlg32.dll 0x77C40000 - 0x77D7B000         C:\WINNT\system32\SHELL32.dll 0x65340000 - 0x653D5000         C:\WINNT\system32\OLEAUT32.dll 0x76AB0000 - 0x76AB5000         C:\WINNT\System32\IMM32.dll 0x09530000 - 0x095DC000         C:\PROGRA~1\COMMON~1\RSMHOOK.dll 0x67800000 - 0x6782B000         C:\WINNT\System32\oleacc.dll 0x61220000 - 0x6122B000         C:\Program Files\Microsoft Hardware\Mouse\MSH_ZWF.dll 0x71280000 - 0x71286000         C:\WINNT\system32\MSIDLE.DLL 0x76AC0000 - 0x76ADD000         C:\WINNT\System32\imagehlp.dll 0x690A0000 - 0x690AB000         C:\WINNT\System32\PSAPI.DLL Local Time = Mon Apr 15 09:47:00 2002 Elapsed Time = 205 # # HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION # Error ID : 4F530E43505002C4 # Please report this error at # http://java.sun.com/cgi-bin/bugreport.cgi # # Java VM: Java HotSpot(TM) Client VM (1.3.1_02-b02 mixed mode) # ============================== There is an intermittent crash on win32 which we have been tracking for a  while now, which has a couple of different symptomatic stack traces. Unfortunately, those stack traces seem to indicate an earlier memory  corruption problem, rather than point at a particular immediate error, so they have not been greately helpful.  However, this particular crash does not appear to be related to the above problem. A crash in java.util.zip.Inflator seems to point at a VM/JCL level  problem, rather than an eclipse issue. Possibly either a corrupted installation, a bad reaction to being low on memory, etc.  Q: Have you tried starting with a new workspace? Starting with a new workspace previously has corrected other problem situations  (like CVS sync problems) typically gets me going again. This time, it got me started, but Eclipse closes (with no message) immediately when I try to do  anything. One of our folks suggested that I try the new 1.4.0 JVM. Starting a new  workspace with that also gets me started, but Eclipse again closes very shortly afterward. Contents of the file HS_ERR_PID76.LOG are included below. For what  it's worth, we now seem to have a Function= identified - I hope it helps....  HS_ERR_PID76.LOG File contents: ==============================  Unexpected Signal : EXCEPTION_ACCESS_VIOLATION occurred at PC=0x6D367D95 Function=JVM_DisableCompiler+0x126E3 Library=p:\j2sdk1.4.0\jre\bin\client\jvm.dll Current Java thread:         at java.util.zip.Inflater.inflateBytes(Native Method) at java.util.zip.Inflater.inflate(Inflater.java:192)         - locked < 032DAA70 > (a java.util.zip.Inflater)         at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:127) at sun.misc.Resource.getBytes(Resource.java:64)         at java.net.URLClassLoader.defineClass(URLClassLoader.java:243) at java.net.URLClassLoader.access$100(URLClassLoader.java:54)         at java.net.URLClassLoader$1.run(URLClassLoader.java:193) at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(URLClassLoader.java:186) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC lassLoader.java:106)         - locked < 0317D7A8 > (a  org.eclipse.core.internal.plugins.PluginClassLoader) at  org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:771)         at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC lassLoader.java:751) at java.lang.ClassLoader.loadClass(ClassLoader.java:262)         at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:322) - locked < 0317D7A8 > (a  org.eclipse.core.internal.plugins.PluginClassLoader) at  org.eclipse.jdt.core.JavaConventions. < clinit > (JavaConventions.java:33)         at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java: 1101) at  org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.j ava:1205)         at org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java: 1175) at  org.eclipse.jdt.internal.core.builder.NameEnvironment.computeLocations(NameEnvir onment.java:77)         at org.eclipse.jdt.internal.core.builder.JavaBuilder.initializeBuilder(JavaBuilder. java:297) at  org.eclipse.jdt.internal.core.builder.Jav aBuilder.build(JavaBuilder.java:87)         at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:351)         at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817 ) at org.eclipse.core.runtime.Platform.run(Platform.java:395)         at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:109)         at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:174)         at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:184)         at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:133)         at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817 ) at org.eclipse.core.runtime.Platform.run(Platform.java:395)         at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:147)         at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:209)         at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:740)         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1343)         at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.jav a:78) - locked < 032ABF80 > (a  org.eclipse.team.internal.ccvs.ui.actions.CheckoutAsAction$1) at  org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.jav a:98)  Dynamic libraries: 0x00400000 - 0x00406000         p:\j2sdk1.4.0\bin\javaw.exe 0x77F60000 - 0x77FBE000         C:\WINNT\System32\ntdll.dll 0x77DC0000 - 0x77DFF000         C:\WINNT\system32\ADVAPI32.dll 0x77F00000 - 0x77F5F000         C:\WINNT\system32\KERNEL32.dll 0x77E70000 - 0x77EC5000         C:\WINNT\system32\USER32.dll 0x77ED0000 - 0x77EFC000         C:\WINNT\system32\GDI32.dll 0x77E10000 - 0x77E67000         C:\WINNT\system32\RPCRT4.dll 0x78000000 - 0x78043000         C:\WINNT\system32\MSVCRT.dll 0x6D330000 - 0x6D442000         p:\j2sdk1.4.0\jre\bin\client\jvm.dll 0x77FD0000 - 0x77FFA000         C:\WINNT\System32\WINMM.dll 0x6D1D0000 - 0x6D1D7000         p:\j2sdk1.4.0\jre\bin\hpi.dll 0x6D300000 - 0x6D30D000         p:\j2sdk1.4.0\jre\bin\verify.dll 0x6D210000 - 0x6D228000         p:\j2sdk1.4.0\jre\bin\java.dll 0x6D320000 - 0x6D32D000         p:\j2sdk1.4.0\jre\bin\zip.dll 0x10000000 - 0x10044000          P:\eclipse\eclipse-SDK-20020321-win32\plugins\org.eclipse.swt\os\win32\x86\swt-w in32-2031.dll 0x77B20000 - 0x77BD1000         C:\WINNT\system32\ole32.dll 0x716F0000 - 0x7177A000         C:\WINNT\system32\COMCTL32.dll 0x77D80000 - 0x77DB2000         C:\WINNT\system32\comdlg32.dll 0x77C40000 - 0x77D7B000         C:\WINNT\system32\SHELL32.dll 0x65340000 - 0x653D5000         C:\WINNT\system32\OLEAUT32.dll 0x76AB0000 - 0x76AB5000         C:\WINNT\System32\IMM32.dll 0x0B8D0000 - 0x0B97C000         C:\PROGRA~1\COMMON~1\RSMHOOK.dll 0x67800000 - 0x6782B000         C:\WINNT\System32\oleacc.dll 0x61220000 - 0x6122B000         C:\Program Files\Microsoft Hardware\Mouse\MSH_ZWF.dll 0x71280000 - 0x71286000         C:\WINNT\system32\MSIDLE.DLL 0x6D2D0000 - 0x6D2DD000         P:\j2sdk1.4.0\jre\bin\net.dll 0x776D0000 - 0x776D8000         C:\WINNT\system32\WSOCK32.dll 0x776B0000 - 0x776C4000         C:\WINNT\system32\WS2_32.dll 0x776A0000 - 0x776A7000         C:\WINNT\system32\WS2HELP.dll 0x74FF0000 - 0x74FFE000         C:\WINNT\System32\rnr20.dll 0x77660000 - 0x7766F000         C:\WINNT\system32\msafd.dll 0x77690000 - 0x77699000         C:\WINNT\System32\wshtcpip.dll 0x77BF0000 - 0x77BF7000         C:\WINNT\System32\rpcltc1.dll 0x75360000 - 0x75367000         C:\WINNT\System32\rasadhlp.dll 0x0BE40000 - 0x0BE47000 P:\eclipse\eclipse-SDK-20020321-win32\plugins\org.eclipse.core.resources\os\win3 2\core_2_0_5.dll 0x76AC0000 - 0x76ADD000         C:\WINNT\System32\imagehlp.dll 0x690A0000 - 0x690AB000         C:\WINNT\System32\PSAPI.DLL Local Time = Mon Apr 15 11:45:44 2002 Elapsed Time = 115 # # HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION # Error ID : 4F530E43505002D3 # Please report this error at # http://java.sun.com/cgi-bin/bugreport.cgi # # Java VM: Java HotSpot(TM) Client VM (1.4.0-b92 mixed mode) # ============================== Crash in Inflater while class loading. Core team to investigate further. Is this defect still being encountered? If so, how often? To actually get working and productive again, I have changed to a new machine. I  may be able to resurrect the old one, if absolutely necessary though. If there are specific things that you are interested in, I may be able to collect them -  let me know.... We don't have any other instances of it, so it is difficult to tell if there is  precisely related to machine , a vm (or associated class library) defect, or an eclipse anomoly.  I don't have any great eclipse related insights just from  looking at the stack trace. We have several slow machines that we use everyday so I would have expected  confirming reports if that were the main trigger for this defect. My preference at this point is to close this defect.  If this issue arises  again, we can open a new report (and hopefully gain new insight). Please re-open if you experience this same behaviour in the latest builds.
JDT	refactoring: reverse conditional [refactoring] given the selected code: if (condition){ m(); } else { n(); } it could produce the following:  if (!condition){ n(); } else { m(); } with possible optional simplyfication of !condition i mean, it could apply deMorgan's law (sometimes and on demand) to be reconsidered after 2.0 *** Bug 23087 has been marked as a duplicate of this bug. *** See also bug 23261 which might be a generalization of this (depending on whether " boolean " in that bug is an expression or a variable and other details). This should be more a quick assist then a refactoring. Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state. can we revive this for quick assist? seems easy to implement  and i miss it a lot sometimes (a pain to do by hand) refactoring is *way* too heavyweight here , but it would make a perfect quick assist *** Bug 47790 has been marked as a duplicate of this bug. *** The Patch of Bug 71244 seems to implement (part of) this request.
JDT	goto type presents items not visible stable 20020125  In the packages view Choose Go To > Type  from the popup The resulting dialog displays things you cannot go to - it shows classes in referenced libraries even if you are not currenrtly  showing referenced libraries - it shows classes not in your working set  As a result if you pick that class nothing actually happens and you don't know  why. Some options (food for thought): - filter the dialog (classes in current view vs. all classes) - let the user pick it then warn him its not in his current view and offer to  change the view for 2.0 we will show a dialog that the item is currently not visible and give  the user the hint to change the filters/working set Fixed as suggested by Erich for > I20020514
Platform	Can't import prefernces from file with no extension Build GM6  When you hit the Import button on the preferences page, you are allowed to pick a file from a list of existing files. If you choose a file with no extension, the .epf extension is automatically added to the filename, even if the < filemane > .epf file does not exist.  Importing preferences should not automatically add the extension. If the user has chosen a file with no extension, Eclipse should at least try to load the preferences from that file. If loading the preferences from that file fails, only then should Eclipse try to load from < filename > .epf. This is done to allow you to type an epf filename with no extension. As a workaround if you really want a filename with no extension specify that by ending the name with a " . " The workaround that you suggest works on Windows, but not on Linux. A filename  ending with a ' . ' is perfectly valid on Linux.  I ran into this problem when selecting my file fron the UI provided, not when typing in the filename. I found it surprising that when I clicked on the  existing file ' foo ' , that Eclipse complained that the fictitious file ' foo.epf ' did not exist. On Windows, notepad similar to the way I am suggesting.  If the user saves a file without specifying an extension, then the extension ' .txt ' is appended to the filename on creation.  When the user asks to load a filename without an extension, then notepad looks for the filename with the extension ' .txt ' appended to it first, and if that  isn't found, then it will look for just the filename. However, if the user  clicks on a file without an extension, then the ' .txt ' extension is not tried. It should work as Adam describes. SWT does not tell us if the filename was chosen from the list or typed in. I think the best fix is to auto-append the file extension on import only if a matching file name with-out the extension does not exist.
JDT	Rename Debug menu to " Run " A user study has shown that we should rename our " Debug " menu to " Run " . The menu has been renamed to R & un Please verify. Verified
Platform	[Dialogs] Make dialog settings exportable First mentioned in bug8911.  I would like to be able to export settings altered in dialogs. Channing I assume you want this for all dialogs and not only for a particular dialog? Yes, if possible. this would be addressed at the platform UI level - moving one layer down Consider for v3. Reopen to investigate We already have preference exporting in 2.0. The existance of dialog settings  is not shown to the user - not so sure that this is still required. There are currently no plans to work on this feature
Platform	Modal dialog doesn't disable column resizing Build M5  - open an Eclipse workbench - switch to the Java perspective - make sure that the Tasks view is visible - choose ' Projects ' - > ' Rebuild All ' - while the build is going, you can still resize columns in the Tasks view - all other interaction with the parent window seems to have been disabled. later Post 2.0. Re-opening bug reports for review. This has been fixed for a while.
Platform	CVS errors are not accumulated and shown in an error dialog When an error occurs it is simply shown in the console instead of being  displayed to the user in the error dialog. Error handling improved. Please open PRs for specific scenarios as you see them.
Platform	GTK: Cursor is much wider than expected.(BBAWT) The cursor covers the entire size of the text box and is wider than the cursor that can normally fit between two characters. This test works correctly on Windows. Here is the test :  --------------test case starts here ----------------------- import org.eclipse.swt.SWT; import org.eclipse.swt.layout.FillLayout; import org.eclipse.swt.widgets.*;  public class TestSWTTextselection { public static void main(String[] args) { Shell shell = null;   Display disp = null; try {    disp = Display.getDefault(); shell = new Shell(disp);    shell.setLayout(new FillLayout()); Text mainbox = new Text(shell, SWT.BORDER);    mainbox.setEnabled(true); mainbox.setText( " testing " );    mainbox.setSelect ion(3,3);    shell.setSize(400, 400); shell.open();   } catch (Exception e) { System.out.println( " Error!! " );   } while (!shell.isDisposed()) {    if (!disp.readAndDispatch()) { disp.sleep();    } }   } } ---------------------test ends here -------------------------------- Platform behaviour for a single line GTK text widget.
JDT	[java launching] Surface important parameters in UI Build 20020910  Most common " java " (or " j9 " for J9 launching) options should be available in the UI, e.g. heap and stack size parameters. Marking as later Closing. Not intending to implement.
Platform	NPE during shutdown to do with DebugSelectionManager During dispose of the VariablesView, attempt to get a selection provider.  This results in attempting to create a new one (the DebugSelectionManager cleaned up on pageClosed?).  The  workbenchpage no longer has an active perspective. Thread [main] (Suspended (exception NullPointerException)) WorkbenchPage.findView(String) line: 631  DebugPageSelectionProvider. < init > (IWorkbenchPage, String) line: 46  DebugSelectionManager.getSelectionProvider(IWorkbenchPage, String) line: 81  VariablesView.dispose() line: 119 WorkbenchPage.dispose() line: 560  WorkbenchWindow.closeAllPages() line: 316 WorkbenchWindow.hardClose() line: 591  WorkbenchWindow.busyClose() line: 261 WorkbenchWindow.access$3(WorkbenchWindow) line: 252  WorkbenchWindow$1.run() line: 292 BusyIndicator.showWhile(Display, Runnable) line: 56  WorkbenchWindow.close() line: 290 WindowManager.close() line: 103  Workbench$2.run() line: 103 InternalPlatform.run(ISafeRunnable) line: 821  Platform.run(ISafeRunnable) line: 395 Workbench.busyClose() line: 101  Workbench.access$4(Workbench) line: 79 Workbench$3.run() line: 173  BusyIndicator.showWhile(Display, Runnable) line: 56 Workbench.close() line: 171  QuitAction.run() line: 31 QuitAction(Action).runWithEvent(Event) line: 452  ActionContributionItem.handleWidgetSelection(Event) line: 407 ActionContributionItem.handleWidgetEvent(Event) line: 361  ActionContributionItem.access$0(ActionContributionItem, Event) line: 352 ActionContributionItem$ActionListener.handleEvent(Event) line: 47  EventTable.sendEvent(Event) line: 74 MenuItem(Widget).notifyListeners(int, Event) line: 635  Display.runDeferredEvents() line: 1408 Display.readAndDispatch() line: 1200  Workbench.runEventLoop() line: 815 Workbench.run(Object) line: 798  InternalBootLoader.run(String, URL, String, String[] ) line: 821  BootLoader.run(String, URL, String, String[] ) line: 285  SlimLauncher.main(String[] ) line: 14 Fixed. Please verify. Verified.
JDT	ResourceDeltas are lost when merging deltas Using the Eclipse 20020214 build.  I have a Java project with the following structure: JavaProject  - source  (PackageFragmentRoot) - com.ibm.test (PackageFragment)  - folder1 (non Java folder) - folder2  I have a wizard which creates two classes in the com.ibm.test package and two HTML files in folder2.  In the Java Packages view, if folder2 is selected and  expanded when the wizard is invokved, after the files are created folder2 will not be refreshed correctly to display the two new HTML files.  I have traced the problem and it lies in JavaElementDelta.addAffectedChildren ().  This is called from insertDeltaTree() which is called from  JavaModelManager.mergeDeltas().  In this case there are two JavaElementDeltas being merged.  The first delta for the project contains no resource deltas.   The second delta for the project contains resource deltas representing the two new HTML files.  When the second delta is processed, addAffectedChildren sees  that there is already a delta for the project so it moves on to process the delta's children.  The problem is that it needs to merge the resource deltas. Thanks for debugging this problem! Now merging the resource deltas.
JDT	jar source attachment: tree nodes in dialog do no expand on double click [build path] F2 when you try to attach source to a jar there's a dialog with a tree - its nodes  do not expand on double click - you have to press the + minor inconsistency - defer to after 2.0 The problem might be that JFace registers a double click listener on the tree  and therefore disables the OS's default behaviour. not 100% sure which dialog with a tree is meant (its a pre 2.0 PR). If its the browse workspace location dialog, double click works. double click on the tree in the build path dialog is edit.
Platform	Need " Add as favorite " checkbox creating launch configuration When creating a launch configuration there should be a way to designate that  configuration as a favorite. *** This bug has been marked as a duplicate of 10131 ***
Platform	Unable to start Eclipse F1 with option -data Platform: Redhat 7.2  After installing Eclipse F1, I've tried to run it several times starting from the directory that holds my workspace by issuing command " eclipse " with no options. Right after showing the message window " Configuring ... " eclipse was dying with no additional message. Next step was to remove .metadata/.config directory. This time eclipse successfully launched, but later when I tried to run it from my home directory with option -data it quietly died, with the following exceptions logged:   !SESSION May 22, 2002 11:55:32.566 --------------------------------------------- java.version=1.4.0 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=linux, ARCH=x86, WS=motif, NL=en_US Command-line arguments: -os linux -ws motif -arch x86 -data /bigraid/peter/sources/java -feature org.eclipse.platform -install file:/bigraid/peter/eclipse/ !ENTRY org.eclipse.core.runtime 4 2 May 22, 2002 11:55:32.569 !MESSAGE Problems occurred when invoking code from plug-in: org.eclipse.core.runtime. !STACK 0 org.eclipse.core.internal.dtree.ObjectNotFoundException: Tree element /seqtracs/PlateArrayer/PlateArrayerDialog.java not found. at org.eclipse.core.internal.dtree.AbstractDataTree.handleNotFound(AbstractDataTree.java:243) at org.eclipse.core.internal.dtree.DeltaDataTree.getData(DeltaDataTree.java:611)  at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:54)  at org.eclipse.core.internal.dtree.NoDataDeltaNode.asBackwardDelta(NoDataDeltaNode.java:57)  at org.eclipse.core.internal.dtree.NoDataDeltaNode.asBackwardDelta(NoDataDeltaNode.java:57)  at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:51)  at org.eclipse.core.internal.dtree.DeltaDataTree.asBackwardDelta(DeltaDataTree.java:96)  at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:818) at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:817)  at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:793) at org.eclipse.core.internal.watson.ElementTree.immutable(ElementTree.java:696)  at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:476) at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:937)  at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1487) at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1279)  at org.eclipse.core.resources.ResourcesPlugin.startup(ResourcesPlugin.java:201) at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:690) at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802)  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:702)  at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:182)  at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:58)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass(DelegatingURLClassLoader.java:70)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(ClassLoader.java:262) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:322)  at java.lang.Class.getDeclaredConstructors0(Native Method) at java.lang.Class.privateGetDeclaredConstructors(Class.java:1576)  at java.lang.Class.getConstructor0(Class.java:1748) at java.lang.Class.newInstance0(Class.java:266)  at java.lang.Class.newInstance(Class.java:249) at org.eclipse.core.internal.plugins.PluginDescri ptor.createExecutableExtension(PluginDescriptor.java:134)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:163)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:102)  at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable(InternalPlatform.java:449)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable(InternalBootLoader.java:436) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:735)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:200) at org.eclipse.core.launcher.Main.run(Main.java:643)  at org.eclipse.core.launcher.Main.main(Main.java:476) !ENTRY org.eclipse.core.runtime 4 2 May 22, 2002 11:55:32.610 !MESSAGE Plugin org.eclipse.ui was unable to instantiate class org.eclipse.ui.internal.Workbench. !STACK 0 org.eclipse.core.internal.boot.DelegatingLoaderException: org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-in: org.eclipse.core.resources.  at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:708)  at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:182)  at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:58)  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java:136)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:750)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:744)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass(DelegatingURLClassLoader.java:70)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java:429)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:758)  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:730)  at java.lang.ClassLoader.loadClass(ClassLoader.java:262) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:322)  at java.lang.Class.getDeclaredConstructors0(Native Method) at java.lang.Class.privateGetDeclaredConstructors(Class.java:1576)  at java.lang.Class.getConstructor0(Class.java:1748) at java.lang.Class.newInstance0(Class.java:266)  at java.lang.Class.newInstance(Class.java:249) at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:134) at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:163) at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:102) at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable(InternalPlatform.java:449) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable(InternalBootLoader.java:436)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:735) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:200)  at org.eclipse.core.launcher.Main.run(Main.java:643) at org.eclipse.core.launcher.Main.main(Main.java:476) !ENTRY org.eclipse.core.runtime 4 2 May 22, 2002 11:55:32.613 !MESSAGE Plugin org.eclipse.ui was unable to instantiate class org.eclipse.ui.internal.Workbench. !STACK 0 org.eclipse.core.internal.boot.DelegatingLoaderException: org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-in: org.eclipse.core.resources. at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:708) at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:182) at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:58) at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java:136) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:750) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:744) at org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.loadClass(DelegatingURLClassLoader.java:70) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java:429) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:758) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:730) at java.lang.ClassLoader.loadClass(ClassLoader.java:262)  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:322) at java.lang.Class.getDeclaredConstructors0(Native Method)  at java.lang.Class.privateGetDeclaredConstructors(Class.java:1576) at java.lang.Class.getConstructor0(Class.java:1748)  at java.lang.Class.newInstance0(Class.java:266) at java.lang.Class.newInstance(Class.java:249)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:134)  at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:163)  at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:102)  at org.eclipse.core.internal.runtime.InternalPlatform.loaderGetRunnable(InternalPlatform.java:449)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.internal.boot.InternalBootLoader.getRunnable(InternalBootLoader.java:436) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:735)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:200) at org.eclipse.core.launcher.Main.run(Main.java:643)  at org.eclipse.core.launcher.Main.main(Main.java:476) !SESSION ---------------------------------------------------------------------- !ENTRY org.eclipse.core.launcher 4 0 May 22, 2002 11:55:32.626 !MESSAGE Exception launching the Eclipse Platform: !STACK java.lang.reflect.InvocationTargetException  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:200) at org.eclipse.core.launcher.Main.run(Main.java:643)  at org.eclipse.core.launcher.Main.main(Main.java:476) Caused by: java.lang.IllegalArgumentException: Application not found: org.eclipse.ui.workbench. at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:737)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) ... 7 more I forgot to mention that this behaviour is reproducible. How big is your workspace? Is it possible to zip it and attach it to this bug  report? (note you can delete the .history folder and its children) Closing.  Please reopen if this still occurs for you in release 2.0.
Platform	Emacs: Cannot bind accelerator to Ctrl+(non-alphanumeric char) It does not appear to be possible to bind an accelerator to a non-alphanumeric  character. I have been trying to bind the following keys to various actions in the Emacs accelerator set, but I always get the behaviour listed below.  Ctrl+-: inserts a ' - ' Ctrl+_, Ctrl+Shift+-: does nothing Ctrl+/: inserts a ' / ' Ctrl+!, Ctrl+Shift+1: inserts a ' ! ' Fix in AcceleratorScope released in HEAD stream. Your fix doesn't seem to cover Ctrl+_/Ctrl+Shift+- or Ctrl+!/Ctrl+Shift+1. Both  of these cases have the same behaviour as before. The other two cases are now fixed. You are saying that if I create a menu with accelerator Ctrl+_, the action  should run when I press Ctrl+Shit+-? If so, we will have to write a small SWT test. If the test works then I will have to fix this otherwise I would say this  is not a bug. Do you have an example (windows app) that works like that? I am saying that it should be possible to bind an accelerator to the keys  Ctrl+Shift+- from the XML. It doesn't matter how that key seqence is referenced  in the XML, so long as there is a general way to refer to it. On a standard English keyboard, Ctrl+Shift+- and Ctrl+_ are (to the user)  interchangable ways of refering to the same key sequence. I suppose that may not be true in general. How does the platform expect this sequence to be  represented in the plugin.xml? The problem still remains. It is not currently possible to bind an accelerator  to the sequence Ctrl+Shift+-. Released fix. Ctrl+@ does not work yet. Dedending on bug 18308 to fix it. There is also a Linux issue (bug 15939)for the binding of accelerators. Check  that case as when when you get the fix. Taked to SN about Ctrl+@ (bug 18308). It seems to be a scary change to be done  now i.e. it is not going to be fixed by 2.0 We will try to work around using Ctrl+@. Opened bug 18488 about Ctrl+@ and resolved it as LATER. The other cases described here are fixed. Verified in 20020611 Still cannot bind to Ctrl+@, but this is expected. Binding to other non- alphanumeric characters seems to be working on Windows and Linux.
Platform	[About] Drag select in Welcome editor causes link  to open Open the about dialog Help- > About, click down in one of the paragraphs that has  links in it, but not on a link. Holding the mouse down, move the mouse around. This selects the text.  Now continue to move the mouse until you are over a  link in the paragraph and let go of the mouse button. The link is openned. Reviewed patch and released the change.  I do have one question, unrelated to  the patch, but related to the Product Dialog.  Why does the dialog change the selection?  For example, do the following:  1. Open the Product dialog. 2. Select some text in the second paragraph. 3. Click on the apache link. 4. Close the apache window.  Notice that when you come back to the dialog, the selection is changed.  It's  put on the eclipse.org link.  Why?  Why not just leave the selection as is (i.e., do not do anything groovy). Openned PR 24194 to track this issue.
Platform	DAV: target management ignores local dirty resources Build 20020528  When using DAV target management the ' get ' operation overwrites local changes  without warning.  That is rude. adding a dialog that lists all modified resources and prompts for overwrite Fixed and released to HEAD as part of fix pass 3.
Platform	[UI] Got a spurious file changed in FS prompt (1GGZ4LG) I had the Workbench's messages.properties file open in an editor, with contents saved after having been modified in the Workbench. Did some other activity.   (This is probably irrelevant, but I was editing and releasing files in unrelated folders under Eclipse UI Text Editor). Clicked on the editor tab for messages.properties. It told me that the file had changed on disk, and did I want to reload? I had not made any changes to it on disk, and I'm running off of a local hard drive, so nobody else had either.  Just to be sure, I saved the editor contents to a different name, and ran a diff.  There were no changes. Not sure if this is a Core problem, or is due to the way text editors check timestamps (they fake out Core).  NOTES: NE (07/16/01 4:35:38 PM)  Ironically, I had been looking at the code in FileDocumentProvider.checkSynchronizationState(...) at this time, and making mods to it for NLS.  But I did nothing which should have affected the development environment  (my target is in a different location). PRODUCT VERSION: 0.9 Haven't seen anything like this in a long time.
JDT	API Request - Package selection dialog including pre-reqs The Java debugger requires the ability to specify a " pacakge to run in " in the  snippet editor. To do this, we use the API on JavaUI to create a package selection dialog for a project. However, we need to be able to choose from  packages in pre-req projects/jars as well. Currently the API only specifies packages in a single project. We currently only provide CONSIDER_BINARIES as a scope option. We should add a  CONSIDER_REQUIREDPROJECTS option fixed > 20011127.  you just need to add the flag CONSIDER_REQUIRED_PROJECTS.
JDT	Add Java Exception Breakpoint should also be on menu Build 20020508  The Java Exception Breakpoint action is only available on the toolbar, making it awkard (albeit possible) to use via keyboard only. Should also contribute it to the context menu. Implemented. Please verify (DarinW). Verified.
JDT	Create JUnit TestSuite creates invalid code [JUnit] Running R2.0 on Windows 2000, JDK 1.3.1.  I've just started playing around with Eclipse's JUnit support, and after creating a couple of tests I created a test suite. The essential bit of the code that was generated was:   public static Test suite() {   TestSuite suite = new TestSuite( " Test for com.peramon.test " );   //$JUnit-BEGIN$ suite.addTest(new TestSuite(TelephoneNumberFormatterTest.class));   suite.addTest(new TestSuite(StringUtilTest.class)); //$JUnit-END$   return suite; }  The method declaration should have TestSuite, not Test, as the return type. I believe the error is in NewTestSuiteCreationWizardPage.getSuiteMethodString().  Jon A TestSuite is a Test and returning Test is correct
JDT	JavaDoc wizard includes non-selected packages If you have two source folders: src and test, and tell the JavaDoc wizard to use only the packages in  src, it will include any matching packages from the test source folder. Eg. If I have select the package ' ca.beq.tundra ' in the ' src ' folder, the generated JavaDocs will also include classes  from the ' ca.beq.tundra ' package in the ' test ' folder.  Using integration build 0502. When creating classpath, should only contain source folders that have something  checked. annoying when users use source folders with the same package fragment names. fix candidate for fixpass #2. Increased priority. fixed > 20020607 reviewed by EG Verified in F3: 1) the wizard only selects package in correct source folder 2) only the selected package is exported  NOTE: If both packages with same name but different source folder contain the same type then it might show the wrong Javadoc. Example: 1. have your setup, both with class A (but different methods) 2. generate Javadoc for A in source folder src 3. select A in source folder test and open its Javadoc However such a setup would result in a compile error anyway.
Platform	Issues with broken features Drop Alphabet soup 1.0.0 parent feature only in the feature directory 1) when Dialog opens (new feature found) we cannot configure broken feature 2) when expanding current configuration, receive parsing error 3) IsBroken doesn't show for this feature 4) Unable to update feature I fixed 3, but it seems to me UI is agressively opening Dialogs...  1) install Alphabet 1.0.0 2) on the file system, remove features/my.alphabet.round.letters_1.0.0 and features/my.alphabet.straight.letters_1.0.0 3) start eclipse  #2 and #4 happen when the child of the feature cannot be created. I am wondeirng if we cannot ' eat ' the error to be able to at least unconfigure. Even there, I am not sure we will be able to install a new one as we may face the ' imposter feature ' where the files will be there, but teh featur eis not recognize. And updating or re-installing will not solve the issue completely. But user will need to manually delete the plugins/features ? no  Anyway, can UI confirm they can bhave with Children feature the same way the behave with root feature (i.e mark as dummy feature with featureRef URL and 0.0.0 as version ?) !MESSAGE Error parsing " feature.xml " stream in the feature archive file:c:/oti/source-code/features/my.alphabet.round.letters_1.0.0.jar/.[java.io.FileNotFoundException: c:\oti\source-code\features\my.alphabet.round.letters_1.0.0.jar\feature.xml (The system cannot find the path specified)] !STACK 0 java.io.FileNotFoundException: c:\oti\source-code\features\my.alphabet.round.letters_1.0.0.jar\feature.xml (The system cannot find the path specified) at java.io.FileInputStream.open(Native Method)  at java.io.FileInputStream. < init > (FileInputStream.java:64)  at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:69) at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:133) at java.net.URL.openStream(URL.java:798)  at org.eclipse.update.internal.core.FeatureExecutableFactory.createFeature(FeatureExecutableFactory.java:43)  at org.eclipse.update.core.FeatureReference.createFeature(FeatureReference.java:152) at org.eclipse.update.core.FeatureReference.getFeature(FeatureReference.java:52)  at org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.addChildFeatures(ConfigurationView.java:292)  at org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getRootFeatures(ConfigurationView.java:271)  at org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getConfiguredFeatures(ConfigurationView.java:233)  at org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getChildren(ConfigurationView.java:205)  at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:571)  at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren(StructuredViewer.java:346)  at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren(StructuredViewer.java:447)  at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:241)  at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:614)  at org.eclipse.jface.viewers.AbstractTreeViewer$1.treeExpanded(AbstractTreeViewer.java:626)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:171) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841) at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:1715)  at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3597) at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:571)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2702) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)  at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method) at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1155)  at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:147) at org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java:1344)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2685) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)  at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1222)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1287) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)  at org.eclipse.core.boot .BootLoader.run(BootLoader.java:462)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:176)  at org.eclipse.core.launcher.Main.run(Main.java:614) at org.eclipse.core.launcher.Main.main(Main.java:451) I think we need to crisp this one up a bit. I think this should work as follows:  (1) we should not be able to configure a broken feature. I am assuming " Dialog " means the delta processing wizard. Broken input should be marked as broken, and the user should not be allowed to select and process the delta. The user should  be allowed to delete the broken delta. Since the feature was being detected as a chenge (delta), and we will not allow it tpo be processed ( " applied " ), the  broken feature will remain unconfigured (2) we should be flagging broken features as an error condition to the user, but  should not be throwing exceptions that result in log entries. Showing " missing  feature " children in the UI (child entries in the tree) seems like a reasonable  approach, but not showing them at all and simply having error messages in the " Show status... " box saying we have missing children is OK as well. I'll let you  make the call on this one. The only input I have is that ending up with SAX parse errors in the log is not good.  (3) sounds like this one is fixed in core (4) user needs to be allowed to update a broken feature. Since the feature is  broken (ie. is missing plugins, children), in this specific case we should allow update to a feature with the same version (ie. enable the install/update button  if remote version > = local version) 1) agree  2) agree with dejan about Parser stuff.. hum.. Does core need to change something ? 2 bis) What about if a root feature has only one child missing.. I belive we should at least show childrn features that are OK (but I also believe we all  knew that) 2 ter) I vote for showing missing features  3) yes 4)agree, I believe throwing error in #2 prevented any update or reinstall I have tried this scenario with 20020528.  * start eclipse and shutdown * drop alphabet soup feature into features (missing plugins, missing children) * start eclipse .... get told I have changes * changes wizard does not let me configure a broken feature ... GOOD * remove delta * open update manager * current configuration does not show the broken feature ... GOOD * click " Show disabled features " * get error dialog saying I could not parse feature.xml for a child .... BAD (the error makes no sense to user, is logged as well) * I click OK on error * the broken feature appears in the view, correctly marked with red X ... GOOD * it has a [+] beside it that does not expand to anything .... I can live with that * when I show status, it tells me it has 1 missing plugin and 2 missing children ... GOOD  So the only problem is the damn error dialog. It seems to be triggered when the UI is constructing the nested feature UI node. We should eat the error, and  either construct a missing feature node, or just skip it. The parent will be marked with red X anyways. > create directory for it in features/ and expand One more BAD thing ....  * start eclipse * update one of its features (I did this with PDE) .... picked the 200205270931  which was the second latest .... update and shutdown * I deleted 2 of the updated plugins from the file system .... the pde docs and  source * started eclipse ... feature shows as broken * went to the eclipse update site * if I select the same version, its [Update] is not showing. This is OK if the feature was not broken (because I already have it installed). But since the  feature is broken, we should allow the [Update] so the user can fix the feature  up So there seem to be 2 problems left  (1) the error dialog (prior post) (2) ability to update broken feature to same version (this post) Specifically,  * in searches (one-click, or other), if the base feature is broken, consider target feature with the same version number as one of the result candidates (add  to list before sorting and constraint checking) * in feature preview, enable [Update] if the base feature is broken, and the selected feature version is > =  (ie. allow ==) Implemented.
Platform	Debug/Run With use old launchers when in config mode Install a fresh 20020409 build. The Debug Menu (on the window), has two  options " Run With - > " and " Debug With - > " . They point to old launchers not  config types. It does not seem to hurt anything. Will remove old launch support. Removed. Please verify. Need to also remove support for ' Execution Arguments ' properties page on .java resources. Verified.
JDT	Problem setting source folder on existing project Build 2001-12-06  Start with the following existing structure on disk (not at default location): MyProject   /build /dev/src/com/foo/A.java  1) Open new java project wizard.  Enter project name. 2) Select the external directory " MyProject " as the location 3) Hit next.  Choose " Use source folders... " 4) Click " Create New Folder " , enter " dev/src " 5) Choose /MyProject/build as the output folder 6) Hit finish. In the packages view, it shows the source folder " dev/src " , AND the non-source  folder " dev " .  Basically the same folder appears twice.  If you try to delete  the folder " dev " (which appears to be empty), the content on disk is deleted. JavaElementDelta problem? JavaElementDelta is correct: FIRING Delta (Thread[main,5,main] ):Java Model[*]: {CHILDREN} MyProject[+]: {} I would even say it works as designed: dev is a non-java resource of the project  itself. If it contained other non-java resources you would want to see them under MyProject/dev.  For example, if we had this directory structure: MyProject +- dev +- src    |  +- com |     +- A.java    +- readme.txt +- B.java  I think what's expected in the package view would be: MyProject (java project) +- dev/src (package fragment root)    +- com (package fragment) +- A.java (compilation unit) +- dev (non-java resource) +- readme.txt (non-java resource)    +- B.java (non-java resource) So if the user decides to delete dev (non-java resource), how can we prevent the  deletion of src and its content? I'm not sure what we should do on this one? Erich? I agree with Jerome, deleting a non-java resource ' dev ' is having the same  behavior as inside the navigator (not going through the JavaModel), thus it cannot be held for responsible.  Maybe a UI confirmation would be indicated though. agreed, the JavaModel and the UI presentation are correct. The deletion of non- Java resources is done in the Java UI and it mimics what is done in the Navigator. The Navigator behaviour is unexpected in this case.  All we can do is to warn the user that the folder contains packages and that they will be deleted too. This warning should be shown independent of whether  the project is external or inside the workspace. The corresponding test is cheap. I must point out that this does not seem to mimic the navigator behaviour.  In  the navigator, I can see that the " dev " folder has items contained within it.   When I delete " dev " in the Navigator, I can see that I will be deleting  children.  In the packages view, the same folder appears to be empty.  It also doesn't really represent a distinction between java and non-java resources.  Say  I add a text file to the " src " folder.  The packages view now shows:  MyProject (java project) +- dev/src (package fragment root)    +- com (package fragment) +- A.java (compilation unit)    +- abc.txt (non-java resource) +- dev (folder appears empty)  The packages view presents the illusion of being a strict hierarchy of resources, but in fact it is not.  It presents a fairly confusing view to the  user.  The following seems to make more sense: MyProject (java project) +- dev (non java resource) +- src (package fragment root)       +- com (package fragment) +- A.java (compilation unit)       +- abc.txt (non-java resource) decision?  (btw. i would agree with John - a source folder inside a normal folder is what i expect to see as a user) Then we should make the delete action smarter and warn the user. When deleting a folder check whether it contains a package fragment root and inform the user. put the dialog in there - moving to LATER because it is not the _real_ fix. should maybe be REMIND but it's less likely to get lost in LATER :) closing - no plan to do anything more here
Platform	' insert/overwrite ' indication does not work 20020911 it always says ' insert ' Build > 20020917.
Platform	Too hard to find Repository Viewer (1GD5XD0) (for usability discussion)  In order to get the Repository Viewer, you have to Perspective- > Show View- > Other,  in chooser pick Managing, expand it to see Repositories.  I think people will have a hard time finding it.  Since we don't have a perspective we are second class.  As a result its also not clear to me how to get people started off in an easy way. NOTES: PRODUCT VERSION:  102 Obsolete - Support was added to add views to existing perspectives in 1.0
JDT	Important: Problem highlight is out of sync with compiler Build 20020503: I have a file that compiles clean. There are not compile errors. However I can see the red problem highlight in the editor that shows: " the import cannot be resolved... " I'm confused, because if the import cannot be resolved how did the file compile clean in the first place? This started to occur after someone in our team refactored some classes and moved them to another package. I've caught up with the changes, all plugins compile, but the editor shows these highlight errors all over the place. the reconciler is currently only run after a change by the user.  So what could  have happened is that the reconciler was run with the old packages. The error has shown up. Then you did a catch-up with the team and got the correct  packages. You did a rebuild and the compiler could build fine. When you add a space to the original document the errors should go away. Could this be your scenario? It happend to me as well. Here is the scenario: 1) Debug moved some classes into another package 2) Updated from repository 3) Class JUnit tab group had compile errors 4) did an organize import and rebuild - > the temporary problems where still there. 5) modified the file to force a reconcile - > the temporary problems where still there 6) closing and reopening the file - still no luck After closing and reoping the project, building and reopening the temporary problems where gone. David - can you verify with latest ? Should have been solved for 20020521. The bug still occur in build 20020528. add a new PackageFragment does not update the name lookup of dependent projects  Fixed. Verified.
Platform	Does not exist remotely error cuts off text and appears to refer to wrong entry Build 20020423  If I choose Show Modules in the CVS Repositories View and then expand some of the elements I can get a Server Exception saying that a resource does not exist  remotely. The problem is that the first letter is cut off and it appears to refer to something other that what I selected  STEPS 1) Connect to dev.eclipse.org 2) Select Show Modules 3) select jdt-debug-examples 4) Hit return - you get a Server Exception that says Folder " lipse.jdt.debug does not exist remotely " This problem is caused by the CVSROOT/modules file on dev.eclipse.org. It has  module definitions that are invalid and are not handled while by the server. Email has been sent to the Eclipse webmaster to have these entries removed. invalid entries have been commented out File has been fixed
JDT	Folder added to src lookup of remote launch has JAR icon I added a folder to the src lookup path of a remote launch. The added folder has the JAR icon Fixed. please verify Verified.
Platform	LinePainter doing unnecessary line redrawing during typing Two full line redraws are occurring everytime a character is typed when  the " highlight current line " option is set in the Java Editor.  A simple change (I think), that would minimize the number of superfluous redraws, would be to cache the current line index in your LinePainter and not  do the two redraws if the current line index has not changed.  I hacked that in and it seems to work (i.e., based on my limited testing). fixed: - cheese production < g > - line number caching to reduce redraws           prevents flickering of line background under motif
Platform	[PropertiesView] PropertySheetViewer.updateChildrenOf and updateEntry don't  handle changes correctly PropertySheetViewer.updateEntry() has a specific check for getting the image,  and if the image is null, it will NOT set that into the item. This causes a problem. If the entry is being updated from having an image to not having an  image, the old image stays there. The image being null is a valid setting and should be set through so that the entry no longer has an image.  PropertySheetViewer.updateChildrenOf(). If an entry was expanded and had children, and if the update indicates there are now no children, the entry is  still marked as expanded. This doesn't cause a problem until the entry is  updated again to have children, it is still marked as expanded. The reason these have shown up is because it is very expensive to always use  new PropertySheetEntrys when changing input. Deleting is especially expensive, it is very slow and very visible to the user when there are a lot of entries  being deleted. So we were trying to reuse the PropertySheetEntries when the input changes. The above problems showed up because the entry was being reused  but was referring to a different input. So the keeping the old image and the old expansion state are inappropriate.  Thanks. No plans to change current 2.0 behavior. Reopen to investigate *** Bug 24181 has been marked as a duplicate of this bug. *** There is currently no plan to work on this
Platform	Patch: Saving merged patch missed one file Build 20020115  - with org.eclipse.ui source for v20020115 loaded, I selected the project and chose Compare With / Patch / (see attached patch)  - the compare editor showed 5 files with changes - I selected each one and chose Copy Whole Document from Right to Left - File / Save - compared project with stream contents (or compare with v20020115 since I'm  releasing these changes) - no changes had been applied for one of the files (TasksFilter.java) - double-checked that I had actually copied from right to left on this file in the compare editor -- I had - this was the last file in the list - had to go and apply the changes manually for this file  This is reproduceable.  I saw this last night at home, and also this morning at work. Another problem: - Before applying the changes manually, I went back and tried the compare with patch again.   - The Verify Patch page came up with TasksFilter.java white-checked, and the rest gray-checked (why did it think it could still apply changes to the other  files if they had already been applied?). - I unchecked all files except TasksFilter.java and hit Finish. - The compare editor showed changes to FiltersDialog and TasksFilter, in addition to the < no name > entry. - The changes shown for TasksFilter were correct, but for FitersDialog it wanted to reapply the same patch (a line insertion). Patch no longer opens the Compare Viewer.
JDT	move Cu: exception 0. junit setup 1. move TestCase to samples Java Model Exception: Java Model Status [Operation requires one or more  elements.] at  org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.perf ormEdits (TextBufferEditor.java:166) at  org.eclipse.jdt.internal.corext.refactoring.changes.TextChange.getPreviewContent (TextChange.java:164)  at org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage.getCompareInput (PreviewWizardPage.java:201) at  org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage.getPreviewer (PreviewWizardPage.java:254)  at org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage.showPreview (PreviewWizardPage.java:374)  at org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage.access$1 (PreviewWizardPage.java:372)  at org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage$2.selectionChanged (PreviewWizardPage.java:363) (...) 7340 is fixed now, which fixes this problem
Platform	[Key bindings] assign new hotkey in source editor A key setting for the source editor is comfortable : Control+Backspace could delete the previous token/word. *** Bug 23010 has been marked as a duplicate of this bug. *** See duplicate for related functionality. This works for me using R3.2 or newer
Platform	NL: Rollup 2 WSWD Spanish problems The accelerator for Delete is translated to Suppmir in Spanish but the  accelerator for delete in the edit menu is Supr The accelerator for Shift is translated as MAY\u00DASCULAS in JFace but  MAY\u00DAS is used everywhere else in the translations. Nothing using Shift currently works.  Also many of the preference pages have no mneumonics Ayuda Debugger Equipo Verified fixed in R2.0 Problem closed.
Platform	Saving preferences does not work always When saving the preferences of a plugin, the method Plugin.savePluginPreferences does not save the preferences if the directory does not exist in the workspace meta data. The SafeFileOutputStream will just throw an exception in that case which is ignored. Eclipse Freeze 2 (2002-06-02) *** This bug has been marked as a duplicate of 18644 ***
JDT	Console output doesn't accurately reflect program execution This problem became apparent when printing stack traces from Exceptions.  The following example code illustrates the problem: =========== public class ConsoleBug { public static void main(String[] args) { int max = 100;     int count = 0; while (count < max) {       try { if (count % 2 == 0) {           throw new Exception(); } else {           System.out.println( " This is count: " + count);           count++; }       } catch (Exception e) { e.printStackTrace();         count++; }     } } } ===========  The output of this program has areas where the System.out.println() text appears at the end of a printStackTrace() call.  Here is some sample output:  ====== java.lang.Exception: Exception for count: 68  at ConsoleBug.main(ConsoleBug.java:8)This is count: 69 ======  The expected behavior is that the ' This is count: xx ' lines always appear on a new line, and this is indeed what I see when running the code outside Eclipse.  There are also areas in the output which do not alternate between showing a stack trace and showing the current count.  Here is some more sample output:  ======= java.lang.Exception: Exception for count: 20  at ConsoleBug.main(ConsoleBug.java:8) java.lang.Exception: Exception for count: 22  at ConsoleBug.main(ConsoleBug.java:8) java.lang.Exception: Exception for count: 24This is count: 19 This is count: 21 This is count: 23 ======= Also note that the above output shows an out of order condition where count 22 has occurred prior to counts 19 and 21. Once again, running the code outside Eclipse produces the expected results.  Presumably, this is strictly an output problem and not an underlying error in the execution model.  Jim S. Moving to Java Debug Currently we use two threads to read from out and err. Could use one thread. *** Bug 9720 has been marked as a duplicate of this bug. *** The console is also quite slow. An example is a program that prints a lot  of debug info before opening the UI. When the UI is open for few (15) seconds, (which means the program stopped the debug prints 15secs ago), I still see data being written to the console. This never happend to me with command line java This problem is not solvable.  The VM does not provide notification of system out and system err (nor does it provide notification that it's waiting for system in).  This means that the debugger must poll the process's output and error streams. There is absolutely no way to guarantee correct ordering of err and out when polling. Putting the polling in a single thread doesn't help.  A single polling thread has to read from one stream then the other. Here's the test case that fails: Write OUT Write ERR Read ERR Read OUT I'll investigate the speed issue. If I can make the console faster without locking up the UI in the case of a ton of output (and I believe I can), I'll open a new bug report to track that problem. May be the solution is to let the OS tie together stderr and stdout (e.g. with  the ' 2 > & 1 ' syntax in /bin/sh). I know for sure that this will ensure the correct sequence of output both on Unix and Windows. However we would loose the ability to use different colors for the two streams. But I think it is more important to have the correct order and no colors  than to have different colors but wrong order. BTW, IDEs which preserve the correct order don't use different colors. This is  at least true for IntelliJ's IDEA and Project Builder on MacOS X. Re-opening with no committment Deferred This appears fixed with our improved console output (i.e. the core stream  readers no longer poll - output is queued to the UI, which polls and processes the queued output). Please verify. It's much better now. I feel comfortable calling this " as good as it gets. " *** Bug 19535 has been marked as a duplicate of this bug. ***
Platform	Navigator: New does not give container when multi-selected (1GEAURV) - select two resources in the navigator - pop-up the context menu - New is available - choose File - the container is not filled in  There are several options: 1. Don't include New if multiple selection    - This doesn't apply to File / New though.   - Should still be able to do New Project since it doesn't use selection.  2. Pick first element in selection to derive container. 3. Pick the common container of the elements.   - Works OK if files selected, but could be confusing if folders selected - Doesn't work if projects selected.  Option 2 seems simplest. NOTES:  NE (5/25/01 4:54:46 PM) Note that the plugin.xml specifies a selection type of IResource for New Folder and New File,  but they don't specify the cardinality of the selection.  Can wizards do this?  If so, the New menu needs to be smarter than the proposals above. PRODUCT VERSION: 110 JDK Pls verify in latest. Should also get a default container if current part is a file editor (has an  IFileInput).  Is this case currently handled? Please investigate and propose solution. The first problem has a simple solution (assuming we implement solution 2  suggested above). The second problem, of getting a default container, is not handled currently,  and is more difficult. A simple solution invovles getting the active part from the workbench passed into the wizard page that has the container field. This  would require making the getActivePart() method of WorkbenchPage public API (by adding it to IWorkbenchPage).  A more meaningful solution would be to change the selection service (by modifying AbstractSelectionService.getSelection()) to return something other  than null if the active part is an editor. This would be benficial for other operations as well (such as Export) when the active part is an editor. File and Folder wizard pages updated to use first element in selection for  initial container candidate. Actions to launch File > New > Other dialog and to  launch individual new wizards have been updated so if the active part is an editor, and the input is a IFile, a selection is created with that IFile and  passed along.
Platform	[CVS Sync View] Error in sync leaves nodes that have been resolve in tree Build 20020319 If you perform an operation in the sync view on N elements and some CVS operation on an element fails but some operations have already succeeded all the nodes remain in the view. I had a case where I didn't have permission on one of the projects I was comitting to in the sync view, all the commits were ok except for one. I had to refresh the view (over VPN takes a while) just to remove nodes that I new should of already of been removed. PLS investigate if the notification is at least occuring. If it is, and the sync view just isn't processing it, we can move the PR to  James. I looked into this project, it would seem that the only to support this properly is to have CVSTEamProvider methods return IStatus[] instead of simply throwing an exception If the UI called Command.Execute() instead, I think the correct IStatus[] would be returned. When a CVS command fails it is not easy to determine exactly which files have  succeeded and which failed. Also, it would require quite a bit of reworking in the commands that may or may not give the exact results about failure.  Instead, the sync view could prompt when an exception occurs and possibly ask the user to refresh the sync view. When a command fails sync info is still  updated to disk and a refresh will show the correct state after the exception. This is not as easy as in sounds from a CVS perspective. Because of the way CVS  informs the client of errors it is not always easy to determine exactly what has happened. For 2.0, maybe the best solution would be to have the sync view  prompt on an exception and ask the user if he wants to refresh. When the exception occurs sync info will be up-to-date. *** Bug 24084 has been marked as a duplicate of this bug. *** Fixed with the new sync view. Local workspace refreshes is performed automatically now. If an error occurs, the view will update based on any actual changes that have occured.
JDT	Closed projects prevent source attachment lookup (1GEUU0T) MA (6/5/01 5:46:20 PM)    NOTES: EG (6/5/2001 8:59:51 PM)  the source attachment problem is critical, what is the point here? MA (6/6/01 10:21:59 AM)  I could not reproduce it. I had it one, peter had it once. moved to ' active ' PRODUCT VERSION  0.119 no reproducable case - closing
JDT	Compiler Warning/Error/Ignore when Assigning to a Parameter In many cases, assigning back to a parameter is a mistake.  For example:   public void foo(String name) { name = " Eclipse " ;  } Or perhaps even:  public void setName(String name) { name = name;  // Should have said, this.name = name  } Please could this be added as a compiler error/warning/ignore preference. moving to JDT Core I actually tend to like this code pattern.  An optional warning may make sense however. Will queue post 2.0. To avoid any confusion, I wish to clarify that the following code SHOULD NOT  cause a warning: public void setName(String name) {   this.name = name; // This is OK. } Reopening Clearing resolution Simon, would you actually want to see no-op assignments flagged or just  assignments to arguments ? It seems you were mostly annoyed by " name = name " assignments. I could imagine  similar annoyance with field/local variable. Or would you rather want to see flagged any assignment on arguments: e.g. void iterate(int count){   while (count-- > 0) doSomething(); } Philippe, I think there are two issues here.  Firstly there should be the ability to optionally flag assignments to parameters.  While assigning to parameters is perfectly legal in Java, some  people choose not to do this as a personal style.  Typically people learn not to do this having used languages that disallow it, such as Smalltalk.  I could  imagine a corporate coding standard that states that assigning back to a parameter is not allowed since it contributes to more confusing code and errir  prone code.  Granted, Java does allow the programmer to create " final " parameters (that cannot be assigned back to), but I have never seen anyone use this in real code.  Secondly, my PR was originally trying to find a way to flag a common mistake where the a parameter/local hides a field and forgetting to qualify the field  reference with " this. " results in devestating results at runtime.  On a number  of occassions I've made this mistake myself and been suprised that a field is  still null even after it seems to have been initialized. The botton line here is to have optional compiler warnings that make it easier  to write accurate code.  In my experience you rarely need to assign back to parameters and extra care is needed when creating parameters/locals that hide  fields. +1 here (for a warning on assignments to params) Let's try to sneak it for M4 Given we know detect assignments having no effect (see bug 25092) from build  20021112 on (2.1 stream), is it ok to close this one ? You can always force a variable to not be assigned by using the final modifier  (even on arguments). Sounds good to me.  Yes, final can, but rarely is, used on parameters.  With  the functionaly provided by bug 25092 I think this bug can be considered RESOLVED/FIXED. Closing as duplicate of bug 25092  *** This bug has been marked as a duplicate of 25092 ***
Platform	Problems importing from password encrypted Zip (1GDXUT5) I tried to import the source from JCore into my workspace. I got a problem report at the  end saying that there was a lot of problems trying to write files. I believe that this was because the zip file was password encrypted. I was not  prompted to enter a password to open the file. NOTES:  EJP (5/28/01 12:16:54 PM) 1 - JDK does not have support for zip with password.   2 - Did not find a way to know if a password was used or not to abort the operation before starting it. 3 - A ZipException is thrown because zlib can't deflate the file contents.   4 - The message in the ZipException does not help much: " incomplete dynamic bit lengths tree " EJP (5/28/01 12:28:23 PM)   The only thing that can be done here is to show a better message to the user. The current message: " Could not write file " is too poor.   Moving to core since this message is created in: in org.eclipse.core.internal.localstore.FileSystemStore   The code is handling read and write exceptions in the same block and assuming the problem happened when writing. JM (6/4/2001 3:17:22 PM)  Consider updating the messages. JM (05/06/2001 7:11:34 PM)  Defer PRODUCT VERSION:  0.108 JRE on Win98 Improved the error reporting so that it indicates an error occurred during read  rather than write.  I don't think it's much more helpful than before, but not  much else we can do.  Moving to closed. Fixed in v207
Platform	[DCR]TableColumn doesnt support popup menus Id like the same poup menu functionality available on tables to be available on table column headers (ie TableColumn classes), ie setMenu(..).  This would allow column based activities to be more clearly defined and associated.  The current cludge is to put such behaviour in a table popup, allongside specific table related menuitems. *** Bug 35558 has been marked as a duplicate of this bug. *** *** Bug 64786 has been marked as a duplicate of this bug. *** Would it be possible to provide an update on this request?  This blocks a defect (https://bugs.eclipse.org/bugs/show_bug.cgi?id=64786) that we would like to fix in Hyades / TPTP.  What target is this being considered for, or is it not currently under consideration? Thanks for your help, --Joe I've implemented this for Windows, see bug #32322 Linux/GTK should not be hard as well but don't have time right now. Context menus are needed for both Table and TreeColumn for my customers and some proposed DTP  work. Ok, I tried to get to this for 3.2 but it fell off a cliff.  Here is why:  The right thing to do is to introduce a new class TableHeader (or just Header) that is a subclass of Control.  People have been requesting this class for a while but there wasn't time to do it for 3.2.  Table would implement the method Table.getHeader() that would return an instance of TableHeader.  Once that instance was returned, you could add all the mouse and menu listeners that you wanted because it would be a Control.  The same thinking goes for Tree.  Fixing Table to return mouse events in the header is wrong.  The mouse didn't go down in the client area of the table.  We could add new API such as addHeaderMouseListener() but that would litter Table with a bunch of duplicate methods.  Anyway, this is the reason this functionality has been stalled for so long.  I appologize, but it really did fall off a cliff a few months back when I was working on related issues (tooltips in header items). The solution you describe sounds great.  I'm sorry it didn't make 3.2, but I understand the cliff all too well.    Is it now under consideration for 3.3? Yes.  Please ping me at the beginning of the 3.2 cycle.  In the meantime, I'll see what I can do to provide a patch for the various platforms. (In reply to comment #6) > The right thing to do is to introduce a new class TableHeader (or just Header) > that is a subclass of Control.  People have been requesting this class for a > while but there wasn't time to do it for 3.2.  Table would implement the method > Table.getHeader() that would return an instance of TableHeader.  Once that > instance was returned, you could add all the mouse and menu listeners that you > wanted because it would be a Control.  The same thinking goes for Tree.  I don´t understand, why you want to associate the (Table)Header class with the Table. Wouldn´t it be better to have the (Table)Header class be associated with the TableColumn and let it also contain the settings for the tooltip and the text of the column? The advantage of this variant would be the possibility to define different event handlers for the mouse clicks on different columns. Maybe but that's not the way the platforms do it. (In reply to comment #8) > Yes.  Please ping me at the beginning of the 3.2 cycle.  In the meantime, I'll > see what I can do to provide a patch for the various platforms.  Since 3.2 was already underway when you posted this, I inferred that you meant 3.3. Ping.  :-)  We'd love to get this capability so we can address some longstanding enhancement requests.  Thanks. *** Bug 151210 has been marked as a duplicate of this bug. *** Until the new Header class is written for 3.3 (and in case this doesn't happen), I have patches for each platform that add the API Table.setHeaderMenu() to allow you to set a popup menu on a table header.  I will attach them to this bug report soon.  Stand by.  NOTE:  The patches represent one possible solution.  It may be that we go with it, rather than the Header class.  Until that time though, that patches will give you the functionality that everyone has been so patiently waiting for. I was looking for this functionality today as well.  I will fall back to a table context menu for now, but hopefully this feature can be added to the platform later. Are the attached patches still the way to go?  Has a solution been settled on for 3.3?  One ping ... and one ping only :) I feel your pain.  I am scrambling to get this work done because this is such a long standing bug, but I can't commit to anything.  The patches should still have the right flavour. > One ping ... and one ping only :)  Bryan Hunt for Red October? :]
JDT	' show detail pane ' toolbar button behaves differently than other buttons latest after 20020502 hover over it when it's _not_ down - its icon moves up a bit   on all other buttons icons do not move when you hoves over them It appears that the icon we received from the artist is off by a pixel or two? I will check with Andree (icon artist) Fixed. Please verify. Verified.
JDT	junit wizard:  npe [JUnit] java.lang.NullPointerException at org.eclipse.jdt.internal.junit.wizards.NewTestSuiteCreationWizard.postCreatingTy pe(NewTestSuiteCreationWizard.java:116) at  org.eclipse.jdt.internal.junit.wizards.NewTestSuiteCreationWizard.performFinish (NewTestSuiteCreationWizard.java:105) at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:577) at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:312) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:398) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java (Compiled Code)) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code)) at org.eclipse.jface.window.Window.open(Window.java:537) at org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:88) at org.eclipse.jface.action.Action.runWithEvent(Action.java:749) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code)) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698) at org.eclipse.core.launcher.Main.main(Main.java:534) Please add details to reproduce. most likely happened after bug 21018  then, code in NewTestSuiteCreationWizard is protected void postCreatingType() {  IType newClass= fPage.getCreatedType(); // < < NPE  this thing blows up because fPage did not succeed in creating the new type Closing since this is a result of bug 21018.
JDT	GotoErrorAction: NPE when executed on file loaded form Repo F1+  - open Java file from repository - press next error action.  see also bug 18079 java.lang.NullPointerException  at org.eclipse.jdt.internal.ui.javaeditor.ProblemAnnotationIterator. < init > (ProblemAnnotationIterator.java:23)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.getNextError (CompilationUnitEditor.java:761) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.gotoError (CompilationUnitEditor.java:687)  at org.eclipse.jdt.internal.ui.javaeditor.GotoErrorAction.run (GotoErrorAction.java:32)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:590) at org.eclipse.ui.actions.RetargetAction.runWithEvent (RetargetAction.java:155) at org.eclipse.ui.internal.WWinPluginAction.runWithEvent (WWinPluginAction.java:176) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:739)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432) at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)  I disabled the GotoErrorAction for editors that don't work on CUs. But I am not  sure if this is the right fix. Fix sufficient for 2.0
Platform	Tab appears narrower than space (1GL2WTY) - open type org.eclipse.ui.internal.dialogs.ResourceTreeAndListGroup - in the field declarations, tab is used between the private modifier and the type name but the type name appears immediately adjacent to the modifier. For example (replacing \t with tab): private\tObject\t\troot; appears as: privateObject               root  NOTES: EG (10.10.2001 22:08:46)  tabs are rendered by the StyledText widget. moving to SWT *** Bug 4848 has been marked as a duplicate of this bug. *** Fixed in > 20011118 (205). A tab character now results in a gap at least one space wide. PRODUCT VERSION: 202a
Platform	[Dialogs] Typing two backslashes in the File Name's blank text box of Save File As menu causes When saving a file via the Save As menu item, if you enter \\ as the file name  and click on Save, and repeat, the VM crashes. Reproduction: A test plugin that reproduces the problem was written. Note that this problem  does NOT occur when the file dialog is used standalone, it only occurs within the workbench.  Steps to reproduce: 1) Install and launch the attached project.  2) In the resource perspective, click " Sample Menu " | Save. 3) Enter \\ in the file name combo. 4) Click save. 5) Repeat steps 2-4 and observe the VM crash. By VM crash do you mean the following exception in the .log?  !STACK 0 java.lang.ArrayIndexOutOfBoundsException: 2  at org.eclipse.core.runtime.Path.append(Path.java(Compiled Code)) at org.eclipse.core.runtime.Path.append(Path.java(Compiled Code))  at org.eclipse.ui.dialogs.SaveAsDialog.okPressed(SaveAsDialog.java:158) at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:239)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:393) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java (Compiled Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled  Code)) at org.eclipse.jface.window.Window.open(Window.java:542)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveAs (CompilationUnitEditor.java:885) at org.eclipse.ui.texteditor.AbstractTextEditor.doSaveAs (AbstractTextEditor.java:2138) at org.eclipse.ui.internal.SaveAsAction.run(SaveAsAction.java:28)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:749) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:247) at org.eclipse.core.launcher.Main.run(Main.java:703)  at org.eclipse.core.launcher.Main.main(Main.java:539) I cannot replicate any error using your code. Please let us know the VM you  are using and what you mean by crash (i.e. do you get a javacore.txt, and error to the console etc.)? Fixed the problem with the SaveAsDialog in build > 20020911 Marking as WorksForMe pending more details on problem.
Platform	Spec clarification: Senders of PropertyChangeEvent.getProperty() should use equals, not == Build 20020618  The spec for PropertyChangeEvent.getProperty() should warn callers that they should use equals, not ==, to compare property names.  From a note to eclipse-dev: We have recently seen several instances of a programming error whereby  implementors of IPropertyChangeListener use == to check the value of PropertyChangeEvent.getProperty(), rather than using equals().  This is incorrect because there is no guarantee that the property name in the event is a constant. For example, the Workbench / Preferences / Import... action reads the property names and values from a file.  It sends out notifications to any activated  plugins, but the string read from the file for the property name will not be == to the corresponding string constant. (We considered interning the strings in the preferences import, but this is not the right answer and would merely hide the problem until some other use case  reads property names from a file, not to mention encouraging bad programming practices.)  Please ensure that all senders of PropertyChangeEvent.getProperty() use equals rather than ==. Although the class ensures that the property name is not null, a safe idiom to use is the following: if (MY_PROPERTY.equals(event.getProperty())) { // update accordingly } The preferences facility has recently been pushed down to core runtime from  JFace, but the JFace APIs still exist and are still commonly used. So you will need to check references to both: org.eclipse.jface.util.PropertyChangeEvent.getProperty(), and org.eclipse.core.runtime.Preferences$PropertyChangeEvent.getProperty()  If this is not fixed, preferences will appear to work normally when being adjusted manually in the preference pages. However, when preferences are exported and reimported, any active plugins with listeners using == will not update properly.  We highly recommend testing all your preferences with the new import/export facility.  There are existing PRs for known occurrences in the SDK. See http://dev.eclipse.org/bugs/show_bug.cgi?id=20471 Need to fix up both org.eclipse.jface.util.PropertyChangeEvent.getProperty(), and org.eclipse.core.runtime.Preferences$PropertyChangeEvent.getProperty() Approved by arch team. Added the following to the spec for  org.eclipse.jface.util.PropertyChangeEvent.getProperty(): * < p > * Warning: there is no guarantee that the property name returned  * is a constant string.  Callers must compare property names using * equals, not ==. Released.  Randy and DJ, could you please review the change? Moving to Core to fix up  org.eclipse.core.runtime.Preferences$PropertyChangeEvent.getPropertyName(). Sorry about the short notice before F4. Verified change in JFace. Fixed and released same change in Runtime. Minor point but the change in JFace is missing the < /p > tag Added < /p > tag
JDT	Emacs-like isearch (aka " incremental search " ) An Emacs feature I'd like to see in the Eclipse text editor (not just the Java editor) is isearch.  It is best experienced by loading any large file in Emacs and experimenting with pressing " ^s " and typing stuff to search for.  It works like this: " ^s " brings up a prompt ( " ISearch: " ) in the status line.  As you type the word to search for it appears letter by letter in the status line. Also, each time you type a letter, the first match for whatever you have typed so far is highlighted in the text buffer. Example: To search for " foo " , type " ^sfoo " .  The first occurence of first " f " , then " fo " , then " foo " in the buffer is highlighted.  To see the next occurence of " foo " , press " ^s " again.  If there are no more " foo " s in the buffer, the prompt in the status bar changes to " Failed ISearch: foo " .  Pressing " ^s " again wraps the search and changes the prompt to " Wrapped ISearch: foo " .  The search is case insensitive until an upper case letter is typed, at which point the search turns case sensitive.  Thus, you cannot search for a lower case string in a case sensitive way.  This is a limitation, but not one that I feel limits me personally (YMMV though).  Pressing backspace while searching undoes the last key press, whether it was a typed letter or if it was a " ^s " .  Any non-searchable key press (like pressing the arrow keys or the return key) exits the search mode.  Pressing " ^s " twice (while not searching) brings up your previous search.  The " ^s " key binding is not holy to me in any way, so binding this to whatever key suits you best would be fine by me.  Also, should you decide to implement this, *please* do it the Emacs way, not the VAJ way (pressing ^i in VAJ gives you a very crude (bordering on useless) approximation of Emacs isearch). Moving to JDT-Search for comment.   If this feature is supported both the Java editor (supplied by JUI) and the default text editor in the base UI could take advantage. shouldn't that be reassigned to the owner of jdtui? Adam: If you know who that is, I would appreciate much if you could re-assign it (or tell me who it is and I'll do it). This feature is on our list but it isn't committed for 2.0, but it looks like a  possible " third party " opportunity... I think it should be a general editor functionality and not specific to JDT It's implemented as an option in the find-replace dialog box. Case sensitivity  is handled as usual. will be in build I-20020312 I think it will be useful if in the Find-Replace dialog, the find text field is accessible  by a  shortcut key. That way after I select incremental search by pressing alt-I, i can go back to my find text field using a mnemonic (say alt-n). I also think that this feature would be most helpful if  there was a way it can be invoked without opening up the find dialog box. Power users usually would normally want to have a very small textfield window in which you type in your words and see it jump to  the desired location. You're right about both things. ' Real ' incremental search is on the way... The version using dialogs was a first cut implementation. I wonder if people will still want to have incremental search in the dialog, when the new  incremental search will be available. dialog less incremental search (CTRL-J) will be in I-20020318. Verified. > 20020219. JRT.
Platform	[Compare] Code duplication between history view and vcm edition seletion dialog (1GF28XM) Much of the code in VCMEditionSelectionDialog is copied from HistoryView.  The common code needs to be factored out. NOTES:  JEM (9/19/2001 4:56:57 PM) VCMEditionSelecitonDialog is gone now, but code is now duplicated in CompareResourceEditorInput. PRODUCT VERSION:  0.118 n/a
JDT	Launch configuration problem I have a launch config that runs a Tomcat webapp that works under 2.1 M1 but not under 2.1 M2.  For some reason, its looking for a class named " Tomcat " .  -------------------- launch config -------------------- main class: org.apache.catalina.startup.Bootstrap args: start vm args: -Dcatalina.home= " O:\Dev\Apache Tomcat 4.0 " -Dcatalina.base= " O:\Dev\MyApp " -Djava.library.path= " O:\Dev\Libs " classpath, user classes: added " O:\Dev\Apache Tomcat 4.0\bin\bootstrap.jar " -------------------- Message box #1 -------------------- Java Virtual Machine Launcher Could not find the main class. Program will exit!  -------------------- Message box #2 -------------------- Launch Configuration Editor Exception occurred while launching configuration. See log for more information Reason: java.lang.NoClassDefFoundError: Tomcat -------------------- .log file -------------------- !ENTRY org.eclipse.debug.ui 4 120 Oct 30, 2002 23:02:44.89 !MESSAGE Error logged from Debug UI:  !STACK 1 org.eclipse.core.runtime.CoreException: java.lang.NoClassDefFoundError: Tomcat Exception in thread " main " at org.eclipse.jdt.launching.AbstractVMRunner.abort(AbstractVMRunner.java:40) at org.eclipse.jdt.internal.launching.StandardVMDebugger.checkErrorMessage(StandardVMDebugger.java:278) at org.eclipse.jdt.internal.launching.StandardVMDebugger.run(StandardVMDebugger.java:216) at org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:97) at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:140) at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$11.run(LaunchConfigurationDialog.java:2283) at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98) !ENTRY org.eclipse.jdt.launching 4 116 Oct 30, 2002 23:02:44.89 !MESSAGE java.lang.NoClassDefFoundError: Tomcat Exception in thread " main " The error message is that returned by the target VM you launched - i.e. the  target VM was looking for Tomcat (not Eclipse). Is " Tomcat " on your launch  config classpath? I just figured out what's going on.  If you look at my vm args, you will see a path with spaces in it ( " O:\Dev\Apache Tomcat 4.0 " ).  Something broke between M1 and M2 that causes it to ignore the quotes, causing it to try to run part of the path as the class to launch ( " Tomcat " ). VM and Program arguments are working for in the latest code stream. Joe, please  verify. Works for me. Still occurs as originally described in I20021204. *** This bug has been marked as a duplicate of 26870 ***
Platform	Suspending on a breakpoint...select that breakpoint (1GD5POD) DS (5/3/01 10:38:38 AM)  When a breakpoint is hit, we should select that breakpoint in the breakpoints view. *** Bug 7755 has been marked as a duplicate of this bug. *** Deferred Re-opening to close. Do not intend to " fix " this one. The breakpoints view may/may not be visible,  and it seems against the " rules of the UI " to change the user's selection. *** Bug 41547 has been marked as a duplicate of this bug. *** Re-opening as there has been another request for this. Perhaps it should be a  user preference? Consider for 3.0  * Add a preference to the " general debug preferences " page * Only select breakpoint if the view is open and visible Pleas call it " Link with Debug " and put this property at the " Breakpoint view " titlebar. This way it will be similar to " Outline " and " Hierarhy " views. Good suggestion - it avoids a preference that way. I believe this should be implemented something like this:  * the breakpoints view listens to selections from the debug view (when the " link " toggle button is on) * if a selection occurrs, which is a stack frame, which has breakpoint(s) (IStackFrame.getThread().getBreakpoints()), select those breakpoints Deferred to M4 Implemented. Please verify, DarinS. I do not believe this should be on by default..so I changed it. Removed the VALUE_TRUE and VALUE_FALSE constants and reworked to use the language support (did the same in the Ant view).  Verified.
Platform	NPE launching target. 1. I switched from 20020411 to 20020412. T 2. I catched up my source (compare, search, jdt, *.debug.*, *.launching.*) with the latest 3. I imported binary 20020412 projects 4. Launch Eclipse workspace == > NPE (see below)  There is a very similar PR which has been marked as fixed: 9388: NPE - Unable to launch Eclipse on Solaris  java.lang.reflect.InvocationTargetException: java.lang.NullPointerException at org.eclipse.core.internal.runtime.InternalPlatform.activateDefaultPlugins(InternalPlatform.java:132) at org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatform.java:588) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:883)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:767) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:14) Exception in thread " main " Maybe related: I had a crash yesterday before going home. Switched back to 20020411 and it does still not work. I guess my workspace is dead now. Any hint to recover? I found the bug after first - updating my workspace - deleting metadata files - setting up a new workspace - and when it still did not work: debugging into it.  The problem was an error in a plugin.xml file. For some reason (?) such errors are neither shown to the user nor logged to the .log.  Here's the error that happens during startup and which is then completely hidden: message= " Error while processing file:D:/EclipseWorkspace/plugins/org.eclipse.jdt.ui/plugin.xml:  assertion failed: The service (3rd) component of plugin version identifier, 2.0.M5, must be numeric.. " If I had seen this message then I would have known immediately what's wrong: the plug-in ID contained a character which seems to be invalid. Moving from blocker to critical. Giving the fact that a same error has already been reported and was probably also caused by a bad xml file. Test Case: - replace the version (number) of a plugin.xml with " 2.0.M5 " It looks like there are 2 separate issues here.   1). Why do we get an NPE? Why isn't the runtime plugin in the plugin registry. 2). Why isn't the error message about the plugin_id being logged?  Debbie, please look at the error message and see why it isn't being logged.  When finished, please annotate and re-assign bug to me. Thanks. I downloaded 2002-04-12, unzipped, changed the plugin id of jdt_ui to " 1.0.M5 " and then tried to run. I got the following information in my .log file. Are you sure that you didn't get anything in your log? ------------------ < log-entry date= " Tue Apr 16 11:24:36 EDT 2002 " > < status      plugin-id= " org.eclipse.core.runtime " severity= " WARNING " message= " Problems encountered loading the plug-in registry. " code= " 1 " > < status        plugin-id= " org.eclipse.core.runtime " severity= " WARNING " message= " Error while processing  file:C:/temp/0412t/eclipse/plugins/org.eclipse.jdt.ui/pl ugin.xml:  assertion  failed: The service (3rd) component of plugin version identifier, 1.0.M5, must be numeric.. " code= " 1 " > < /status > < status        plugin-id= " org.eclipse.core.runtime " severity= " WARNING " message= " Plug-in org.eclipse.pde.ui was disabled due to missing or  disabled prerequisite plug-in org.eclipse.jdt.ui. " code= " 1 " > < /status > < status        plugin-id= " org.eclipse.core.runtime " severity= " WARNING " message= " Plug-in org.eclipse.jdt.junit was disabled due to missing or  disabled prerequisite plug-in org.eclipse.jdt.ui. " code= " 1 " > < /status > < /status > < /log-entry > Moving back to DJH for investigation into NPE.  Dani, please annotate bug with: - command line arguments used to start Eclipse - location of target workspace Thanks. Normally I use target when launching something out of Eclipse but probably wasn't clear enough: - Changed plugin.xml for Search and JDT (version= " 2.0.M5 " ) - Started Eclipse out of Eclipse (no command line) There are two different results a) if -data points to a not yet existing workspace (or if I have chosen to clear the workspace on each launch) then NO log at all. b) if -data points to an existing workspace the log is: < ?xml version= " 1.0 " encoding= " UTF-8 " ? > < log > < /log > Note: the development workspace log does not contain any info either. We are now correctly reporting the invalid version id.  Cannot reproduce the NPE  in F2.  Log message when running eclipse in eclipse with invalid plugin version id is now:  !SUBENTRY 1 org.eclipse.core.runtime 2 1 Jun 07, 2002 11:23:01.401 !MESSAGE Error while processing " file:d:/1target/plugins/org.eclipse.core.tests.resources/plugin.xml:  assertion  failed: The service (3rd) component of plug-in version identifier, " 2.0.M5 " ,  must be numeric. " .  Please re-open if you experience this problem in the latest builds.
JDT	launch configs: single click running if config already exists 20020409 after i create a config for a class it should be enough for me to press the running man button to run the class (i the class is selected and only 1 config exists for it) now, i have to find it again in the recent or favorites This occurrs if you have the " single click launch " preference enabled.
Platform	TM: ResourceState#put() needs proper progress monitoring This methods has been refactored but proper PM is not done yet This was added by Jean-Michel Fixed ResourceState put and get progress monitoring. Fixed and released to HEAD. Fixed and released to HEAD
JDT	NPE Deleting project that has a launcher If you delete a project that you have launched from before you get a  NullPointerException STEPS 1) Load a test suite (I used the org.eclipse.ui.tests) 2) Run them. 3) Delete the project from the ResourceNavigator. 1 org.eclipse.core.resources 4 *** Stack trace of contained exception *** Log: Tue Feb 12 16:25:54 EST 2002 4 org.eclipse.ui 0 java.lang.NullPointerException java.lang.NullPointerException at  org.eclipse.jdt.internal.junit.ui.JUnitBaseLauncherDelegate.getLaunchObject (JUnitBaseLauncherDelegate.java:175)  at org.eclipse.debug.internal.ui.LaunchHistoryElement.getLaunchElement (LaunchHistoryElement.java:111)  at org.eclipse.debug.internal.ui.DebugUIPlugin.removeDeletedHistories (DebugUIPlugin.java:672)  at org.eclipse.debug.internal.ui.DebugUIPlugin$5.run (DebugUIPlugin.java:657)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled Code))  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.jface.operation.ModalContext$ModalContextThread.block (ModalContext.java(Compiled Code))  at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run (ProgressMonitorDialog.java:335) at org.eclipse.ui.actions.DeleteResourceAction.run (DeleteResourceAction.java:353) at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code)) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:810) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:781) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:323)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) fixed
Platform	readme: must refresh from local if using external editors (1GFBQNI) We need to tell people that they  must refresh from local if using external editors. Otherwise our sync info is out of date and it may not show as an outgoing change. NOTES: I just got burned (confused) by this in v203.  I did a sync (catchup), edited a  file externally, did a sync (release) and was told I had no changes!  Could there be a preference (that is initally unchecked) that does a refresh from  local upon synchronization?  It's annoying to have to remember to do refresh  from local everytime i do a sync to make sure I release the right stuff. *** This bug has been marked as a duplicate of 1 ***
Platform	StyledText - X dies when appending a lot of text 20020416, redhat 7.2  Appending 11000 characters to the StyledText widget kills X. X simply disappears and restarts. Run the test case below to reproduce. Make sure you have exited and restarted Eclipse. Otherwise you may loose data. Rendering using GC#drawString works for up 256k characters. Note that appending slightly less than 11000 characters seems to cause a  delayed crash. When I append 10925 characters the test case runs through to completion. However, X then crashed when I switch to Eclipse and press a key. import org.eclipse.swt.SWT; import org.eclipse.swt.custom.*; import org.eclipse.swt.widgets.*;  public class Bug_14152 { public static void main(String arguments[] ) {  final Shell shell = new Shell(); final StyledText text = new StyledText(shell, SWT.NULL);   shell.addListener(SWT.Resize, new Listener() { public void handleEvent(Event event) {    text.setBounds(shel l.getClientArea());   } });  shell.open(); for (int i = 0; i < 10926; i++) {   text.append(new Integer(i%10).toString()); //  System.out.println(i);  } Display display = shell.getDisplay (); while (!shell.isDisposed ())   if (!display.readAndDispatch ()) display.sleep (); } } Just so I'm clear on this PR... Are you saying that drawString works for more  than 11000 characters, but StyledText fails? Is it possible that there is a " image can't be wider than 32767 pixels " issue  lurking here (or something like that)? See also bug #14034 Yes, drawString works for large strings but StyledText doesn ' t. Hence the  separate PR. We only allocate a double buffer image big enough to fill the widget client  area so I'm confident that that's not the problem. It may be some other GC API that causes the problem. works on motif and gtk, closing tested with eclipse 3.2 ,6 *** Bug 210728 has been marked as a duplicate of this bug. ***
Platform	[WorkbenchParts] ' Hide editors ' should deactivate active editor parts if you invoke ' hide editors ' when an editor part is active, the editors hide,  but no view is activated. i haven't debugged this, but i am guessing that the  editor part did not deactivate or close. if you activate a view, then close it, notice no active view once again. continuing with my assumption, the hidden  editor part is probably being activated as it is first in the mru order. this is odd behavior for a user. Should be dealt with editors+perspectives work. PW *** This bug has been marked as a duplicate of bug 11001 ***
JDT	Surround w/ try-catch patch The boolean expression in editorStateChanged() is the same as in checkEditor() Thanks, for the contribution Sebastion. I verified and released your patch to HEAD. Verified Dani - pls add sebastian as a contributor for the affected files Done. Sorry, I forgot this.
Platform	[other] keyring is not secure enough (based on news://news.eclipse.org:119/aig3ja$7kt$1@rogue.oti.com)  The keyring file is encrypted with a default password. If a user copies the file from a colleague, he will be able to decrypt it and discover its passwords (e.g, cvs password). Instead of using command line password option, which nobody uses,  eclipse should pop a dialog box prompting me for a password to unlock the keyring file. See what mozilla does with its security system. also if the user on unix uses a password, it is visible in the process list. One more bad thing about it is that the keyring file is created like any other file, with permissions (0666 - umask). Because many users have umask 022, I consider this a really serious bug.  Thanks to the simple structure of eclipse it took me less than half an hour to get my personal keyring displayed. That's too easy. FYI, the cvs plug-in no longer uses the cache without the user explicitly saying that they will cache using an unsecure mechanism. This will be in the next 3.0 I-build. *** Bug 68268 has been marked as a duplicate of this bug. *** There are no plans to improve the keyring support in Eclipse.  If you have greater cryptographic requirements, we recommend looking at other packages such as java.security.KeyStore.  CVS is the only known client of the Eclipse keyring,  but it makes caching in the keyring optional and provides the caveat that this does not protect you from people with access to your workspace data location. Why a simple solution like what mozilla has, is complex to implement?
JDT	Check for not compatible values in the JDI client In the JDI client, when a primitive value is sent, this value is converted in the type expected by the VM. The type of this value should be checked, and an InvalidTypeException should be thrown if types are no compatible or can't be converted without lost of information. This check need to be done in : ArrayReferenceImpl#setValues(..) ClassTypeImpl#invokeMethod(..) ClassTypeImpl#setValue(..) ObjectReferenceImpl#invokeMethod(..) ObjectReferenceImpl#setValue(..) StackFrameImpl#setValue(..) Fixed  Added 3 methods: ValueImpl#checkValue(Value, Type, VirtualMachineImpl) ValueImpl#checkValues(List, List, VirtualMachineImpl) ValueImpl#checkPrimitiveValue(PrimitiveValueImpl, PrimitiveTypeImpl, PrimitiveTypeImpl) Please verify, darinW In ValueImpl, this string appears as " NON_NLS " tiwce, but should be NLS'd  throw new InvalidTypeException( " Type of the value not compatible with the  expected type. " ); //$NON-NLS-1$ Fixed. please verify Verified.
Platform	CellEditor SPEC needs to be changed for lost focus The fact that nothing happens when a CellEditor loses focus is a real problem.   One solution to this problem without changing the interface would be to require that CellEditors fire applyEditorValue() when that CellEditor's Control loses  focus. Some applications have worked around this problem by looking for the  CellEditor's control to lose focus.  This would be ideal because it would work  for all CellEditor's without change.  However, I don't think this works if the  CellEditor is a composite with many Controls, and in some cases a Dialog. The client of a CellEditor cannot listen for FocusLost in the composite case.   The behavior of CellEditors must be changed such that they fire " Apply " on  focus lost. *** This bug has been marked as a duplicate of 10949 ***
Platform	Motif on KDE2: Things don't redraw (1GA4H7Z) When running VAME1.3 on Mandrake 7.2 using KDE2.01, things look like KDE is stealing PAINT events.  I'll get a RH7 machine running and look into this.  NOTES: CM (3/8/01 3:54:20 PM)   BGS to investigate. PRODUCT VERSION: VAME1.3 on Linux/Motif, running on KDE 2.01 This bug is old and eclipse is drawing properly on KDE 3. Closing.
Platform	[Examples] Outline loses selection when text saved (1G5YDAN) Create a sample readme. Select Outline view. Choose Section 2. Edit the readme text and save. The outline loses the selection.  NOTES: DS (1/9/01 5:38:22 PM)  This is not a desktop issue.  Moving to Examples. PRODUCT VERSION: 015 VA/Java build Lowering priority based on comments from DS. Reopened for investigation No changes
Platform	Pessimistic provider should touch files by default The modify files preference should be on by default as this is will expose more bugs out of the box. Changed the label on the preference to be more clear.  Label is now:  Touch files during validate edit Resolving fixed, sent latest build to platform-vcm.
JDT	Run configuration Program Parameters don't allow empty  parameters It seems to be impossible to create a Run/Debug Configuration for a Java  Project which contains " empty " Program Parameters. E.g.: on commandline I would start a Java program like that: java test " abc " " " " def " This would invoke the main method in test.class with 3 Parameters, where the second one has length 0. If I create a run configuration with the same syntax (means: Program arguments is set to < " abc " " " " def " > the main method is invoked with two parameters only, the second empty parameter is skipped. Move to JDT/Debug. Fixed. ExecutionArguments.parseString() was removing the preceding and trailing  quote from quoted arguments. Please verify, Joe. Verified.
JDT	drag drop: package nodes should not respond to non-java files. [dnd] 1. create a new project ' TestProject ' 2. create new class ' Test.java ' 3. drag a non java file (say .pdf) from the desktop to the node titled ' (default package) ' .  4. this node accepts the .pdf, but places it as an immediate child of project. 5. now that the .pdf is there, try again for more quirky behavior, this time  you get a ' do you want to overwrite message ' , etc.  a node should not respond as a drag target to objects that it can not accept within its branch. Please indicate build number in PRs. I assume you're in the packages view here. sorry (twice). F2 & packages view. no action for 2.0 still the case for 2.1 Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state.
Platform	[Import/Export] import/export enhancement Is there any enhancement on the import/export process? I was using VAJ for  quite some time before I switch to Eclipse.  There are some quite nice features in VAJ import/export which is different from Eclipse.    Firstly, VAJ shows the number of files selected for import/export. And it has a Details... button to look at the selected files with the unselected  files.  Lastly, it allows the user to drag through the check boxes to select the directories/files at one time.    IMO, the Eclipse import/export should show the number of files selected for import/export with a Details... button to popup Details dialog to  show " available " directory tree (left) and file list (right) on top of the  dialog and only " selected " directory tree and file list at the bottom of the  dialog.  This should allow us to add/remove the files or directories for import/export. We should considered however that this Details dialog will  create another popup on top of the import/export dialog. This Details dialog should be resizable, because it is quite hard not to have a bigger view on the  directory tree and file list to select/deselect the files and directories. The only " selected " directory tree and file list can also be shown on top of  the export/import dialog itself, if so, then this dialog should be resizable also.    The dragging through to select more than one check boxes would be a nice feature for SWT/JFace and also in the import/export.     Eclipse should allow the user to export the currently opened/editting file (together with the corresponding class file if the opened/editting file is a  java file), or at least, there is a button to allow us to click to select all the opened files for export and another button to select only the currently  editting file for export on the export dialog itself. One last thing, the " create only selected directories " radio button is  related to the directory we selected on the package view? should it be bind to the directory we selected on the directory tree of the export dialog itself? That is all. Thanks. JDT only contributes the JAR exporter the other import/export wizards are  contributed by Platform UI. Extracted JAR exporter relevant aspects into 22989. Moving to Platform UI. Create only selected directories is bound to the selection in the dialog, not  the selection from any of the views. Consider for future work. There are currently no plans to work on this feature
Platform	Opening binary in " CVS Repositories " has wrong result When opening a binary file in the " CVS Repositories " view, the result is  (IMHO) not as exptected, i.e. when opening an Excel file I expect that Eclipse opens the default browser defined for that specific resource type (- > MS Excel), but it opens the default text browser.  BTW: It's similat with text resources, but with them it isn't as problematic  as with binary resources. Which build? All the latest. Files are always opened with org.eclipse.ui.DefaultTextEditor.  See org.eclipse.team.internal.ccvs.ui.actions.OpenRemoteFileAction. Ah, there just hasn't been an integration build since i released the changes. See bug 2. This will be in tomorrow morning's integration build.  *** This bug has been marked as a duplicate of 2 ***
JDT	Launch Configurations " navigation tree " should start expanded I don't imagine that this tree will grow really large, and it would save a step when reusing it, to start with this tree expanded.  At least the last configuration run should be visible. moving to debug Fixed Verified.
Platform	java.lang.ArrayIndexOutOfBoundsException in " Add CVS Repository " I am using the integration build of May 1. When adding a new CVS repository location I got the following exception: java.lang.ArrayIndexOutOfBoundsException  at org.eclipse.team.internal.ccvs.ui.wizards.NewLocationWizard.performFinish (NewLocationWizard.java:96) at org.eclipse.jface.wizard.WizardDialog.finishPressed (WizardDialog.java:577) at org.eclipse.jface.wizard.WizardDialog.buttonPressed (WizardDialog.java:312) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:379)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:538) at org.eclipse.jface.window.Window.open(Window.java:525)  at org.eclipse.team.internal.ccvs.ui.RepositoriesView$5.run (RepositoriesView.java:124)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:590) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883) at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:733)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:162)  at org.eclipse.core.launcher.Main.run(Main.java:588) at org.eclipse.core.launcher.Main.main(Main.java:437) I can't reproduce. Could you give me a bit more information: - what values did you enter in the new repo wizard? - does this happen all the time? Awaiting info from reporter. I have JDK 1.4 installed but I obtained the same result with JDK 1.3 too. This bug happened on May 1 integration build. I get it on May 2 integration build too.  We have CVS 1.11 running with Linux. My values for new repository dialog are   pserver cvs   x 10.10.100.24   Use default port /usr/local/cvsroot   Validate connection on Finish (checked) User " cvs " with password " x " is a valid cvs user. If I enter an invalid password and request that the location should be kept I don't get any errors. When I try to browse the new location and authenticate then, nothing goes wrong and I can access the repository normally. Fixed
Platform	IllegalArgumentException trying to view properties of an extension Steps to reproduce: Open the plugin.xml file in the org.eclipse.team.cvs.ui project. Switch to the Extensions tab.  Check the box labelled " Show full extension hierarchy " . Select the extension in the org.eclipse.ui.propertyPages branch that has no associated filter.  Select Properties from the popup menu for this extension. Expected results: The properties for this extension should be display in a Properties view. Actual results: An error dialog appears with the words " Unable to create part: Properties " , folowed by another with the words " An error has occurred. See error log for more details " . This was the result of a previous error caused by some bad XML I wrote. We should not fail just because the XML is malformed. If you think this is a real problem, please reopen it.
Platform	Unable to restore MRU list message sent to log Build F2  I had the following message in my log !ENTRY org.eclipse.ui 4 4 Jun 04, 2002 11:00:55.166 !MESSAGE Unable to restore mru list - no input factory ID. !SESSION Jun 04, 2002 11:15:41.521 ---------------------------------------------  I suspect this is from starting up Eclipse at some point. I get these everytime I restart currently. Should address, time permitting, as this clutters the log. Bumping up priority. This error message can occur if the mru list persistence data is  incomplete/corrupt. Please attach your workbench.xml. It should have a < mruList > tag with one or more < file > tags. If you get this  error the factoryID attribute in < file > is missing. Do you mean .log file?  Here is the relevant contents. java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT enabled:  jitc) BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=it_IT Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/0610/eclipse/ !ENTRY org.eclipse.core.runtime 2 1 giu 10, 2002 16:35:07.442 !MESSAGE Problems encountered loading the plug-in registry. !SUBENTRY 1 org.eclipse.core.runtime 2 1 giu 10, 2002 16:35:07.452 !MESSAGE Plug-in descriptor " com.ibm.wswb " not found for  fragment " com.ibm.wswb.nl1 " .  Fragment ignored. !ENTRY org.eclipse.ui 4 4 giu 10, 2002 16:35:10.937 !MESSAGE Unable to restore mru list - no input factory ID. !ENTRY org.eclipse.ui 4 4 giu 10, 2002 16:35:10.947 !MESSAGE Unable to restore mru list - no input factory ID. !ENTRY org.eclipse.ui 4 4 giu 10, 2002 16:35:10.947 !MESSAGE Unable to restore mru list - no input factory ID. No, he means your workbench.xml file == > the file that is saving the MRU list.   The file that is in the .metada ta/.plugins/org.eclipse.ui directory of the  workspace that is causing the error. Note that the .log entires I posted were generated when I had switched locales  to Chinese(PRC). I am still trying to replicate. Knut, can you please look at this for F4. What is the risk of simply removing the log entry? There's no risk in not logging any errors that occur during MRU item  restoration. The MRU item won't be included in the list anyway and we would  silently continue restoring the next MRU item. However, the only errors we log is when the two persisted MRU attributes can't  be read from the memento. This suggests a more fundamental bug somewhere which I would like to find.   The attached workbench.xml is valid and I suspect it doesn't show the problem  (it's 8 days older than the original bug date). Knut, please look at trying to reproduce this with a vanilla F3 build, opening  up different kinds of editors. Eduardo, do you think this could be caused by your change to how editor inputs  are persisted? If the log entry really does describe a real problem, I'm inclined to leave it  in. The only way to get this error message every time you restart is if the MRU  list is written incorrectly every time on shutdown. If an MRU item could not be restored it will also not be written when Eclipse  is shut down again so it will not cause problems the next time Eclipse is started. The MRU items that caused the error must have been from open editors  that are always persisted in the MRU list. It seems unlikely that changes to the editor management would cause this  problem. I can only reproduce this problem by manually editing the workbench.xml and corrupting the factoryID attribute. If the factory ID itself  was not written properly or did not exist you would get a different error message. I haven't seem this message in the log anymore. I don't think it was related to changes done to lazy create editors since MRU  list impl. is very isolated. I even tried to copy the MRU section from the attached workbench.xml in my current workbench and it did work. If IEditorInput.getPersistable returns null there will be an improperly written  MRU item. Need to check whether the IPersistable is null earlier and not write an MRU item at all. Have yet to reproduce this with an editor input that is not persistable. Tod, do you remember what editor you had open that may not have been  persistable? Eduardo, were there any changes since F2 in the editor management that may have  fixed a bug were getPersistable returns null when it shouldn ' t? getPersistable dependes on each editor impl. I am not aware of any fix in the  UI side. Quite likely an OLE editor - I was testing OLE a lot at the time I saw this. Steps to reproduce: -open a file in the CVS repository view -verify that it is in the MRU list in the file menu -restart Eclipse - > you will get the MRU restoration error  This is easy to fix I tried OLE editors (Word) and could not recreate the problem. Fix in org.eclipse.ui.internal.EditorHistory reviewed by LK. Needs review by  second committer. I checked it. The change is just a null check and looks OK. Released fix *** Bug 20810 has been marked as a duplicate of this bug. ***
Platform	StyledText - RTF writer performance improvement build 20020716  RTFWriter.write currently checks if the text segment to write contains characters that need to be escaped ({, }, \). If there is such a character the  entire text segment is written one character at a time. This could be improved by always writing segments from one escaped character to  the next. Performance would be the same if the text has no escaped character and it  should be a lot better if there are escaped characters. Rewrote StyledText.RTFWriter.write(String,int,int) as part of fixing bug 20696. Fixed in > 20020730 *** Bug 32334 has been marked as a duplicate of this bug. ***
Platform	[ExternalTools] Problem after launching an external tool After laucnhing an external tool from within Eclipse, the Progress Dialog  remained open and Eclipse was unusable. Cancelling the progress dialog did nothing (except disable the cancel button). I had to manually kill Eclipse.  Here are the specifics: 1. I registered Dreamweaver as an external tool and set it to use the selected  resource as an argument. 2. Opening documents seemed to work fine yesterday when Dreamweaver was already  running. 3. Opening a document when Dreamweaver was not already running resulted in the  above probelm. The document was opened properly but Eclipse was unusable. Sounds like Dreamweaver remains running even when the last doc is closed, and  Eclipse waits for it.  A workaround would be to launch it via a batch file using " cmd " . In release 2.0.1, you can run a tool in the background. This should solve your  problem. Reopen if not.
JDT	Double-click to select inside brackets no longer works I turned off the bracket highlighting, if that matters. I have the code: ((IContact)element) I place the cursor at the second character position, that is, between the first open bracket and the second open bracket. I double click, expecting " (IContact) element " to be selected, but only " IContact " is selected. 20011115. Still present in build input for build 20020108. If I double click with cursor  betwenn t and ) the " (IContact)element gets selected. *** This bug has been marked as a duplicate of 9151 ***
JDT	conditions view Now that we have conditional breakpoints with AST evalutation, it shouldn't be  to hard to make a conditions view where i can type a complete expression and that is evaluated on every step (live) VAJ had also that window from 3.0 or 3.5 on. It would be very nice to have this also in eclipse:         Expression/condition                      value -------------------------------------------------------------------- | str.indexOf( " johan " )                     |    10                 | -------------------------------------------------------------------- |  (index < 1 & & doIt)                     |    false              | --------------------------------------------------------------------- and ofcourse a nice message when it can't be evaluated because some vars are  unkown. I believe this is a request for a " watch list " , which we are not planning for  the 2.0 release. *** This bug has been marked as a duplicate of 1605 ***
JDT	Refactoring - Comments included into ranges of ASTNodes (1GE693Y) Trailing comments are inculded into the source end for all AstNodes except Expressions. So a statement like   break /* comment */; end right before the ' ; ' not after the break key word    I opt to do nothing for June and 1.0 and we see how much this behaviour affects refactoring. Normally people don't write code like this. And if they do it is very likely that the want to extract the comment too.   See also 1GCU7OH: ITPJCORE:WIN2000 - Break.sourceEnd contains tailing comments NOTES: EG (5/23/2001 11:44:48 AM) not for June moving to inactive. moved to ' active ' PRODUCT VERSION:  109 this is covered by new AST API? If yes please dispose PR No we agreed for the new AST API to include the comment in this siutations  since the user has put it before the ;. However comments after the ; aren't  included.
Platform	Fragment manifest editor removes < requires > tags The fragment manifest editor automagically removes extra XML tags from  the ' fragment.xml ' file. This ensures that the file stays in the correct  format. However, the fragment manifest editor also removes < requires > tags from  the ' fragment.xml ' file, even though < requires > tags can be necessary in some  situations. This problem occurs in the 20011107 build.  - To reproduce this problem, use a wizard to create a new fragment project. - Double-click on the ' fragment.xml ' file to bring up the manifest editor. - Select the source tag at the bottom of the editor. - Add a < requires > statement to the file, and save it. I used: < requires > < import plugin= " org.junit " optional= " true " / > < /requires > - Click on a different tag at the bottom of the screen. Then change back to the  source view of the file. - The < requires > tag will be gone, and the file will be marked as moidified,  even if you did not make any changes (switched views, and switched back). Moving to PDE UI. Check the DTD for fragment.xml - there are not ' requires ' - a fragment cannot specify dependency on other plug-ins. A fragment can only ' see ' plug-ins  specified in the ' requires ' section of the target plug-in. PDE simply brings fragment.xml into proper format. Core needs to clarify the DTD for fragment.xml. We were told that fragments allow anything a plugin.xml allows, including < requires > elements.   The DTD for fragment.xml should reflect this. When this is fixed, PDE should add support for < requires > in fragment.xml.  Note that the test framework needs this support to allow an optional task provided by the Ant plugin (the JUnit task) to refer to a needed jar which is  provided by another plugin (the JUnit plugin).  In this case, we add a fragment to the Ant plugin which simply adds an optional requires on the JUnit plugin. This is also an issue for the optional Xalan task. Reopening. See previous comments. OK, but this is different from we had in 1.0. I checked twice with the Core team and the original design was that fragments could not import plug-ins. PDE will need to be modified to be compatible with this change.  As a side comment, this change makes fragments indistinguishable from plug-ins. Do we need this distinction any more then? It looks to me that with this change fragments are simply plug-ins that plug into other plug-ins. Therefore, we could drop fragments completely and simply have an option to specify target plug-ins (i.e. have a plug-in play a ' fragment ' role). The original problem as described against the 20011107 build appears to be  fixed. Support for a ' requires ' clause in a fragment was added May 10, 2001 (in time  for 1.0).  The current dtd for a fragment is as follows: < !ELEMENT fragment (requires?, runtime?, extension-point*, extension*) > < !ATTLIST fragment   name                CDATA #REQUIRED id                  CDATA #REQUIRED   version             CDATA #REQUIRED provider-name       CDATA #IMPLIED   class               CDATA #IMPLIED plugin-id           CDATA #REQUIRED   plugin-version      CDATA #REQUIRED match               (perfect | equivalent | compatible |  greaterOrEqual) " compatible " >
Platform	How to enable only one primary Unzip Alph 1.00 Start Unzip 1.0.1 and 1.1.0 when Eclipse opens, click Yes, select the chaneg and process them we end up with 3 configured/enable primary features This may be linked to the bug we have where we do not unconfigure older version... *** This bug has been marked as a duplicate of 16502 ***
Platform	Ant classpath refers to old ' xerces.jar ' Build R2.0  In my self-hosting workspace, I noticed that the Ant classpath still referred to ' xerces.jar ' , though it is now partitioned into API/impl pieces. No longer a problem on 20020911.
JDT	Why does Editor use a tab folder instead of sub preference pages F1 The editor uses a tab folder to group different perference options into a set.  Other components (like debugger) use sub perference pages. we do the same for the formatter and builder.  difference is tolerable for 2.0, could revisit later. Reopening for 2.1 consideration This is a more general issue: Compare, Ant, code formatter, compiler, and  editor are using tab folders rather than sub pages. I prefer folders as they make the tree of preference pages better managable. Need for a general  guideline. no action planned
Platform	View will not Size via Pull Down Eclipse Drop: December 19th Stable OS: Solaris 2.7 w/ Sun Recommended Patches HW: Sun Ultra 60 JRE: Sun 1.3.1 Motif: 2.1 CDE: 1.3  To Reproduce: Create Fast View Right-click Title Bar - > Size - > Right Failure Error: Nothing happens at all.  Consistant broken behaior in Linux-Motif. Tod,      This may end up being an SWT defect. Please confirm on your Motif machine. Confirmed on Linux-Motif *** Bug 10974 has been marked as a duplicate of this bug. *** Same behavior noticed in the HP-UX 11.0  Eclipse stable build: 20020214 Motif: 2.1 CDE: 2.1.0 Java(TM) 2 RE, Standard Edition (build 1.3.1.02-011206-02:17) Fixed > 0312.  The Sash now makes itself temporarily traversable whenever it  receives setFocus (), so it can take focus and be moved with the arrow keys. When it loses focus it reverts its traversable resource to false.
JDT	VM names should not be allowed to have slashes If a VM name has a slash, it is not useable in the JRE_CONTAINER. The contianer  uses paths to identify VMs - vmType/vmName. Slashses in the name mess up the path. I got into a situation where the default VM name had slashes, and was assigned  (as a container) to build projects. On each workspace start, the JRE for the project was unresolved, as the name in the path was mangled, and could not be  resolved to a VM. I was always presented with the " choose another JRE " dialog. Fixed in JavaRuntime.generateDetectedVMName() and AddVMDialog JRE name  verification. Any existing VM names that are invlaid will remain invalid until the user changes them (which is OK). Please verify, Joe S. Verified. *** Bug 24573 has been marked as a duplicate of this bug. ***
JDT	Missing resources in packages view build 20011101  When I right click on a project in the packages view the team and replace with menu items have no labels. JDT problem, as they contribute this plugin. File plugin.properties is missing. Suggest you check your build.properties file. Can I use the old plugin.properties file from the 1025 build as a workaround? When I turn on " Show version info " in the package view it doesn't actually show  anything (no version names, no scratched files). works in 20020214 forgot to close
Platform	Team/CVS fails to synchronize moved folder's data The following was done with a brand new build - 20020321 with no old data  hanging around. I have a structure as follows: org.eclipse.core.tests.runtime  - project PluginTesting  - folder containing auxillary test files     plugins.activation.1 plugin.a         plugin.properties         - auxillary test file plugin.xml                - auxillary test file         plugin_a.jar              - auxillary test file plugin_a_external.jar     - auxillary test file       plugin.b < same sort of structure as plugin.a > plugin.c < same sort of structure as plugin.a > plugin.d < same sort of structure as plugin.a > I create a new folder ' plugins ' which is a sibling to plugin.d.  I then select  plugin.a, plugin.b, plugin.c and plugin.d and ' move ' them to the new folder  plugins (so the new structure looks like this: org.eclipse.core.tests.runtime  - project   PluginTesting  - folder containing auxillary test files plugins.activation.1       plugins - new folder (everything is under here now) plugin.a           plugin.properties         - auxillary test file plugin.xml                - auxillary test file           plugin_a.jar              - auxillary test file plugin_a_external.jar     - auxillary test file         plugin.b < same sort of structure as plugin.a > plugin.c < same sort of structure as plugin.a > plugin.d < same sort of structure as plugin.a > I run my test suite successfully.  This verifies that the data has been moved  as the tests would fail otherwise.  Looking at the ' on-disk ' structure verifies  that the move has taken place too. Now - select plugins.activation.1 (parent folder) - right click Team- > Synchronize with Repository - everything looks fine - Commit - reload this project from the repository and I get the initial structure (without the plugins folder)   Further investigation showed I did have new folders: plugins plugins/plugin.a plugins/plugin.b plugins/plugin.c plugins/plugin.d but the folders were empty.  It looked just like the structure before I moved the data.  Jean-Michel tried to reproduce this in his environment but could not. Mike pls retest, if you can't reproduce bug then we'll close. I am unable to reproduce this. It may have been due to the JDT bug which marked  all new non-java files are derived.
JDT	Externalize Strings as Refactoring [actions] I think that the ' Externalize Strings ' currently under the Source menu should  appear under the refactor pop up too. Channing no action planned
Platform	Error in  http://dev.eclipse.org/bugs/bugwritinghelp.html I read over http://dev.eclipse.org/bugs/bugwritinghelp.html The section that reads: " Who will be following up on the bug?   Assigned To: Which engineer should be responsible for fixing this bug? Bugzilla will automatically assign the bug to a default engineer upon  submitting a bug report; the text box exists to allow you to manually assign it to a different engineer. (To see the list of default engineers for each  component, click on the Component link.) Cc: Who else should receive e-mail updates on changes to this bug?  List the full e-mail addresses of other individuals who should receive an e- mail update upon every change to the bug report. You can enter as many e-mail  addresses as you'd like; e-mail addresses must be separated by commas, with no  spaces between the addresses. " is incorrect.  I just spent a long time writing an extensive bug report and  entered a team members email address in the cc field.  When I clicked Commit I got an error that said the name in the cc field is not a valid bugzilla user,  please click back and correct it.  I clicked on my back button and all of the fields were blank, including description, now I have to spend another hour  typing my extensive bug description again.  I am currently using IE 6.0.2. The text now reads:  List the full e-mail addresses of other individuals who should receive an e- mail update upon every change to the bug report. You can enter as many e-mail  addresses as you'd like, separated by spaces or commas, as long as those people  have Bugzilla accounts.
JDT	Progress bars are useless The progress bars in Eclipse, having to do with all actions related to Java and  VCM are not indicating correctly the percent of the action completed. All of the progress bars I've seen in Eclispe will update to usually about a 1/4 of  the way, regardless of the action, then the bar will stop updating while the text continues to update, and then when the action finishes the progress window closes, without the progress bar ever reaching anything past the 50% mark (its  not like the window comes up and down so fast I can't see it, it just never  progressed past 1/4 even if the window sits there chugging). I have confirmed this with others on the news groups that the progress  indicators in almost all aspects of Eclispe are utterly useless as far as actually reporting the current percentage done correctly. Moving to JDT for initial investigation. Looks like this is a duplicate of 10560 which has some usefull information in  it. *** This bug has been marked as a duplicate of 10560 ***
Platform	[JFace] Cannot select root of hierarchy view (1GE92IL) 1. Open some hierarchy like " org.eclipse.swt.Control " in Type Hierarchy. 2. Try to select Control. Result: On my system it is impossible until I select a subtree below root.   Then I can select the Control. Observation: Control has a dotted border around it.  Perhaps it has selection but there is a focus problem. NOTES: MA (5/29/01 10:11:53 AM) Could JFace look at it?  The element has been selected by code (treeviewer.setSelection()) while the viewer was in background. When brought to front the selection is not visible, but seems to be set anyway (and prevents from being selected again)  MA (5/31/01 12:30:14 PM) It has to be something with refresh. When the hierarhcy gets a new input, the changing is not done by changing the input of the tree viewers  but by calling refresh on the viewer. NE (05/31/01 10:33:52 AM)  Seems to work OK the first time the hierarchy view is opened. Try again, selecting different type in packages view (to hide hierarchy view) and choosing Show In Hierarchy.  Reproduce in JDK build on 98, and in VAJ on 2000, with hierarchy view in either top-down ( " type hierarchy " ) or bottom-up ( " supertype hierarchy " ) mode.  NE (05/31/01 12:47:47 PM) SWT bug, encountered due to AbstractTreeViewer reusing items in updateChildren().  See 1GELNIG: SWT:WIN2000 - Tree item selection not shown if same item previously cleared PRODUCT VERSION:  Eclipse 0.110 on jdk Dependent SWT PR fixed in build 117 Tried steps in latest build. Appears that SWT fix is all that was required.
Platform	Problems with segmented source editor (1GEUWLK) 1) Create a new class Bar  2) switch to segmented view 3) paste the following text in the class body:   void foo() { } int bar() { return 0; } boolean foobar() { return true; } 4) select method foo in outliner: everythings OK  5) select method bar Observe: bar includes foo  6) select foobar Observe: includes foo and bar NOTES: EG (6/5/2001 9:25:00 AM) not critical, defer not a very realistic use case PRODUCT VERSION:  118 Reopening for 2.1 consideration There are no plans to move away from the line-based segmented view. *** Bug 37536 has been marked as a duplicate of this bug. ***
JDT	Can't trigger templates beginning with (dollar sign) I entered the following template into the Java Templates preferences page:  name = $NON-NLS-1$ desc = insert $NON-NLS-1$ body = $$NON-NLS-1$$ Although the template page allowed me to enter this template, I could find no  way to trigger its insertion. If I typed ' $N ' and hit Ctrl+Space, it was not  offered as a possible completion. I think that there are two problems here:  1) $ is a valid Java identifier char. It should be permitted in template names. 2) The template page should not allow me to name a template in such a way that  it cannot be triggered bugzilla problems
Platform	DCR - tree and table does not match item when key is typed jkca (5/31/2001 4:03:18 PM)  jre-motif-sdk 115 The Ouliner View does not accept keyboard control under linux.  I was browsing java source and clicked in the Outliner and hit " c " to find a method that started with " c " .  Nothing happened.  I tried other  characters too and still nothing happened. EJP (6/25/01 3:14:03 PM)  Tested 125. It still happens. The navigator does not work as well.   It is likely a SWT problem, ie, the trees on Windows have that by default and (I guess) SWT would have to implement it on motif.   McQ (26/06/2001 9:35:08 AM) - This is a DCR. Native widget behavior is not guaranteed to match   between platforms. SWT DCR - reassigning Not high priority. Moving from Later. FH, want to implement this?  (low priority) Yes, I would like to have this behavior working on Motif. When I get a free time I will look at. Changing title to reflect the actual problem. Grant, since you are working on these widget you might want to fix this, or  close it as wontfix. Fixed for Tree > 0128.  Will not address Table for now since it will soon (after 3.1M5) just be a derivative of the new Tree anyways, so no action will be required to make it  work on Table.  Marking as FIXED in anticipation of this.
JDT	Red square around bracket hides cursor Build 20011101  In the Java editor, the red square that shows matching brackets tends to hide the text cursor. This is confusing as you never know where the character you  press is going to be inserted. If there were a preference, I would disable this feature. Seconded (seems everytime I come with a report, Mr. Gamma has already reported  it :)). in the case we were even faster and have already fixed this. First you can  specify the color of the highlight (light grey is my favorite) or you can disable the feature entirely. Please checkout the latest build.
Platform	[GlobalActions] Tooltip ' Save to another location? should be more consistent with the file menu Save As Tooltip for the tool bar ' Save to Location ' icon should be changed to be  consistent with File menu item, it should say " Save [filename] As " or " Save  Current file As " Minor defect. Consider after higher priority problems are resolved. Reopened to fix Both the Save and Save As buttons should have tooltips that correspond to the  items in the File menu. In general, the tooltip for an toolbar button should be the same as if it were  a menu item (excluding mnemonics). Uses Save and Save As in build > 20030114 Marking as closed.
Platform	[ExternalTools] Missing tool does not stop build Build F1  If you add an external tool with an invalid path to the set of project builders, this will not cause builds to report as failed. The build will  complete, but report one of the following errors, depending on the build type: Auto build: Unexpected exception: see log for detials Reason: see details Details: The tool's file does not exist for the external tool named mytoolname.  Full build/incremental build: Problems occurred building the selecred resource Details: The tool's file does not exist for the external tool named mytoolname.  At the very least, the 3 build types should report the same error. A missing tool file indicates a major configuration problem and should stop the build,  reporting a Build Failed error message. Core plugin will skip builders that are invalid. This is the same behavior for  example if a plugin added a builder, but the plugin can no longer be loaded (i.e someone deleted the plugin dir), the invalid builder is skipped.
Platform	[Key Bindings] Doc on web is out of date for release 2.0 It says Ctrl+(Plus) and Ctrl+(Hyphen) map to next/previous problem in JDT  editor. That is not correct. They do nothing. Ctrl+. and Ctrl+, are the shortcut keys.  We should veriy all the other shortcut keys also. This is correct in the current doc. Sorry, but the doc is listing accelerator keys that are not in use. See my original comment. Ctrl+(Plus) and Ctrl+(Hyphen) are listed in the document that  they will show the next/previous problem in the Java editor. When I try these shortcut keys, they do nothing. The doc needs to be update. Also, someone  should verify all the keys. Clients are refering to this page to write their documentation and therefore  should be kept up-to-date until some ui dialog is available in the workbench to list all the shortcut to action mapping. Hope we will not need the doc once we fix bug 5682. Or we may be able to  generate it automagicly. *** This bug has been marked as a duplicate of 17451 ***
JDT	Error starting Eclipse I got this error when starting eclipse. An error dialog said " Error, see log for details " . I am sorry, I do not know what could have caused this error. I exited eclipse and tried starting again and I did not get the error. So I am just recording this so that you know that it can somehow happen. The only thing I can think of is that my machine crashed 20 minutes ago, but I have been using eclipse ok since then. Log: Mon Oct 15 13:18:01 EDT 2001 2 org.eclipse.ui 2 Problems occurred when invoking code from plug-in: org.eclipse.ui. java.lang.ClassFormatError: org/eclipse/jdt/internal/compiler/parser/Parser (Illegal UTF8 string in constant pool)  at java.lang.ClassLoader.defineClass0(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:496)  at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:117)  at java.net.URLClassLoader.defineClass(URLClassLoader.java:251) at java.net.URLClassLoader.access$300(URLClassLoader.java:69)  at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java(Compiled Code))  at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java(Compiled Code))  at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java(Compiled Code)) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java(Compiled Code)) at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java(Compiled Code)) at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))  at java.lang.ClassLoader.defineClass0(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:496)  at j ava.security.SecureClassLoader.defineClass (SecureClassLoader.java:117) at java.net.URLClassLoader.defineClass(URLClassLoader.java:251)  at java.net.URLClassLoader.access$300(URLClassLoader.java:69) at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java(Compiled  Code)) at java.security.AccessController.doPrivileged(Native Method)  at java.net.URLClassLoader.findClass(URLClassLoader.java(Compiled Code)) at  org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf (PluginClassLoader.java(Compiled Code))  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java(Compiled Code))  at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass (DelegatingURLClassLoader.java(Compiled Code))  at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code)) at org.eclipse.jdt.internal.core.CompilationUnit.generateInfos (CompilationUnit.java:202) at org.eclipse.jdt.internal.core.Openable.buildStructure (Openable.java:61) at org.eclipse.jdt.internal.core.Openable.openWhenClosed (Openable.java:351) at org.eclipse.jdt.internal.core.Openable.open(Openable.java:307)  at org.eclipse.jdt.internal.core.WorkingCopy.open(WorkingCopy.java:214) at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy (CompilationUnit.java:411) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle mentInfo(CompilationUnitDocumentProvider.java:205)  at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect (AbstractDocumentProvider.java:243)  at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput (AbstractTextEditor.java:1007)  at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput (JavaEditor.java:317)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput (CompilationUnitEditor.java:513) at org.eclipse.ui.texteditor.AbstractTextEditor.init (AbstractTextEditor.java:746) at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:442)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:437) at org.eclipse.ui.internal.EditorManager.openInternalEditor (EditorManager.java:490) at org.eclipse.ui.internal.EditorManager.access$5 (EditorManager.java:470) at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:581)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:814)  at org.eclipse.core.runtime.Platform.run(Platform.java:395) at org.eclipse.ui.internal.EditorManager.restoreState (EditorManager.java:535) at org.eclipse.ui.internal.WorkbenchPage.restoreState (WorkbenchPage.java:1117) at org.eclipse.ui.internal.WorkbenchPage. < init > (WorkbenchPage.java:79)  at org.eclipse.ui.internal.WorkbenchWindow.restoreState (WorkbenchWindow.java:730)  at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:634) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:507)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:814)  at org.eclipse.core.runtime.Platform.run(Platform.java:395) at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState (Workbench.java:491) at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:548)  at org.eclipse.ui.internal.Workbench.init(Workbench.java:401) at org.eclipse.ui.internal.Workbench.run(Workbench.java:654)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) This sounds like a corrupted class file scenario. If that was true, everybody  would have seen it. Could you please take a fresh install and see if you can reproduce ? Closing
JDT	Cursor is positioned at the wrong line when selecting a stack frame When the user selects a stack frame, we position the cursor one line below the current line of execution. With the new " highlight current line " feature in the Java editor, this results in two lines being highlighted - the current line and the next line.  Because the user can turn off the Java editor option to highlight the current line, we should still maintain our line highlighting. We just need to position the cursor on the same line. We are simply telling the editor to gotoMarker where the marker only specifies  a line number. AbstractTextEditor#gotoMarker() calls selectAndReveal with the line offset and  line length.  The line length includes the delimiters.  This ends up positioning the cursor on the first character of the next line. *** Bug 11195 has been marked as a duplicate of this bug. *** Re-assigning to JDT UI, as we are not specifying line offests. Fix is either in  java editor or in abstract text editor. the cursor is rendered by StyledText so I don't think the JavaEditor can fix  this. Alternative is to only select the line up to the line terminator (since we have no current line indicator this is a problem) The proposal discussed with Kai is to not show the line highlight when there is  a selection. *** Bug 13019 has been marked as a duplicate of this bug. *** Build F1.
JDT	[Help] NPE with infopop and Packages view Build 2.0 release  The infopop for the packages view does not always open. On further investigation, I noticed that it is silently logging a NPE.  To reproduce: 1) Create a new java project. 2) Inside that project, create a new file called " foo " 3) Click once on " foo " in the packages view to select it 4) Press F1 - the infopop does not open - the NPE is written to the log *** This bug has been marked as a duplicate of 21210 ***
Platform	Images loaded multiple times on startup (1GC32JX) - put a print statement in ImageDescriptor.createImage() - add toString() to URLImageDescriptor and FileImageDescriptor - start Eclipse - many of the images are loaded several times Here are all images loaded on startup, sorted by name and location:  FileImageDescriptor(class com.ibm.jface.action.StatusLine, images/stop.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.dt.ui/icons/basic/view16/breakpoint_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.dt.ui/icons/basic/view16/console_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.dt.ui/icons/basic/view16/debug_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.dt.ui/icons/basic/view16/process_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.dt.ui/icons/basic/view16/variable_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.dt.ui/icons/basic/view16/variable_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.multipageexamples.multipageeditorexample/icons/copy.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.multipageexamples.multipageeditorexample/icons/copy.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.multipageexamples.multipageeditorexample/icons/copy.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.readmetool/icons/basic/ctool16/openbrwsr.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.readmetool/icons/basic/obj16/editor.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.readmetool/icons/basic/obj16/newreadme_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.examples.ui.readmetool/icons/basic/view16/sections.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.help.workbench/icons/view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.scripting/icons/full/ctool16/scriptconsole.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/basic_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/close_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/close_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/close_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/copy_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/copy_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/cut_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/cut_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/copy_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/copy_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/cut_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/cut_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/new_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/new_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/paste_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/paste_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/redo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/redo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/search_src.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/search_src.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/undo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/disabled/undo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/export_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/export_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/export_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/basic_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/copy_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/copy_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/cut_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/cut_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/new_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/new_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/paste_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/paste_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/redo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/redo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basi c/ctool16/grey/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/search_src.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/search_src.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/undo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/grey/undo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/import_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/import_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/import_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/new_page.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/new_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/new_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/new_wnd.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/paste_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/paste_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/redo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/redo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/save_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveall_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/saveas_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/search_src.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/search_src.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/undo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/ctool16/undo_edit.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/addtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/close_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/close_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/close_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/close_view.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/defaults_ps.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/addtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/remtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/selected_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/showchild_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/showerr_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/showtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/disabled/showwarn_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/filter_ps.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/addtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/remtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/selected_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/showchild_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/showerr_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/showtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/grey/showwarn_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/remtsk_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/selected_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/showchild_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/showcomplete_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/tree_mode.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/view_menu.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/view_menu.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/elcl16/view_menu.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/error_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/fldr_obj.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/incomplete_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/info_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/lprio_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/newsol_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/prj_obj.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/prod.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/task_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/task_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/obj16/warn_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/prod/splash_prod.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/prod/welcome_prod.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/bkmrk_nav.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/filenav_nav.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/filenav_nav.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/outline_co.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/outline_co.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/prop_ps.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/prop_ps.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/tasks_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.eclipse.ui/icons/basic/view16/tasks_tsk.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.itp.search/icons/full/ctool16/search.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.itp.search/icons/full/ctool16/search.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.itp.search/icons/full/view16/searchres.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/java_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/java_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/java_pers.gif) URLImageDescriptor(ecl ipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/java_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/java_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/java_pers.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/ctool16/newjprj_wiz.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/obj16/jcu_obj.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/view16/class_hi.gif) URLImageDescriptor(eclipse:/plugin/com.ibm.jdt.ui/icons/full/view16/package.gif)   NOTES: PRODUCT VERSION: 0.043+ Can you try this test again and see if we are still loading multiple images  (make sure you have latest UI code loaded). If so, see if you can find out why. Build: 20020115 (Using most recent UI as of 11:00 AM, Jan. 22, 2002)  Multiple images are still being loaded. The following is the full list of images loaded, in the order they are loaded:  URLImageDescriptor(file:/D:/eclipse/plugins/org.eclipse.sdk/prod.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/new_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/save_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/saveas_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/saveall_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/print_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/import_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/export_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/undo_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/redo_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/cut_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/copy_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/paste_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/delete_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/search_src.gif) URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/etool16/new_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dtool16/new_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/etool16/save_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dtool16/save_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/etool16/saveas_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dtool16/saveas_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/etool16/print_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dtool16/print_edit.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/etool16/pin_editor.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/pin_editor.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dtool16/pin_editor.gif) FileImageDescriptor(location=class org.eclipse.jface.action.StatusLine,  name=images/stop.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/eview16/new_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/new_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/obj16/welcome_editor.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/filenav_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/outline_co.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/tasks_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/obj16/welcome_banner.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/obj16/welcome_item.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/close_view.gif) URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/elcl16/backward_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/backward_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dlcl16/backward_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/elcl16/forward_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/forward_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dlcl16/forward_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/elcl16/up_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/up_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dlcl16/up_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/view_menu.gif) URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/elcl16/addtsk_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/addtsk_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dlcl16/addtsk_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/elcl16/remtsk_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/remtsk_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/dlcl16/remtsk_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/clcl16/filter_ps.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/newfolder_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/ctool16/newfile_wiz.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/bkmrk_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/filenav_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/outline_co.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/prop_ps.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/tasks_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.search_1.0.0/icons/full/ctool16/search.gif) URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) Here is a list of the duplicated images:  URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/tasks_tsk.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/filenav_nav.gif) URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/outline_co.gif)  In particular, jperspective.gif and resource_persp.gif are both loaded 6 to 7 times. The others are each loaded twice. The following image is loaded once for the fast view and six times as the  Perspectives- > Open menu is refreshed as Eclipse starts. The first five times,  the image is disposed, so there is no resource leakage. However, the loading of the image so many times is innefficient. Since the fast view bar and the  Perspectives menu are so unrelated, there is no practical way for them to share an image cache.  URLImageDescriptor (platform:/plugin/org.eclipse.jdt.ui_1.0.0/icons/full/cview16/jperspective.gif)    The following image is also loaded six times as the Perspectives- > Open menu is  refreshed as Eclipse starts. As above, the first five times, the image is disposed.  URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/resource_persp.gif)    The following images are loaded twice each for similar reasons, and all are disposed properly.  URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/tasks_tsk.gif)  URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/filenav_nav.gif)  URLImageDescriptor (platform:/plugin/org.eclipse.ui_2.0.0/icons/full/cview16/outline_co.gif)   Basically, this problem leads to some inefficiency, but no resource leakage. Should fix as part of performance work planned for 2.0. For whomever will be doing the optimize, the main reason for these images to be  loaded so many times is because of the menu bar being told to update 6-7 times even before the workbench is opened. Reassigned to Kevin for performance work. This is an important 2.0 defect. - Reduced the number of times a menu is updated on startup from 7+ to 2. The  update is done when the menus are created and when the startup finishes. This is a performance improvement but does not reduce the number of opened images  since the old image is disposed when a new one is created. - Cached part icons using reference count so one icon is shared for all  instances of a part. A second instance of this image is still created for the Menu.
Platform	NoSuchMethodError when showing views in run-time workbench I have been getting NoSuchMethodErrors when showing views in a self-hosted  workbench. Here is a representative stack trace: !ENTRY org.eclipse.ui 2 2 Mon May 06 16:20:21 EDT 2002 !MESSAGE Problems occurred when invoking code from plug-in: org.eclipse.ui. !STACK java.lang.NoSuchMethodError: org.eclipse.ui.IWorkbench: method getDecoratorManager()Lorg/eclipse/jface/viewers/ILabelDecorator; not found  at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl (PackageExplorerPart.java:263) at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:126)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:791)  at org.eclipse.core.runtime.Platform.run(Platform.java:411) at org.eclipse.ui.internal.PartPane.createChildControl (PartPane.java:124) at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:166)  at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:179) at org.eclipse.ui.internal.PartTabFolder.createPartTab (PartTabFolder.java:245) at org.eclipse.ui.internal.PartTabFolder.createControl (PartTabFolder.java:217) at org.eclipse.ui.internal.PartSashContainer.createControl (PartSashContainer.java:177) at org.eclipse.ui.internal.PerspectivePresentation.activate (PerspectivePresentation.java:94) at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:619)  at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2027)  at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective (WorkbenchPage.java:522)  at org.eclipse.ui.internal.WorkbenchPage.access$11 (WorkbenchPage.java:506)  at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2080) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2078)  at org.eclipse.ui.internal.ChangeToPerspectiveMenu.run (ChangeToPerspectiveMenu.java:37)  at org.eclipse.ui.actions.PerspectiveMenu.run(PerspectiveMenu.java:305) at org.eclipse.ui.actions.PerspectiveMenu$2.widgetSelected (PerspectiveMenu.java:93) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1048)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1031) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:733) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:16) Build: 20020502 This is due to the decorator manager changes Tod has made, and will be fixed up  in tomorrow's build.  To avoid them, load JDT from source.
Platform	Table.getItem(Point) throws ArrayIndexOutOfBounds Run the following code and you will get the exception. Seems like a bug in GTK that we need to work around. Even though the point is outside the Table, OS.gtk_clist_get_selection_info returns 1 and the value for row[0] is a negative number.  public static void main(String[] args) {  Display display = new Display(); Shell shell = new Shell(display);  shell.setLayout(new FillLayout()); final Table table = new Table(shell, SWT.BORDER);  for (int i = 0; i < 20; i++) {   TableItem item = new TableItem(table, SWT.NONE); item.setText( " item " + i);  } shell.open();  table.getItem(new Point(-1000, -1000)); while (!shell.isDisposed()) {   if (!display.readAndDispatch()) display.sleep();  } display.dispose(); } We could just detect the case and return null.  I would like to have this fixed  before I release my DND code because from DND, Table.getItem(Point) gets called a lot. Fixed > 20020903.
JDT	Large # of projects lock essential operations in the Workspace With a large number (150-200) of projects in the workspace, some essential  operations ( " Open type to hierarchy " , " debug step " , " switch perspective " , etc.)  slow down to 5-10 minutes for a single operation to complete. At this point the state of the workbench is not useable and it is not always possible to predict  which operation will cause the wb to lock-up. This is reproducible on all recent " stable " levels of Eclipse 2.  Eclipse V2 - Usability/Performance Comparision Machine Details Table  Name                 Speed Memory Operating System Pavan K Immaneni 550 MHz 576 MB Win NT (SP 5) Gary Mazo(Home)         1.3 GHz 392 MB Win 2000 Kent Hawley(Work) 850 MHz 512 MB Win 2000    Operations Table No Operation                                     Pavan      Kent(H)   Gary(H) ---------------------------------------------------------------------------- 1  Bring up development workbench          25-30 min  6-7 min   3-4 min 2  Bring down workbench                          1-2 min    1 min     Fast 3  Opening an editor on a Java file          3-4 min    Fast      Fast 4  Opening plus-signs in Packages view          2 min      Fast      Fast 5  Open Type to Hierarchy                  20-25 min  4-5 min   4 min 6  Go to Type                                  25-30 min            8 sec 7  Go to Package                          25-30 min            2.5 min 8  Change preferncs(eg.Eclipse Home variables)   35 min     9-10 min  n/a 9  Change the JRE from JDK1.3 to JDK1.4          45 min     10 min    n/a 10 Re-build All                                  20-25 min  8-9 min   3 min 11 WB Debug start-up < 1min 12 Debug step                                      8-10 min  5-6 min Fixed with latest changes in JavaModel caching strategy (for package fragments).
Platform	FTP: Using site explorer and syncing results in many connections The site explorer uses the IRemoteTargetResource API to fetch info from the  server by calling getSize() and getLastModified(). Each invokation results in a connection. There is really no simple way around this with the API the way it  is. Possible solutions include:\ 1. Make the API say that a IRemoteTargetResource provides a snapshot of the  remote resource at the time the handle was created. This is how CVS remote resources work but is probably not what we want for targets.  2. Add Target API that will execute a runnable within a single connection. The FTPTargetProvider has such a method already. However, it is not clear that this  will help us in all cases (see below). 3. Add special handling in TargetProviders (FTP and/or DAV) to leave  connections open for a little while in case other commands come in right away. I vote for 2 since the FTP provider already has this but the best solution also  depends on how DAV works and how the site exploror is structured (i.e. solution 2 may still open a connection per level whereas solution 3 would allow the  reuse of the currently open connection) I have added some simple caching to FTPRemoteTargetResource which makes the  site explorer usable. However, multiple connections in the site explorer may still be an issue for DAV and for fetching of multiple levels. The same problem occurs during sychronization. I have added option 2 above to the TargetProvider API and implemented it for  FTP. This reduces the number of connections for a sychronize. (Correcting milestone to F2) In addition the site code has been optimized to only fetch members once per directory and cache the results for later use.
Platform	DCR - Need to support Mac command key in SWT Here is the plan.  We need to add a new SWT constant, SWT.COMMAND and possibly  new API to Display to control how this SWT.COMMAND is mapped on platforms that do and do not have this key (read on).  The API in Display is still under  consideration. 1) On non-Mac platforms (that typically only have 3 modifier keys SWT.ALT,  SWT.CONTROL, SWT.SHIFT), for now we map this key to SWT.CONTROL.  Note that SWT.COMMAND must have a different value from SWT.CONTROL (can't be assigned  dynamically) because an app could get this value and write it out on one platform and read it back on another.  2) On the Mac, SWT.COMMAND maps to the Apple command key.  All code that attempts to map SWT.CONTROL to SWT.COMMAND needs to be deleted or rewritten.   When a Mac user presses Control, he will get control.  When he presses Command, he will get command.  NOTE: This means that for a short time, until the mapping API in Display is defined, Eclipse will look stupid on the Mac (it will no longer use the Command  key for Cut/Copy/Paste) and will not look like a good Mac app.  That's OK for  now because we are not updating the drop on the web page. Comments? I have already added SWT.COMMAND so that we can experiment but not released any  code that uses it. Yes, let's do this! The only place where the mapping between Control and Command occurs is in MenuItem.setAccelerator(int menu, short index, int accelerator) and in MacEvent.getStateMask(). I have the code ready for Windows and Motif.  I'm about to do GTK.  Then I will  release them.  At that time SSQ should do Photon. Code released on Windows and Motif. Code released on GTK. Ok, the changes to automatically map SWT.COMMAND to SWT.CONTROL break  StyledText.  These changes need to come out or be disabled by the yet to be determined " API in display " before Tuesday.  SSQ to to nothing on Photon.  SN  to temporarily disable the free mapping on the other platforms. The changes have been removed from Windows, GTK and Motif.  The constant  remains.  Obviously, the automatic mapping strategy will not work.  I believe the only strategy that will work would be one where SWT.COMMAND has the same  value as SWT.CONTROL when the mapping flag is set. From now on, I will experiment with Windows and the Mac. Ok, the new idea is to add 4 new masks, SWT.MOD1, SWT.MOD2, SWT.MOD3 and  SWT.MOD4 in addition to the new SWT.COMMAND.  Programs that want to use the primary modifier for the platform use SWT.MOD1 (it's CONTROL on Windows and  COMMAND on the Mac).  Programs that need to ensure that a certain modifier is pressed look for the modifier (ie. SWT.CONTROL is the control key on all  platforms). The emulated table and tree use MOD1 and MOD2 so they work properly on the Mac  and Motif.  I have not touched StyledText because I'm not sure what the right  thing is.  Andre, you have a better perspective on this. So, there is still no automatic mapping strategy either global or local because  I'm not sure how one would work.  I believe the new constants are orthagonal.  I have released code on the Mac that get's rid of the " free mapping CONTROL to  COMMAND " and fixed the keyboard to be the same as the other platforms.  The Eclipse menus look funny as expected and the hot keys are Ctr+S instead of  Command+S. This PR is still not closed. Ok, new masks have been added to represent all future key modifiers, keys and  mouse masks.  They should be used instead of expressions like " SWT.ALT |  SWT.SHIFT | SWT.CTRL | SWT.COMMAND " (use SWT.MODIFIER_MASK instead).  In  addition, they can be used to extract portions of an accelerator. (An accelerators is an int made up by ORing modifiers and keys.  Once the ORing has  happened and you have only the int, there used to be no way to get the parts back out again).  Here are the new masks are: SWT.KEY_MASK SWT.KEYCODE_BIT SWT.MOUSE_MASK SWT.MODIFIER_MASK SWT.KEYCODE_BIT has been added so an application can distinguish a keyCode from  a character. Lynne, can you fix StyledText to use the new masks?  I am going to fix the  emulated tree and table.  Let me know if there is a problem.  Once this is done, I'm going to close this PR. changed StyledText. This has been fixed for a while.
JDT	Resource copy should not occur as soon as one source folder overlap the binary output Build 20011115 (but this was already wrong in 0.9)  If a project has multiple source folders, including one coincidating with the output location, then automatic resource copying is occurring for all source  folders but the coincidating one. In the end, the coincidating source folder will have all resources from other  source folders be copied into it, which is introducing confusion. The resource copy semantics should never copy resources in case any of the  source folder is coincidating with the output location. Fixed
JDT	Quick fix should consider keywords when doing spell correction for example I type " retrun " and would have expected that quick fix will propose " return " this is too hard. The problem decription is for a completly different issue,  like unknown type reference. To offer return for a unknown type reference would look silly when e.g. in a cast statement. To detect that changing to ' return ' would result in good code it too hard.
Platform	Random decoration order is not ideal Icons in the navigator which are decorated by the CVs decorator are done so in seemingly random order.It would be better if they were decorated in a consistent order. With new performance improvements in the decorator, it may be less noticeable now. I actually just spoke with Nick about this.    See #10526. Also note, if our sync info support was faster we may not need to do decorators  in background thread, although to be a good citizen we should anyway. They are now decorated in the order in which they are asked for. (fixed)
Platform	[JFace] Introduce ToolBarDropDownMenuManager From RH: IMenuCreator is hard to use and is improperly used.  I am suprised at how different and inconsistent it is to drop-down a menu from an Action in the  Toolbar.  For Menus, it is so easy.  I just take a MenuManager and add it to another MenuManager.  What could be easier?  I would deprecate all of this stuff: 1) IAction#AS_DROP_DOWN_MENU - this doesn't even make sense if the Action is in  a menu.  A cascading menu cannot be selected. This style is Toolbar specific. 2) IMenuCreator - too difficult to implement.  Alternative proprosed below.  JFace should provide a ToolbarDropDownMenuManager, which is very similar to a MenuManager, but it knows how to fill a Toolbar properly. I just new one, and  add it to a ToolbarManager. This class should *optionally* take an IAction that would be associated with  clicking on the ToolItem. For example, the NewDropDown will open the new dialog if you click on it.  But what if I have no default action, and I *ALWAYS* want  to drop-down the menu.  This is currently very hard to do as well.  It requires copying code. Related bug report [Bug 25837] IMenuCreator.dispose() is never called. ------- Additional Comment #8 From Joseph Khalil 2002-11-10 03:11 -------  I have an opinion in IMenuCreator... i really hate it coz the problem is solved in MenuManager by adding a  MenuManager to another MenuManager so we can get the DROP_DOWN menu.. we can make a similar solution for a toolbar by making some modification in  MenuManager Since a MenuManager is a IContributionItem  we can make the MenuManager takes an IAction in its constructor. so the Text is taken directly from the IAction instead of the text taken in its  constructor now.. also the image can be taken from the IAction so the sub menu can have image not text only as now.. note that the run() method of IAction is ignored in the sub menu case.. now what about toolBar case.. when you want to add a toolItem with DROP_DOWN menu , you add a MenuManager with it's IAction , so the image is taken from the IAction, when you click on  it the run() method runs , when you click the arrow the MenuManager shows its menu (that contains the MenuManager  child IContribution Items )  I guess this will be enough and consistent... There are no plans for the UI team to work on this defect until higher priority  items are addressed. If you are interested in working on this defect please let us know on the platform-ui-dev mailing list. There are currently no plans to work on this feature
Platform	CVS Share Project wizard: Relative repository paths ok? 20020521  I set the repository path to ' home/eclipse ' . When connecting, an error dialog shows up, ' Path must be absolute ' Couldn't this be validated already in the wizard? I would prefer not to do this because it may accidentally disallow valid locations on some platforms. For example, on Windows the repository path format looks like ' D:\cvsroot ' or ' D:/cvsroot ' , on Unix the repository path looks like ' /home/eclipse ' , etc. Also, we don't know beforehand what type of server the user is connecting to - what's valid for one type of server is not valid for another. ok, didn't know this. closing since we appear in agreement its how it must be
Platform	[CVS Sync View] Override and Update/Commit does not prompt for verification The actions to force update and commit to/from a CVS repository do not pop up  a confirmation dialog warning the user that they are about to overwrite changes.  Eclipse's platform convention is to warn the user when they are about to  perform an action which will lose data. I'm not sure if its an Eclipse convention, rather something that the desktop  does in a number of places. Unfortunately these confirmations generally don't work -- people get used to  them, anticipate them, and answer " OK " before even considering the question.   Its only once the operation is in progress that they realize they didn't mean  to do it. For VCM we generally don't prompt (e.g. " Update " doesn ' t).  In the case  of " Override and Update " we don't prompt if you have local changes, and should  to be consistent. Note that since Commit prompts for commit comment it wouldn't require a  confirmation. WORK ITEM: prompt on " Override and Update " if you have local changes. Fix released to HEAD
Platform	[Properties View] Copying category has no effect build I20021105  - copy some text into the clipboard (from anywhere) - select a resource in the Navigator - in the Properties view, select the Info category - choose Copy - paste the text somewhere - it's the old text  Either Copy should be disabled when a category is selected, or it should copy the category name. *** This bug has been marked as a duplicate of 19103 ***
JDT	Option to show return type in outline view there is a user request to show return types in outline view. We should provide this as a preference setting. increased priority in 20020305 for outliner > 20020305 in all other java views
Platform	Exception when creating a ToolItem with a null image in Linux < Note by hiromi (Hagiwara, Hiromi), 2001/10/18 07:09:44, seq: 5 rel: 0   action: note > We in Yamato investigated this problem, and the following point is found:  It is possible to set an image for ToolItem, but SWT for Linux seems to handle the image with the different way from SWT for Windows does. When ToolItem is created without image, it causes exception because it tries to do      new Image(display, image,...); with image = null. < For the details > There are 3 ToolItems, which are a color-button and 2 dropdowns, on the toolbar of Colors view. Only the color-button set the current selected color as Image to ToolItem with setImage() call. Other 2 dropdown ToolItems have no image settings. In this situation, Colors is displayed without any problems. But the reported error occurs on Linux at showing Colors. This seems to be caused because no Image is set to ToolItem. For instance, in updateImages() method in ToolItem for Windows returns without any processing to update when no image is set to ToolItem. So ToolItem for Linus should have also such a consideration in the case. (We added Images to dropdown ToolItmes too as a trial and confirmed that Colors is displayed without errors.) Can you reduce this to a small snippet that shows the problem?  I have one  pasted below that I tried to duplicate the problem with but couldn ' t.  Looking  at the current state of swt, I don't see anywhere in Motif's ToolItem that an  Image gets created without first checking for a null value.  Are you using an old SWT?  Test snippet follows:  import org.eclipse.swt.*; import org.eclipse.swt.widgets.*;  public class ToolItemsWithNoImage { public static void main (String args[]) { Display display = new Display ();   Shell shell = new Shell (display); ToolBar bar = new ToolBar(shell,SWT.NONE);   bar.setSize(100,100); new ToolItem(bar,SWT.NONE).setImage(null);; new ToolItem(bar,SWT.DROP_DOWN).setImage(null);;   new ToolItem(bar,SWT.DROP_DOWN).setImage(null);; shell.open ();   while (!shell.isDisposed ()) { if (!display.readAndDispatch ()) display.sleep ();   } display.dispose ();  } } Additional Q: You are using Motif right, not GTK?  I ask because the OS field  of the bugzilla report is vague. Sorry- Motif is correct. In your sample program, setImage() is called for toolitems defined as DROP_DOWN:     new ToolItem(bar,SWT.DROP_DOWN).setImage(null);; new ToolItem(bar,SWT.DROP_DOWN).setImage(null);;  When we investigated this problem before, we found that the problem did not occur if setImage() was called for toolitem defined as DROP_DOWN. So if the sample is changed so that no setImage() is called for DROP_DOWN type toolitem like this:     new ToolItem(bar,SWT.NONE).setImage(null);; new ToolItem(bar,SWT.DROP_DOWN);;    new ToolItem(bar,SWT.DROP_DOWN);; you will also reproduce the problem on your environment.  For those DROP_DOWN type of toolitems, image does not have any rolls because it shows a drop-down instead of normal button on a toolbar. SWT for Windows seems to manage it and there is no problem on Windows environment even though no setImage() is called for DROP_DOWN. toolitem. But SWT for Linux will handle it with another way... After removing the two setImage(...) invocations as directed I still cannot  reproduce the problem in swt v2023.  I notice that this PR starts with a note dated October 18; are you using swt v1.0?  If so then this problem has been  fixed in the current 2.0 stream. Below is the snippet that I ran the second time.  Let me know whether the  snippet needs a change in order to break, or if you're running an old swt.  import org.eclipse.swt.*; import org.eclipse.swt.widgets.*;  public class ToolItemWithNoImage { public static void main (String args[]) { Display display = new Display ();   Shell shell = new Shell (display); ToolBar bar = new ToolBar(shell,SWT.NONE);   bar.setSize(100,100); new ToolItem(bar,SWT.NONE).setImage(null); new ToolItem(bar,SWT.DROP_DOWN);   new ToolItem(bar,SWT.DROP_DOWN); shell.open ();   while (!shell.isDisposed ()) { if (!display.readAndDispatch ()) display.sleep ();   } display.dispose ();  } } Reproduced in 2.0 stream.  Fixed > 0226 by adding null check.
JDT	Error written to transcript after javadoc generated I am not sure if this is related but just after I had generated some javadoc  got an error to the coNsole !MESSAGE Unable to restore editor - cannot instantiate input element: org.eclipse.ui.part.FileEditorInputFactory I had just generated javadoc and I was trying to invoke it from the Resources View using F1. However doing the same steps does not replicate this Perhaps the Javadoc support is not closing the file immediately, and  finalization eventually closes it? should investigate, check whether we close the stream properly. Javadoc wizard does not open any streams (it's the doclet, but that's not our  code). I checked all the Javadoc wizard code for streams, everything ok.  closing. please reopen i f you have it reproducable. Cannot reproduce in 20020529 changed milestone from F1 to F2
JDT	Illegal references to Breakpoints view WatchpointAction and ExceptionAction both have an illegal reference to the  BreakpointsView. Fixed. Please verify. Verified.
Platform	Property page title drawn incorrectly? (1GEAH4C) - select a resource and choose Properties from pop-up menu - notice that the page titles are drawn with a light blue " IBM gradient " , with a dark line near the bottom,  followed by a light line again Is this as it should be?  NOTES: PRODUCT VERSION: 110 JDK No longer an issue.
JDT	JavaModelException after renaming method 20020228  I renamed a method and the parent type was showing in the type hierarchy. 4 org.eclipse.jdt.ui 1 Internal Error Java Model Exception: Java Model Status [createRetryQueryWithNoWorkingDirectory does not exist.]  at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException (JavaElement.java:452)  at org.eclipse.jdt.internal.core.JavaElement.openHierarchy (JavaElement.java:481)  at org.eclipse.jdt.internal.core.JavaElement.getElementInfo (JavaElement.java:269)  at org.eclipse.jdt.internal.core.SourceMethod.isConstructor (SourceMethod.java:133)  at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getMethodLabel (JavaElementLabels.java:339) at  org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getElementLabel (JavaElementLabels.java:292)  at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLabels.getElementLabel (JavaElementLabels.java:272) at  org.eclipse.jdt.internal.ui.viewsupport.StatusBarUpdater.formatJavaElementMessag e(StatusBarUpdater.java:76)  at org.eclipse.jdt.internal.ui.viewsupport.StatusBarUpdater.formatMessage (StatusBarUpdater.java:66) at  org.eclipse.jdt.internal.ui.viewsupport.StatusBarUpdater.selectionChanged (StatusBarUpdater.java:51)  at org.eclipse.jdt.internal.ui.typehierarchy.SelectionProviderMediator.fireSelectio nChanged(SelectionProviderMediator.java:105) at  org.eclipse.jdt.internal.ui.typehierarchy.SelectionProviderMediator.propagateFoc usChanged(SelectionProviderMediator.java:94)  at org.eclipse.jdt.internal.ui.typehierarchy.SelectionProviderMediator.doFocusChang ed(SelectionProviderMediator.java:78) at  org.eclipse.jdt.internal.ui.typehierarchy.SelectionProviderMediator.access$1 (SelectionProviderMediator.java:75)  at org.eclipse.jdt.internal.ui.typehierarchy.SelectionProviderMediator$InternalList ener.focusGained(SelectionProviderMediator.java:39) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:100) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)  at org.eclipse.swt.widgets.Control.WM_SETFOCUS(Control.java:3694) at org.eclipse.swt.widgets.Table.WM_SETFOCUS(Table.java:2252)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2710) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1806)  at org.eclipse.swt.internal.win32.OS.SetFocus(Native Method) at org.eclipse.swt.widgets.Control.forceFocus(Control.java:572)  at org.eclipse.swt.widgets.Decorations.restoreFocus (Decorations.java:608)  at org.eclipse.swt.widgets.Decorations.WM_ACTIVATE (Decorations.java:1255)  at org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:962) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2652)  at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1225) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1806)  at org.eclipse.swt.internal.win32.OS.DestroyWindow(Native Method) at org.eclipse.swt.widgets.Control.destroyWidget(Control.java:485)  at org.eclipse.swt.widgets.Widget.dispose(Widget.java:356) at org.eclipse.swt.widgets.Shell.dispose(Shell.java:402)  at org.eclipse.jface.window.Window.close(Window.java:220) at org.eclipse.jface.wizard.WizardDialog.hardClose (WizardDialog.java:625) at org.eclipse.jface.wizard.WizardDialog.finishPressed (WizardDialog.java:579) at org.eclipse.jface.wizard.WizardDialog.buttonPressed (WizardDialog.java:311) at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:363)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:538) at org.eclipse.jface.window.Window.open(Window.java:525)  at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate (RefactoringStarter.java:78) at  org.eclipse.jdt.internal.ui.refactoring.RefactoringSupportFactory$RenameSupport. rename(RefactoringSupportFactory.java:73)  at org.eclipse.jdt.internal.ui.reorg.RenameAction.run (RenameAction.java:37)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:452) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788) at org.eclipse.ui.internal.Workbench.run(Workbench.java:771)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) JavaElementLabels.getMethodLabel logs all JavaModelException. Since the type  hierarchy is not reconciled the status updater code has to handle the NotPresentException, e.g. show " Deleted " and only use information contained in  the handle. fixed > 20020305
Platform	RichText: Ctrl+ < aChar > while caps lock is on results in bogus character (1FTF0SC) When caps lock is on and I press ctrl + some key (ie. ctrl-s to save the compilation unit) an invisible character is inserted in the CU. This results in the method not being saved and in a subsequent compilation error (if you  use the mouse to save and build). SWT on X should treat CTRL input the same whether it's caps locked or not.  NOTES: SN (4/17/00 10:41:20 AM)  Can you confirm that the native control is doing this? KR (4/18/00 1:31:52 PM)  Does Motif have a native RichEdit? The SWT Windows RichEdit has the same behavior whether caps lock is on or not.  KH (4/18/00 6:48:34 PM) Motif does not have a native RichEdit.  SN (4/19/00 10:12:51 AM) I didn't say anything about " RichText " on Motif.  I asked if the native control,  (ie. the normal text widget), is inserting the control character or if JFace is doing it.  It may still resolve into an SWT problem.  If the native control lets  you embed control characters, this is platform behavior. I seem to remember that accel keys on Motif are case sensitive and that this  is the correct Motif behavior. PRODUCT VERSION: SWT 0.40 p atch 1 (LF405) RichText no longer supported
JDT	1.4 - target is now 1.2 (1GHW0DF) When moving to 1.4 (http://java.sun.com/j2se/1.4/compatibility.html)  9.As of J2SDK 1.4.0, the javac bytecode compiler uses " -target 1.2 " by default as opposed to the previous " -target 1.1 " behavior. See the reference page for the javac      compiler for descriptions of these behaviors. One of the changes involved in targeting 1.2 is that the compiler no longer generates and inserts method declarations into class files when the class inherits unimplemented methods from interfaces. These inserted methods, like all other non-private methods, are included in the default serialVersionUID computation. As a result, if you define an abstract serializable class which directly implements an interface but does not implement one or more of its      methods, then its default serialVersionUID value will vary depending on whether it is compiled with the J2SDK 1.4 version of javac or a previous javac. For background information on these methods inserted by earlier versions of javac, see bug 4043008.   NOTES: Once we have a major flag 1.4 PRODUCT VERSION: 0.9 Deferring, it was actually not necessary to reach 1.4 JCK compliance. Fixed. Reopened. The fix doesn't work.  First, it should only not generate default abstract when -target is 1.2 (I fixed this one).  Also, lookups need to be tweaked (likely also on the codeassist inference side) so as to walk interfaces in parallel with types.  e.g. The following must compile ok once in -target 1.2 mode. public class X {   public static void main(String[] arguments) {   C c = new C() { public void doSomething(){     System.out.println( " SUCCESS " );    } };   c.doSomething(); } } interface I {  void doSomething(); }  abstract class C implements I { } Proposed fix for lookups:  [package org.eclipse.jdt.internal.compiler.lookup; /*  * (c) Copyright IBM Corp. 2000, 2001. * All Rights Reserved.  */ import org.eclipse.jdt.internal.compiler.ast.*; import org.eclipse.jdt.internal.compiler.codegen.*; import org.eclipse.jdt.internal.compiler.impl.CompilerOptions; import org.eclipse.jdt.internal.compiler.problem.*; import org.eclipse.jdt.internal.compiler.util.*;  public abstract class Scope implements   BaseTypes, BindingIds,   CompilerModifiers, ProblemReasons,   TagBits, TypeConstants,   TypeIds { public Scope parent;  public int kind; public final static int BLOCK_SCOPE = 1;  public final static int METHOD_SCOPE = 2; public final static int CLASS_SCOPE = 3;  public final static int COMPILATION_UNIT_SCOPE = 4; protected Scope(int kind, Scope parent) {   this.kind = kind; this.parent = parent;  } public abstract ProblemReporter problemReporter();   // Internal use only protected final boolean areParametersAssignable(TypeBinding[] parameters, TypeBinding[] arguments) { if (parameters == arguments)    return true; int length = parameters.length;   if (length != arguments.length) return false;    for (int i = 0; i < length; i++)    if (parameters[i] != arguments[i]) if (!arguments[i].isCompatibleWith(parameters [i])) return false;   return true; }   /* Answer true if the left type can be assigned to right */  public static boolean areTypesCompatible(TypeBinding left, TypeBinding right) {   return left.isCompatibleWith(right); }   /* Answer an int describing the relationship between the given types. *  *   NotRelated *   EqualOrMoreSpecific : left is compatible with right  *   MoreGeneric : right is compatible with left */  public static int compareTypes(TypeBinding left, TypeBinding right) { if (areTypesCompatible(left, right))    return EqualOrMoreSpecific; if (areTypesCompatible(right, left))    return MoreGeneric; return NotRelated;  } /* Answer an int describing the relationship between the given type and  unchecked exceptions. *  *  NotRelated *  EqualOrMoreSpecific : type is known for sure to be an unchecked  exception type *  MoreGeneric : type is a supertype of an actual unchecked  exception type */  public int compareUncheckedException(ReferenceBinding type) { int comparison = compareTypes(type, getJavaLangRuntimeException ()); if (comparison != 0) return comparison;   return compareTypes(type, getJavaLangError()); }   public final CompilationUnitScope compilationUnitScope() { Scope lastScope = null;   Scope scope = this; do {    lastScope = scope; scope = scope.parent;   } while (scope != null); return (CompilationUnitScope) lastScope;  } public ArrayBinding createArray(TypeBinding type, int dimension) {   if (type.isValidBinding()) return environment().createArrayType(type, dimension);   else return new ArrayBinding(type, dimension);  } /* Answer the receiver's enclosing source type.  */ public final SourceTypeBinding enclosingSourceType() {   Scope scope = this; do {    if (scope instanceof ClassScope) return ((ClassScope)  scope).referenceContext.binding; scope = scope.parent;   } while (scope != null); return null;  } public final LookupEnvironment environment() {   Scope scope, unitScope = this; while ((scope = unitScope.parent) != null)    unitScope = scope; return ((CompilationUnitScope) unitScope).environment;  } // Internal use only  public ReferenceBinding findDirectMemberType(char[] typeName,  ReferenceBinding enclosingType) { if ((enclosingType.tagBits & HasNoMemberTypes) != 0)    return null; // know it has no member types (nor inherited member types)    SourceTypeBinding enclosingSourceType = enclosingSourceType(); compilationUnitScope().recordReference (enclosingType.compoundName, typeName); ReferenceBinding memberType = enclosingType.getMemberType (typeName); if (memberType != null) {    compilationUnitScope().recordTypeReference (memberType); // to record supertypes    if (enclosingSourceType == null ? memberType.canBeSeenBy(getCurrentPackage())     : memberType.canBeSeenBy(enclosingType, enclosingSourceType))     return memberType; else     return new ProblemReferenceBinding(typeName, memberType, NotVisible);   } return null;  } // Internal use only  public MethodBinding findExactMethod( ReferenceBinding receiverType,   char[] selector,   TypeBinding[] argumentTypes,   InvocationSite invocationSite) { compilationUnitScope().recordTypeReference(receiverType);   compilationUnitScope().recordTypeReferences(argumentTypes); MethodBinding exactMethod = receiverType.getExactMethod (selector, argumentTypes); if (exactMethod != null) {    compilationUnitScope().recordTypeReferences (exactMethod.thrownExceptions);    if (receiverType.isInterface() || exactMethod.canBeSeenBy(receiverType, invocationSite, this))     return exactMethod; }   return null; }   // Internal use only /* Answer the field binding that corresponds to fieldName.   Start the lookup at the receiverType. InvocationSite implements    isSuperAccess(); this is used to determine if the discovered field is visible.   Only fields defined by the receiverType or its supertypes are answered;   a field of an enclosing type will not be found using this API. If no visible field is discovered, null is answered. */  public FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite) { if (receiverType.isBaseType()) return null;   if (receiverType.isArrayType()) { if (CharOperation.equals(fieldName, LENGTH))     return ArrayBinding.LengthField; return null;   } compilationUnitScope().recordTypeReference(receiverType); ReferenceBinding currentType = (ReferenceBinding) receiverType;   if (!currentType.canBeSeenBy(this)) return new ProblemFieldBinding(currentType, fieldName,  NotVisible); // *** Need a new problem id - TypeNotVisible?    FieldBinding field = currentType.getField(fieldName); if (field != null) {    if (field.canBeSeenBy(currentType, invocationSite, this))     return field; else     return new ProblemFieldBinding (field.declaringClass, fieldName, NotVisible);   } // collect all superinterfaces of receiverType until the field  is found in a supertype ReferenceBinding[][] interfacesToVisit = null;   int lastPosition = -1; FieldBinding visibleField = null;   boolean keepLooking = true; boolean notVisible = false;   // we could hold onto the not visible field for extra error reporting   while (keepLooking) { ReferenceBinding[] itsInterfaces = currentType.superInterfaces();    if (itsInterfaces != NoSuperInterfaces) { if (interfacesToVisit == null)      interfacesToVisit = new ReferenceBinding [5][] ;     if (++lastPosition == interfacesToVisit.length) System.arraycopy(       interfacesToVisit, 0,       interfacesToVisit = new ReferenceBinding[lastPosition * 2][] ,       0, lastPosition);     interfacesToVisit[lastPosition] = itsInterfaces;    } if ((currentType = currentType.superclass()) == null)     break; if ((field = currentType.getField(fieldName)) != null) {     keepLooking = false; if (field.canBeSeenBy(receiverType,  invocationSite, this)) { if (visibleField == null)       visibleField = field; else       return new ProblemFieldBinding (visibleField.declaringClass, fieldName, Ambiguous);     } else { notVisible = true;     } }   } // walk all visible interfaces to find ambiguous references   if (interfacesToVisit != null) { ProblemFieldBinding ambiguous = null;    done : for (int i = 0; i < = lastPosition; i++) {     ReferenceBinding[] interfaces =  interfacesToVisit[i] ;     for (int j = 0, length = interfaces.length; j < length; j++) { ReferenceBinding anInterface =  interfaces[j] ;      if ((anInterface.tagBits & InterfaceVisited) == 0) { // if interface as not already  been visited anInterface.tagBits |=  InterfaceVisited; if ((field =  anInterface.getField(fieldName)) != null) { if (visibleField ==  null) { visibleField =  field; } else {         ambiguous = new ProblemFieldBinding(visibleField.declaringClass, fieldName, Ambiguous);         break done; }       } else { ReferenceBinding[] itsInterfaces = anInterface.superInterfaces();        if (itsInterfaces != NoSuperInterfaces) {         if (++lastPosition == interfacesToVisit.length) System.arraycopy( interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[lastPosition * 2][] , 0, lastPosition); interfacesToVisit[lastPosition] = itsInterfaces; }       } }     } }     // bit reinitialization for (int i = 0; i < = lastPosition; i++) {     ReferenceBinding[] interfaces =  interfacesToVisit[i] ;     for (int j = 0, length = interfaces.length; j < length; j++) interfaces[j].tagBits & =  ~InterfaceVisited; }    if (ambiguous != null) return ambiguous;   } if (visibleField != null)    return visibleField; if (notVisible)    return new ProblemFieldBinding(currentType, fieldName, NotVisible);   return null; }   // Internal use only public ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType) {   if ((enclosingType.tagBits & HasNoMemberTypes) != 0)    return null; // know it has no member types (nor inherited member types)    SourceTypeBinding enclosingSourceType = enclosingSourceType(); PackageBinding currentPackage = getCurrentPackage();   compilationUnitScope().recordReference (enclosingType.compoundName, typeName);   ReferenceBinding memberType = enclosingType.getMemberType (typeName);   if (memberType != null) { compilationUnitScope().recordTypeReference (memberType); // to record supertypes if (enclosingSourceType == null     ? memberType.canBeSeenBy(currentPackage) : memberType.canBeSeenBy(enclosingType,  enclosingSourceType)) return memberType;    else return new ProblemReferenceBinding(typeName,  memberType, NotVisible); }    // collect all superinterfaces of receiverType until the memberType is found in a supertype   ReferenceBinding currentType = enclosingType; ReferenceBinding[][] interfacesToVisit = null;   int lastPosition = -1; ReferenceBinding visibleMemberType = null;   boolean keepLooking = true; ReferenceBinding notVisible = null;   // we could hold onto the not visible field for extra error reporting   while (keepLooking) { ReferenceBinding[] itsInterfaces = currentType.superInterfaces();    if (itsInterfaces != NoSuperInterfaces) { if (interfacesToVisit == null)      interfacesToVisit = new ReferenceBinding [5][] ;     if (++lastPosition == interfacesToVisit.length) System.arraycopy(       interfacesToVisit, 0,       interfacesToVisit = new ReferenceBinding[lastPosition * 2][] ,       0, lastPosition);     interfacesToVisit[lastPosition] = itsInterfaces;    } if ((currentType = currentType.superclass()) == null)     break; compilationUnitScope().recordReference (currentType.compoundName, typeName); if ((memberType = currentType.getMemberType(typeName)) ! = null) { compilationUnitScope().recordTypeReference (memberType); // to record supertypes keepLooking = false;     if (enclosingSourceType == null ? memberType.canBeSeenBy(currentPackage)      : memberType.canBeSeenBy(enclosingType, enclosingSourceType)) {       if (visibleMemberType == null) visibleMemberType =  memberType; else        return new ProblemReferenceBinding(typeName, Ambiguous);     } else { notVisible = memberType;     } }   } // walk all visible interfaces to find ambiguous references   if (interfacesToVisit != null) { ProblemReferenceBinding ambiguous = null;    done : for (int i = 0; i < = lastPosition; i++) {     ReferenceBinding[] interfaces =  interfacesToVisit[i] ;     for (int j = 0, length = interfaces.length; j < length; j++) { ReferenceBinding anInterface =  interfaces[j] ;      if ((anInterface.tagBits & InterfaceVisited) == 0) { // if interface as not already  been visited anInterface.tagBits |=  InterfaceVisited; compilationUnitScope ().recordReference(anInterface.compoundName, typeName); if ((memberType =  anInterface.getMemberType(typeName)) != null) { compilationUnitScope ().recordTypeReference(memberType); // to record supertypes if (visibleMemberType  == null) { visibleMemberType = memberType; } else {         ambiguous = new ProblemReferenceBinding(typeName, Ambiguous);         break done; }       } else { ReferenceBinding[] itsInterfaces = anInterface.superInterfaces();        if (itsInterfaces != NoSuperInterfaces) {         if (++lastPosition == interfacesToVisit.length) System.arraycopy( interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[lastPosition * 2][] , 0, lastPosition); interfacesToVisit[lastPosition] = itsInterfaces; }       } }     } }     // bit reinitialization for (int i = 0; i < = lastPosition; i++) {     ReferenceBinding[] interfaces =  interfacesToVisit[i] ;     for (int j = 0, length = interfaces.length; j < length; j++) interfaces[j].tagBits & =  ~InterfaceVisited; }    if (ambiguous != null) return ambiguous;   } if (visibleMemberType != null)    return visibleMemberType; if (notVisible != null)    return new ProblemReferenceBinding(typeName, notVisible, NotVisible);   return null; }   // Internal use only public MethodBinding findMethod(   ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite) {    ReferenceBinding currentType = receiverType; MethodBinding matchingMethod = null; ObjectVector found = new ObjectVector();   boolean relyOnDefaultAbstractMethods = environment ().options.targetJDK < CompilerOptions.JDK1_2;    compilationUnitScope().recordTypeReference(receiverType); compilationUnitScope().recordTypeReferences(argumentTypes);   if (currentType.isInterface()) { MethodBinding[] currentMethods = currentType.getMethods (selector);    int currentLength = currentMethods.length; if (currentLength == 1) {     matchingMethod = currentMethods[0] ;    } else if (currentLength > 1) {     for (int f = 0; f < currentLength; f++)      found.add(currentMethods[f] );    } matchingMethod = findMethodInSuperInterfaces (currentType, selector, found, matchingMethod); currentType = getJavaLangObject();   } while (currentType != null) {    MethodBinding[] currentMethods = currentType.getMethods (selector); int currentLength = currentMethods.length;    if (currentLength == 1 & & matchingMethod == null & & found.size == 0) { matchingMethod = currentMethods[0]; } else if (currentLength > 0) {     if (found.size == 0) { if (matchingMethod != null)       found.add(matchingMethod); }     for (int f = 0; f < currentLength; f++)      found.add(currentMethods[f] );    } if (!relyOnDefaultAbstractMethods & & currentType.isAbstract()) { matchingMethod = findMethodInSuperInterfaces (currentType, selector, found, matchingMethod); }    currentType = currentType.superclass(); }    int foundSize = found.size; if (foundSize == 0)    return matchingMethod; // may be null - have not checked arg types or visibility    MethodBinding[] compatible = new MethodBinding[foundSize]; int compatibleIndex = 0;   for (int i = 0; i < foundSize; i++) {    MethodBinding methodBinding = (MethodBinding) found.elementAt(i);    if (areParametersAssignable(methodBinding.parameters, argumentTypes))     compatible[compatibleIndex++] = methodBinding;   } if (compatibleIndex == 1)    return compatible[0] ; // have not checked visibility   if (compatibleIndex == 0) { // try to find a close match when the parameter order is wrong or missing some parameters    int argLength = argumentTypes.length; nextMethod : for (int i = 0; i < foundSize; i++) {     MethodBinding methodBinding = (MethodBinding) found.elementAt(i);     TypeBinding[] params = methodBinding.parameters;     int paramLength = params.length; nextArg: for (int a = 0; a < argLength; a++) {      TypeBinding arg = argumentTypes[a] ;      for (int p = 0; p < paramLength; p++)       if (params[p] == arg)        continue nextArg; continue nextMethod;     } return methodBinding;    } return (MethodBinding) found.elementAt(0); // no good  match so just use the first one found }    MethodBinding[] visible = new MethodBinding[compatibleIndex]; int visibleIndex = 0;   for (int i = 0; i < compatibleIndex; i++) {    MethodBinding methodBinding = compatible[i] ;    if (methodBinding.canBeSeenBy(receiverType, invocationSite, this))     visible[visibleIndex++] = methodBinding;   } if (visibleIndex == 1) {    compilationUnitScope().recordTypeReferences(visible [0].thrownExceptions); return visible[0]; }   if (visibleIndex == 0) return new ProblemMethodBinding(     compatible[0] .selector,     argumentTypes, compatible[0].declaringClass, NotVisible);   if (visible[0] .declaringClass.isClass())    return mostSpecificClassMethodBinding(visible, visibleIndex);   else return mostSpecificInterfaceMethodBinding(visible,  visibleIndex); }   public MethodBinding findMethodInSuperInterfaces(ReferenceBinding currentType, char[] selector, ObjectVector found, MethodBinding matchingMethod){ ReferenceBinding[] itsInterfaces =  currentType.superInterfaces(); if (itsInterfaces != NoSuperInterfaces) {     ReferenceBinding[] [] interfacesToVisit = new ReferenceBinding[5][] ;     int lastPosition = -1; if (++lastPosition == interfacesToVisit.length)      System.arraycopy( interfacesToVisit,       0, interfacesToVisit = new  ReferenceBinding[lastPosition * 2] [], 0,       lastPosition); interfacesToVisit[lastPosition] = itsInterfaces; for (int i = 0; i < = lastPosition; i++) {      ReferenceBinding[] interfaces =  interfacesToVisit[i] ;      for (int j = 0, length = interfaces.length; j < length; j++) {       currentType = interfaces[j] ;       if ((currentType.tagBits & InterfaceVisited) == 0) { // if interface as not  already been visited currentType.tagBits |=  InterfaceVisited; MethodBinding[] currentMethods = currentType.getMethods(selector);        int currentLength; if ((currentLength =  currentMethods.length) == 1 & & matchingMethod == null & & found.size  == 0) { matchingMethod  = currentMethods[0] ;        } else if (currentLength > 0) {         if (found.size == 0) {          if (matchingMethod != null) found.add(matchingMethod);         } for (int f = 0;  f < currentLength; f++) found.add(currentMethods[f]); }        itsInterfaces = currentType.superInterfaces();        if (itsInterfaces != NoSuperInterfaces) {         if (++lastPosition == interfacesToVisit.length) System.arraycopy( interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[lastPosition * 2][] , 0, lastPosition); interfacesToVisit[lastPosition] = itsInterfaces; }       } }     } // bit reinitialization     for (int i = 0; i < = lastPosition; i++) {      ReferenceBinding[] interfaces =  interfacesToVisit[i] ;      for (int j = 0, length = interfaces.length; j < length; j++)       interfaces[j] .tagBits & =  ~InterfaceVisited; }    } return matchingMethod;  } // Internal use only public MethodBinding findMethodForArray(   ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite) {    ReferenceBinding object = getJavaLangObject(); MethodBinding methodBinding = object.getExactMethod(selector,  argumentTypes); if (methodBinding != null) {    // handle the method clone() specially... cannot be protected or throw exceptions    if (argumentTypes == NoParameters & & CharOperation.equals(selector, CLONE)) return new MethodBinding(      (methodBinding.modifiers ^ AccProtected) | AccPublic,      CLONE, methodBinding.returnType,      argumentTypes, null,      object); if (methodBinding.canBeSeenBy(receiverType,  invocationSite, this)) return methodBinding;   } // answers closest approximation, may not check argumentTypes  or visibility methodBinding = findMethod(object, selector, argumentTypes,  invocationSite); if (methodBinding == null)    return new ProblemMethodBinding(selector, argumentTypes, NotFound);   if (methodBinding.isValidBinding()) { if (!areParametersAssignable(methodBinding.parameters,  argumentTypes)) return new ProblemMethodBinding(      methodBinding, selector,      argumentTypes, NotFound);    if (!methodBinding.canBeSeenBy(receiverType, invocationSite, this))     return new ProblemMethodBinding( selector,      argumentTypes, methodBinding.declaringClass,      NotVisible); }   return methodBinding; }   // Internal use only public ReferenceBinding findType(   char[] typeName,   PackageBinding declarationPackage, PackageBinding invocationPackage) {    compilationUnitScope().recordReference (declarationPackage.compoundName, typeName);   ReferenceBinding typeBinding = declarationPackage.getType (typeName);   if (typeBinding == null) return null;    if (typeBinding.isValidBinding()) { // Not convinced that this is necessary //   compilationUnitScope().recordTypeReference (typeBinding); // to record supertypes    if (declarationPackage != invocationPackage & & ! typeBinding.canBeSeenBy(invocationPackage)) return new ProblemReferenceBinding(typeName,  typeBinding, NotVisible); }   return typeBinding; }   public TypeBinding getBaseType(char[] name) {   // list should be o ptimized (with most often used first)   int length = name.length; if (length > 2 & & length < 8) {    switch (name[0] ) {     case ' i ' :      if (length == 3 & & name[1] == ' n ' & & name[2] == ' t ' )       return IntBinding; break;     case ' v ' :      if (length == 4 & & name[1] == ' o ' & & name[2] == ' i ' & & name[3] =='d ' )       return VoidBinding; break;     case ' b ' :      if (length == 7 & & name[1] == ' o ' & & name[2] == ' o ' & & name[3] == ' l ' & & name[4] == ' e ' & & name[5] == ' a ' & & name[6] == ' n ' )       return BooleanBinding; if (length == 4 & & name[1] == ' y ' & & name[2] == ' t ' & & name[3] == ' e ' )       return ByteBinding; break;     case ' c ' :      if (length == 4 & & name[1] == ' h ' & & name[2] == ' a ' & & name[3] == ' r ' )       return CharBinding; break;     case'd ' :      if (length == 6 & & name[1] == ' o ' & & name[2] == ' u ' & & name[3] == ' b ' & & name[4] == ' l ' & & name[5] == ' e ' )       return DoubleBinding; break;     case ' f ' :      if (length == 5 & & name[1] == ' l ' & & name[2] == ' o ' & & name[3] == ' a ' & & name[4] == ' t ' )       return FloatBinding; break;     case ' l ' :      if (length == 4 & & name[1] == ' o ' & & name[2] == ' n ' & & name[3] == ' g ' )       return LongBinding; break;     case's ' :      if (length == 5 & & name[1] == ' h ' & & name[2] == ' o ' & & name[3] == ' r ' & & name[4] == ' t ' )       return ShortBinding; }   } return null;  } public final PackageBinding getCurrentPackage() {   Scope scope, unitScope = this; while ((scope = unitScope.parent) != null)    unitScope = scope; return ((CompilationUnitScope) unitScope).fPackage;  } public final ReferenceBinding getJavaIoSerializable() {   compilationUnitScope().recordQualifiedReference (JAVA_IO_SERIALIZABLE);   ReferenceBinding type = environment().getType (JAVA_IO_SERIALIZABLE);   if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_IO_SERIALIZABLE, referenceCompilationUnit());   return null; // will not get here since the above error aborts the compilation  } public final ReferenceBinding getJavaLangClass() {   compilationUnitScope().recordQualifiedReference (JAVA_LANG_CLASS);   ReferenceBinding type = environment().getType(JAVA_LANG_CLASS); if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_CLASS,  referenceCompilationUnit()); return null; // will not get here since the above error aborts  the compilation }   public final ReferenceBinding getJavaLangCloneable() { compilationUnitScope().recordQualifiedReference (JAVA_LANG_CLONEABLE); ReferenceBinding type = environment().getType (JAVA_LANG_CLONEABLE); if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_CLONEABLE,  referenceCompilationUnit()); return null; // will not get here since the above error aborts  the compilation }   public final ReferenceBinding getJavaLangError() { compilationUnitScope().recordQualifiedReference (JAVA_LANG_ERROR); ReferenceBinding type = environment().getType(JAVA_LANG_ERROR);   if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_ERROR, referenceCompilationUnit());   return null; // will not get here since the above error aborts the compilation  } public final ReferenceBinding getJavaLangAssertionError() {   compilationUnitScope().recordQualifiedReference (JAVA_LANG_ASSERTIONERROR);   ReferenceBinding type = environment().getType (JAVA_LANG_ASSERTIONERROR);   if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_ASSERTIONERROR,  referenceCompilationUnit()); return null; // will not get here since the above error aborts  the compilation }   public final ReferenceBinding getJavaLangObject() { compilationUnitScope().recordQualifiedReference (JAVA_LANG_OBJECT); ReferenceBinding type = environment().getType(JAVA_LANG_OBJECT);   if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_OBJECT, referenceCompilationUnit());   return null; // will not get here since the above error aborts the compilation  } public final ReferenceBinding getJavaLangRuntimeException() {   compilationUnitScope().recordQualifiedReference (JAVA_LANG_RUNTIMEEXCEPTION);   ReferenceBinding type = environment().getType (JAVA_LANG_RUNTIMEEXCEPTION);   if (type != null) return type; problemReporter().isClassPathCorrect (JAVA_LANG_RUNTIMEEXCEPTION, referenceCompilationUnit());   return null; // will not get here since the above error aborts the compilation  } public final ReferenceBinding getJavaLangString() {   compilationUnitScope().recordQualifiedReference (JAVA_LANG_STRING);   ReferenceBinding type = environment().getType(JAVA_LANG_STRING); if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_STRING,  referenceCompilationUnit()); return null; // will not get here since the above error aborts  the compilation }   public final ReferenceBinding getJavaLangThrowable() { compilationUnitScope().recordQualifiedReference (JAVA_LANG_THROWABLE); ReferenceBinding type = environment().getType (JAVA_LANG_THROWABLE); if (type != null) return type; problemReporter().isClassPathCorrect(JAVA_LANG_THROWABLE,  referenceCompilationUnit()); return null; // will not get here since the above error aborts  the compilation }   /* Answer the type binding corresponding to the typeName argument, relative to the enclosingType.  */ public final ReferenceBinding getMemberType(char[] typeName, ReferenceBinding enclosingType) {   ReferenceBinding memberType = findMemberType(typeName, enclosingType);   if (memberType != null) return memberType; return new ProblemReferenceBinding(typeName, NotFound);  } /* Answer the type binding corresponding to the compoundName.  * * NOTE: If a problem binding is returned, senders should extract the  compound name * from the binding & not assume the problem applies to the entire  compoundName. */  public final TypeBinding getType(char[] [] compoundName) { int typeNameLength = compoundName.length;   if (typeNameLength == 1) { // Would like to remove this test and require senders  to specially handle base types TypeBinding binding = getBaseType(compoundName[0]); if (binding != null) return binding;   } compilationUnitScope().recordQualifiedReference(compoundName);   Binding binding = getTypeOrPackage(compoundName[0], typeNameLength == 1 ? TYPE : TYPE | PACKAGE);   if (binding == null) return new ProblemReferenceBinding(compoundName[0], NotFound);   if (!binding.isValidBinding()) return (ReferenceBinding) binding;    int currentIndex = 1; boolean checkVisibility = false;   if (binding instanceof PackageBinding) { PackageBinding packageBinding = (PackageBinding)  binding; while (currentIndex < typeNameLength) {     binding = packageBinding.getTypeOrPackage (compoundName[currentIndex++]); // does not check visibility if (binding == null)      return new ProblemReferenceBinding( CharOperation.subarray (compoundName, 0, currentIndex), NotFound);     if (!binding.isValidBinding()) return new ProblemReferenceBinding(       CharOperation.subarray (compoundName, 0, currentIndex),       binding.problemId()); if (!(binding instanceof PackageBinding))      break; packageBinding = (PackageBinding) binding;    } if (binding instanceof PackageBinding)     return new ProblemReferenceBinding( CharOperation.subarray(compoundName, 0, currentIndex),      NotFound); checkVisibility = true;   } // binding is now a ReferenceBinding   ReferenceBinding typeBinding = (ReferenceBinding) binding; compilationUnitScope().recordTypeReference(typeBinding); // to  record supertypes if (checkVisibility) // handles the fall through case    if (!typeBinding.canBeSeenBy(this)) return new ProblemReferenceBinding(      CharOperation.subarray(compoundName, 0, currentIndex),      typeBinding, NotVisible);    while (currentIndex < typeNameLength) {    typeBinding = getMemberType(compoundName [currentIndex++], typeBinding); if (!typeBinding.isValidBinding())     return new ProblemReferenceBinding( CharOperation.subarray(compoundName, 0,  currentIndex), typeBinding.problemId());   } return typeBinding;  } /* Answer the type binding that corresponds the given name, starting  the lookup in the receiver. * The name provided is a simple source name  (e.g., " Object " , " Point " , ...)  */ // The return type of this method could be ReferenceBinding if we did  not answer base types. // NOTE: We could support looking for Base Types last in the search,  however any code using // this feature would be extraordinarily slow.  Therefore we don't do  this public final TypeBinding getType(char[] name) { // Would like to remove this test and require senders to  specially handle base types TypeBinding binding = getBaseType(name);   if (binding != null) return binding; return (ReferenceBinding) getTypeOrPackage(name, TYPE);  } // Added for code assist... NOT Public API  public final Binding getTypeOrPackage(char[] [] compoundName) { int nameLength = compoundName.length;   if (nameLength == 1) { TypeBinding binding = getBaseType(compoundName[0]); if (binding != null) return binding;   } Binding binding = getTypeOrPackage(compoundName[0], TYPE | PACKAGE);   if (!binding.isValidBinding()) return binding; int currentIndex = 1;   boolean checkVisibility = false; if (binding instanceof PackageBinding) {    PackageBinding packageBinding = (PackageBinding) binding;     while (currentIndex < nameLength) {     binding = packageBinding.getTypeOrPackage (compoundName[currentIndex++]); if (binding == null)      return new ProblemReferenceBinding( CharOperation.subarray (compoundName, 0, currentIndex), NotFound);     if (!binding.isValidBinding()) return new ProblemReferenceBinding(       CharOperation.subarray (compoundName, 0, currentIndex),       binding.problemId()); if (!(binding instanceof PackageBinding))      break; packageBinding = (PackageBinding) binding;    } if (binding instanceof PackageBinding) return binding;    checkVisibility = true; }   // binding is now a ReferenceBinding ReferenceBinding typeBinding = (ReferenceBinding) binding;   if (checkVisibility) // handles the fall through case if (!typeBinding.canBeSeenBy(this))     return new ProblemReferenceBinding( CharOperation.subarray(compoundName, 0,  currentIndex), typeBinding,      NotVisible); while (currentIndex < nameLength) {    typeBinding = getMemberType(compoundName [currentIndex++], typeBinding); // checks visibility    if (!typeBinding.isValidBinding()) return new ProblemReferenceBinding(      CharOperation.subarray(compoundName, 0, currentIndex),      typeBinding.problemId()); }   return typeBinding; }   /* Internal use only */  final Binding getTypeOrPackage(char[] name, int mask) {   Scope scope = this; if ((mask & TYPE) == 0) {    Scope next = scope; while ((next = scope.parent) != null)     scope = next; } else {    ReferenceBinding foundType = null; done : while (true) { // done when a  COMPILATION_UNIT_SCOPE is found switch (scope.kind) {      case METHOD_SCOPE : case BLOCK_SCOPE :       ReferenceBinding localType = ((BlockScope) scope).findLocalType(name); // looks in this scope only       if (localType != null) { if (foundType != null & & foundType != localType)         return new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);        return localType; }       break; case CLASS_SCOPE :       SourceTypeBinding sourceType = ((ClassScope) scope).referenceContext.binding;       if (CharOperation.equals (sourceType.sourceName, name)) {        if (foundType != null & & foundType != sourceType)         return new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);        return sourceType; }        ReferenceBinding memberType = findMemberType(name, sourceType);       if (memberType != null) { // skip it if we did not find anything        if (memberType.problemId () == Ambiguous) {         if (foundType == null || foundType.problemId() == NotVisible)          // supercedes any potential InheritedNameHidesEnclosingName problem          return memberType;         else // make  the user qualify the type, likely wants the first inherited type return  new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName); }        if (memberType.isValidBinding()) {         if (sourceType == memberType.enclosingType()          || environment().options.complianceLevel > = CompilerOptions.JDK1_4) {          // found a valid type in the ' immediate ' scope (ie. not inherited)          // OR in 1.4 mode (inherited shadows enclosing)          if (foundType == null) return memberType;          if (foundType.isValidBinding()) // if a valid type was found, complain when another is found in  an ' immediate ' enclosing type (ie. not inherited) if (foundType != memberType) return new ProblemReferenceBinding(name,  InheritedNameHidesEnclosingName); }        } if (foundType == null  || (foundType.problemId() == NotVisible & & memberType.problemId() !=  NotVisible)) // only  remember the memberType if its the first one found or the previous one was not visible & memberType is...         foundType = memberType;       } break;      case COMPILATION_UNIT_SCOPE : break done;     } scope = scope.parent;    } if (foundType != null)     return foundType; }    // at this point the scope is a compilation unit scope CompilationUnitScope unitScope = (CompilationUnitScope) scope;   // ask for the imports + name if ((mask & TYPE) != 0) {    // check single type imports. ImportBinding[] imports = unitScope.imports; // copy the list, since single type imports are removed  if they cannot be resolved for (int i = 0, length = imports.length; i < length;  i++) { ImportBinding typeImport = imports[i]; if (!typeImport.onDemand)      if (CharOperation.equals (typeImport.compoundName[typeImport.compoundName.length - 1], name)) if  (unitScope.resolveSingleTypeImport(typeImport) != null) return  typeImport.resolvedImport; // already know its visible }    // check if the name is in the current package (answer the problem binding unless its not found in which case continue to look)    ReferenceBinding type = findType(name, unitScope.fPackage, unitScope.fPackage); // is always visible    if (type != null) return type; // check on demand imports    boolean foundInImport = false; for (int i = 0, length = unitScope.imports.length; i < length; i++) { if (unitScope.imports[i].onDemand) { Binding resolvedImport =  unitScope.imports[i] .resolvedImport;      ReferenceBinding temp = (resolvedImport instanceof  PackageBinding) ? findType(name,  (PackageBinding) resolvedImport, unitScope.fPackage) : findDirectMemberType (name, (ReferenceBinding) resolvedImport); if (temp != null & & temp.isValidBinding ()) { if (foundInImport)        // Answer error binding -- import on demand conflict; name found in two import on demand  packages. return new  ProblemReferenceBinding(name, Ambiguous); type = temp;       foundInImport = true; }     } }    if (type != null) return type;   } // see if the name is a package   if ((mask & PACKAGE) != 0) { compilationUnitScope().recordSimpleReference(name);    PackageBinding packageBinding = unitScope.environment.getTopLevelPackage(name);    if (packageBinding != null) return packageBinding;   } compilationUnitScope().recordSimpleReference(name);   // Answer error binding -- could not find name return new ProblemReferenceBinding(name, NotFound);  } /* Answer whether the type is defined in the same compilation unit as  the receiver */  public final boolean isDefinedInSameUnit(ReferenceBinding type) { // find the outer most enclosing type   ReferenceBinding enclosingType = type; while ((type = enclosingType.enclosingType()) != null)    enclosingType = type; // find the compilation unit scope   Scope scope, unitScope = this; while ((scope = unitScope.parent) != null)    unitScope = scope; // test that the enclosingType is not part of the compilation  unit SourceTypeBinding[] topLevelTypes = ((CompilationUnitScope) unitScope).topLevelTypes;   for (int i = topLevelTypes.length; --i > = 0;)    if (topLevelTypes[i] == enclosingType)     return true; return false;  } public final boolean isJavaIoSerializable(TypeBinding tb) {   //a first -none optimized version-...:-).... //please modify as needed    return tb == getJavaIoSerializable(); }   public final boolean isJavaLangCloneable(TypeBinding tb) { //a first -none optimized version-...:-)....   //please modify as needed return tb == getJavaLangCloneable();  } public final boolean isJavaLangObject(TypeBinding type) {   return type.id == T_JavaLangObject; }   public final MethodScope methodScope() { Scope scope = this;   do { if (scope instanceof MethodScope)     return (MethodScope) scope; scope = scope.parent;   } while (scope != null); return null;  } // Internal use only  /* All methods in visible are acceptable matches for the method in question...  * The methods defined by the receiver type appear before those defined by its  * superclass and so on. We want to find the one which matches best. *  * Since the receiver type is a class, we know each method's declaring  class is * either the receiver type or one of its superclasses. It is an error  if the best match * is defined by a superclass, when a lesser match is defined by the  receiver type * or a closer superclass.  */ protected final MethodBinding mostSpecificClassMethodBinding (MethodBinding[] visible, int visibleSize) {   MethodBinding method = null; MethodBinding previous = null;   nextVisible : for (int i = 0; i < visibleSize; i++) {    method = visible[i] ;    if (previous != null & & method.declaringClass !=  previous.declaringClass) break; // cannot answer a method farther up the  hierarchy than the first method found previous = method;    for (int j = 0; j < visibleSize; j++) {     if (i == j) continue; MethodBinding next = visible[j]; if (!areParametersAssignable(next.parameters,  method.parameters)) continue nextVisible;    } compilationUnitScope().recordTypeReferences (method.thrownExceptions); return method;   } return new ProblemMethodBinding(visible[0].selector, visible [0].parameters, Ambiguous); }   // Internal use only /* All methods in visible are acceptable matches for the method in  question... * Since the receiver type is an interface, we ignore the possibility  that 2 inherited * but unrelated superinterfaces may define the same method in  acceptable but * not identical ways... we just take the best match that we find since  any class which * implements the receiver interface MUST implement all signatures for  the method... * in which case the best match is correct.  * * NOTE: This is different than javac... in the following example, the  message send of * bar(X) in class Y is supposed to be ambiguous. But any class which  implements the * interface I MUST implement both signatures for bar. If this class was  the receiver of * the message send instead of the interface I, then no problem would be  reported. *  interface I1 { void bar(J j);  } interface I2 {  // void bar(J j); void bar(Object o);  } interface I extends I1, I2 {}  interface J {} class X implements J {} class Y extends X { public void foo(I i, X x) { i.bar(x); }  } */  protected final MethodBinding mostSpecificInterfaceMethodBinding (MethodBinding[] visible, int visibleSize) { MethodBinding method = null;   nextVisible : for (int i = 0; i < visibleSize; i++) {    method = visible[i] ;    for (int j = 0; j < visibleSize; j++) {     if (i == j) continue; MethodBinding next = visible[j]; if (!areParametersAssignable(next.parameters,  method.parameters)) continue nextVisible;    } compilationUnitScope().recordTypeReferences (method.thrownExceptions); return method;   } return new ProblemMethodBinding(visible[0].selector, visible [0].parameters, Ambiguous); }   public final ClassScope outerMostClassScope() { ClassScope lastClassScope = null;   Scope scope = this; do {    if (scope instanceof ClassScope) lastClassScope = (ClassScope) scope;    scope = scope.parent; } while (scope != null);   return lastClassScope; // may answer null if no class around }   public final MethodScope outerMostMethodScope() { MethodScope lastMethodScope = null;   Scope scope = this; do {    if (scope instanceof MethodScope) lastMethodScope = (MethodScope) scope;    scope = scope.parent; } while (scope != null);   return lastMethodScope; // may answer null if no method around }   public final CompilationUnitDeclaration referenceCompilationUnit() { Scope scope, unitScope = this;   while ((scope = unitScope.parent) != null) unitScope = scope;   return ((CompilationUnitScope) unitScope).referenceContext; }  // start position in this scope - for ordering scopes vs. variables int startIndex() {   return 0; } }] Looks good
JDT	Verification error Using build 204, I get a verification error when trying to instantiate JDK12DebugLauncher. (No problem when I fall back to 203). The runtime error is: 4 org.eclipse.ui 0 (class:  org/eclipse/jdt/internal/ui/launcher/JDK12DebugLauncher, method: run signature: (Lorg/eclipse/jdt/launching/VMRunnerConfiguration;) Lorg/eclipse/jdt/launching/VMRunnerResult;) Localvariable 16 contains wrong type java.lang.VerifyError: (class:  org/eclipse/jdt/internal/ui/launcher/JDK12DebugLauncher, method: run signature: (Lorg/eclipse/jdt/launching/VMRunnerConfiguration;) Lorg/eclipse/jdt/launching/VMRunnerResult;) Localvariable 16 contains wrong type at org.eclipse.jdt.internal.ui.launcher.StandardVM.getVMRunner (StandardVM.java:37) at  org.eclipse.jdt.internal.ui.launcher.JavaApplicationLaunche rDelegate.getVMRunner (JavaApplicationLauncherDelegate.java:213) at  org.eclipse.jdt.internal.ui.launcher.JavaApplicationLauncherDelegate.doLaunch (JavaApplicationLauncherDelegate.java:135)  at org.eclipse.jdt.internal.ui.launcher.JavaApplicationLauncherDelegate.launchEleme nt(JavaApplicationLauncherDelegate.java:82) at  org.eclipse.jdt.internal.ui.launcher.JavaApplicationLauncherDelegate.launch (JavaApplicationLauncherDelegate.java:94)  at org.eclipse.debug.internal.core.Launcher.launch(Launcher.java:104) at org.eclipse.debug.internal.ui.RelaunchActionDelegate.relaunch (RelaunchActionDelegate.java:37) at org.eclipse.debug.internal.ui.RelaunchActionDelegate.relaunch (RelaunchActionDelegate.java:46) at org.eclipse.debug.internal.ui.RelaunchHistoryLaunchAction$1.run (RelaunchHistoryLaunchAction.java:49) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.debug.internal.ui.RelaunchHistoryLaunchAction.run (RelaunchHistoryLaunchAction.java:47)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:451) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:645) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1359)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1160) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:675)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:658) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)  The code looks like: /**   * @see IVMRunner#run */  public VMRunnerResult run(VMRunnerConfiguration config) throws CoreException {   int port= SocketUtil.findUnusedLocalPort(null, 5000, 15000); if (port == -1) {    throw new CoreException(createStatus (LauncherMessages.getString( " jdkLauncher.noPort " ), null)); //$NON-NLS-1$   } String location= getJDKLocation( " " ); //$NON-NLS-1$   if ( " " .equals(location)) { //$NON-NLS-1$    throw new CoreException(createStatus (LauncherMessages.getString( " jdkLauncher.error.noJDKHome " ), null)); //$NON-NLS-1 $ }   String program= location+File.separator+ " bin " +File.separator+ " java " ; //$NON-NLS-2$ //$NON-NLS-1$   File javawexe= new File(program+ " w.exe " ); //$NON-NLS-1$   File javaw= new File(program+ " w " ); //$NON-NLS-1$ if (javaw.isFile())     program= javaw.getAbsolutePath(); else if (javawexe.isFile())    program= javawexe.getAbsolutePath(); Vector arguments= new Vector();    arguments.addElement(program); String[] bootCP= config.getBootClassPath(); if (bootCP.length > 0) {    arguments.add( " -Xbootclasspath: " +convertClassPath (bootCP)); //$NON-NLS-1$ } String[] cp= config.getClassPath(); if (cp.length > 0) {    arguments.add( " -classpath " ); //$NON-NLS-1$    arguments.add(convertClassPath(cp)); }   addArguments(config.getVMArguments(), arguments); arguments.add( " -Xdebug " ); //$NON-NLS-1$   arguments.add( " -Xnoagent " ); //$NON-NLS-1$   arguments.add( " -Djava.compiler=NONE " ); //$NON-NLS-1$   arguments.add( " - Xrunjdwp:transport=dt_socket,address=127.0.0.1: " + port); //$NON-NLS-1$    arguments.add(config.getClassToLaunch()); addArguments(config.getProgramArguments(), arguments);   String[] cmdLine= new String[arguments.size()]; arguments.copyInto(cmdLine);    ListeningConnector connector= getConnector(); if (connector == null) {    throw new CoreException(createStatus (LauncherMessages.getString( " jdkLauncher.error.noConnector " ), null)); //$NON- NLS-1$ }   Map map= connector.defaultArguments(); int timeout= fVMInstance.getDebuggerTimeout(); specifyArguments(map, port, timeout);   Process p= null; try {    try { connector.startListening(map);      try { p= Runtime.getRuntime().exec(cmdLine); } catch (IOException e) {      if (p != null) { p.destroy();      } throw new CoreException(createStatus (LauncherMessages.getString( " jdkLauncher.error.title " ), e)); //$NON-NLS-1$     } IProcess process= DebugPlugin.getDefault ().newProcess(p, renderProcessLabel(cmdLine));     process.setAttribute(JavaRuntime.ATTR_CMDLINE, renderCommandLine(cmdLine));     //try { // Thread.currentThread().sleep(5000);     //} catch (InterruptedException e) { //}     boolean retry= false; do  {      try { VirtualMachine vm=  connector.accept(map); setTimeout(vm);       IDebugTarget debugTarget= JDIDebugModel.newDebugTarget(vm, renderDebugTarget(config.getClassToLaunch(),  port), process, true, false); return new VMRunnerResult (debugTarget, new IProcess[] { process });      } catch (InterruptedIOException e) { retry= fRetryQuery.queryRetry();      } } while (retry);    } finally { connector.stopListening(map);    } } catch (IOException e) {    throw new CoreException(createStatus (LauncherMessages.getString( " jdkLauncher.error.connect " ), e)); //$NON-NLS-1$   } catch (IllegalConnectorArgumentsException e) { throw new CoreException(createStatus (LauncherMessages.getString( " jdkLauncher.error.connect " ), e)); //$NON-NLS-1$   } if (p != null)    p.destroy(); return null;  } I've got a similar problem running Core Test Cases. When compiling with 204 I  cannot run and get the following stack trace. When compiling with 202a I can run on both 202a and 204. I can provide further information if necessary.  2 org.eclipse.core.runtime 2 Problems occurred when invoking code from plug- in: org.eclipse.core.runtime. java.lang.VerifyError: (class: org/eclipse/core/internal/resources/Workspace, method: delete signature:  ([Lorg/eclipse/core/resources/IResource;ZLorg/eclipse/core/runtime/IProgressMon itor;)Lorg/eclipse/core/runtime/IStatus;) Localvariable 5 contains wrong type  at org.eclipse.core.resources.ResourcesPlugin.constructWorkspace (ResourcesPlugin.java:91)  at org.eclipse.core.resources.ResourcesPlugin.startup (ResourcesPlugin.java:134)  at org.eclipse.core.internal.plugins.PluginDescriptor$1.run (PluginDescriptor.java:644)  at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:814)  at This bug was introduced when dealing with another verification error: 1GDS7IP:  ITPJCORE:WIN2000 - VerifyError related to a local index computation Problem comes from the fact that it appears that bytecode verifiers want:  (1) secret try return addresses must be allocated after any local variables in the method  (2) variables local to a finally block need to be allocated behind the ones from the matching try block.   Fixed in HEAD. Issuing a patch for 204 (not the optimal, simply reverting to < 204 behavior for bug introduced try statement). The new code needs more  testing. The old code ( < 203) did not do either one of these. 204 dealt properly with (2)  but since it did not do anything special for return addresses, then many more code patterns broke (1) since return addresses reused the same location, like the test cases mentionned on this PR. *** Bug 4919 has been marked as a duplicate of this bug. ***
Platform	CVS core: Typo in new connection message " OpeningConnection to < hostname > " is missing a space. Fixed *** Bug 10194 has been marked as a duplicate of this bug. *** fixed in M4
Platform	Projects scrolled off top of Packages view and no scrollbar In build I-20011213, I have the following projects:    abc - simple project, deb2 - java project,     def - simple project and am looking at the ' java ' perspective. Create a new project (File - > New - > Project).  Select ' simple ' and ' project ' and give it the name ' aaa ' .  The Packages view is updated with the new project.  Create a 2nd new project (File - > New - > Project).  Select ' java ' and ' java  project ' and give it the name ' bbb ' .  The Packages view is updated with this  new project but ' bbb ' is located at the top of the Packages window.  You can't  see ' aaa ' or ' abc ' and there is no scrollbar to allow you to scroll up to them.  Create a 3rd project (File - > New - > Project).  Select ' simple ' and ' project ' and give it the name ' zzz ' .  The Packages view is updated with this new project  and the view changes so you can see all projects ( ' aaa ' to ' zzz ' ). The steps involve only JDT components. Before changing the component see if you  can recreate the problem using the Navigator and/or determine that it the bug is not actually in JFace. Could not reproduce this. The packages view shows only Java Projects, i.e., abc, def, aaa and zzz will not appear in the packages view.  How is the workbench preference " New project options " set up?  Let me just try to guess what happened. The workbench preference is set up " Open in the same window " or " replace perspective " . 1) When you created " aaa " the java perspective was replaced by the resource  perspective and the Navigator was placed exactly where the packages view were, so you could see all projects. 2) When you created " bbb " navigator was replaced by packages view so you could  not see Simple projects anymore. 3) When you created " zzz " the navigator came up again and you could see all  projects. Please let me know if my guess is bogus.
JDT	Problems with non-externalized String warnings By default, I turn on " warning on non externalized strings " . However, this  results in many problems during debug. When using Strings within the Expressions Pane or in the Detail Formatters, I get errors like:  Detail formatter error: Non-externalized string literal; it should be followed by // $NON-NLS- < n > $  Please fix that :) I thought the evaluation engine igonred " wanrings " . However, it sounds like  there is a bug somewhere. It looks like the behavior of the method currently used for get the problems has changed, it returns also warmings now. A new method have been also added, this method return better information about the problems (severity, type of problem, ...). I will change the implementation to use this method. Fixed. Now use org.eclipse.jdt.core.dom.CompilationUnit#getProblems() instead of org.eclipse.jdt.core.dom.CompilationUnit#getMessage().  Changes in ASTEvaluationEngine#createExpressionFromAST(..). Please, verify (darinw) Verified.
JDT	Can't debug J9 on Win98 with 128mB (1GETI85) JGS (6/4/01 5:33:40 PM)  Rebooted, launched stand-alone Eclipse (118), then tried to debug simple program under J9. Blew up on OutOfMemoryErrors every time.  JGS (6/4/01 5:42:01 PM) Actually, this only happens if Eclipse is launched with the -debug option.  WIthout it,  can debug on J9 fine. Deferred *** Bug 18022 has been marked as a duplicate of this bug. *** This is a VM problem, not an Eclipse issue.  Move to close. Re-open to mark as wont fix. Wont fix. Closed.
Platform	[Wizards] WizardNewProjectCreationPage doesn't validate on startup I construct this page and use the setInitialProjectName() to set a default  name.  The project name field is set properly, but the default project location doesn't append this initial project name to the end of it.  If I uncheck and  then recheck the checkbox, the project location field is set how I thought it should have been set.  The second problem is that validatePage() is called within createControl(), but the return value is not used in a call to setPageComplete().  I tried doing this myself, but validatePage() is private and the project location field is also private!  Basically the functionality that is desired is the ability to set a default project name for the user, and make the page complete (as long as the project  doesn't already exist of course, but the validatePage should handle this).  I'm using this in our XML example wizards for WSAD.  Thanks, Ernest Randy pls investigate.   If the implementation does not match the spec it is a bug that needs to be fixed.   We must avoid changing the behavior that would require changes to the spec and/or break existing clients.  Also remember that wizards should never come up in an initial error condition. Fixed in build > 20020905.  We now update the initial location when the initial name is set. Also createContents() called validatePage but not send the result to  setPageComplete(). It now does this. There should be no code changes required by users of  WizardNewProjectCreationPage to get this functionality. Marking closed
JDT	JDI client event request and add* API The JDI client implementation of event requests does not match the JDWP  specification for how/what modifiers can be set on requests. For example, EventRequestImpl allows the addition of numerous class filters and  class exclusion filters.  Only 1 class filter or class exclusion filter can be set (and I am not sure if both can be set at the same time?).  A review needs to be done to find these mismatches and fix the implementation. I interpret the spec to allow for multiple filters. Testing with step filters,  it appears to work. My error in interpreting test cases.  From the JDWP spec " Only events that  satisfy all modifiers are reported " , so specifying two inclusion filters (or  two thread filters) does not work as I expected...ie cumulative.
Platform	Searched book are not updated from search view to search dialog Open the search browser, click advanced select some books Click search open the Search dialog look at the selct books (they are not the same as the one you selected in the browser) Will look at it after 2.0. Re-opening the bug... Targeted for 2.1. Fixed in HEAD.
JDT	Exception in log 20020618  Found the following exception in the log. I can remember that I tried to suspend a thread but I didn't get the stack expanded in the UI. But I was able to click on resume. !ENTRY org.eclipse.jdt.debug 4 100 Jun 19, 2002 12:24:48.15 !MESSAGE com.sun.jdi.IncompatibleThreadStateException: Thread was not suspended occurred retrieving stack frames. !STACK 0 com.sun.jdi.IncompatibleThreadStateException: Thread was not suspended         at org.eclipse.jdi.internal.ThreadReferenceImpl.frames(ThreadReferenceIm pl.java:180)         at org.eclipse.jdi.internal.ThreadReferenceImpl.frames(ThreadReferenceIm pl.java:159)         at org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFram es(JDIThread.java:483)         at org.eclipse.jdt.internal.debug.core.model.JDIThread.createAllStackFra mes(JDIThread.java:460)         at org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrame s(JDIThread.java:352)         at org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrame s(JDIThread.java:432)         at org.eclipse.jdt.internal.debug.core.model.JDIThread.getStackFrames(JD IThread.java:336)         at org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doH andleSuspendThreadEvent(LaunchViewEventHandler.java:210)         at org.ecl ipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doH andleSuspendEvent(LaunchViewEventHandler.java:187) at org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doH andleDebugEvents(LaunchViewEventHandler.java:104) at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(A bstractDebugEventHandler.java:49) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja va:93)         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoa der.java:775)         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at java.lang.reflect.Method.invoke(Native Method)         at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)         at org.eclipse.core.launcher.Main.main(Main.java:534) Dirk, which VM? Could be dup of bug 17081. Target VM is JDK 1.4.1 beta *** This bug has been marked as a duplicate of 17081 ***
JDT	XML/JSP/HTML syntax coloring editor. [misc] I think it will really useful if Eclipse has a syntax highlihgting editor for xml and JSP Files. If  time permits adding code-completion to JSP/HTML editors would also make this extremely handy. For a visual reference, we can look at how Netbeans does it (in my opinion ) very well.  The reason JSP/HTML editor is very useful is that many developers spend so much time wasting moving  around between different editors (A Java IDE for writing Tag Libraries, and an HTML Editor for viewing JSP ' s). This feature would really make it a one stop tool for many java developers working  on Java Front End Design. Imagine being able to write a tag, compile it and go to your jsp and see it popup by pressing Ctrl-Space just like regular code-completion !! This would take eclipse much further than any other IDE's around. this would be nice, there already is an opensource project on sourceforge that  is working on this kind of support. There are currently no plan to add this in JDT. There are more than one but here's one:     http://sourceforge.net/projects/black-sun/ Two comments: 1. I don't think this suggestion belongs to JDT, it seems more of a Platform  kind of enhancement, and 2. Having a richer set of editors built-in to the platform would be great.  Perhaps the planty model of something developed outside which was polished and contributed back into the platform would be best? But Eclipse already has syntax coloring for XML (it is used in the ant editor and a few others).  Why not just enable that for *.xml? (minus the ant-specific things which make it slow to open a file, although one can currently use an ant editor on non-ant xml files). Control-space strikes me as a bigger can of worms, as does JSP. I think this issue should be addressed as part of 2.2 (platform/jdt) to give  more J2EE related build-in functionalities. It's true that there are plug-ins  which try (!) to resolve this big lack of functionality but as far as I see noone seems to do it in the ' eclipse ' way...  there are a lot of people which esitate in using eclipse in the J2EE/JSP environement because of this. And for me (and I'm sure a lot of other people)  think the lack of true integration in the eclipse core of J2EE related types like XML/JSP/HTML etc. are the ONLY thing which is really missing to use  Eclipse ' Out-Of-The-Box ' for all Java related development.  So please reconsider the ' No plans to do this ' in the next major Eclipse  release. Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state. Is this being considered for 3.0? Could this be reopened for consideration for 3.0, perhaps as an ' if we have  time ' plan item? This will be covered by the new Web tools project (see  http://www.eclipse.org/webtools/index.html). As soon as they have a component in bugzilla I will move the PR. *** Bug 36826 has been marked as a duplicate of this bug. ***
Platform	Loosing last used editor as default editor There is a bug in that if you open a file that has more than one type of editor  assigned to it using a specific editor. If you do the following this is the bug: 1) Using OpenWith- > a specific editor that is not the default editor 2) Close the editor (now this specific editor is marked as the default editor) 3) Using OpenWith- > select that specific editor again  (now this specific editor is no longer marked as the default editor) Double-clicking always opens the default editor without changing who the next  default editor will be. The problem is in:  EditorMan ager.openEditor(String editorId,IEditorInput input,boolean setVisible)  It is in this piece of code: // Update the default editor for this file. IEditorDescriptor defaultDesc = (EditorDescriptor)getEditorRegistry ().getDefaultEditor(file); if (defaultDesc == null) defaultDesc = (EditorDescriptor)getEditorRegistry().getDefaultEditor(); String editorID = desc.getId(); if(defaultDesc.getId().equals(editorId)) {   getEditorRegistry().setDefaultEditor(file, null); } else {   getEditorRegistry().setDefaultEditor(file, editorID); }  In this case getDefaultEditor(file) will return the current selected editor as the default editor (since we choose that one specifically) and so it will match  the current selected editor and so do a setDefaultEditor(file, null); Which then wipes out this specific selected editor as the default and returns it to  the filetype default editor, which is a different editor. The problem is that it is not the default editor that is wanted for this test, but the default  default editor (i.e. the default editor for the file type, not the default editor for the file itself). In that case if you specifically selected the  default default (filetype editor) you want to wipe out the selection. Thanks, Rich Kulp *** This bug has been marked as a duplicate of 24684 ***
JDT	F2 does not show error descriptions anymore i have a file with a temporary problem the problem is underlined but pressing F2 does nothing works for me, need a reproducable case no reproducable case - closing
Platform	Cannot use keyboard Shift Select in a Tree The keyboard shift select does not work for a Tree.  Open the SWT examples 1) Select List 2) Select an entry in the list. 3) Hit shift 4) Hit page up or page down - multi select occurs 5) Select Tree  6) Select an entry in the tree 7) Hit page up or page down - no selection The code to fix this is done, and being tested internally. It should be in the  builds starting some time next week. Implemented > 20020114.
JDT	accessibility: preference pages use labels for grouping [misc] labels should not be used because they cannot be accessed by screen readers  (see accessibility guildlines) defer Should be fixed for 2.1  Even a 2.0.1 candidate Not for 2.0.1. Invalidates screen shots and documentation. Tod, can you please comment on this. What is the opinion of the workbench:  should we use groups in this cases. Screen readers read the parent tree of a widget until it hits a point where  there is no more information - i.e. in a Composite. Look at the Java Preference Page as an example.  In Link settings the Link settings title will not be read as it is a sibling of the buttons and the screen reader will assume it is irrelevant.  If the  surrounding Composite is changed to a group with the title Link Settings the title would then be read as it is in the parent tree of button. *** This bug has been marked as a duplicate of 26186 ***
Platform	Tabbing Order and Check Box Button I have a fairly complex UI... a few composites within composites.... text  fields, tables in the composites. I also have a check box button in the middle of it all. It seems the tabbing order is thrown out by this check box. If I  change the check box to a ' normal ' button then the tabbing order is correct.  I have seen various discussion threads regarding exactly this problem but could not find a bug opened on it. I went through several Eclipse preference pages that contain checkboxes and  their tabbing behaves normally.  So it must be something tricky about your case.  Can you provide a small snippet that shows the problem happening? This class extends dialog... if you invoke the dialog and start tabbing you will see that the check box gets tabbed to out of order. If you change the check box to a ' normal ' button and try again, you will see the tab order is correct Replicated the problem in the 2.0.2 build, but has been fixed in the current  2.1 stream.  Changing to WORKSFORME.
Platform	External Tools Configuration dialog Details field is too short F2  The details field of this dialog is less than one character high and is unusable. *** Bug 16405 has been marked as a duplicate of this bug. *** Ryan added min height hint for proper layout. Checked by Simon and Tod Verified in F3
JDT	Create Getter and Setter should create isFoo for booleans Create getter and setter should create an ' is ' method for booleans not a ' get ' method. this is a candidate for another code gen preference. I think if this is a candidate for a code gen preference then it should be on  by default. the plan is to use templates. waiting for ck to separate the template  substitution code. *** Bug 11016 has been marked as a duplicate of this bug. *** fixed > 20020328 fixed
Platform	Ensure we are capturing local history We have several PRs from 1.0 where we were not properly capturing local  history.  The CORE IResource operations for move/delete have an option for whether local history should be kept.  We need to ensure we are using this  option in the appropriate times. For example, " Replace With - > Base/Revision " should store the current resource  into local history before replacing. Ensuring we are good local history citizens is a P1 plan item for 2.0. Clarification,  In the case of storing to local history prior to replace with base, specifically the case is if the local resource was modified/unreleased.    If the user is replacing a resource for which we have an exact matching revision in the repository, the user could always get the state back from the  repository history. Fixed. We are calling IFile.setContents() with preserve history as true. Every  CVS operation done within Eclipse works on IResources, we will benefit from any Eclipse history mechanism from now on. We are no longer bashing the file system  then refreshing local.
Platform	[TM FTP] client must turn off ftp messages build 0527 if you don't turn off ftp server messages at the end of the transfer you may receive a summary message, or an introduction message. This will result in the ftp client throwing an exception when nothing wrong has happened. It is confusing because most of the time the transfer was successful. ================ This was shown in an error dialog after performing a get ======  You have transfered XXX bytes 221 - Total traffic for this session 221 - Thank you for using the ftp server at XXXX 221 Goodbye I get the messages all the time with no exception being thrown (observed using  tracing). Are you using passive mode? *** Bug 18401 has been marked as a duplicate of this bug. *** I'm not using passive mode. But this is happening to others as well. Why don't we simply turn-off information messages? later Is the connection still alive once the " get " finishes?  Perhaps the server is  closing the connection on us (idle timeout or similar server policy).  Try sending a NOOP command after the RETR command completes and see if you get the  221 there.  (So you'd see the bogus 221 after the next command initiated)  Certainly we handle the 221 just fine after a QUIT.  But receiving 221 as a result of a command other than QUIT _is_ a legitimate failure case (although  not to spec) that should be reported because the operation that was just requested could not have completed. This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this  bug is important, feel free to reopen it.
JDT	Would like a " find " tool inside the search results window (1GK1GZB) [search] When a large number of search results is available, I would appreciate having a way to find one in particular using a text search amongst the search results (ctrl+F). It is not always possible to refine the search more if the query was already fully qualified. NOTES: moved to ' active ' IMO the search result view should support converting the result set back into  a " pseudo " Java element tree. This would give you a better overview.  If using find inside the search result view, what pattern would you normally use? A simple grep amongst all messages would be all I want I think. Actually, this is something I would like to be able to do with tasks as well... To be consistent we should think about adding filters to the search view. Regarding Dirk's comment: would filters do the trick or is it really a find you need? Chaning state from assigned later to resolved later. Assigned later got  introduced by the last bug conversion and is not a supported Eclipse bug state.
Platform	[Key Bindings] IllegalArgumentException from StyledText using undo. In the emacs key configuration, open a new file, and type ' abcdefghij ' . hold the shift key, and back up over the last five letters. press  shift-delete (cut). press shift-insert (paste). back up over the last five letters again. shift-delete (cut). press ' ctrl-x U ' to undo. does not undo.  press ' ctrl-x U ' again. IllegalArgumentException in log: ' Index out of bounds ' .  This does not happen in the default key configuration using Ctrl+X, Ctrl+V, Ctrl+Z, etc, but does happens in I1015, as well as today with the entirely new  key bindings engine, so were not convinced that key bindings are the cause. This may be related the fact the emacs configuration uses a special  sequence ' Ctrl-X U ' , perhaps conflicting with another key listener somewhere?   !SESSION Oct 16, 2002 15:39:04.155 --------------------------------------------- java.version=1.4.1-rc java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse- SDK-I20021015-win32/eclipse/ !ENTRY org.eclipse.ui 4 4 Oct 16, 2002 15:39:04.155 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 Oct 16, 2002 15:39:04.185 !MESSAGE Index out of bounds !STACK 0 java.lang.IllegalArgumentException: Index out of bounds  at org.eclipse.swt.SWT.error(SWT.java:2125) at org.eclipse.swt.SWT.error(SWT.java:2071)  at org.eclipse.swt.custom.StyledText.replaceTextRange (StyledText.java:6124)  at org.eclipse.jface.text.DefaultUndoManager$TextCommand.undoTextChange (DefaultUndoManager.java:82)  at org.eclipse.jface.text.DefaultUndoManager$TextCommand.undo (DefaultUndoManager.java:93)  at org.eclipse.jface.text.DefaultUndoManager.internalUndo (DefaultUndoManager.java:506)  at org.eclipse.jface.text.DefaultUndoManager.undo (DefaultUndoManager.java:783)  at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:2576) at org.eclipse.jface.text.source.SourceViewer.doOperation (SourceViewer.java:435) at org.eclipse.ui.texteditor.TextOperationAction$1.run (TextOperationAction.java:119) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)  at org.eclipse.ui.texteditor.TextOperationAction.run (TextOperationAction.java:117)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:749) at  org.eclipse.ui.internal.registry.AcceleratorScope$AcceleratorAction.run (AcceleratorScope.java:289)  at org.eclipse.ui.internal.registry.AcceleratorScope.processKey (AcceleratorScope.java:249)  at org.eclipse.ui.internal.KeyBindingMenu$1.keyPressed (KeyBindingMenu.java:54)  at org.eclipse.ui.internal.KeyTable.handleEvent(KeyTable.java:75) at org.eclipse.ui.internal.KeyTable$3.handleEvent(KeyTable.java:116)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1622) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1368)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1360) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1343)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:247)  at org.eclipse.core.launcher.Main.run(Main.java:703) at org.eclipse.core.launcher.Main.main(Main.java:539) Simplified scenario using Emacs keybindings:  1) type a line of text 2) select the second half of the line 3) Shift+Del 4) Ctrl+X U - > Nothing happens  That nothings happens eventually caused the problem described. The undo operation is triggered by the key binding service and wants to manipulate the  text widget. The widget sends out a verify event that is silently turned down by the key binding service. - > The widget is not changed, although the undo  manager thinks it has been changed. The undo manager can be made more robust, but this does not solve the problem that undo does not work. See the following  stack: org.eclipse.ui.internal.WWinKeyBindingService$1.verifyText (org.eclipse.swt.events.VerifyEvent) line: 66 org.eclipse.ui.internal.AcceleratorMenu$1.handleEvent (org.eclipse.swt.widgets.Event) line: 40 org.eclipse.swt.widgets.EventTable.sendEvent(org.eclipse.swt.widgets.Event)  line: 77 org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendEvent (int, org.eclipse.swt.widgets.Event) line: 849 org.eclipse.swt.custom.StyledText (org.eclipse.swt.widgets.Widget).notifyListeners(int, org.eclipse.swt.widgets.Event) line: 637 org.eclipse.swt.custom.StyledText.modifyContent(org.eclipse.swt.widgets.Event, boolean) line: 5328 org.eclipse.swt.custom.StyledText.replaceTextRange(int, int, java.lang.String) line: 6132 org.eclipse.jface.text.DefaultUndoManager$TextCommand.undoTextChange (org.eclipse.swt.custom.StyledText) line: 82 org.eclipse.jface.text.DefaultUndoManager$TextCommand.undo (org.eclipse.swt.custom.StyledText) line: 93 org.eclipse.jface.text.DefaultUndoManager.internalUndo() line: 506 org.eclipse.jface.text.DefaultUndoManager.undo() line: 783 org.eclipse.jface.text.source.SourceViewer (org.eclipse.jface.text.TextViewer).doOperation(int) line: 2651 org.eclipse.jface.text.source.SourceViewer.doOperation(int) line: 445 org.eclipse.ui.texteditor.TextOperationAction$1.run() line: 119 org.eclipse.swt.custom.BusyIndicator.showWhile(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 66 org.eclipse.ui.texteditor.TextOperationAction.run() line: 117 org.eclipse.ui.internal.WWinKeyBindingService.invoke(java.lang.String) line: 134 org.eclipse.ui.internal.WWinKeyBindingService.pressed (org.eclipse.ui.internal.keybindings.KeyStroke) line: 108 org.eclipse.ui.internal.WWinKeyBindingService$5.widgetSelected (org.eclipse.swt.events.SelectionEvent) line: 325 org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent (org.eclipse.swt.widgets.Event) line: 53 org.eclipse.swt.widgets.EventTable.sendEvent(org.eclipse.swt.widgets.Event) line: 77 org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendEvent (org.eclipse.swt.widgets.Event) line: 833 org.eclipse.swt.widgets.Display.runDeferredEvents() line: 1622 org.eclipse.swt.widgets.Display.readAndDispatch() line: 1368 org.eclipse.ui.internal.Workbench.runEventLoop() line: 1420 org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 1403 org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, java.net.URL, java.lang.String, java.lang.String[], java.lang.Runnable) line: 775 org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, java.lang.String, java.lang.String[]) line: 432 EclipseRuntimeLauncher.main(java.lang.String[]) line: 24 Fixed. Action invokation occured while still in Ctrl-X mode. This means the hidden menu was still trapping verify. Changed code to clear the mode before invoking an action.
Platform	bold characters are wider than non bold I'm using eclipse-SDK-20011219-win32.zip on Win2K.   When using the standard font (Courier-regular-9) I am finding that bold characters are wider than non bold.  For example: final| fina1| are a different width.  This results in annoying misalignments on the display. Styled text widget is owned by SWT. Moving Bold characters in some fonts are wider than non-bold characters. If you  use a font of this nature, you will see the behavior you are getting. JDT was changed to allow the bolding of some Java elements to be disabled,  so this should no longer be an issue.
Platform	Update Manager should preserve all file permissions See bug 20575 and bug 20753 A full solution must be found Attempting have multiple depends... hum... doesn't seem to work, sorry about double notification *** This bug has been marked as a duplicate of 20896 ***
Platform	Accessibility in Workbench > Compare > Text Compare Using freeze 2 for release 2.0, in the Workbench > Compare > Text Compare  preference page, the first option is to change the background color. This is currently a label with two options next to it. This will cause problems for  screen readers. There should be a group called " Background color " . Note there is no mnemonic  and lowercase " c " . The two color options should be placed inside this group  (preferably one under the other). Also, the " Text Font " group name should use lower case " f " to be consistent  with other Workbench preference pages. Background color preference setting will go away in F3 (see #19013) fixed in 20020606 #1: Removed background color preference setting in Compare preference #2: Changed " Text Font " group name to use lower case " f " and added mnemonic  Fix reviewed by Dirk Baeumer. Note, the " Text font " group label does not need an mnemonic (no group label  ever does). All other changes verified in build 2002-06-12
Platform	SWT Exception (Widget is disposed) when running Junit tests Build: 20020326  I have a Junit test which creates a Java project. The setUp() method (which runs befor ethe test) opens several windows. The tearDown() method (which runs  after the test) closes the windows. When I run the test, it succeeds, but afterwards an SWT Exception occurs. Here is the stack trace:  org.eclipse.swt.SWTException: Widget is disposed at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:90) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1397)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1211) at org.eclipse.swt.widgets.Display.release(Display.java:1261)  at org.e clipse.swt.graphics.Device.dispose(Device.java:198)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:743) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:196)  at org.eclipse.core.launcher.Main.run(Main.java:555) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) Ryan, was there more to this stack trace that indicated that this was a debug  problem? No, sorry. Logging this PR was the last thing I did before the long weekend. I  had meant to assign it to SWT. This looks like a problem in user code. If you don't agree, please provide a  repeatable testcase. Closing PR for lack of information.
JDT	Packages view should persist only visible expanded elements M5 and build 20020425  PackageExplorerPart.saveExpansionState should be changed to use getVisibleExpandedElements() instead of getExpandedElements(). This is a huge startup performance win, and is low risk. Without it, performance bogs down the more items have been expanded, even  across shutdown and restart. These extra items also have to get decorated, which is expensive for CVS and  ClearCase decorators. For more context see the 2002-04-13 01:43 comments in bug 7322. Note that the Navigator has been using getVisibleExpandedElements() for several  drops, with no problems. fix went into M5 and 20020425
JDT	Projects re-build when not required I have seven source projects in my workspace, and the rest are binary. The  source project reference JRE_LIB as their JRE/class library. I renamed the " detected " VM install to " IBM 1.3.1 " and all my source projects were re- built (from the Installed JREs preference page). The rebuild was unexpected. Not efficient, but no harm done. Deferred Reopening for work Fixed in VMPreferencePage$VMListener.  A VM is no longer flagged as changed if  the name of the VM or the java doc location are the only changes. Please verify. *** Bug 21221 has been marked as a duplicate of this bug. *** Verified.
Platform	[SashForm] SashForm should provide support for limiting the width/height of its children Since a sash form lay outs its children according to its orientation it would  be helpful to provide support to limit - the width of a child if mode is vertical - the height of a child if mode is horizontal Could be considered as part of a possible SWT widget API re-work. Moving from Later. SashForm is VI, not SN.
Platform	External Tools Configuration: multi line text looks strange Configure external tools. " Details " is a multi-line text widget, with a scrollbar. However, it's only sized to be one line high, which looks really strange. It should either be larger, or it should be single-line. On Win 2000, the detail field is big enough to show 4-5 lines of text. This is  probably some SWT layout/computeSize problem. *** This bug has been marked as a duplicate of 18748 ***
JDT	Java examples project is not in Examples category (1GL2MWV) NOTES: moved to ' active ' fixed
JDT	[breakpoints] Want breakpoint on instantiation Build 20020214  When I'm exploring a new framework, or somebody else's code, I often find  myself curious about when a class is instantiated.  To find this out, I need to set a breakpoint in every constructor of the class.  This can be a problem if: - the class has many constructors, or - the class has no constructors (only the default one) It would be nice if I could add a method breakpoint for < init > (with any  signature) to catch all of these with one breakpoint. deferred Closing, not intending to implement.
Platform	" runtime= " is updated even tho installation failed/crashed (1GEV33Y) 1. Install component org.eclipse.platform_1.0.5 2. Halfway thru the unzip process, kill eclipse (plenty of time to do this as this is a big jar) 3. Startup eclipse again, look at _update.cfg, the runtime= field has been modified to pick up the new org.eclipse.core.boot_1.0.5 plugin, even though installation has failed and all the plugins have been cleaned up.  NOTES: PRODUCT VERSION: 119 linux No longer applicable. The R1.0 update support is withdrawn in 2.0.
Platform	Widget is disposed error in Search I was doing a search and received the following widget is disposed error.  I was in the Java Perspective and was doing a search on all senders of Cursor (Device device, int style). Note that I also had a workbench window open that  was showing no perspective. Log: Fri Jan 25 08:38:39 EST 2002 4 org.eclipse.core.runtime 0 Widget is disposed org.eclipse.swt.SWTException: Widget is disposed  at org.eclipse.swt.SWT.error(SWT.java:1887) at org.eclipse.swt.SWT.error(SWT.java:1819)  at org.eclipse.swt.widgets.Widget.error(Widget.java:368) at org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.isValidThread(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Table.setSelection(Table.java:1805)  at org.eclipse.jface.viewers.TableViewer.setSelectionToWidget (TableViewer.java:635)  at org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget (StructuredViewer.java:790)  at org.eclipse.jface.viewers.StructuredViewer.preservingSelection (StructuredViewer.java:579)  at org.eclipse.jface.viewers.StructuredViewer.refresh (StructuredViewer.java:624)  at org.eclipse.jface.viewers.StructuredViewer.refresh (StructuredViewer.java:592)  at org.eclipse.jface.viewers.StructuredViewer.setSorter (StructuredViewer.java:803)  at org.eclipse.search.internal.ui.SortDropDownAction.setPageId (SortDropDownAction.java:70)  at org.eclipse.search.internal.ui.SearchResultViewer.setPageId (SearchResultViewer.java:263)  at org.eclipse.search.internal.ui.SearchManager.handleNewSearchResult (SearchManager.java:385)  at org.eclipse.search.internal.ui.SearchManager.handleSearchMarkersChanged (SearchManager.java:327) at org.eclipse.search.internal.ui.SearchManager.access$2 (SearchManager.java:324) at org.eclipse.search.internal.ui.SearchManager$7.run (SearchManager.java:459) at org.eclipse.ui.internal.UIWorkspaceLock.doPendingWork (UIWorkspaceLock.java:53) at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:23)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled Code))  at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code))  at org.eclipse.jface.window.Window.open(Window.java:523) at org.eclipse.jface.dialogs.MessageDialog.openError (MessageDialog.java:318) at org.eclipse.ui.internal.Workbench.handleExceptionInEventLoop (Workbench.java:394) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:827)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:878)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:321) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) This was in build 20020123. I have tried to replicate this in build 20020124  and I cannot get it to happen again there. I had gotten previous Widget is disposed error from an unrelated view earlier  so this may have been related to that problem. Dani can you try to protect the code against this failure. Could not reproduce either.  I guess that an exception occurred during the close of the workbench page (I know the BreakpointsPage had such problem) and therefore the SearchManager was not notified about the Search view being closed.
Platform	release - tree update does not scale (1GE67VY) AK (5/23/01 10:45:38 AM)  i had ca. 1700 outgoing changes to release. after releasing i had to wait for like 5 minutes (sic!) to get the tree updated  and the ide is frozen during that time (+ 100% CPU usage) NOTES: KM (5/23/01 3:10:20 PM)  It sounds like what you need here is a " forced release " that overwrites the server without  providing any compare?  (You could never manually compare 1700 resources anyway). Would you expect it to inform you of conflicts or not?  KM (5/23/01 6:24:57 PM) From Adam:   i guess i should explain better what happened _after_ i'd released everything it took forever to just update the tree viewer (maybe it runs the compare engine again(?))  KM (5/23/01 6:26:19 PM) Moving to future.  Insufficient time left for looking at performance of this nature. PRODUCT VERSION:  109 Completely different code base now.  - We support commit outside of Sync view now - No performance problems on new sync view reported  Closing PR.
Platform	[ActionSets] Action set disappeared after customized We have three action sets that contribute to the same menu that is defined in  our plugin. After we customize it a few times, some of the action sets will not show up any  more. Here are the steps to replicate.  STEPS: - install plugin and start up Eclipse      - select Perspective- > Customize      - expand Other - check all three action sets (Menu Sections AA, BB and CC)      - press OK - RESULT: our pulldown menu will show all three groups       - select Perspective- > Customize      - expand Other - uncheck Menu Section AA (leaving BB & CC checked)      - RESULT: our pulldown menu will show BB & CC       - select Perspective- > Customize      - expand Other - check Menu Section AA      - uncheck Menu Section BB (AA & CC are checked) - RESULT: our pulldown menu will show AA & CC       - select Perspective- > Customize      - expand Other - check Menu Section BB      - uncheck Menu Section CC (AA & BB are checked) - RESULT: our pulldown menu will only show BB - EXPECT: the pulldown menu should show AA & BB    Note that restarting the Workbench fixes the problem. Please contact duongn@rational.com for example code. Duong, please attach the example code. Note that all 3 actions sets must define the menu with the same id and name. But it sounds like you're already doing this if it appears properly on restart. Chris,   Pls try in 2.0 build This problem was fixed a long time ago. Resolving as fixed. How did it ever get into a NEW > FIXED state?
JDT	Code formatter inserts indentation within the class If I format a class, I get: public class Foo extends SuperClass implement IFoo { public void bar(){   //code } } What I really want is:  public class Foo extends SuperClass  implements IFoo {  public void bar(){ //code } }  Perhaps the class heading is a little bit abnormal, but I think almost everyone leaves out the first-level indent in their class bodies (for non-nested/inner  types) Will consider post2.0 Resurrecting formatter issues in 2.1 stream. Clearing resolution *** This bug has been marked as a duplicate of 3276 ***
JDT	CodeAssist - No completion between dot and number 1) create the following class public class X { void foo(){       this. < cursor > 0    } } 2) do ctrl+space Nothing happen, just bing.  CompletionScanner identify ' .0 ' as a number and throw an InvalidCursorLocation  exception. Fixed, bug was in completion scanner which didn't handle dot prefixed number  scenario. Test added.
JDT	Build output folder not visible in package view Created a new project, changed " Build output folder " to {project-dir}/classes. After building the project, the classes folder is not visible in the package view. Also after selecting it in the " Filter working set " dialog, it doesn't  show up! Now, after changing the output folfer in the project properties back to /bin  and also selecting bin in the " Filter working set " dialog, folder " classes " is  visible (but bin not). In the Navigator view, all folder are visible. not showing the build output folder in the packages view is intentional, it was  found to be too confusing.
Platform	Workbench preferences error message typo build 20020124  If you enter 0 for the " number of opened editors before reusing " you get an  error message at the top of the page that says " The number of opened editors  should more then 0 " . The message should be " The number of opened editors should be more than 0 " Fixed in latest
Platform	[boot] What's tmp/platform relative to where i start eclipse? (1GE8WVH) Unzipped driver as root, tried to start eclipse as regular user. After encountering many directory/file permission problems, i finally got to the point where it created a .metadata area in bin/.  I noticed that there was also a dir structure called tmp/platform off bin/. The user shouldn't need to write anything to the bin/ directory on startup - this dir is shared by many other users on a multi-user system. LC (5/25/01 10:43:29 AM) Just to be precise - i had to run eclipse from bin/ due to the way the eclipse startup script was structured. I suspect that .metadata and this tmp/platform would have been created wherever i invoke eclipse. If the user can start eclipse from his/her own /home directory, then this wouldn't have been a problem. However, defaulting the creation of user-specific files to the /home dir or a location specified by a flag (like the -platform flat) would be a good idea. NOTES: JM (5/24/2001 7:35:29 PM)  This is being done by the PlatformURLConneciton class as part of the file cache mechanism. Moving to VK for investigation.  VK (5/25/2001 9:48:57 AM) The PlatformURLConnection just writes to whatever  path is returned by System.getProperty( " java.io.tmpdir " ). Don't care where  it is, as long as the area is r/w. JM (5/25/2001 9:49:08 AM)  I wonder if Java actually checks whether or not the location identified in java.io.tmpdir is writable.  I guess the other problem is that several Platforms running the same install may  end up using the same temp dir.  Since the filename (i.e., .index.properties) is the same for all, they will be trying to use the same file.  This may well cause problems.     Could the temp dir be moved to be in the .metadata dir somewhere? it is less than optimal as the same file may be downloaded by several different running   platforms but it might be safer. VK (5/25/01 10:05:13 AM)  Each running instance of the platform should in fact have its own index (the files are actually prefixed by a workspace-specific stamp ... see .cache.properties in .metadata of each  workspace). I wanted all the caches to use the same directory so we could optimize the downloads (your point above), although the code to do this is not there. PRODUCT VERSION: Driver 111, RedHat 6.2 Need to verify to see if this is still a problem in the latest builds. Obsolete.
Platform	Search results should open on single-click Build: 20020328  Steps: 1. Conduct a search 2. Select a search result in the search view by single-clicking on it Nothing happens; you must double-click on the search result in order to open an  editor for it. Since the vst majority of the time users will want to open a search result they are selecting, search results should be opened in an editor  by just selecting them in the view with a single click. Making the user double click every result they want to see is needless.  The Debug view opens selected items with a single click, since most of the time users want to view any item they are selecting. The search view, which is  browsed in a similar manner, should do the same. we will leverage the Open click listener support provided by the Platform UI.  Dirk adds this support for Java views, pls consult with him. Has been added to Search view Available in builds > 20020513 Verified in build 20020612.
Platform	Usability: Can not change Z-order of Detached view.  (1GEEFJY) MF (5/27/01 3:10:46 PM)    I might be missing something obvious here, but how can you make a perspective window move in front of (cover) a detached view window?   Here is a usability scenario: I have my search results in the Java perspective as a detached window. I want to be able to click   on a search result and go back to the code, hiding the search results in the background. Currently, the search window stays in the front of the z-order, even if it looses focus.    Maybe this should be a Workbench Preference option that the user can select. NOTES: PRODUCT VERSION:  SDK 0.112, win Need to explore options here. Several people have complained about this. Torn off views are not supported in 2.0
Platform	IToolkit#isInstanceOf has incorrect return value (1FXQ5V3) When I call toolkit.isInstanceOf, I get incorrect return values. In the following example  JavaScript code, I believe that it should return " true " in all 4 cases. In fact it only answers " true " in call #3. Also, if class names must be fully-qualified, then we should add that to  the spec. var solution = toolkit.getOpenSolution();  toolkit.print( " solution (ISolution): " + toolkit.isInstanceOf(solution, " ISolution " ));  toolkit.print( " solution (IContainer): " + toolkit.isInstanceOf(solution, " IContainer " ));  toolkit.print( " solution (com.ibm.itp.core.api.resources.ISolution): " + toolkit.isInstanceOf(solution, " com.ibm.itp.core.api.resources.ISolution " ));  toolkit.print( " solution (com.ibm.itp.core.api.resources.IContainer): " + toolkit.isInstanceOf(solution, " com.ibm.itp.core.api.resources.IContainer " ));  NOTES: BF (2001/06/07 15:39:35)   Should document the fact that the class name needs to be fully qualified. PRODUCT VERSION:  032 VAJ dev-win on Win98 Invalid defect. Scripting support has been removed.
Platform	Need help context IDs everywhere F2  There are many places where we are missing F1 help. We need to ensure help context IDs for all our views, editors, dialogs,  preference pages, and property pages. The IDs need to be defined for F3. The help content can be added after F3. Chris, could you please go through the Workbench parts and annotate this PR  with those that are missing F1 help. I've been working on this on behalf of Randy. I didn't realize there was a PR  for it. Sorry, I forgot you were looking at it. Doesn't hurt to have two sets of eyes on this though. Ryan has made the changes to add the context ids where missing.   Randy is reviewing them. Help context ids released by Randy (checked by Tod). DeleteResourceAction$DeleteProjectDialog's constructor calls setHelp using the  parent shell, not the dialog's shell. Same with MarkerResolutionSelectionDialog. There may be others.  These should be set on the dialog's shell in configureShell, as is done with  FilterDialog Fixed by Randy. I have checked the other dialogs; none are calling setHelp  using the parent shell anymore. Ryan, please attach the list of ids that you added so we can verify this. In order to test this, entires must be added to the file plugins\org.eclipse.platform.doc.user_2.0.0\contexts_Workbench.xml Suggest creating temp entires of the form: < context id= " close_all_saved_action_context " > < description > Temporary descrption for close_all_saved_action_context < /description > < /context > Note org.eclipse.ui is not needed, it is added automatically. These temp entries should be created for all the new ids in 2.0 List that made it in, from Ryan:  org.eclipse.ui.close_all_saved_action_context org.eclipse.ui.show_view_menu_action_context org.eclipse.ui.workbench_editors_action_context org.eclipse.ui.new_wizard_shortcut_action_context org.eclipse.ui.text_cut_action_context org.eclipse.ui.text_copy_action_context org.eclipse.ui.text_paste_action_context org.eclipse.ui.text_delete_action_context org.eclipse.ui.cell_cut_action_context org.eclipse.ui.cell_copy_action_context org.eclipse.ui.cell_paste_action_context org.eclipse.ui.cell_delete_action_context org.eclipse.ui.cell_find_action_context org.eclipse.ui.cell_select_all_action_context org.eclipse.ui.cell_undo_action_context org.eclipse.ui.cell_redo_action_context  org.eclipse.ui.working_set_selection_dialog_context org.eclipse.ui.delete_project_dialog_context org.eclipse.ui.filter_dialog_context org.eclipse.ui.marker_resolution_selection_dialog_context org.eclipse.ui.workbench_editors_dialog org.eclipse.ui.welcome_page_selection_dialog  org.eclipse.ui.decorators_preference_page_context org.eclipse.ui.startup_preference_page_context  org.eclipse.ui.working_set_new_wizard_context org.eclipse.ui.working_set_edit_wizard_context  org.eclipse.ui.filters_action_context org.eclipse.ui.mark_completed_action_context org.eclipse.ui.resolve_marker_action_context org.eclipse.ui.select_all_tasks_action_context org.eclipse.ui.task_properties_action_context org.eclipse.ui.back_action_context org.eclipse.ui.forward_action_context org.eclipse.ui.go_into_action_context org.eclipse.ui.up_action_context If the XML is not there, is the behaviour the same as if the id was never  defined? No the behavior is different. A missing XML entry will result in the " No description. " popup. If there is no help listener set, SWT will search the parent chain for the first control with a help listner.  But we need to test that the id is set and is correct. Note that Ryan has a list of ids which where defined in 2.0 prior to the  changes for this PR for which no corresponding contexts were written. I think these should be tested at the same time in the same way. I have been checking these this morning. Is anyone else looking into them? (I  just want to make sure we're not duplicating work) I will check the rest as  well unless someone tells me otherwise. Here are the other help context ids without entries in  plugins\org.eclipse.platform.doc.user_2.0.0\contexts_Workbench.xml: lock_toolbar_action_context about_plugins_dialog_context about_features_dialog_context show_project_perspective_dialog_context working_set_selection_dialog project_capability_property_page_context new_project_capability_wizard_page_context new_project_review_wizard_page_context new_project_configure_wizard_page_context working_set_resource_page working_set_type_page update_capability_wizard_context working_set_new_wizard working_set_edit_wizard copy_bookmark_action_context  resource_navigator_move_action_context resource_navigator_copy_action_context resource_navigator_paste_action_context properties_copy_action_context  copy_task_action_context paste_task_action_context task_properties_dialog_context All of the ids have been tested and are working fine, except for the following:  working_set_selection_dialog working_set_new_wizard working_set_edit_wizard (help context id not defined and not needed, as these are dulicates of  working_set_selection_dialog_context, working_set_new_wizard_context, and working_set_edit_wizard_context)  show_project_perspective_dialog_context new_project_capability_wizard_page_context new_project_review_wizard_page_context new_project_configure_wizard_page_context update_capability_wizard_context (these are not used)  resource_navigator_move_action_context (already an entry in contexts_Worknbench.xml in build 20020612)  close_all_saved_action_context (this action is only exposed as an accelerator, not a menu item)  cell_find_action_context cell_undo_action_context cell_redo_action_context (I could not find a cell-based view that allowed these actions, so I couldn't  test these three. The help for the other cell actions pops up) select_all_tasks_action (The selectAll action uses the help from cell_select_all_action_context when the Task View is active)  new_wizard_shortcut_action_context (for some reason, NewWizardShortcutAction sets the help to the dialog opened  when it is run, instead of on the action itself, so the menu items that represent NewWizardShortcutActions (File- > New- > Folder, etc) don't have popup  help... I have logged bug 20241 about this)
Platform	Compare editor should have a sash between the editor panes. (1GI5K89) 1) Compare two versions of a project.  2) Select a file. There is a sash between the editors and the " structure compare " pane  but there is no sash between the two text viewers. NOTES: PRODUCT VERSION:  build 128. the center bar between the two text viewer panes works like a Sash but it isn't  one. If you turn off synchronized scrolling there is a real Sash between both sides.
Platform	Error message if Eclipse started with no JRE In an effort to improve the " out of box " experience for Eclipse users would be  consider improving the error message if Eclipse is started on a system with no JRE insalled.  Currently the error message is a File Not Found < blah > / < blah > /javaw.exe.  Could we trivially change this to say something like: You require an installed JRE or JDK to run Eclipse. I would rather we did not lose the information about where the VM was being  looked for, but I agree that the message could be more helpful. How about... " A Java Runtime Environment (JRE) or Java Development Kit (JDK) must be  available in order to run Eclipse. No Java virtual machine could be found after searching the following locations: < blah > / < blah2 > /javaw.exe < blah3 > /javaw.exe    ... " This bug was fixed as part of the 2.0 startup sequence rework. (http://bugs.eclipse.org/bugs/show_bug.cgi?id=12772)
Platform	[Editor Mgmt] API request: IWorkbenchPage#closeEditors() IWorkbenchPage contains two API methods for closing editors: closeEditor(IEditorPart, boolean) and closeAllEditors(boolean). As part of the EditorView I'm making (Bug 10941), I'm allowing users to multi-select open editors and choose " Close. " With the current API, I have to call closeEditor() repeatedly, which results in poor performance. I would like a method IWorkbenchPage#closeEditors(IEditorPart[], boolean) to close multiple editors. If you require this change for the 2.0 release of eclipse please reopen this  defect. Reopen to investigate There is an API method for closing an array of editors and optionally prompt  to save dirty editors now. IWorkbenchPage.closeAllEditors(boolean save) I think you meant IWorkbenchPage#closeEditors(IEditorReference[], boolean)  :)
JDT	Unsaved changes prompt occurs at random, unexpected times in launch configurations window I have quite a few launch configurations built up.  When I peruse the different  configs, I get an annoying unsaved changes dialog when I haven't changed  anything.  Here's how I recreate it:  1. Select the down arrow next to the running man icon on the toolbar 2. Select the menu option " Run... " 3. In the tree for " Java Application " (I have approx. 30 elements here), select  different launch configurations without making any changes to them. About 75% of the time when selecting a launch config, a message box pops up  that says " The Configuration ' x ' has unsaved changes.  Do you wish to save  them? " .  I wish I could detect a pattern as to which cases cause this dialog,  but all I know is that I'm not making any changes.  Perhaps there is different  behavior when the config is created via this dialog, versus auto-created when you select Run- > Java Application.  I am using the final version of 2.0. Have the configurations that are showing the problem been created in a new 2.0  workspace? If the configurations were originally created in an older version of Eclipse,  they are being " updated " with no action from the user and this is the reason  for the prompting. I had thought that some of them were created in a new 2.0 GA workspace, but I  went through and clicked " yes " to save each one, and now it no longer prompts  me.  I'll watch out for any recurrence of this.  At a minimum, it would have  been nice if the message said it was updating the configurations - the current behavior is confusing if you don't know how it works behind the scense. We agree the prompt can be confusing but it was in the build notes ;-) and was  a migration path for the pre 2.0 workspaces. Please reopen if the problem reoccurs.
Platform	link for update examples broken in help build I200205291235  When selecting Help- > help contents - > Platform Plugin Developer Guide - > Examples  Guide- > update, the following is displayed " The topic that you have requested is  not available " This doc usually comes from the doc-html directory in the plugin. F3 candidate Well ... looks like this problem fixed itself in HEAD and is fixed in 0611 (wish  all defects were like this). Closing ...
Platform	SWT.CHECK buttons have large margins 1016 integration build, happens on Solaris and HPUX, not AIX  - run the Control example - on the Buttons tab press the SWT.CHECK radio - the buttons change and the margins expand, as can be seen by the expansion of the surrounding group - click on one of these buttons to see the size that's being allocated to them  (see the focus rectangle) Note that RADIO buttons have the same problem. GG to investigate and adivse.  We changed Group.computeSize() recently.  Is  this the problem?  GG to consult with SN. Note that this isn't a new problem; it may even go back to the 2.0 release.  So  it's not related to Group.computeSize() changes. Won't override platform wishes w.r.t. margins (for the record, marginHeight =  2, marginTop = marginBottom = 11).  To change them use .Xdefaults. *** Bug 73620 has been marked as a duplicate of this bug. ***
JDT	Make more actions available on text selection I could not find the action " Add Javadoc Comment " until I switched to the Outline view. I expected the action to be 1. in the context menu and if not 2. in the Edit (or some other global) menu I think currently we distribute the actions on a personal taste basis. This should be changed. It is not clear to users why some actions are in the context menu and some are not (OK - not all need to be in the context menu but all must be reachable from the editor e.g. via Edit menu). It is not acceptable to force users to switch the view. the action is also missing in the packages view. Shouldn't this action be part  of the code generation group then the packages view will get it. We are currently not consistent which actions are available on resolved text  selections in the editor. For example, the following actions could be contributed, but are not: - override method (for types) - replace from local history (for members) - Add Javadoc comment This needs to be revisited during the menu reorg. it is now menu reorg time and we should make more actions available on text  selections. In particular now that the Source menu is " global " The following action should not use the resolved element as selection, but the  cursor position. For example: - override method (for types)/Add Constructor from Superclass       use the innermost type that contains the text selection as the target - Add Javadoc comment       use the inner most element that contains the text selection as the target - generate/getter setter       user the inner most type and offer all its fields in a dialog Once we have done this we should look into providing support for: - Add from local history - Replace from local history Once we have it done *** Bug 10677 has been marked as a duplicate of this bug. *** *** Bug 14133 has been marked as a duplicate of this bug. *** All Source actions now work in the text editor too.  Fixed for build > I20020508
Platform	Can't add deleted resource back into workspace (1GET08V) 1) Create a resource that is the only resource in its folder. 2) Release this change to the cvs repository. 3) Delete the resource from your workspace. 4) Release this change to the cvs repository.  Note:  Because this was the only thing in the folder, th folder gets removed too. 5) Expand project versions to find the resource you want to add back in. 6) Select add to workspace.  Get an error dialog and a log entry:  Errors adding project. Resource /org.eclipse.swt/ws/photon must exist. An internal error has occurred, consult the error log for details. (where /org.eclipse.swt/ws/photon was the folder my resource was in)  Log: Mon Jun 04 09:20:28 EDT 2001 4 org.eclipse.vcm.ui 1 Errors adding project  1============= < children > =============  4 org.eclipse.core.resources 273 Could not delete: c:\development\target\eclipse\plugins\Eclipse Launcher\launcher_117.zip. 1============= < /children > ============= Log: Mon Jun 04 09:20:31 EDT 2001 4 org.eclipse.core.resources 273 Could not delete: c:\development\target\eclipse\plugins\Eclipse Launcher\launcher_117.zip. Log: Mon Jun 04 11:40:53 EDT 2001 4 org.eclipse.vcm.core.cvs 4 Project version tag not found in history file Log: Mon Jun 04 12:03:59 EDT 2001 4 org.eclipse.vcm.ui 1 Errors adding project  1============= < children > =============  4 org.eclipse.core.resources 368 Resource /org.eclipse.swt/ws/photon must exist. 4 org.eclipse.vcm.ui 1 An internal error has occurred, consult the error log for details. java.lang.NullPointerException at org.eclipse.core.internal.resources.SaveManager.sortTrees(SaveManager.java:981)  at org.eclipse.core.internal.resources.SaveManager.collapseTrees(SaveManager.java:182) at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:740)  at org.eclipse.core.internal.resources.SaveManager.snapshotIfNeeded(SaveManager.java:881) at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:672)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1188) at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)  at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98) 1============= < /children > =============   NOTES: VI (6/4/2001 12:13:45 PM) I went and manually add the parent folder and then did " Add to workspace " and this worked.   KM (6/4/01 12:13:43 PM) This I assume is a side effect that we are not auto-loading/creating parents when adding from workspace.  CM (6/21/2001 11:02:18 AM) Another way to reproduce this problem:  - delete a package from a project  (package must have been versioned at one time) - go to repository, select deleted package, add to workspace (get error dialog) PRODUCT VERSION:  118 Windows 2000 This no longer aplieas as the Repo view of Team 2.0 only supports the loading  of remote folders as projects and does not support the loading of files.
JDT	Variables view should escape unprintable caharacters in strings Line delimiters in a string should be escaped ( " \r\n " , ...). On w2k, a default character is displayed. However, on linux-gtk, the line delimiter is actually granted and messes up the view. it covers another  variable and it is completely unreadable, since it tries to squeeze in two lines in one. Do not intend to fix for 2.0. The workaround is to use the " Details " area to  see the contents of the string. The workaround is not valid.  When this happens, you cannot read the name of the variable, so you don't know  what you're clicking on. If you don't know what you're clicking on, the data  in the details area isn't necessarily meaningful.  This is a dup of Bug 17491, which contains screenshots of the problem. If we consider this a debugger bug, we should accept Bug 17491 as ours. Re-open to mark as dup. *** This bug has been marked as a duplicate of 17491 ***
Platform	CTRL combination not handled as accelerators when Caps are locked (1FZQDGR) When caps lock is on any CTRL key combination results in space being inserted in the text. Selected text is deleted/replaced with the space. To reproduce: 1. Turn on caps lock 2. Select text 3. Hit Ctrl+I to indent the text - > the selection is replaced with a space   NOTES: LK (8/15/00 11:40:12 AM)  Document in release notes. KR (8/15/00 11:44:44 AM)  This is a SWT bug. Run the test case below. Type some characters, turn caps lock off, type CTRL+R. This is handled as an accelerator.  Turn caps lock on and type CTRL+R again. On Linux a space is inserted, on Windows it is still handled as an accelerator.  import com.ibm.swt.*; import com.ibm.swt.widgets.*;  public class PR_1FZQDGR { public static void main(String[] args) { Shell shell = new Shell();   Text text = new Text(shell, SWT.MULTI); Menu menuBar = new Menu(shell, SWT.BAR);   MenuItem item0 = new MenuItem(menuBar, SWT.CASCADE); Menu menu = new Menu(menuBar);   MenuItem item1 = new MenuItem(menu, SWT.PUSH); MenuItem item2 = new MenuItem(menu, SWT.PUSH); item0.setText( " item0 " );   item0.setMenu(menu); shell.setMenuBar(menuBar);   item1.setText( " item1 CTRL + I " );   item1.setAccelerator(SWT.CTRL | ' I ' );   item2.setText( " item2 CTRL + R " );   item2.setAccelerator(SWT.CTRL | ' R ' ); Listener listener = new Listener() {    public void handleEvent(Event e) { System.out.println(e.widget);    } };   item1.addListener(SWT.Selection, listener); item2.addListener(SWT.Selection, listener); text.setBounds(shell.getClientArea());   shell.open(); Display display = shell.getDisplay ();   while (!shell.isDisposed ()) { if (!display.readAndDispatch ()) display.sleep ();   } } }  KR (8/15/00 12:22:41 PM) We don't need the fix for VAME 1.2.   McQ (8/18/2000 12:21:04 PM) - Linux applications handle the mapping of " shifted " (i.e. Shift or Caps Lock)   control character accelerators inconsistantly. I have seen some which behave like windows, and some which do not.    On windows, the platform behavior is to override the " shiftedness " of the    key when the control key is pressed. On X, it is not, so applications must handle both cases themselves.    Arguably then, we are providing platform behavior, but this is clearly unpleasant. I'll talk to SN about it when he gets back. KR (8/25/00 3:17:23 PM)  Do you mean that setAccelerator(SWT.CTRL | ' R ' | ' r ' ); should work? It doesn ' t.  JH (10/4/00 2:44:18 PM) Not a bug. Strangely enough, this is platform behavior.   McQ (10/1 0/2000 10:01:55 AM) -   Note: There *is* an issue here. Currently, there is *no* way to hook both the shifted and un-shifted version of the accelerator. PRODUCT VERSION: LF510/SWT 0.45 Patch 3 Tested on Linux/Motif. This works now. Accelerators are no longer case  sensitive.
Platform	Single List items should be selected by default If a list only contains a single item, it should probably be selected by default in order to cut down on the number of clicks it takes to navigate the UI. One example of this is in the Select Project wizard, where if you are selecting a Simple ... there is only one item so it should be selected by default. Thanks,  Thomas This is something individual views might want to do but we shouldn't do it in general.
Platform	Cheese on Java Scrapbook page ruler Bulid F1 on SuSe 7.3  1) Create a new Java Scrapbook page and open it 2) Right-click on scrapbook page editor's ruler  A tiny 3D square shows up on the ruler (it usually appears where the mouse is but sometimes appears at a completely different place)  Looks like it might be some sort of stray widget...  It disappears when focus is removed from the ruler.  This doesn't happen on Linux/Motif or Win32. The tiny widget is an empty popup menu. Fixed > 20020528.
Platform	[Coolbar] Turning on/off action set does not leave coolbar in previous state F2  Not sure what the expected behavior is here 1) Open a resource perspective 2) Window > Customize perspective, turn on Java element creation,OK 3) Window > Customize perspective, turn off Java element creation,OK 4) Note that there is a " gap " between the remaining coolbar items. 5) Window > Customize perspective, turn on Java element creation,OK The cool items are back but the gap remains. This was SWT Coolbar behavior, which has been fixed.  Verified this in no  longer a problem in 20021009 build.
Platform	Windows desktop hangs when changing system fonts I've only noticed this behavior in the latest nightly drivers, and I think in  the 20020425 integration build as well: I was trying to change system fonts, to test accessibility for help. On Windows 2000, with eclipse running, in Display Properties -- > Appearance,  change the icon font from Tahoma 8pts to Tahoma 10 pts and click Apply. The entire windows desktop hangs. If eclipse is not running, changes are applied  nicely. *** This bug has been marked as a duplicate of 14937 ***
Platform	Feature for internal editor Feature ' change tabs to spaces ' for the internal editor is missing. First cut in 20020312.
JDT	Adding project doesn't fix build errors If I have projects that depend on a missing project, they don't get correctly  recompiled after adding that required project.  For example: 1) I load our test suite projects into the workspace 2) Since JUnit project is missing, there are thousands of build errors 3) I " Add to workspace " JUnit from the repository 4) The build errors are not fixed 5) Full build all projects - > errors get fixed.  Incremental build should be able to handle this case... I wonder if this is related to the change in builder behaviour in the new drop?   At the end of a build, the java builder requests which projects it wants deltas for next time.  If the java builder is not requesting projects on the build path  that don't exist (in my example, JUnit project), then it won't be invoked when  the JUnit project gets added.  If this is what's happening, the fix is to  request deltas for all projects on the build path, whether they exist or not. From KJ:  This is one of the cases I was talking about yesterday... if I remember a project's classpath without the missing prereq project then when its added I  immediately do a full build. If I do not notice that a prereq project or an external jar doesn't exist, then  I end up with the current behaviour. ===========  The #resolve and #expanded classpath should filter out offending entries From KJ  I also need JavaProject to answer getRequiredProjects() & it MUST include the  missing ones. I do not think the builder should need to know about deltas in added previously  missing projects. This should be discovered as a major classpath changes. Also, the existing infrastructure requires project prerequisites to be passed  as a collection of IProject, which makes it hard to use for missing ones. I'm trying to keep the builder behaviour as simple and consistent as possible.   The rules about when a builder gets invoked are not set in stone (yet), but I want to avoid having special cases.  Current behaviour is: a builder is only  invoked if there is a change to a project that it has declared an interest in. I'm open to the idea of invoking builders for other situations (such as for  all added and removed projects), but only if there is a compelling reason.  In the case of the java builder, it knows what projects the user has specified on  the source path, so it should be able to provide them to us, whether they exist or not.  It seems easy to create instances of IProject for non-existent  projects on the classpath, and return them from the build() method. Should check with new builder The new builder includes missing projects in its list of dependent projects.
Platform	Up/down arrows gone in synchronize view I recently upgraded från M5 to F2, and to my disappointment found that the  browsing up/down arrows in the Synchronize view had disappeared. They were *great* for quickly going through a list of incoming or outgoing changes, to quickly check that the code you're about to commit or check out is correct.  The only way to accomplish this by now is to doubleclick on each and every folder on the way down the package path. Could you please reconsider  reinstalling the up/down button again? Moving to compare for comment. We removed them because other user complained about too many and confusing  up/down arrow buttons. Within a pane of the synchronize view you can always use the cursor keys to navigate and expand/collapse nodes.  Have you tried the global " Go to next Difference/Go to previous Difference " actions. They are in the Navigate menu and in the toolbar. No other user complained about this. Will reconsider after 2.1. Clsoing as this request is no longer valid (i.e. the sync view has had arros since 3.0.
JDT	[content assist] CodeAssist insertion - gets confused when inserting a prefix of current word Build 20011115  If I have code like: Iterator iter = new ArrayList().iterator(); while (iter.hasNext()){ Object element = iter.next < CODEASSIST HERE > Element();  } And perform codeassist where indicated, then #next() is available. If choosing it, then nothing happens, my insertion is discarded. since we are not using the eating code assist mode this is the expected  behaviour. We will be looking into a spring loaded mode for enabling the eating code assist. OK to close? closing - works as expected It should still insert the trailing ' () ' when I pick #next() proposal. moving to JDT text This has been fixed quite a while ago.
JDT	Lose instruction pointer In the debug view, have the top stack frame selected Select a variable with the details pane open (toString evaluation) Instruction pointer is gone. Have to reselect the stack frame to retrieve. *** This bug has been marked as a duplicate of 25701 ***
Platform	Sync: wrong message when there are no changes When you sync on a TM site, you get the message: " Workspace resources are the same as those released to the repository " This is wrong in two ways:  1. its not a repository for TM 2. for repos, we don't " release " -- in CVS we commit.  Recommend we reword: " Workspace resources are the same remote " fixed in F2 Verified fixed in F2.
Platform	Can add a configuration multiple time to preserved M5 Add a configuration to preserved Add it again  Maybe a core issue ? *** Bug 14683 has been marked as a duplicate of this bug. *** The actual semantics of this action is: " Create a clone of the selected configuration and add clone to preserved  configurations " .   Because of this, clones of configurations cannot be tested for equality and we cannot check if such a configuration already exists or not.   It definitely is not harmful, so we should allow you to do it if you want it (two configurations with the same name and the same feature complement will  look strange but there is no deeper reason for us to prevent this action).
Platform	Tree images too close together Eclipse F1 Windows 2000 I am sure this is just windows behaviour and ther eis nothing we can do but the  icons in a tree can run right up against one another and it looks bad.  See attached screenshot.  In this screenshot, the packages view is displaying a  bunch of icons for external applications.  There should be at least one pixel between the images. Sorry VI, platform behavior.
Platform	[Wizards] WizardPage should allow to set a warning Build 20020311  Wizard page should allow to set a warning. Currently I can only set an error message (with a hard wired) error icon. There are cases where I would like to show a warning (including a hard wired warning icon). It should be possible to press " Next " and eventually " Finish " . This can now be done via  setMessage(String , int ) in any DialogPage as of  2.0.
Platform	Internal Error while closing an editor version 0409  the only ' unusal ' i made, was to move one editor below another (so i had 2  editors visible at the same time). I have set the number of open editors to 6 (closing automatically) and there were 7 open editors. But i have no  reproducible case. I have resource, java, java browsing and debug perspective open. My ' feeling is saying ' something is wrong with the part were open editors are  closed when reaching the limit. Another note, i often open classes with ctrl+shift+t.  java.lang.NullPointerException at org.eclipse.ui.internal.EditorWorkbook.setVisibleEditor (EditorWorkbook.java:764) at org.eclipse.ui.internal.EditorWorkbook.remove (EditorWorkbook.java:526) at org.eclipse.ui.internal.EditorArea.removeEditor(EditorArea.java:175)  at org.eclipse.ui.internal.EditorPresentation.closeEditor (EditorPresentation.java:61)  at org.eclipse.ui.internal.EditorManager.closeEditor (EditorManager.java:105)  at org.eclipse.ui.internal.WorkbenchPage.closeEditor (WorkbenchPage.java:625)  at org.eclipse.ui.internal.EditorPane.doHide(EditorPane.java:76) at org.eclipse.ui.internal.EditorWorkbook$1.itemClosed (EditorWorkbook.java:122) at org.eclipse.swt.custom.CTabFolder.closeNotify(CTabFolder.java:306)  at org.eclipse.swt.custom.CTabFolder.access$12(CTabFolder.java:296) at org.eclipse.swt.custom.CTabFolder$4.handleEvent(CTabFolder.java:427)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836) at org.eclipse.ui.internal.Workbench.run(Workbench.java:819)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:190)  at org.eclipse.core.launcher.Main.run(Main.java:549) at org.eclipse.core.launcher.Main.main(Main.java:390) JDT is not involved in the stack trace - moving one layer down Apparently caused when closing the last editor in one workbook of a split editor area. As i said, i have no steps to reproduce this reliable. I tried a few scenarios  involving a ' split ' editor in a clean workspace with no problem. *** This bug has been marked as a duplicate of 12047 ***
Platform	StyledText - Bulleting proofing RTF copy function In our custom editor, we have our own line style provider. There's been times  when we have a bug in that code so that invalid StyleRanges are produced. That is, there may be too many of them, and they may have overlapping ranges. The  highlighting code actually deals with these with out error, and usually even produces the right highlighting (So, its hard to see that anything is wrong  visually). A problem occurs, however, if someone does a " copy to clipboard " operation on these bad ranges. Its during creation of an RTF form of the data. for the clipboard. In these cases a NegativeArraySizeException is thrown, which  of course looks pretty embarrassing. So, while I know the original error is in my code, I thought I'd suggest this low-level code be bullet proofed to never  throw an exception. In could just log the error, and return a generic " black " RTF string to clip board (or, no RTF at all). Not sure if this would count as a defect, per se, but please consider at least as a suggested improvement.  Top of stack trace below: java.lang.NegativeArraySizeException:   at org.eclipse.swt.custom.StyledText$RTFWriter.write (StyledText.java:597)  at org.eclipse.swt.custom.StyledText$RTFWriter.writeStyledLine (StyledText.java:693)  at org.eclipse.swt.custom.StyledText$RTFWriter.writeLine (StyledText.java:556)  at org.eclipse.swt.custom.StyledText.getPlatformDelimitedText (StyledText.java:3678)  at org.eclipse.swt.custom.StyledText.copy(StyledText.java:1810) at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:2370)  at org.eclipse.jface.text.source.SourceViewer.doOperation (SourceViewer.java:406)  at com.ibm.sed.editor.StructuredTextViewer.doOperation (StructuredTextViewer.java:474) A valid issue, which we won't have time to deal with for R2.0. To be  considered afterwards. Reassigning to KR since he's looking into some RTF issues. Fixed in > 20020726. Added regression test to StyledText JUnit test suite.
Platform	viewing two preference pages gp's I suspect that this will be fixed once bug#5992 is fixed, but I'm logging it  separately in case this isn't true.  Steps:  - Window - > Preferences - show the Workbench-Fonts page - show the Java-Editor page < -- crashes  The dump file was written empty. This is not the same as bug#5992.  A font is being set in a StyleText and then the font is disposed while the widget is still alive.  Here are the stack traces that set the font in the widget and that dispose the font:  ++++++++++++++++++++++++++++++ FIRST STACK +++++++++++++++++++++++++++++++ java.lang.Error  at org.eclipse.swt.custom.StyledText.setFont(StyledText.java:6042) at org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.createPreviewer(JavaEditorPreferencePage.java:336) at org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.createColorPage(JavaEditorPreferencePage.java:289) at org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.createContents(JavaEditorPreferencePage.java:401) at org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:194) at org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.createControl(JavaEditorPreferencePage.java:219) at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:685) at org.eclipse.jface.preference.PreferenceDialog$6.run(PreferenceDialog.java:393) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)  at org.eclipse.jface.preference.PreferenceDialog$5.widgetSelected(PreferenceDialog.java:385)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489) at org.eclipse.swt.widgets.SelectableItemWidget.selectNotify(SelectableItemWidget.java:1680) at org.eclipse.swt.widgets.SelectableItemWidget.selectNotify(SelectableItemWidget.java:1703) at org.eclipse.swt.widgets.SelectableItemWidget.doMouseSelect(SelectableItemWidget.java:613) at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:1031)  at org.eclipse.swt.widgets.Tree.handleEvents(Tree.java:806) at org.eclipse.swt.widgets.SelectableItemWidget$1.handleEvent(SelectableItemWidget.java:1189) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1531)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1387) at org.eclipse.jface.window.Window.runEventLoop(Window.java:536)  at org.eclipse.jface.window.Window.open(Window.java:523) at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47) at org.eclipse.jface.action.Action.runWithEvent(Action.java:453)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1531) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1387)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:729) at org.eclipse.ui.internal.Workbench.run(Workbench.java:712)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ +++++++++++++++++++++++++++SECOND STACK++++++++++++++++++++++++++++++ java.lang.Error  at org.eclipse.swt.graphics.Font.dispose(Font.java:113) at org.eclipse.jface.resource.FontRegistry.put(FontRegistry.java:382)  at org.eclipse.jface.preference.PreferenceConverter.setValue(PreferenceConverter.java:384)  at org.eclipse.ui.internal.dialogs.FontPreferencePage.performOk(FontPreferencePage.java:388)  at org.eclipse.jface.preference.PreferenceDialog.okPressed(PreferenceDialog.java:514)  at org.eclipse.jface.preference.PreferenceDialog.buttonPressed(PreferenceDialog.java:166)  at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:211) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1531) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1387)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:536) at org.eclipse.jface.window.Window.open(Window.java:523)  at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:453) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352) at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:489) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1531)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1387) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:729)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:712) at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.UIMain.main(UIMain.java:52) +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ Pls investigate. Looks like it is either a defect in the JFace FontRegistry  support or a problem in the JDT - UI By following the simple steps as reported in this PR using Eclipse build 2001- 11-07, I cannot reproduce this problem. I can switch between both pages without  any problems. I can change the default text font (Workbench - > Fonts page),  apply the changes, switch to the other Java Editor page without any problems. Could more detail steps be provided to reproduce this problem? Can the build  number also be specified? The only problem I find is when I press the OK or Cancel button, all of Eclipse  dies. I'm going to investigate to see if it has anything to do with this font  problem or if this is new problem to be reported. I can't reproduce this in 1122 now, but it was quite easy to do so in previous  builds.  So it seems that a fix has been made here recently, perhaps inadvertently (?).  This PR can be closed. Original reporter cannot reproduce this problem also. No one on the UI Team has  made any changes to Font management is the last 4-5 weeks. Maybe JDT changed the Java editor preference page that eliminated this problem.  The problem report will be closed Note, another potential font problem was discovered during my research into  this problem and has been reported as bug#6334
Platform	[Viewers] TreeViewer.update() does not work correctly with filter When I add an element which does not satisfy the filtering condition and then  update it so that it does, call to update does not show the element. This is because[StructuredViewer.update]: public void update(Object element, String[] properties) { Assert.isNotNull(element); | Widget item = findItem(element); | if (item == null) |  return; the code silently ignores that the element may become visible...  btw. later in code of this method: if (needsRefilter) {   refresh(); return;  } This is quite inefficient, as it needs to query all visible items; however only  one element may actually change (change visibility and/or sort order). Can you please give a more concrete example of how you do this? Here are the  steps I followed: 1) Open the Resource Perspective 2) Selected the .* filter. 3) Created a file called *.fred 4) It is not shown 5) Opened another window 6) Renamed .fred to red.fred 7) It showed up  The update should have occured as a result of the rename. Please give more details of what you are doing. I've created a simple filter   public static class NonWSTextFilter extends ViewerFilter { public boolean isFilterProperty(Object element, String  property) { return true;   } public boolean select(    Viewer viewer, Object parentElement,    Object element) { if(isWhiteSpaceString(((IText)element).getText())) return false;    return true; }   and simply call IText t = new Text(parent, ' ' ); tv.add(t,parent); //text is not shown  later on, I call t.setText( ' aaaa ' ); tv.update(t); // text isn't shown either!  but if I start with t = new Text(parent, ' bbb ' );, update works fine... (my labelProvider shows the text, so I see that it has changed)  btw. I'm afraid that file rename is dispatched as REMOVE and ADD, therefore  remove() and add() will be used - and this obviously works... Just see the semantics of findItem - it returns null if the element is not  visible, therefore if I try to call update(), the element will remain invisible, although it should show up There are no plans for the UI team to work on this defect until higher priority  items are addressed. If you would like to work on this defect, please let us know on the platform-ui- dev mailing list. As a workaround, the content provider can call add instead of update in this  case. Is this still an issue in 3.2? (In reply to comment #4) > Is this still an issue in 3.2? > Yes, I just ran into it using 3.2 final. This is not my first encounter: I first banged my head on it with JFace 2.1.1. Although the doc for StructuredViewer.update () states " If the viewer has a filter which is affected by a change to one of the properties, the element may appear or disappear if the change affects whether or not the element is filtered out. " , the code is simply:    Widget[] items = findItems(element);    for (int i = 0; i < items.length; i++) {     internalUpdate(items[i] , element, properties);   } Which will do nothing for items that are filtered out.  It would be nice if, until this is fixed, at least the doc could be changed so as not to blatently mislead :/
Platform	[CVS UI] UI glitch in releasing changes - (modality, async) When you release a change, a progress dialog appears with a cancel button.   Immediately after, another Dialog appears asking you to type a release comment.  If you are fast with the Enter key like me, you can press  the " Cancel " button on the progress dialog, but still get prompted after  pressing it to type in a release comment.  Then, when you press OK on the release comment Dialog, the release is cancelled.  I am less likely to run into this now that I have to press Ctrl+TAB, folled by Enter, since the release comment is now SWT.MULTI-line.  However, I bet this  problem is not unique to this scenario. We should prompt for release comment earlier, before opening progress dialog.  Its not cool to have two dialogs open at the same time and leads to usability problems such as this. Investigated, required more work than originally hoped. This no longer occurs in new sync view.
Platform	[resources] Unexpected CASE_VARIANT_EXISTS errors I create a simple project called " Test " and just use the default location. I  then create another simple project called " test " and specify the location to  be " d:\temp\junk " (i.e a directory outside my workspace). I get an  CASE_VARIANT_EXISTS error. Does not seem like the expected behavior. I'm using build 2002-01-24 The method will fail because a case variant in the workspace already exists.   What is the behaviour that you expect? I thought the case variant stuff only applied to the actual file system  directory specified for the location. That the workspace itself was case sensitive.  Am I correct to say that on Linux, this scenario is permitted, but not on Windows because this OS is case insensitive - even though the limitation in  this scenario is imposed by the workspace, not the file system of the OS? We (ui team) need to understand how this works and what are the limitation so we  can find a way to show this to the user - it will not be obvious to the user this scenario is not allowed. I discussed this with Simon on Friday and it seems to be a bug.  Since the two  projects are in different locations, there is no filesytem collision so we should allow it. . Closed by accident, reopening... DJ, I thought you might want to take a look at this since you've completely  rewritten that code. Still a problem in build 2002-04-09.  We should allow different casing in the workspace if the user is not using the default content area.  Investigate complexity to fix to see if it is reasonable for 2.0. Still a problem with build i1026. Even thought it's technically possible to create these two projects, we can't allow it.  We store several types of meta-data on a per-project basis in the local file system (.projects directory, .history directory). These metadata directories would collide if we allowed both of those projects to exist. Closing as won't fix.
JDT	Incorrect path for internal library if missing from other project Build F2  The UI for editing library entries is converted internal JARs from other projects into ones rooted at the project which classpath is being set, as soon as the target is missing, and that a corresponding one is found locally. This may result in confusing validation error messages.  1. Define project P1 (== src==bin) 2. Add folder named ' lib ' to P1 3. Define project P2 4. Add folder named ' lib ' to P2 5. Edit P1 classpath to add classfile folder /P2/lib 6. In navigator, rename /P2/lib into /P2/lib2 7. Now in P1 classpath properties, try to edit the library entry to make it point at ' /P2/lib2 ' Observe that has reverted the entry path to ' /Crap/lib ' silently. error message is confusing - not critical enough for 2.0 I don't think this is an error message issue, it actually did change the  classpath entry underneath. Reopening Please investigate. We should fix this one for 2.1 in 20021029, in step 7, the classpath still is the old one. The build path  wizard says: classpath entry not existing. On the library page, you see P1/lib (will be created).  I think this is a acceptable behaviour. I couldn't observe a classpath change.  Navigator- > rename does not update classpath entries, Refactoring- > Rename does Filed another bug 25538 that Refactoring- > Rename fails in this example I agree, the problem is no longer visible.
Platform	[KeyBindings] Ctrl+W should close the current editor In M5, Ctrl-W is mapped to open the dialog showing open editors and will soon be unmapped as the dialog is going away. To work most like other IDEs, Ctrl-W should be mapped to close the currently viewable editor. This should work regardless of whether the editor view has focus. Note that Ctrl+F4 does this (or Alt+F, C).  Other apps based on Eclipse use Ctrl+W (e.g. WSAD's HTML editor uses it for  Format). However, I agree that many apps allow both Ctrl+W and Ctrl+F4.  And I believe it's some kind of hardwired behaviour for Mac users < g > . If ctrl-w closes and editor, then one use to working with eclipse might expect  ctrl-shift-w to close all editors.  ctlr-shift-w is currently used by the WorkbenchEditorsDialog.  Perhaps it could be remapped if ctrl-w starts closing  editors. ctrl+w is currently used in the ' text editing ' scope to shw the ruler context  menu. ctrl+w (along with ctrl+shift+w) is commonly used to close (or close all) windows. (on the mac, command+w and command+shift+w).  from personal experience, a number of people have mentioned to me that ctrl+w to close windows is a very common key customization they use. erich has  mentioned he uses this, i know nick edgar uses it as well, for instance. the key interferes with cut on emacs as well. i was wondering if show ruler  context menu could use a different key other than ctrl+w. if so, please send bug back to me once you remove it and i will add key bindings in  org.eclipse.ui for close and close all. On Windows there's a key which opens the context menu. It would be best if we could hook it to this key (e.g. Ctrl+PopupMenu). But AFAIK this (Windows) key is neither supported by the key binding preference page nor SWT.  Kai, please decide whether we want to change this. Please note that in most Emacs key bindings Ctrl+W is " Cut " . See also bug 47301 Why not just take Ctrl+F10 for " Show Ruler Context Menu " ?  That key binding is already mapped to " Show View Menu " in General, which fulfills almost the same task in Views. It's my first re-mapping in every new workspace to free Ctrl+W. It would also be in line with other menu-activation commands: F10 - > Main, Shift+F10 - > Context.  Then we could take Ctrl+W for Close in standard bindings and use it for whatever in emacs. Ctrl+Shift+A would be a nice candidate for " Switch to Editors " (Show List of *A*ll Editors) *** This bug has been marked as a duplicate of 48244 ***
JDT	Missing Create a new class.  Decide to copy the package imports and the first method from another class,  so go to the other class and select the text from the first import statement to the end of the first method,  copy it, go to the new class, select almost everything except for the package statement and the final }  and paste overtop.  Forget to change the pasted class name back to the new class name, and save.  You get the dialog that asks if you want to rename the compilation unit to the new name. (Yes/No)  No, you don ' t, but if you click " No " , you will mess up the constructor  names. What you *really* want here is a cancel button in the dialog.  NOTES: CM (6/5/2001 11:24:55 AM)   I opened a similar PR before, but against a different dialog: 1GDSCT6: ITPJUI:ALL - Missing Cancel button on " Move  Compilation Unit? " dialog  EG (6/5/2001 9:43:07 AM) annoying, but not critical, defer ' smartness ' on save has been removed - now, when you edit, we do not do any  magic for you. if the user wants smartness, they are asked to use refactoring. editing does not trigger it. so, this problem does not longer exist PRODUCT VERSION:  118
JDT	Classpath marker refresh with remote roots Build F2  It is possible that resource changes will not result in proper classpath marker updates.  Steps: 1. Define project P1 2. Define project P2 3. Add internal Jar P2/x.jar 4. Refer to P2/x.jar from P1 classpath 5. In navigator, rename P2/x.jar into P2/y.jar  Observe that P1 doesn't get a classpath marker indicating the problem.  === Similar issue if renaming back the JAR or using remote classfile folders. Not easy to change without affecting performance (the DeltaProcessor pre build  check is responsible for discovering such scenarii, and would need to compute the set of roots and traverse the delta deeper than just the project level).  Suggest deferring post 2.0 Deferring Problem still exists in latest 2.1 build (20030211). Only when building will it  be discovered. It feels though that the cp marker update should catch this scenario though,  since roots are always computed on each delta processing ? Reopening for investigation, no commitment to improve. (Re)Defer We would need to traverse the resource delta in PRE_AUTO build to handle this  scenario. Right now we only handle changes to the project (added, removed, renamed...) Asking for manual refresh doesn't seem like a bad idea. We tried to automatically refresh on project opening, but this can create deadlock during plugin import. Not for 3.0
Platform	Can create new file in a read-only project Build: 20020602 (F2)  It is possible to create a new file in a project that is marked (via the Info property page) as read-only. The same goes for read-only folders. Moving to Core for comment. IResource.setReadOnly sets the read-only flag on the resource in the local  file system so we inherit that behaviour. On Linux if you create a read-only directory you are not allowed to create  files/folders within it. On Win32 if you create a read-only directory you are allowed to create  files/folders within it. (but you are not allowed to delete the directory itself)  That being said, the concept of having a read-only project is not going to be supported by Eclipse since many Eclipse files (.project, .classpath, etc)  exist in the project's content area.
JDT	drag ' n ' drop - cannot dnd a file from a package to a resource folder (1GDF2T8) AK (5/8/01 7:00:46 PM)  i keep .java files as resources and want to put them in a resource folder - it's not possible  NOTES: DB (10.05.2001 10:19:09)  I tried to move / copy *.java files in resource folders via drag and drop and this is possible. Moving *.java from a source folder / package to resource folder is not possible. But this has nothing to do  with DnD. It is a smart reorg problem. TM (5/23/2001 15:52:48)  This is intentional (which doesn't mean it's the right behaviour). Only package fragments are  considered valid copy/move targets. The reason for this is that we use ISourceManipulation (a java model interface) for moving   java compilation units (and it accepts only IJavaElements as move/copy targets). There are is another problem with this: When you move a java file (say Foo.java) from outside  the build path into a package, the package declaration is not updated, because we're doing a   regular resource move. while we can fix the original PR with a (major) fix to the reorg code, the second problem  can't be adressed with the current API ' s.  EG (5/25/01 7:31:08 PM) defer, readme  AK (9/17/2001 5:12:07 PM) fixed in 201 ficed in 201 PRODUCT VERSION:  104a *** Bug 36368 has been marked as a duplicate of this bug. ***
JDT	No code complete in JavaDoc for methods in the same type [javadoc] Build 20020602  1. Create the following class: public class A {   /** * Doc for a    */ public void a() {   } /**    * @see A# */   public void b() { } } 2. Put your cursor in the JavaDoc for method b() after the ' # ' . 3. Hit ctrl+space to get code completion proposals. Nothing shows up. 4. Create a class B like so: public class B { /**    * @see A# */   public void b() { } } 5. Repeat steps 2 and 3 for the method B#b(). Code complete correctly  displays the methods on A. In the first test case, code complete should display the methods on class  A. It doesn ' t. defer works in 2.1
Platform	TreeViewer bug preserving expansion state I'm using a TreeViewer and I've noticed that the expansion state doen't seem to  be preserved correctly when model objects are inserted or removed. If I have the following tree, where A,B, and D are expanded.  [-] A      [-] B      [+] C      [-] D  Then I add an X object into my model before B ... which triggers a viewer.refresh().  Now A, X and C are expanded.    [-] A      [-] X      [+] B      [-] C      [+] D  There appears to be a bug in the AbstractTreeViewer code (likely in the updateChildren() method) such that the item.getData() information is not being  respected when attempting to preserve expansion state.  The result (as shown above) is that the expansion state is associated with the wrong tree items. *** Bug 15562 has been marked as a duplicate of this bug. *** *** Bug 14959 has been marked as a duplicate of this bug. *** *** This bug has been marked as a duplicate of 3840 ***
Platform	weird behaviour when opening view I use R2.0 I use WinXP (with hebrew " support " )  I was opening CVS log view and suddenly all views+editors disappeared. I found this in the log:  !ENTRY org.eclipse.ui 4 4 àåâ 09, 2002 19:41:19.195 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 àåâ 09, 2002 19:41:19.275 !MESSAGE java.lang.ArrayIndexOutOfBoundsException !STACK 0 java.lang.ArrayIndexOutOfBoundsException  at org.eclipse.swt.custom.StyledTextBidi.isRightToLeft (StyledTextBidi.java:834)  at org.eclipse.swt.custom.StyledTextBidi.getLigatureEndOffset (StyledTextBidi.java:566)  at org.eclipse.swt.custom.StyledTextRenderer.getLineStyleData (StyledTextRenderer.java:554)  at org.eclipse.swt.custom.DisplayRenderer.getLineStyleData (DisplayRenderer.java:227)  at org.eclipse.swt.custom.StyledTextRenderer.getStyledTextBidi (StyledTextRenderer.java:617)  at org.eclipse.swt.custom.StyledText.getStyledTextBidi (StyledText.java:3978)  at org.eclipse.swt.custom.StyledText.getStyledTextBidi (StyledText.java:3962)  at org.eclipse.swt.custom.StyledText$ContentWidthCache.contentWidth (StyledText.java:1025)  at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate (StyledText.java:983)  at org.eclipse.swt.custom.StyledText.computeSize(StyledText.java:1799) at org.eclipse.swt.layout.GridLayout.calculateGridDimensions (GridLayout.java:244) at org.eclipse.swt.layout.GridLayout.computeLayoutSize (GridLayout.java:326) at org.eclipse.swt.layout.GridLayout.computeSize(GridLayout.java:373)  at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:505) at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:701)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method) at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216)  at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method) at org.eclipse.swt.widgets.Control.setBounds(Control.java:1749)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1734) at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:97)  at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:701) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216) at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)  at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:716) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216) at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1749) at org.eclipse.swt.widgets.Control.setBounds(Control.java:1734)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1783) at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:202)  at org.eclipse.ui.internal.PartTabFolder.setControlSize (PartTabFolder.java:810)  at org.eclipse.ui.internal.PartTabFolder.setSelection (PartTabFolder.java:841)  at org.eclipse.ui.internal.PartTabFolder.setSelection (PartTabFolder.java:828)  at org.eclipse.ui.internal.PartTabFolder.add(PartTabFolder.java:85) at org.eclipse.ui.internal.PartTabFolder.add(PartTabFolder.java:106)  at org.eclipse.ui.internal.PerspectivePresentation.stackView (PerspectivePresentation.java:1511)  at org.eclipse.ui.internal.PerspectivePresentation.stack (PerspectivePresentation.java:1484)  at org.eclipse.ui.internal.PerspectivePresentation.addPart (PerspectivePresentation.java:136)  at org.eclipse.ui.internal.Perspective.showView(Perspective.ja va:1291)  at org.eclipse.ui.internal.WorkbenchPage.busyShowView (WorkbenchPage.java:556)  at org.eclipse.ui.internal.WorkbenchPage.access$7 (WorkbenchPage.java:538)  at org.eclipse.ui.internal.WorkbenchPage$11.run (WorkbenchPage.java:2252)  at org.eclipse.swt.custom.BusyIndicator.showWhile (BusyIndicator.java:66)  at org.eclipse.ui.internal.WorkbenchPage.showView (WorkbenchPage.java:2249)  at org.eclipse.ui.internal.WorkbenchPage.showView (WorkbenchPage.java:2239)  at org.eclipse.ui.internal.ShowViewMenu.showOther (ShowViewMenu.java:163)  at org.eclipse.ui.internal.ShowViewMenu.access$0(ShowViewMenu.java:148) at org.eclipse.ui.internal.ShowViewMenu$2.run(ShowViewMenu.java:39)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:749) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361)  at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352)  at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) !ENTRY org.eclipse.ui 4 4 àåâ 09, 2002 19:42:00.865 !MESSAGE Unhandled exception caught in event loop. !ENTRY org.eclipse.ui 4 0 àåâ 09, 2002 19:42:00.885 !MESSAGE java.lang.NullPointerException !STACK 0 java.lang.NullPointerException at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:528)  at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:701) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216) at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1749) at org.eclipse.swt.widgets.Control.setBounds(Control.java:1734)  at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:97) at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:701)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method) at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216)  at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method) at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:716)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method) at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216)  at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73)  at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738) at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992)  at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method) at org.eclipse.swt.widgets.Control.setBounds(Control.java:1749)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1734) at org.eclipse.swt.widgets.Control.setBounds(Control.java:1783)  at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:202) at org.eclipse.ui.internal.PartTabFolder.setControlSize (PartTabFolder.java:810) at org.eclipse.ui.internal.PartTabFolder.access$5 (PartTabFolder.java:802) at org.eclipse.ui.internal.PartTabFolder$3.handleEvent (PartTabFolder.java:196) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)  at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)  at org.eclipse.swt.widgets.Control.WM_SIZE(Control.java:3802) at org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java:305)  at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:702) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2726)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)  at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1216) at org.eclipse.swt.widgets.Scrollable.callWindowProc (Scrollable.java:73) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2738)  at org.eclipse.swt.widgets.Display.windowProc(Display.java:1992) at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1749) at org.eclipse.swt.widgets.Control.setBounds(Control.java:1734)  at org.eclipse.swt.widgets.Control.setBounds(Control.java:1783) at org.eclipse.ui.internal.PartTabFolder.setBounds (PartTabFolder.java:796) at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:162)  at org.eclipse.ui.internal.LayoutTreeNode.setBounds (LayoutTreeNode.java:292)  at org.eclipse.ui.internal.LayoutTreeNode.setBounds (LayoutTreeNode.java:292)  at org.eclipse.ui.internal.PartSashContainer.resizeSashes (PartSashContainer.java:421)  at org.eclipse.ui.internal.PartSashContainer.dispose (PartSashContainer.java:205)  at org.eclipse.ui.internal.PerspectivePresentation.deactivate (PerspectivePresentation.java:400)  at org.eclipse.ui.internal.Perspective.onDeactivate (Perspective.java:681)  at org.eclipse.ui.internal.WorkbenchPage.setPerspective (WorkbenchPage.java:2110)  at org.eclipse.ui.internal.WorkbenchPage.busyResetPerspective (WorkbenchPage.java:504)  at org.eclipse.ui.internal.WorkbenchPage.access$5 (WorkbenchPage.java:465)  at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1838) at org.eclipse.swt.custom.BusyIndicator.showWhile (BusyIndicator.java:66) at org.eclipse.ui.internal.WorkbenchPage.resetPerspective (WorkbenchPage.java:1836) at org.eclipse.ui.internal.ResetPerspectiveAction.run (ResetPerspectiveAction.java:54) at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)  at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:775) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324)  at org.eclipse.core.launcher.Main.basicRun(Main.java:248) at org.eclipse.core.launcher.Main.run(Main.java:698)  at org.eclipse.core.launcher.Main.main(Main.java:534) Looks like a problem in StyledTextBidi. Moving to SWT. The ArrayIndexOutOfBoundsException is fixed as part of bug 22060. The first  integration build the fix is in is 20020806. I'm not sure that this is the cause of the NPE though. The GridLayout that was  throwing the NPE may have been left in some bad state because of the ArrayIndexOutOfBoundsException in StyledTextBidi.  I can't reproduce the problem with 2.0 on a Hebrew Windows NT. Did you see this  problem again since you opened this bug? I will comment this bug if it happens again Closing. Reopen if you see this again.
Platform	O2. Alphabet Soup splash does not come up The replaced splash screen does not come up. Could be a problem with the test case (on Win it does come up) If I place the eclipse splash.bmp directory into the my.alphabet_1.0.0 plugin, the eclipse splash shws. So this would appear to be a problem with the imagein the test case. test case problem
Platform	shortcut for closing view build 2002-03-14 on Win98.  There doesn't seem to be a shortcut for closing a view. (I checked the doc on  the team web page) See also Bug 11504 which doesn't allow me to bring up the view menu to close  the view that way. Use close off of the " system " menu: Alt+- (hyphen).
Platform	Combo.setText is insufficent if you have a combo that has the number 99 as an iten in its list, and you do  combo.setText( " 9 " ) then instead of the selection being -1, and 9 being  displayed in the text area of the combo, you get " 99 " being selected in the  text area. So basically the first item in the combo list that matched the " 9 " was selected. While this might be an OS behavior, it is insufficient! what if I *do* want  only 9 and not the 99 item, how do I set the text to 9? *** This bug has been marked as a duplicate of 10632 ***
JDT	Snippet evaluation returning wrong result? Build 20020530 IBM JRE 1.3.0 1) Define the following class  public class A { public static void main(String[] args) { new A().run();  } private void run() {   int first = (254 & 0xFF);//converts unsigned byte to int   int second = (255 & 0xFF);   if (first == 0xFE & & second == 0xFF)    System.out.println( " true " );   else System.out.println( " false " );  } }  2) Add a breakpoint on the first line of the run method 3) Launch in debug mode 4) Step over the first two lines, so that " first " and " second " are defined 5) In the Display view, evaluate the following snippets (results included): first == 0xFE & & second == 0xFF   (boolean) false first == 0xFE   (boolean) false second == 0xFF   (boolean) false 6) Now step over the if statement.  Observe: It evaluates to true!  Now can this be?? Am I hallucinating? The problem in this case was in the management of the optional suffix used for defined the type of a literal number (L for long, F for float and D for double). The code assumed that if the last caractere was not a digit (0 .. 9) or a ' . ' , we could remove it. That didn't work for hexadecimal literals.  The new code in ASTInstructionCompiler#visit(NumberLiteral) remove automaticaly the suffix for long and float literals, and only if there is one for double literals. Verified. Really...
Platform	[Navigator] Navigator View. Problems with ' Go Into ' action from a clean F1 build, import all plugins from runtime environment to get some projects pack a project (say org.eclipse.ant) go into, go up, go back, go back, works fine. close the project. forward is still enabled, but the first forward goes to a blank screen. perhaps closing projects should clean up the history, or some text should appear in  navigator view such as ' project is closed ' further problem: having some history now, open up another project (say  org.eclipse.lucene) and select a folder (say ' bin ' ) ' Go Into ' is enabled. Click  it and it doesn't seem to do anything. Click forward then back. Notice now ' Go  Into ' is disabled. Can't reproduce the second problem. After I tried going into a closed project I  could still successfully go into a folder of an open project. Fixed in > 20030116 An information message is displayed when an attempt is made to switch to a frame that is in a closed project.
JDT	Context menu of Snippet editor has conflict on ' e ' Insp & ect and Stop & Evaluation  Since Inspect is used in many other contexts, Stop evaluation should be changed Candidate for F3 Fixed.  Changed ' Stop Evaluation; to ' o ' .  Please verify. Verified.
Platform	Option for " CVS Server Name " Connect to anonymous@cvs.slashcode.com:/cvsroot/slashcode Expand HEAD. The CVS repository reported problems.  cvs-sf server: Updating . cvs-sf server: New directory `CVSROOT ' -- ignored cvs-sf server: New directory `Comments ' -- ignored cvs-sf server: New directory `SimpleStory ' -- ignored ... etc for `new-slashd ' , `slash ' , `slash-bak ' and `slash-stats ' .  Nothing appears in the tree under head. There should actually be 6 items in the tree.  NOTES: KM (6/12/01 12:41:05 PM)  CVSROOT is magic and we don't store locally.  JEM (6/12/01 1:02:12 PM) Yup. The 6 items should be Comments, SimpleStory, new-slashd, slash, slash-bak and slash-stats.  Jean-Michel (6/12/01 1:49:28 PM) The server running at this site is customized. Notice that the output shows ' cvs-sf server: ' instead  of ' cvs server: ' . The cvs adapter is not able to parse the modified server messages. We need a cvs preference of the type " cvs server name " . This option can be  found in WinCVS and other CVS front ends. PRODUCT VERSION:   122 (Was: Error expanding head on cvs.slashcode.com (1GF7LUT)) post 2.0, would need to be state on CVS location Reopening *** This bug has been marked as a duplicate of 22828 ***
JDT	Open Type Dialog Box doesn't persist new size Open the Open Type dialog box and resize the window. Close the box and open  again, the size isn't remembers. fixed > = 20021115 (not in M3 build) position and size are remembered.
Platform	RetargetAction never unregisters listeners which lead to leaks F1  RetargetAction adds a listener in its constructor ! and then never removes it.  that listener is an inner class, so it has a reference to its enclosing instance, which then has a reference to (among many other things) active part and then to everything else there is ....  scenario: 1. open java browsing perspective 2. close 3. open again between 2 and 3 there are 31 instances of RetargetAction leaked (plus other things too) i was wrong about the adding in constructor. now i think bug 17232 is a better description of what is happening *** This bug has been marked as a duplicate of 17232 ***
Platform	NPE when changing pages in preference dialog nightly build 0517, likely happens on all platforms  - open the preferences dialog - click on any top-level preference page tree item (eg.- Java) and get the  attached exception - the exception does not occur if preference pages in the tree are traversed  using the arrow keys instead of the mouse Will fix for today's build. Fix released.
JDT	Referenced libraries filter does not hide libraries [filters] [build path] The referenced libraries filter hides only external libraries. Eclipse seem to the following additions to the CLASSPATH: 1) Jar part of the project (button " Add JARs... " ) 2) External Jars (button " Add External JARs... " ) 3) Add Variable, for Use of CLASSPATH variables (button " Add Variable... " ) 4) Advanced, to add a directory or RT.jar to the CLASSPATH button " Advanced... " )  The filter hides case 2 and 3 but not 1. Nr 4 appears as a source package. Works as designed. NOTES: - there is now a description which also explains the behavior. - if in 1) you selected a JAR from another project (hence referenced) the filter would filter it. I'd appreciate a filter for " internal " libraries. There are several other feature requests for this.
Platform	Properties accelerator missing ENTER Build GM5 Linux/GTK  In the file menu, the accelerator listed for Properites is ' Alt+ ' . It should show ' Alt+ENTER ' . Selecting a file in the navigator and hitting ALT+ENTER *does not* open the properties dialog. This appears to be GTK only. Fixed > GM6.
Platform	Classpath preference description is clipped The full description is: A classpath variable can be added to a project's class path. It can be used to  define the location of a JAR file that isn't part of the workspace. The  reserved class path variables JRE_LIB, JRE_SRC, JRE_SRCROOT are set internally depending on the JRE setting.  However the description ends after defined. desktop. It updates properly when the window is resized, the JDT is using SWT.WRAP  properly. There may be other cases where this occurs. Fixed in PreferencePage
JDT	alter import statements on " move " -refactoring In my opinion the main problem on moving classes from one package to another is  not the change of the package statement, but it is the change of the import statements of those classes, which use the class to move.  Moving a class from on package to another schould alter all depending classes and change or create the import statement for the moved class. can you provide a simple example when this does not work now? i cannot  reproduce it my test case package p  class A in A.java package q (empty) package r class B (B.java) referring to A  moving A.java to q correctly updates import in B.java (adds one uselessly though - see bug 10888)  closing - please reopen if you see it failing
Platform	[Error Handling] Out of memory conditions Build: 20020321  OS: Redhat Linux 7.2 with Motif Description: I'm running some benchmarks to compare typing in the plain text editor to typing in the Java editor.  I simulate typing by getting a reference to the StyledText widget in the editor and then calling StyledText.notifyListeners(Event) with a key-down event.  In Linux, the Java editor case runs to completion (the first 255,000 characters of org.eclipse.swt.custom.StyledText.java) but the plain text editor case fails.  I can't find a stack dump, or even a virtual machine core dump.  When it fails, the screen flashes black, and then shows me the login screen.  When I log in again, it's as if I had just powered the machine on.  There is no indication that the benchmark had been running. I think the problem might have something to do with the auto-indentation.  In both the Java editor and the text editor, the indentation slowly gets bigger and bigger because I haven't stripped the indentation from the source file.  The difference is that, in the Java editor, typing a ' } ' resets the indentation a bit.  The text editor doesn't do that, though, so the StyledText has to scroll further and further to the right (9,000+ columns).  I'm wondering if the number of columns just gets too big for the StyledText to handle. The same benchmark also caused a problem on Windows that I am trying to repeat right now.  I think the error message that it produced was something like a duplicate memory allocation error from the VM.  If and when the test bombs on Windows, I'll add a PR and refer to this one.  I'm also going to try to attach a zip of my benchmark test case. I couldn't create the attachment, but I've put the zip in walleye under outgoing/ian. The zip file is a snapshot of my workspace.  Hopefully everything necessary is in it, but here's my setup, just in case:  I've imported all of Eclipse as binary projects, and I have the org.eclipse.pde.junit plugin installed.  To run the test case, launch EditTextFileBenchmark with the JUnit Workbench launcher.  EditTextFileBenchmark is in /org.eclipse.benchmarks/Java Tooling/org.eclipse.benchmarks.jdt I've discovered that the problem is an OutOfMemoryError.  I'm re-running the test to find out what character index I reach before causing the error. The problem is definitely a result of the auto-indent feature.  After typing 141,582 characters, the text widget contained 20,509,104 characters, so the OutOfMemoryError isn't really a surprise.  Why does the plain text editor auto-indent? Sounds like a problem with StyledText. I'm giving this a lower priority since it only occurs under strange  circumstances. The StyledText widget does not supply an auto-indent feature.  This is  something that the JFace Text Editor is doing.  Reassigning to Kai.  As indicated, it sounds like the basic JFace Text Editor just shouldn't auto- indent. However, if the StyledText crashes when the line is too long, then this should  be fixed too. Sorry, I skipped the fact that it was an OutOfMemoryError.   I thought it was some other exception in a call to the OS from StyledText. StyledText clearly can do nothing in this case. Removing auto indent does not help as it just pushes the boundaries of the  problem. Eclipse does not have any OutOfMemory story outside of operations. Depending on the position in the calling chain, we just crash. Normally, you  don't see the crash, as it first happens inside operations such as build.  No action for 2.0. Kai, are you still the right person to own this PR?  Should it be moved to  Platform Text? Reopening bug for consideration. Fatal errors are logged and reported by the platform UI, but as Kai has raised the solution of handling such conditions can involve other components as well. *** Bug 12391 has been marked as a duplicate of this bug. *** this bug is marked 2002 and is still open - is it still an issue? This is still an open issue, being tracked as bug 33972.  *** This bug has been marked as a duplicate of 33972 ***
Platform	setVisible() slams previously set focus. If you have a shell where you want to make one control no longer visible and  make another shell visible the setFocus() method in Composite sets the focus on the first widget no matter if focus was previously set    for (int i=0; i < children.length; i++) {   Control child = children [i] ;   if (child.setFocus ()) return true; The problem is that if one the children already has focus set previously it it  cleared out. A check for all of them to see if anyone hasFocus would be better first so that if there already is one with focus focus does not get slammed. If the shell was invisible, then none of its children had focus, so unless  we remember this ourselves (we may, I haven't checked, but typically  doing things like that gets you in trouble), we can't do what you want.  SN to comment. The problem is not that the previous one was invisible - it was that setVisible (false) was sent to the one we want to get rid of. As a result it will setFocus on the first widget of the remaining one whether it is visible or not. Right, setFocus sets the focus.  It doesn't restore previous saved focus  widgets or anything like that.  Otherwise, it could never be used to set focus to a widget.  I'm pretty tired so I may not quite understand.  Could you code a short  example?  We (VI and me) have recently played with " setVisible(false)  reassigning focus if the focus was in the widget tree " and this could be a  change that is burning you. Here is an example  If you press the open with composite focus button the focus will be on the first (incorrect) widget. If you press the open without composite focus button the focus will be on the last (correct widget).   import org.eclipse.swt.SWT; import org.eclipse.swt.events.SelectionEvent; import org.eclipse.swt.events.SelectionListener; import org.eclipse.swt.layout.GridData; import org.eclipse.swt.layout.GridLayout; import org.eclipse.swt.widgets.*;  public class WindowFocusTest { public static void main(String[] args) { final Display display = new Display();   Shell shell = new Shell(display); GridLayout layout = new GridLayout(); shell.setLayout(layout);    Button labelButton = new Button(shell,SWT.PUSH); labelButton.setText( " Open Window With Composite Focus " );   labelButton.addSelectionListener( new SelectionListener(){     public void widgetSelected(SelectionEvent e){ openWindow(display,true);     }; public void widgetDefaultSelected (SelectionEvent e){} }); Button labelButton2 = new Button(shell,SWT.PUSH);   labelButton2.setText( " Open Window Without Composite Focus " );   labelButton2.addSelectionListener( new SelectionListener(){     public void widgetSelected(SelectionEvent e){ openWindow(display,false);     }; public void widgetDefaultSelected (SelectionEvent e){} }); shell.setBounds(0,0,300,100);   labelButton.setVisible(true); labelButton.pack();   shell.open(); while (!shell.isDisposed()) {    if (!display.readAndDispatch()) display.sleep();   } display.dispose();  } /* * Open a window for a editing text   */ public static void openWindow(Display display, boolean focusComposite){ Shell shell = new Shell(display); Composite composite = new Composite(shell, SWT.BORDER);   composite.setVisible(false); GridLayout layout = new GridLayout(); layout.numColumns = 3;   composite.setLayout(layout); GridData data = new GridData(GridData.FILL_BOTH);   data.grabExcessHorizontalSpace = true; composite.setLayoutData(data); composite.setVisible(true); for(int i = 0; i < 6; i ++){    Text text = new Text(composite,SWT.NULL);    if (i ==5) text.setFocus();   } composite.pack(); shell.setBounds(0,0,500,500);   shell.open(); if(focusComposite)    composite.setFocus(); while (!shell.isDisposed()) {    if (!display.readAndDispatch()) display.sleep();   } } } This one's pretty annoying and is easily encountered. See bug 16780. This is working as designed.  When you setFocus() to a composite, it finds the  first child that will take focus and assigns focus there.  It does not see if a child already has focus and do nothing.  Am I missing something?  I ran the code on Motif and it has the same behavior. The problem is that if you have setFocus on widget before it is made visible  the focus is slammed into the first widget in the children even if you tried to give focus on a different one. Checking if a child had focus before slamming  the first one who can take it would solve this. This makes it hard for wizard developers as we do not give them the first page  and they will have to reset focus. Not a bug so I won't fix it.
Platform	Problems in eclipse after interrupted network connection The eclipse install and my workspace are both on the network.  After my network connection is interrupted (and then reconnected), eclipse starts behaving badly (can't switch perspectives, open preferences, or view files in open editor tabs).  It also refuses to close (either the upper right ' x ' or File | Exit).  Is it possible for eclipse to gracefully recover after a interrupted network connection? If the product is installed on the network, then we cannot reasonably recover from connection failures.  We can't even load classes at that point unless it happens to be cached in memory.  Closing. I don't see why it is not possible to recover if the connection is restablished. I have experienced the same issue, the network will drop for a moment (could be a second or two) and eclipse stops responding completely.   I would presume the problem is from open io connections in eclipse that remain open during the duration of the application. I see no reason why eclipse cannot attempt to re-open a connection if an exception is caught trying to use it. I don't believe the issue of not being able to load classes is an issue here. We're not talking about the case where the connection is completely lost, one cannot reasonably expect to recover from such a situation, (at least not while the connection is still down). We're talking a connection going down for a brief instant and eclipse not gracefully recovering. Unless there is something I don't understand about jvm security policies or something I would think that an error would occur only while trying to load a class while the connection is down, not after it is restablished. To expand on comment 2:  I'm not talking about Eclipse continuing to work if the network goes down (and stays down).  I'm talking about Eclipse falling apart when a momentary network glitch causes the handles to files that Eclipse is holding open becoming invalid.  If Eclipse simply reopened the files, everything should be fine.  Note this is not a problem with files you have open in an editor.  Since these are not held open, the network glitch comes and goes, you successfully save the file, and everyone's happy.  It's usually a problem with things like Eclipse's history files, since Eclipse opens them when it loads and holds them open. For files which are part of the project's content area, Eclipse makes the statement that the file-system is always right. So if you have a project with files pointing to a location on a mounted drive and that drive goes down, if that project is refreshed, then those files will be removed from the workspace. If you are talking about the workspace metadata files, then John's comment is correct and we cannot recover. What are the history files that you are referring to? (In reply to comment #4) > For files which are part of the project's content area, Eclipse makes the > statement that the file-system is always right. So if you have a project with > files pointing to a location on a mounted drive and that drive goes down, if > that project is refreshed, then those files will be removed from the workspace.  I don't understand what this has to do with the problem I'm describing.  I'm not trying to use Eclipse *while* the network is down.  I'm trying to use Eclipse *after* a momentary network glitch has caused Eclipse's open file handles to metadata (like local history) to become invalid. > If you are talking about the workspace metadata files, then John's comment is > correct and we cannot recover.  Why not?  Why can't you just reopen the files you are trying to read/write? > What are the history files that you are referring to?  Eclipse's local history. Can you be more specific about the failures you get?  A log file with relevant failures would be useful. Failure details not provided. Closing.
Platform	UpdateManagerUtils.copyToLocal() not closing output stream If an exception is thrown in the transfer loop, the localContentReferenceStream  will not be closed. Need a try/catch. [was not changed at this time because is not stop-ship] Replaced by following code   try { Utilities.copy(sourceContentReferenceStream,localContentReferenceStream,monitor); } finally { try {   localContentReferenceStream.close(); } catch (IOException e){} } ' does its job '
Platform	[UI] JavaDoc is wrong for IViewPart (1GF7QMX) I'd like to just change this in the next open edition, but I'll log a PR instead.  In IViewPart the following statement is made. " This interface is not intended to be directly implemented by clients;  * subclass < code > ViewPart < /code > instead. " This is inconsistent with IEditorPart .. " This interface may be implemented directly.  For convenience, a base  * implementation is defined in < code > EditorPart < /code > . " In fact, both IEditorPart and IViewPart may be implemented directly.  The WorkbenchPart hierarchy exists as a convenience, and we make no assumptions about implementation.  We should fix this javadoc to avoid misunderstanding. NOTES: PRODUCT VERSION:  eclipse 0.122 This was fixed after 1.0 by David.
Platform	NPE in antrunner (1GJCHLM) Part of a post from EC.  User was trying to run the PDE build scripts.  Running AntRunner outside of eclipse fails because it tries to call a method on a null listener.  NOTES: From this description it seems that AntRunner was not run as an Eclipse  application and that causes the NPE. Running it as an application is OK. Tested in latest builds. Closing.
JDT	Compiler should warn about unreachable else statements Build F2  It would be cool if the compiler could detect that certain else-if blocks are unreachable because of previous conditions.  e.g. if (foo instanceof Object) { } else if (foo instanceof String) { // this code is unreachable } The compiler already provides similar warnings for ctahc blocks, I think.  This would help catch some strange bugs that occur when class hierarchies get re-organized. This would be hard in so far as it would require matching condition  expressions... in other words, quite expensive for a small improvement. May reconsider post 2.0
JDT	Old .CLASS Files Are Not Deleted When creating a project that does NOT use source folders (and does not use a  bin direct ory for .class files) the .java and .class files are stored together  in the Java package structure. When converting a project to use source folders (and the required bin directory  for .class files), the old .class files stored in the Java package structure are NEVER DELETED by Eclipse.  This is a bug for Eclipse 1.0 and 2.0.  Since I use WSDD 4.0 (which is built on Eclipse 1.0), I've seen compilation  errors due to the fact that the compiler/JDT is using old .class files rather than the new ones in the project's bin directory.  I have not managed to reproduce the compile errors in build 20020416.  But since the old .class files should have been deleted this is still a bug for the  latest build. This needs to be driven by the UI so as to interact with user. implemented > 20020430
Platform	Save not working during Compare With / Revision Build 20020519  - With org.eclipse.ui in source, I selected org.eclipse.ui.internal.Perspective.java. - I had the latest from HEAD loaded for this (revision 1.43) - Compare With / Revision - selected another revision (1.42) - used Copy Current Change from Right to Left - it copied it - chose Save from left pane's context menu - it apparently saved: Save on context menu is now disabled - it did not save the file (no dirty mark in packages view, and comparing with  latest from head shows no change) Also, after doing the copy, there was no dirty mark on the editor, and File /  Save was not enabled. Ended up using Replace With / Revision instead (it worked). *** This bug has been marked as a duplicate of 8289 ***
Platform	[Tasks] Task filtering by project Add option to show tasks just for specific project (it's not same as resource + children!). Even better, add option to show different task severity for different projects (e.g. main project will show all warnings and other project just errors). That fist option already exists.  Look at the Filter Tasks dialog.  There is a  radio button for " On any resource in same project " .  Moving to Platform- > UI for consideration of other feature request.  Personally I  think different filtering on a per-project basis would be very confusing to work with... As John says, the first issue is already addressed. We have no plans to support different filters per project. In the future, please indicate which build you are using in PRs. Yes, " On any resource in same project " does it. Thanks. I am using Build id: 200206271827  What I would find useful is to be able to exclude specific projects from generating tasks all together.  E.g. I create a temporary project in my workspace just to browse some source code. This causes loads of compile errors due to missing libraries which I do  not care about. I want to be able to say ' don't include this project in the  task list ' . closing this pr.  22362 covers the remaining request for exclusion filters.
JDT	NPE out of JUnit launch configuration page Select a project with no test cases hit the browse button for Test class hit OK on the realized dialog  java.lang.NullPointerException at  org.eclipse.jdt.internal.junit.launcher.JUnitMainTab.handleSearchButtonSelected (JUnitMainTab.java:453)  at org.eclipse.jdt.internal.junit.launcher.JUnitMainTab$4.widgetSelected (JUnitMainTab.java:188)  at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:85)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:538) at org.eclipse.jface.window.Window.open(Window.java:525)  at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope n(LaunchConfigurationDialog.java:348) at  org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration (ExecutionAction.java:67)  at org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent (ExecutionAction.java:57)  at org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent (LaunchDropDownAction.java:104) at org.eclipse.ui.internal.PluginAction.runWithEvent (PluginAction.java:201) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1413) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1205)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788) at org.eclipse.ui.internal.Workbench.run(Workbench.java:771)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:502)  at org.eclipse.core.launcher.Main.main(Main.java:362) fixed for 20020214
JDT	Java Editor - Tooltip showing up even when mouse not over text Build F3 .Open a java file. For example, one with the line static Display display; .Hover the mouse over ' display ' . A tooltip correctly shows up. .Hover the mouse over the blank space following ' display; ' (on the same line).  The tooltip will show up but it should not. the trailing space is considered as part of the identifier
JDT	Add java doc comment hello, A very small bug but annoying trotzdem. Context : Java browsing perspective, with single method displaying option Eclipse version : the 20020314 Procedure : I want to use the Add java doc comment menu option on a method  without any comment, but which redefines a method in a super-class Result : I obtain the following result  = > /*   * @see LogicalEntity#printOn(IDelphiWriter) */  public void printOn(IDelphiWriter aWriter) { aWriter.printClass(this);  } instead of = > /**    * @see LogicalEntity#printOn(IDelphiWriter) */  public void printOn(IDelphiWriter aWriter) { aWriter.printClass(this);  } It is a little thing, but it causes the editor not to recognize the comment. Regards Xavier *** This bug has been marked as a duplicate of 11903 ***
JDT	content outline shows static fields when it shouldn't Build 20020514  In the java content outline, if I select: show fields - > False show static members - > True  It shows me all static fields.  This is wrong because I said " don't show  fields " .  The filters should combine, not cancel each other out. changed the semantics of the filters closer to what they were before Verified.
Platform	Opening Default Text Editor not showing right icon in the file tab (1GI7GK2) prefix        test name          181066 reference      abstract      opening Default Text Editor not showing right icon in file tab duplicate       state         open                        priority severity      3                           target                             age           14                          due product                         hasApar                             compName      wsa.web.oti                 answer release                                   symptom       gui                  envName       Win2000                     phaseFound    cvt level                                     phaseInject                         addDate       2001/07/26 17:57:43         assignDate    2001/08/07 15:05:23 lastUpdate    2001/08/07 15:05:23         responseDate                       endDate ownerLogin    decandio                    originLogin   endres               ownerName     George DeCandio             originName    Kathy Endres ownerArea     9ZVA                        originArea    AVALON                apar                                      pmr test tracks: none.  verify: none. history:     addDate              action          userLogin (userName) -------------------- --------------- ----------------------------------     2001/07/26 17:57:43  open            endres (Kathy Endres) 2001/08/07 15:05:23  assign          decandio (George DeCandio)  duplicate defects: none. duplicate features: none.  sizing: none. notes: < Note by endres (Kathy Endres), 2001/07/26 17:57:43, seq: 1 rel: 0  action: open > In testing on the 20010724-0100 R09 Packaged JDK build, I opened a JSP file and saw the Page Designer icon in the file tab, but didn't see the Design, Source, and Preview pages. I finally realized that I was in the Default Text Editor. So, if you open an HTML/JSP/XML ... file in the Default Text Editor, you should see the same icon that you see on the Open With- > Default Text Editor selection in the file tab (not the Page Designer or the XML Editor icons). If this is an OTI defect, please update the component. < Note by decandio (George DeCandio), 2001/08/07 15:05:23, seq: 2 rel: 0  action: assign > Old Component: wsa.web.tooling New Component: wsa.web.oti NOTES: PRODUCT VERSION:  R09, Win2000 The icon shown in the editor tab should be the icon provided by the editor, not  the default one associated with the file. Can the text editor framework be updated to show the editor's icon in the tab  instead of the icon associated with the file. Otherwise, it is not obvious which editor is editing the file. fixed. will be in I-20020312.
JDT	Freeze when entering certain Java syntax (Version: Christmas stable build.)  When typing text in the Java source pane, certain Java expressions may cause the whole Eclipse UI to freeze, the only way out being to kill the VM from another terminal. Scenaio:  Having this method: public static final native void gdk_window_resize(int window, int height);  we try to insert a new " width " argument between window and height.  Place the cursor in front of " int height " and start typing " int width, " .  The UI completely freezes after int. I am using build 20011220-S-20011220 on Windows 2000.  When I edit org.eclipse.swt.internal.win32.OS and add the line (excluding double quotes): " SPI_GETWHEELSCROLLLINES   104 " in the middle of the field declarations, Eclipse hangs and never comes back.  I do not have to try to save to cause this to happen. Problem fixed in build > = 20020108. Build 20020109.
Platform	[Tasks] Taskview doesn't work anymore (IBuild 30 jul) I ' t stays gray and i don't see any table items.  This is the stacktrace: java.lang.NoSuchMethodError:  org.eclipse.ui.views.tasklist.TaskList.getResources() [Lorg/eclipse/core/resources/IResource;  at org.eclipse.ui.views.tasklist.TaskListContentProvider.getMarkers (TaskListContentProvider.java:209)  at org.eclipse.ui.views.tasklist.TaskListContentProvider.getElements (TaskListContentProvider.java:405)  at org.eclipse.jface.viewers.StructuredViewer.getRawChildren (StructuredViewer.java:397)  at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren (StructuredViewer.java:346)  at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren (StructuredViewer.java:447)  at org.eclipse.jface.viewers.TableViewer.internalRefresh (TableViewer.java:424)  at org.eclipse.jface.viewers.TableViewer.internalRefresh (TableViewer.java:408)  at org.eclipse.jface.viewers.StructuredViewer$4.run (StructuredViewer.java:748)  at org.eclipse.jface.viewers.StructuredViewer.preservingSelection (StructuredViewer.java:688)  at org.eclipse.jface.viewers.StructuredViewer.refresh (StructuredViewer.java:746)  at org.eclipse.jface.viewers.StructuredViewer.refresh (StructuredViewer.java:708)  at org.eclipse.jface.viewers.TableViewer.inputChanged (TableViewer.java:375)  at org.eclipse.jface.viewers.ContentViewer.setInput (ContentViewer.java:234)  at org.eclipse.jface.viewers.StructuredViewer.setInput (StructuredViewer.java:875)  at org.eclipse.ui.views.tasklist.TaskList.createPartControl (TaskList.java:361)  at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:136) When i install the latest nighly (802) it doesn't help and i get other errors  like: java.lang.NoSuchMethodError:  org.eclipse.ui.internal.WorkbenchWindow.restoreState(Lorg/eclipse/ui/IMemento;) Lorg/eclipse/core/runtime/IStatus; cannot reproduce problem on eclipse 2.0.1 release.
JDT	Wrong match in Java Search 0.203 In Java Search I was searching for the type " Differencer " in the Compare plugin. For the file CompilationUnitDelta.java I got 6 matches. When stepping through them the second match was bogus. Here is the relevant line of CompilationUnitDelta.java where the problem occured and the three matches:   Differencer differencer= new Differencer() { 11111111111                  22222222222 33333333333 I wasn't able to reproduce this problem with a standalone setup. pls investigate whether this is the matchlocator or the UI Searching the attached file works fine i.e. does not report the (wrong) match  22222222222. Debugged on actual workspace (see  http://www.zrh.oti.com/webprojects/jabiru2000/testing/EclipseWorkspace_4368.zip) with breakpoint in: JavaSearchResultCollector.accept(...). 1.Match: OK   start= 3886 end= 3897   enclosingElement= SourceMethod  (id=3128) fLEType= 9  fName= " CompilationUnitDelta " fOccurrenceCount= 1  fParameterTypes= String[2] (id=3131)  fParent= SourceType  (id=3132) accuracy= 0  2. Match (NOT OK) start= 3887   end= 3898 enclosingElement= SourceMethod  (id=3133)  fLEType= 9 fName= " CompilationUnitDelta " fOccurrenceCount= 1  fParameterTypes= String[2] (id=3136)  fParent= SourceType  (id=3132) accuracy= 1  This 2nd match is reported as POTENTIAL match but it rather looks like search engine bug: why should " ifferencer " be a potential match?  Maybe it is an indexer problem but please note that I could reproduce the bug with a completely new workspace (see  http://www.zrh.oti.com/webprojects/jabiru2000/testing/EclipseWorkspace_4368.zip) .  Moving to JDT Core Downloaded EclipseWorkspace_4368.zip. With 202a, I find 5 matches with correct positions in CompilationUnitDelta.java. With 203 I find no matches at all in CompilationUnitDelta.java (it seems that  search was broken in this build.) With 205, I find 5 matches with correct positions in CompilationUnitDelta.java. With our latest, I also find 5 matches with correct positions in CompilationUnitDelta.java. What's your 0.205 version?   I used: jre-win32-Eclipse-SDK-SHIPPED-20011018.zip (aka 0.205) I did the following steps (again): 1. Extract EclipseWorkspace_4368.zip to: D:\ 2. Download  http://home.ott.oti.com/hubba/drops/sdk/20011018/jre-win32-Eclipse-SDK-SHIPPED-2 0011018.zip 3. Extract jre-win32-Eclipse-SDK-SHIPPED-20011018.zip to D:\ 4. Open D:\eclipse 5. Create shortcut for eclipse.exe: Target: D:\eclipse\eclipse.exe -data d:\EclipseWorkspace_Bug\plugins 6. Double-click the shortcut 7. Open Search Dialog 8. Search for type refs of " Differencer " == > I get 6 results Followed exactly the above steps (except I didn't download again jre-win32- Eclipse-SDK-SHIPPED-20011018.zip as I already had it). After step 8, I got 80 matches in total, and CompilationUnitDelta had 5 matches. Adam has repeated the test and could not reproduce either, so it is not just on  your side. I repeated the test on my machine once again (also using download) == > bug still there  I know that the WindowsNT WinZip version behaves different than the Windows2000. Ensure that eventually hidden files are also extracted. Could you test if all files are extracted (unzip the workspace again - they were changed). The properties of d:\EclipseWorkspace_Bug should be:  8486 files 940 directories  84192818 bytes Regional Settings: English (United States) Input Locale: German (Swiss) When looking at the properties of EclipseWorkspace_Bug, I also have:  8486 files 940 directories  84192818 bytes For the regional settings, the difference is that I have English (United  States) as the input locale. André verified the bug on his machine and can't reproduce either. I guess the following could happen: Eclipse fixes / changes files (index?) when an existing workspace is started on  another machine than the one which it was created. There was definitely a bug in the search/index infrastructure because André  (Windows2000) and I (WindowsNT) have seen the bug. Ok to close if you don't have   another idea where the bug could be. This bug makes me think of bug " 5021 Refactoring trashed my code " but I cannot  be sure as I cannot reproduce the problem (even with a clean install). Bug 5021 was fixed in 206/20011025.  Closing
Platform	NPE in sync view build 20020312  1) Rename a method and change its implementation. 2) Synchonize with repository 3) There's an outgoing addition and one deletion 4) CTRL + select both 5) Nothing happens (was expecting a compare) 6) Click on the addition (without control) 7) NPE  java.lang.NullPointerException at  org.eclipse.compare.contentmergeviewer.TextMergeViewer.findInsertionPosition (TextMergeViewer.java:1123)  at org.eclipse.compare.contentmergeviewer.TextMergeViewer.setDocument (TextMergeViewer.java:1181)  at org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent (TextMergeViewer.java:998)  at org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh (ContentMergeViewer.java:595) at  org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged (ContentMergeViewer.java:512)  at org.eclipse.jface.viewers.ContentViewer.setInput (ContentViewer.java:234)  at org.eclipse.compare.CompareViewerSwitchingPane.setInput (CompareViewerSwitchingPane.java:233)  at org.eclipse.compare.CompareEditorInput$13.run (CompareEditorInput.java:510)  at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java (Compiled Code))  at org.eclipse.compare.CompareEditorInput.feed2 (CompareEditorInput.java:501)  at org.eclipse.compare.CompareEditorInput.access$2 (CompareEditorInput.java:500)  at org.eclipse.compare.CompareEditorInput$8.selectionChanged (CompareEditorInput.java:417)  at org.eclipse.compare.CompareViewerSwitchingPane.selectionChanged (CompareViewerSwitchingPane.java:186)  at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java (Compiled Code))  at org.eclipse.jface.viewers.StructuredViewer.updateSelection (StructuredViewer.java:999)  at org.eclipse.jface.viewers.StructuredViewer.handleSelect (StructuredViewer.java:466)  at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetSelected (AbstractTreeViewer.java:624)  at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java (Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code))  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code))  at org.eclipse.ui.internal.Workbench.run(Workbench.java:675) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:777) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:502) at org.eclipse.core.launcher.Main.main(Main.java:362) Compare bug, moving to Compare. fixed in 20020314.
Platform	Variable location of toolbar button (1GD0A6A) Open the java perspective Open a .java file by doiulbe clicking it in the packages view Note that the " Show source of selected element only " button is just ot the right of the run button. Now select Java > open type Pick a type and press ok Note that the " Show source of selected element only " button is at the end of the toolbar  This is very confusing. NOTES: PRODUCT VERSION: 0.101 No longer occurs
Platform	unable to change org.eclipse.update.ui.historySize preference via plugin_customization.ini F2 build  0. Brand new install; brand new workspace 1. Add the following line to the file < install > /eclipse/plugins/org.eclipse.platform_2.0.0/plugin_customization.ini  org.eclipse.update.ui/org.eclipse.update.ui.historySize=20 2. Start eclipse 3. Open the preferences page Observe: the maximum number of history configurations is 5.  Expectation: it should be 20. 4. Hit Restore Defaults  Observe: the maximum number of history configurations is still 5. Expectation: it should be 20. The problem is in the way the update UI handles the defaulting of preference values. Currently, MainPreferencePage.initializeDefaults(IPreferenceStore store) is being called (4 places) from within MainPreferencePage; this sets (or resets) the default values each time it is called.  The recommended way to establish default preferences is by overriding Plugin.initializeDefaultPluginPreferences() in UpdateUIPlugin. This ensures that default overrides can be furnished either by the primary feature (plugin_customization.ini) or via the command line (- plugincustomization parameter). The method will be called automatically (and extactly once) when the plug-in's preference store is first requested. applied patch supplied by Konrad. released into HEAD. [note: there still seems to be a problem in update.core actually not honoring  the setting, histories seem to be trimmed to 5 even if the setting is > 5]  Marking this defect as fixed, keeping bug 19301 open.
Platform	Long pause before progress dialog when syncing The progress dialog comes up only after a lot of work has been done during a  synchronize op. Fixed.
JDT	Packages view: When working set is selected, can't expand compilation units When i select a working set then i can't expand a java compilation unit in the tree When the file is loaded in an editor! I can expand a Java tree item when the java file is not in an editor when i  double click on it to load the tree of the java file collapse and i can't  expand any more (no [+] ) sorry forgot to mention the build: i build of 0502 It works when the working set contains projects/packages, but it doesn't work  when the working set contains Compilation units (e.g. junit.framework.TestCase.java). You can expand TestCase.java when it isn't opened in the editor, once it is  opened and you click plus then it is gone. I suspect that the working set filter doesn't know about working copy elements and hence filters out the  children of a CU. Interestingly the problem also shows up when reconciling is turned off. Tested against 20020514 and it worked. Have to ask EG about exact steps. Could reproduce with 20020508. It seems to be fixed in 20020514. The bug was probably caused by the underlying infrastructure. Setting target to M6
JDT	[breakpoints] Instance restricted breakpoint label is not informative Having the object id in the breakpoint label really does not help me. I agree (however, toString is too long). Perhaps we could use something else. Deferred Closing.
Platform	DefaultFileModificationValidator::validateEdit - error status returned has too little info i call validateEdit on all files at once and would like to present in the ui the message i find in the status however, the message is simply: ' File is Read Only ' - i need the file name as  well otherwise, why would that method take an array of files if i have to call it on a file-by-file basis anyway actually, although it should be trivial to fix, it is major Ideally the error would have Details > to show which files were read-only.  That leads to a different problem though: the spec for MultiStatus says nothing  about the ordering, so you won't know which error status ' correspond with which  files. For each status we could include the file path in the error message, but that  means the details would be all those " File xxx is read-only " , which I guess is  ok. IStatus limitation (should really have a getContext method returning an Object - than you could specify (in javadoc) what that Object is and give me all the info i need)  must be lived with for now - file path will be fine error status now has file name in it
JDT	Please add " quick " Bookmark-Support via Ctrl-F2/F2 In all my previous editors I really liked the possibillity to set/reset bookmarks and jump to them quickly using Ctrl-F2 to set/unset and F2 to jump between this bookmarks (i.e. as in the NetBeans editor). *** This bug has been marked as a duplicate of 22708 ***
JDT	Hierarchy view should offer showing qualified type names Build 20021008  Currently, there is no way to see qualified type names in a hierarchy view. This is painful, since the only alternative is to select each of them and look  into the status bar. There should be a toggle button allowing me to see fully qualified names  (likely the package name would be appended behind the simply name: e.g. Object - java.lang).  Also, I should be able to restrain the presented information to a certain package (after the fact). Probably, better than restraining to a certain package, I should be able to  restrain to a given working set. Another alternative I'd like to see is to have a tooltip display the fully qualified type. The reason is because the horizontal space I have allocated to the left-hand view (where the type hierarchy is displayed) is often very narrow, in order to leave more room for other parts of the window. The tooltip could overlap into the editor part, allowin g one to quickly see all the types without having to expand the view. added new action to the view-menu: Show qualified type names > 20030117
JDT	API: NewProjectCreationWizard (1GJNJE1) EG (9/6/2001 12:02:20 PM) From Customer: We have custom project creation wizards for the j2ee project types (EJB, App Client, and WEB).  They have a look and feel almost exactly like the Java project wizard.  We are adding a page between the project name page and java build page; this page provides another view for setting up dependencies between modules in an Enterprise Application (EAR project). Selections on this page drive the selections/default classpath entries on the Java page.  I've already made a copy of org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPage, because I need to be able to get to the fBuildPathBlock, so I can invoke the method    public void init(IProject project, boolean force).  This is to cover the case where the user flips backward from the java page to the Module Dependency page, changes the settings, then flips forward to the java page again.  I still have the problem, however, of how to synchronize changes from the java page back to the Module Dependency page.  To do that, I would need to make a copy of BuildPathsBlock, and all the package visible classes it references, and expose some of the internals. A common model and/or public api on the NewJavaProjectWizardPage to facilitate this would be very helpful. NOTES:  MA (18.09.2001 19:12:51) Rework of the API of NewJavaProjectWizardPage. moved to fixed
Platform	[ExternalTools] Launching Ant on xml file that is in the active editor An action in in the External Tools sub-menu of the Run menu that would invoke  Ant on the active editor.  The action would be disabled if the editor input was not an xml file. A better feature in my opinion would be to make it possible to launch ant with the -find argument from  any resource. (e.g. ant -find build.xml) - and then make it possible to asign a global key to this and it would be possible to activate ant from anywhere on any resource - without having to wander around  the project structure to find the exact build.xml.....exactly as it is possible in Emacs JDEE if anyone knows it :).  A better integration would of course make eclipse search for the build.xml and provide a dialog that lets one enter the desired target from a list of possible  candidates... just a thought... The Ant View written by Roscoe Rush provides the feature Max requested.  Pressing the " Refresh " button finds all ant XML files and adds them to the  view. The view presents the ant file in a tree so the user can expand it to see targets and launch targets directly.  I'm optimistic that we can get Roscoe's view integrated into the 2.1 stream. We should provide the " Run As... - > Ant Script " action in the external tools  drop-down. This should be provided for free when the debug platform is updated to support launch shortcuts via the launch group extension. (See bug 26503).  When this support is in, we need to update the definition for the ant launch shortcut. Please verify. Set an active editor. Use Run- > External Tools- > Run As- > Ant Build Verified. Please update the build notes (darinS).
Platform	" Show in Navigator " should support multi-select I see no reason why we shouldn't support multi-select for " Show in Navigator " in the sync view. It can be helpful for example in finding the set of files to produce a patch on  (ie. find all your outgoing changes, select them, " Show in Nav. " , " Create  Patch " . later Reopening *** This bug has been marked as a duplicate of 11205 ***
Platform	(Java-)Working set selections lost after restart of Eclipse Sorry for prematurely commiting this.  I created a new one with number 25431. Juergen
Platform	[Perspective] Vertical (perspective) toolbar doesn't show all perspectives any more Up until build 20020115, if you opened a perspective, you would get a nice  convenient tool representing that perspective, added to the vertical toolbar on the left. The last 2 integration builds have not had this - you typicaly only  have one tool in the vertical toolbar now, which forces you to use the combo box to switch perspectives. There appear to be some " Reuse perspective " type  options in the Preferences, which I have turned off, but I still get only one tool (representing the current perspective) in the tool bar.  There are a couple of problems with this: - the screen real estate is already taken for the toolbar - just use it, or  else it is being wasted. - only having one tool (representing the current perspective) in the toolbar is  quite pointless (i.e. switching to the same perspective doesn't help me any). - it takes 2 mouse clicks plus a scroll to use the combo box to switch perspectives, but only one click to switch using the toolbar. - besides being harder to use, the combo is not as intuitive. People have grown used to the " task bar " paradigm that is in Windows and most window managers on  Motif. Forcing them to use a combo box to change perspectives is a bit odd. I would like the old behavior back. There should be as many perspective tools  in the vertical toolbar as there are items in the perspective combo box. Along the same lines, SN also noticed that you can no longer have multiple Java  perspectives in the vertical toolbar. I'm not sure if this is just a " toolbar  is broken " issue (which is addressed in this PR), or if it really is a problem  with multiple same-type perspectives. This used to work. The combo box is quite useless for multiple same-type perspectives. We still have some usability issues with the changes to how perspectives work. This is one of them. We are trying to get away from having multiple pages (which is what the toolbar  shows, not perspectives), and just have perspectives work like a different window layout.    There are currently too many concepts for the user to have to learn: window (well, they already know this concept), page, and perspective. In 1.0, you could not change the perspective for a page, so they were presented as the same concept in the UI.   The problem with multiple pages is that they have separate sets of editors, which contributes to the loss of context problem.  We should either remove the page buttons from the shortcut bar and just have fast views there, or add icons to let you quickly switch between the available  perspectives (for the single page). If you want multiple Java layouts you will have to have multiple windows. Uncheck reuse perspectives and use Perspective / clone. Actually, you can currently still get multiple pages instead of windows by  choosing " In the same window " in prefs, but this option may disappear if we  remove support for multiple pages.  You still have to use clone rather than Perspective / open though. *** Bug 8636 has been marked as a duplicate of this bug. *** If you do remove the page-switching tools from the shortcut bar, then yes,  please do add perspective-switching tools. Also, please remove the useless-and-ugly perspective-switching combo box from  the tool bar. (I already opened a different PR for this - but these PRs now appear to be related, even though they are not identical): http://dev.eclipse.org/bugs/show_bug.cgi?id=8300 There is no point in having 2 ways to switch perspectives - as you say, it  leads to confusion. But the shortcut bar is a *way* better way to switch perspectives than the combo box, for the reasons stated in the other PR. As for pages, now that I know they exist, (before reading your comment, I did not know there were 2 separate " grouping " concepts visible) ...I have a  question. Why do pages exist at all? Why complicate life with extra concepts? I think Eclipse should have 2 grouping concepts only: (1) " perspectives that are  switchable in the shortcut bar " AND (2) " windows " . i.e. page == window. Is the  concept of " page " really pulling its weight? Is there some compelling reason to  keep t hem? Is there some UI advantage to exposing them to the poor user? Just  delete the concept - it will be very freeing. Defer until after release 2.0 Reopen to investigate Please allow multiple java perspectives in the same window to be open on  different editors!  I probably didn't say this right.  What I mean is that I'd  like to click one one java perspective and position myself in a java source file, then switch to another java perspective, position myself in another java  source file, then switch back to the original java perspective and be at the same place in the java source file for that perspective.  Is this easier to  understand? If you do this, then I can go back to working in only one window.  Yay!! Yes, you said it right. This was changed after 1.0 because users were losing  context too often. After a usability study, it was decided that keeping the same context in all perspectives in a window would be better. And it has proven  to be better. So multiple window is the answer for users that needed multiple context.  Closing as fixed since the original bug was fixed. Too bad, I hate this behavior.
Platform	bogus appears at compare function The encoded file except with the windows native encoding(Japanese: shift_jis)  was compared with the local history, the characters are gabled at the compare function.  Steps to recreate 1: Edit a xml file including DBCS characters with UTF-8 or EUC-JP document  declaration 2: Save the file with Ctrl-S 3: Select the file at the Navigater view 4: Right-Click - > Compare with... - > Local history Characters bogus at the compare view. Could you please attach the file where this happens. Works for me in 20020606 (after fixing the encoding problem in Compare)   *** This bug has been marked as a duplicate of 13949 ***
Platform	[Tasks] New Task dialog platform inconsistency When I click on the New Task button in the Task View on Windows 2000, the default values for the resource and folder associated with the task are tied to the active editor. On Linux, no default values for resource or folder are supplied.   It does not appear to be possible to set these values using the New Task dialog, so on Linux, they can never be set. It uses the selected resource if you have chosen this in the filter settings. Is it possible you were using different filter settings between Linux and Windows. It appears to be working as you described.  I could have sworn that I ran Filter- > Reset before reporting the bug just to  make sure, but the filter was on. This behaviour seems counter-intuative. Why do the filter settings define the  default resource/folder location? Wouldn't it be better to always default to  the current resource/folder and provide UI to clear them when you want a task that is not clearly tied to either one?  Alternatively, tasks with no resource/folder specified could be treated separately from tasks with a location, with respect to the filter settings. I  imaginve that location-less tasks would be used for a sort of global todo list that should be shown/hidden independently of the currently active resource. Agree that having different behaviour for the actions based on the filter  settings is counter-intuitive.  Filters should just filter and not affect how the actions work.  I tried changing it to always create tasks on the workspace root, but people complained so I backed out of it.  Now that we have the Add Task action, we  should change it so that New Task in the Tasks view always creates it on the workspace root, but you can select a resource in the Navigator and choose Add  Task if you want it on a specific resource. Defering to post 2.0 Reopened for investigation Is this still an issue in 3.2?
JDT	No results If searched via Package view selection and dialog (1GLDN1X) The package view initializes the Search dialog with the  fully qualified name. This is not found when searching for declarations.   Search via context menu in packages view works. == > (Java) Search should first try to get the Java element and if  that fails, display the the element name and not the fully qualified name.   NOTES: *** Bug 4379 has been marked as a duplicate of this bug. *** Fixed > 0.205
Platform	[CVS Repo View] When are branches added to the list? Its not clear to me when a branch gets added to the list of branches I know  about.  Today I was able to replace with - > tag for a branch that the project  was never branched on.  I did however previously branch other projects with that branch.  Did it remember it as a branch for *all* projects?  I'm not sure how I got that branch in the list but I'm pretty sure I didn't  branch that project. Branches are associated with a repo location. That explains the current repo  view structure. We've often talked about the current lack of consistance  between how version tags (associated with a project) and branch tags (associated with a location) are managed.  I thought that we had decided to make this post 2.0? post 2.0 Reopening Branches are now associated with individual projects
Platform	ArrayIndexOutOfBoundsException from CoolBarManager Build 20020508 - coolbars turned on  Noticed in log. This was the only indication that the problem had occurred that I could see. Sorry for no steps to reproduce. java.lang.ArrayIndexOutOfBoundsException: 0  at org.eclipse.ui.internal.CoolBarManager.update (CoolBarManager.java:620)  at org.eclipse.ui.internal.WorkbenchWindow.updateActionBars (WorkbenchWindow.java:1344)  at org.eclipse.ui.internal.WorkbenchWindow.updateActionSets (WorkbenchWindow.java:1361)  at org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActionSets (WorkbenchPage.java:273)  at org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateTopEditor (WorkbenchPage.java:179)  at org.eclipse.ui.internal.WorkbenchPage.bringToTop (WorkbenchPage.java:434)  at org.eclipse.ui.internal.WorkbenchPage.activate (WorkbenchPage.java:330)  at org.eclipse.ui.internal.WorkbenchPage.openEditor (WorkbenchPage.java:1631)  at org.eclipse.ui.internal.WorkbenchPage.openEditor (WorkbenchPage.java:1518)  at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor (EditorUtility.java:125)  at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor (EditorUtility.java:103)  at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor (EditorUtility.java:93)  at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open (OpenActionUtil.java:45)  at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:149) at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:140)  at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun (SelectionDispatchAction.java:133)  at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run (SelectionDispatchAction.java:95)  at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDoubleC lick(PackageExplorerActionGroup.java:298) at  org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick (PackageExplorerPart.java:488)  at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1 (PackageExplorerPart.java:487)  at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick (PackageExplorerPart.java:296) at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick (StructuredViewer.java:286) at org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect (StructuredViewer.java:444) at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected (AbstractTreeViewer.java:627) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:92) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java (Compiled Code)) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java (Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1045)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:739)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:450) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:174) at org.eclipse.core.launcher.Main.run(Main.java:605)  at org.eclipse.core.launcher.Main.main(Main.java:449) *** This bug has been marked as a duplicate of 15156 ***
JDT	Package view's " Copy Names " has no mnemonic (1GIFU8C) 1GIFU8C: ITPJUI:WINNT - Package view's " Copy Names " has no mnemonic   NOTES: MA (14.08.2001 17:05:07)  fixed in 200 verified verified
JDT	Package statements for nested classes not updated properly If a class that contains references to nested classes of another class in the  same package is moved into a different package the automatically inserted package statements unnecessarily include the nested classes explicitely.  Instead of: import p1.A  The following (illegal) statements are inserted: import p1.A;   import p1.A$B; import p1.A$B$C;   -- Eric Jain The import implementation is too naive. There is no way the source element  parser can give you resolved information about types. Its implementation should be revisited alltogether... Adam, what kind of support would we need from the JavaModel to improve the  import statement updating. fixed the problem is described in bug#3242 jcore answer means it must be done in the our layer now, we're using JavaModelUtil.getFullyQualifiedName(IType) everywhere
Platform	Can't save files when a network address is not assigned Under Linux, if the machine is connected to a network, but a DNS query for its name does not return an address, then the editor will not save files.  An example of how this can occur: - A laptop machine is configured to use DDNS on a corporate network. - When connected to a network outside the corporate firewall, a DNS server will not correctly resolve its name.  A temporary workaround for this problem is to place an entry in /etc/hosts for the machines name, assigning it to the same address as localhost. However, doing this will cause other system services (mail servers, etc.) to work incorrectly.  When this occurs, saving a file generates the following error in the log window:    java.lang.NoClassDefFoundError: org/eclipse/core/internal/utils/UniversalUniqueIdentifier  at org.eclipse.core.internal.localstore.BlobStore.addBlob(BlobStore.java:26)  at org.eclipse.core.internal.localstore.HistoryStore.addState(HistoryStore.java:107)  at org.eclipse.core.internal.localstore.FileSystemResourceManager.write(FileSystemResourceManager.java:387)  at org.eclipse.core.internal.resources.File.internalSetContents(File.java:190)  at org.eclipse.core.internal.resources.File.setContents(File.java:213) at org.eclipse.jdt.internal.core.Buffer.save(Buffer.java:534)  at org.eclipse.jdt.internal.core.Openable.save(Openable.java:375) at  org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:92) at  org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:248) at  org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:452) at  org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1187) at  org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1016) at  org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:508) at  org.eclipse.jdt.internal.core.WorkingCopy.commit(WorkingCopy.java:38) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDocument(CompilationUnitDocumentProvider.java:305) at  org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:433) at  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$1.exe cute(CompilationUnitEditor.java:145)  at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:59)  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1187)  at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:73)  at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1472)  at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:191)  at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712) at  org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:229) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:274)  at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)  at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:570)  at org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:717)  at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1225)  at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:397) at  org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:351) at  org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:342) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled  Code)) at  org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)) at  org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)) at  org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)) at org.eclipse.ui.internal.Workbench.run(Workbench.java:676)  at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:810)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:433)  at org.eclipse.core.launcher.Main.main(Main.java:306) *** This bug has been marked as a duplicate of 3082 ***
Platform	[PropertiesView] NPE in PropertySheetEntry.refreshChildEntries build 20020423  I had an old repository version of org.eclipse.swt.custom.StyledText.java selected and open in an editor and in the properties view. When I pressed left arrow to jump to the custom folder (and eventually up to the root) I got the attached walkback. After the internal error box I got a progress dialog (probably from the CVS plugin) which hangs when I cancel it. The hang is probably unrelated to the walkback since a different workbench is also hanging while doing a CVS operation. The hang apparently happened because another error dialog popped up while the  progress dialog was visible. The error dialog didn't respond to mouse clicks  but pressing enter after selecting it in the task list worked and closed it. To reproduce select a file version in the repository view and, *while* the file  info is retrieved for/by the properties view, press the left arrow. This will trigger the walkback. The property sheet is not designed to handle the case of reentry on setInput. I note that CVS is no longer using TimeoutProgressMonitorDialog so this problem wil no longer occur. Moving to later to consider if the property sheet could better handle this case perhaps by queing input changes while it is processing a change. Reopened for investigation Not for 2.1 There are currently no plans to work on this
Platform	[RCP] [ViewMgmt] Ability to show/hide view title programmatically Currently, every view in a workbench page (that is not in a folder) has a title  bar, which provides a descriptive icon, a title text, an action bar and the close button for a view. For a small but useful number of views, this default  title bar is not useful or required and detracts from user experience. Custom views that need to show some kind of status or a " strip " of useful context  information, or maybe present new navigation functionality will benefit from an ability to show/hide the view title bar programmatically. To hide the close  view button along with the rest of the title bar is probably against sound UI design, but the option to use the rest of the title bar area as content should  be useful for a number of plugins. This title bar is also the area where:    The user can initiate drag/drop to reorganize the layout Double click to zoom the view  I agree with your observation about programmatically hide/show of this area not being a good idea.   What additional content do you envision adding to this area? See http://eclipse-nav.sourceforge.net as an example of what I have in mind for  using the title area. On second thought, maybe better configurability of the title bar display is  enough for most uses. Here is a list of stuff I can come up with: - Change the location of the view action bar (left or right) - Show or hide view action bar - Let views refuse focus, resize and move My initial reaction is that I am hesitant to give views this level of control.  Ideally it should be possible for views not to know/care about the presentation. This will allow the workbench to evolve the look of the product in a way that has minimal impact to existing plugins and continues to provide a  consistent look and feel to products based on Eclipse. When I get some spare time (which is unfortunatly very rare these days) I will take a look at your  plugin. Being realistic however, this is little chance that the we will get to adding  this enhancement any time soon.... (now comes the plug for taking advantage of the open source community)  If you feel strongly that this support should be added join the developer's  mailining list and argue your case. This is an interesting idea that will be deferred until development resources  become available to consider this enhancement. Reopen for investigation Please bump the priority of this and consider for inclusion in Eclipse 3 for  RCP applications. Having a view titlebar is not necessarily appropriate for non-IDE apps.  Look at the RCP Browser sample by Nick Edgar for an example. The workspace window has one view, " Browser " . It looks pretty silly that way - better would  be to get rid of the view titlebar altogether for this kind of app. I don't need a lot of customization, just an titlebar off switch either in the  API or in the plugin manifest that defines the view. There's a way to do this in 3.0 but only for a perspective with one view: IPageLayout.addStandaloneView(). Ack, some interest in this bug.  Let's move it somewhere... I stand corrected -- in Eclipse 3.0.x you can add as many titleless views as you want to a perspective, like this: public void createInitialLayout(IPageLayout layout) {  String editorArea = layout.getEditorArea(); layout.setEditorAreaVisible(false);  layout.setFixed(true); layout.addStandaloneView(ViewA.ID, false, IPageLayout.TOP, 0.50f, editorArea);  layout.addStandaloneView(ViewB.ID, false, IPageLayout.LEFT, 0.33f, ViewA.ID); layout.addStandaloneView(ViewC.ID, false, IPageLayout.RIGHT, 0.50f, ViewA.ID);  layout.addStandaloneView(ViewD.ID, false, IPageLayout.BOTTOM, 0.50f, editorArea); }  This enhancement seems to be more about allowing the titles of contributed views not to have titles.  I agree with Comment #3 that perspective designers may not want to give contributing/client plugin writers this level of control over how views look or they might wreak havoc on the perspective's UI. Ryan, your assessment is correct.  We gave limited control to the initial perspective layout to hide view titles (rather than the view itself specifying this) for the reasons outlined above.  Does this work for you? Yes this works fine for me. Reassigning bugs in component areas that are changing ownership.
JDT	Java editors don't update for font preference change 1. Open a java editor on a file 2. Go to Window- > Preferences- > Workbench- > Fonts and change the " Text font. " Note that the java editor does not update to use the new font. Currently, java editors must be closed and reopened to make them use the current font. If at all possible, they should update when the font changes. *** This bug has been marked as a duplicate of 13096 ***
JDT	No compile error for bad interface (1G7G6M1) AK (1/12/01 5:51:04 PM)  1. create this: interface I{   int toString(); }  2. you get no compiler errors. the java lang spec (2nd ed.) 9.2 says a compile-time error should occur.  NOTES: PM (1/18/2001 12:00:23 PM)  9.2 Interface Members The members of an interface are:  Those members declared in the interface. Those members inherited from direct superinterfaces.  If an interface has no direct superinterfaces, then the interface implicitly declares a public abstract member method m with signature s, r eturn type r, and throws clause t corresponding to each public instance method m with signature s, return type r, and throws clause t declared  in Object, unless a method with the same signature, same return type, and a compatible throws clause is explicitly declared by the interface.  It follows that it is a compile-time error if the interface declares a method with the same signature and different return type or incompatible  throws clause. The interface inherits, from the interfaces it extends, all members of those  interfaces, except for fields, classes, and interfaces that it hides and methods that it overrides.  PM (6/19/2001 12:43:01 PM) Should investigate a fix.  KJ (6/19/2001 12:33:12 PM) - The fix is in the MethodVerifier... need to add  Object's methods to the inherited list for interfaces:  private void computeInheritedMethods() { this.inheritedMethods = new HashtableOfObject(51); // maps method  selectors to an array of methods... must search to match paramaters & return  type ReferenceBinding[][] interfacesToVisit = new ReferenceBinding[5][] ;  int lastPosition = 0; interfacesToVisit[lastPosition] = type.superInterfaces(); if (this.type.isClass()) {   ReferenceBinding superType = this.type; MethodBinding[] nonVisibleDefaultMethods = null; int nonVisibleCount = 0;    while ((superType = superType.superclass()) != null) { if (superType.isValidBinding()) {     ReferenceBinding[] itsInterfaces =  superType.superInterfaces(); if (itsInterfaces != NoSuperInterfaces) {      if (++lastPosition == interfacesToVisit.length)       System.arraycopy (interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[lastPosition *  2] [], 0, lastPosition); interfacesToVisit[lastPosition] = itsInterfaces;     } MethodBinding[] methods = superType.methods(); nextMethod : for (int m = methods.length; --m > = 0;) {      MethodBinding method = methods[m] ;      if (!(method.isPrivate() || method.isConstructor() || method.isDefaultAbstract())) { // look at all methods  which are NOT private or constructors or default abstract MethodBinding[] existingMethods = (MethodBinding[]) this.inheritedMethods.get(method.selector); if (existingMethods != null)        for (int i = 0, length = existingMethods.length; i < length; i++)         if (method.returnType == existingMethods[i].returnType) if  (method.areParametersEqual(existingMethods[i] )) continue nextMethod;       if (nonVisibleDefaultMethods != null)        for (int i = 0; i < nonVisibleCount; i++) if  (method.returnType == nonVisibleDefaultMethods[i] .returnType)          if (CharOperation.equals(method.selector, nonVisibleDefaultMethods[i].selector)) if (method.areParametersEqual(nonVisibleDefaultMethods[i] )) continue nextMethod;        if (!(method.isDefault() & & (method.declaringClass.fPackage != type.fPackage))) { // ignore methods which have default visibility and are NOT defined in another package        if (existingMethods == null)         existingMethods = new MethodBinding[1]; else         System.arraycopy (existingMethods, 0, (existingMethods = new MethodBinding[existingMethods.length + 1]), 0, existingMethods.length - 1);        existingMethods [existingMethods.length - 1] = method; this.inheritedMethods.put(method.selector, existingMethods); } else {        if (nonVisibleDefaultMethods == null) nonVisibleDefaultMethods = new MethodBinding[10]; else if  (nonVisibleCount == nonVisibleDefaultMethods.length) System.arraycopy (nonVisibleDefaultMethods, 0, (nonVisibleDefaultMethods = new MethodBinding[nonVisibleCount * 2] ), 0,  nonVisibleCount); nonVisibleDefaultMethods [nonVisibleCount++] = method;         if (method.isAbstract() & & !this.type.isAbstract()) // non visible abstract methods cannot be  overridden so the type must be defined abstract this.problemReporter().abstractMethodCannotBeOverridden(this.type, method);         MethodBinding[] current  = (MethodBinding[] ) this.currentMethods.get(method.selector);        if (current != null) { // non visible methods cannot be overridden so a warning is issued         foundMatch : for (int i = 0, length = current.length; i < length; i++) {          if (method.returnType == current[i].returnType) { if (method.areParametersEqual(current[i] )) { this.problemReporter().overridesPackageDefaultMethod(current[i], method); break foundMatch; }          } }        } }      } }    } }  } else { MethodBinding[] methods = this.type.scope.getJavaLangObject ().methods();   for (int m = methods.length; --m > = 0;) {    MethodBinding method = methods[m] ;    if (!method.isConstructor()) { MethodBinding[] existingMethods = (MethodBinding []) this.inheritedMethods.get(method.selector); if (existingMethods == null)      existingMethods = new MethodBinding[1] ;     else System.arraycopy(existingMethods, 0,       (existingMethods = new MethodBinding[existingMethods.length + 1]), 0, existingMethods.length - 1); existingMethods[existingMethods.length - 1] = method;     this.inheritedMethods.put(method.selector, existingMethods);    } }  } for (int i = 0; i < = lastPosition; i++) {   ReferenceBinding[] interfaces = interfacesToVisit[i]; for (int j = 0, length = interfaces.length; j < length; j++) {    ReferenceBinding superType = interfaces[j] ;    if ((superType.tagBits & InterfaceVisited) == 0) {     superType.tagBits |= InterfaceVisited; if (superType.isValidBinding()) {      ReferenceBinding[] itsInterfaces =  superType.superInterfaces(); if (itsInterfaces != NoSuperInterfaces)  { if (++lastPosition ==  interfacesToVisit.length) System.arraycopy (interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[lastPosition * 2][] , 0, lastPosition);       interfacesToVisit[lastPosition] = itsInterfaces; }       MethodBinding[] methods =  superType.methods(); for (int m = methods.length; --m > = 0;)  { // Interface methods are all abstract public MethodBinding method = methods [m] ;       MethodBinding[] existingMethods  = (MethodBinding[] ) this.inheritedMethods.get(method.selector);       if (existingMethods == null) existingMethods = new  MethodBinding[1] ;       else System.arraycopy (existingMethods, 0, (existingMethods = new MethodBinding[existingMethods.length + 1] ), 0,  existingMethods.length - 1); existingMethods [existingMethods.length - 1] = method;       this.inheritedMethods.put (method.selector, existingMethods);      } }    } }  } // bit reinitialization  for (int i = 0; i < = lastPosition; i++) {   ReferenceBinding[] interfaces = interfacesToVisit[i]; for (int j = 0, length = interfaces.length; j < length; j++)    interfaces[j] .tagBits & = ~InterfaceVisited;  } }  JBL (6/25/2001 12:58:32 PM) The above change fixes the original problem, but it fails to correctly  report a problem on the following test case: [public interface I1 {  public Object clone() throws CloneNotSupportedException; }] [public interface I2 extends I1 { }]  The following error is reported on I2: ' The method clone() cannot hide  the public abstract method in I1. ' The error should be on I1 or should not be.  KJ (6/25/2001 11:12:37 AM) - Additonal change in MethodVerifier needed: private void checkInheritedMethods(MethodBinding[] methods, int length) { TypeBinding returnType = methods[0].returnType; int index = length;  while ((--index > 0) & & (returnType == methods[index].returnType)); if (index > 0) {  // All inherited methods do NOT have  the same vmSignature this.problemReporter ().inheritedMethodsHaveIncompatibleReturnTypes(this.type, methods, length); return;  } MethodBinding concreteMethod = null;  for (int i = length; --i > = 0;)  // Remember that only one of  the methods can be non-abstract if (!methods[i].isAbstract()) { concreteMethod = methods[i]; break;   } if (concreteMethod == null) {   if (this.type.isClass() & & !this.type.isAbstract()) {    for (int i = length; --i > = 0;)     if (!mustImplementAbstractMethod(methods[i] ))      return;  // in this case, we have already reported problem against the concrete superclass    this.problemReporter().abstractMethodMustBeImplemented (this.type, methods[0]); }   return; } else if (concreteMethod.declaringClass ==  this.type.scope.getJavaLangObject()) { // no reason to compare Object's method against inherited interface methods   return; }   MethodBinding[] abstractMethods = new MethodBinding[length - 1]; index = 0;  for (int i = length; --i > = 0;)   if (methods[i] != concreteMethod)    abstractMethods[index++] = methods[i]; // Remember that interfaces can only define public instance methods  if (concreteMethod.isStatic()) // Cannot inherit a static method which is specified as an  instance method by an interface this.problemReporter().staticInheritedMethodConflicts(type,  concreteMethod, abstractMethods); if (!concreteMethod.isPublic())   // Cannot reduce visibility of a public method specified by an interface   this.problemReporter().inheritedMethodReducesVisibility(type, concreteMethod, abstractMethods);  if (concreteMethod.thrownExceptions != NoExceptions) for (int i = abstractMethods.length; --i > = 0;)    this.checkExceptions(concreteMethod, abstractMethods [i]); }  JBL (6/25/2001 6:23:06 PM) With the above fix don't compare Onject's methods. But shouldn't we  fail on this test case (CloneNotSupportedException is not declared in the redefinition) [public interface I1 { public Object clone(); }] KJ (6/26/2001 12:24:52 PM) - javac doesn't seem to... (or at least the version  I have on my machine). I just tried the following example with javac:  interface J1 { // public Object clone();  public Object clone() throws CloneNotSupportedException; } interface J2 extends J1 {} class C1 implements J2 {}  and got: zz.java:7: clone() in java.lang.Object cannot implement clone() in J1;  attempting to assign weaker access privileges; was public class C1 implements J2 {} ^ 1 error  With the latest change we do not complain at all... so are we better off to complain that the interface J1 has a problem than wait for a type to implement the problematic interface? PM (6/26/2001 5:33:03 PM)  Waiting for more info on this one (ping ' ed Gilad).  Backing out changes for now. PM (6/28/2001 1:24:04 PM)  Actually, Javac's behavior is correct. It is legite to override a  method with a more public one and with less exceptions. WRONG=============================== interface J1 { int clone(); } interface J2 extends J1 {}  class C1 implements J2 {} WRONG=============================== interface J1 { Object clone() throws java.io.IOException; } interface J2 extends J1 {}  class C2 implements J2 { public Object clone() throws  java.io.IOException {     if (false) throw new java.io.IOException(); return super.clone();         } }    Interestingly enough, with javac in the following case, the unreachable IOException hides the error on J1. WRONG=============================== interface J1 {         Object clone() throws java.io.IOException; } interface J2 extends J1 {} class C2 implements J2 {         public Object clone() throws  java.io.IOException { return super.clone();         } }  KJ (6/28/2001 10:58:14 AM) - This example compiles without errors: interface J1 {  Object clone(); // Object clone() throws CloneNotSupportedException; } interface J2 extends J1 {}  class C1 implements J2 { public Object clone() { // public Object clone() throws CloneNotSupportedException { try { return super.clone(); } catch (CloneNotSupportedException  e) {return null;} } } Verified that we have the same behavior as javac 1.3.1.
Platform	Would like a way to find files in workspace Build 20021016  In the same way as the Win file explorer provides a search file mechanism (ctrl- F). It would be nice if it was done in a similar manner to the way Ctrl+Shift+T and  Ctrl+Shift+H work. (Find Type and Display Hierarchy respectively); There are currently no plans to work on this feature
Platform	Open/Close project from properties dialog In the context menu of a project, there is two actions " Close Project " and " Open Project " . They are mutually exclusive - that is, only one is enabled  at a time. Since opening and closing a project is not something that is done very often,  could we move this to the Info page on the Properties dialog? It could be implemented much the same as Read Only attribute.  This would help in removing some of the clutter on the context menu. *** Bug 2139 has been marked as a duplicate of this bug. *** The context menus are getting pretty big. We should seriously look at taking  these two menu items out and into the properties dialog. No plans to change current behavior
Platform	[Contributions] Java Search entry has multiple identical choices in Customize Perspectives Build 20020508  In the Customize Perspectives dialog if you Select Other- > JavaCoding you get 4 entries called Workspace, 5 called Working Set and 4 called Hierarchy. There is no way to know which is which. Dirk where do these actions come from? IMO the come from the new global Search menu.  Moving to DM. This is a Platform UI problem: the dialog which shows the content of an action set takes the label of the action instead of a short description. This leads to collisions  for nested menus:  Search Declaration     Workspace Reference     Workspace There should be some tag in XML where I can set a short description which can be shown in the action set dialog, eg. Search for declarations in workspace   Search for references in workspace Moving to Platform UI We had a suggestion from the usability team to show where the specified actions  would appear, using two columns on the right (item name, and item location). E.g.  Item          Location Workspace     Search > Declaration Menu Workspace     Search > Reference Menu  However, this unfortunately requires a major restructuring of how we do contributions, so it will not be done for 2.0. In addition, I agree it would be good to show the description for the selected item. Reopen for investigation The problem is actually in Other- > Java Search correct. menu layout changed inbetween Description would not do the job as actions do not have descriptions. We should try to make some improvements here for 2.1. Not going to happen for M4 Not for release 2.1 Fixed due to fix for [Bug 15996].
JDT	NPE during shutdown of DebugUIPlugin There is no active workbench window by the time the shutdown is called. Added check in DebugUIPlugin shutdown. Please verify. Verified.
JDT	filtering incorrect on interfaces (1GEWBY4) AK (6/6/01 1:10:53 PM)   all methods and fields are always public (methods are also abstract and fields static and final)  but we filter out those that are not explicitly declared public. NOTES:  KUM (6/8/01 2:17:21 PM) Fixed. Build > 120.  DM (6/20/01 5:32:11 PM) Verified against 0.125  - methods are not filtered now == > OK  - abstract is always filterd out, even if declared to reduce noise == > OK BUT:   - fields are [only] shown with S flag if static is declared    == > either always show S or never show S [preferred to  be consistent with abstract] - fields are [only] shown with F flag if final is declared == > either always show F or never show F [preferred to  be consistent with abstract] Not fully fixed - moving to InBox - Deferred moved to ' active ' PRODUCT VERSION:  119 Still two issus  1)The static filter is still wrong. Having: public interface Tests {  abstract int x(); static int X= 3;  int Y= 3; final int Z= 3;  final static int W= 3; }  The fields which are not explicitly declared static are hidden. 2) Since the redundant overlays are not shown for methods (abstract) we should also not show the reduntant overlays for fields (static, final) OR: we show what's in the editor and therefore A should appear on methods which I declare abstract. no action planned
Platform	[JFace Text] Locking editors for read-only files Hi Kai,  thank you for your mail. I agree that its sometimes usefull to edit read-only file and than save editor content to another file. But probably I with SourceSafe checking in/out will have still small problem: I change code.After it I will investigate that file is read-only, so I must close editor, check that file from SourceSafe and again open editor and make changes. What about checkbox " Lock editor when read-only file " in options window? Thanks, Milan Fort BSC Praha, spol. s r.o. Czech Republic (confirmation of report with my mail) *** Bug 6675 has been marked as a duplicate of this bug. *** We reworked the handling of read-only files completely. Goging together with  calling validateEdit on the workspace (as defined by the team provider). Closed. Pls file new PR in case of problems.
Platform	Views not restored if maximized editor is closed On RedHat Linux 7.2.  Open an editor, maximize the editor window, then close the editor. The perspective views are not restored and you are left with a blank window  with no views. This works correctly when maximizing and closing a view. *** This bug has been marked as a duplicate of 2312 ***
Platform	No show version history from sync anymore? Build 20020205 using Team 2.0  The Show Version History action is no longer available from the sync view. I found this very useful, as it was the only way to see who had made the  change, and what other recent changes were. To me the user name is essential info.  The rest is convenience. Duplicate. Will be in today's integration build.
JDT	JavaUI.createMainTypeDialog does not allow to unselect/select none The OK button is only enabled if the number of selected elements is > 0.  This is not acceptable in some cases. Consider the following scenario: 1. I use the dialog to select ONE (could also be many) main class.    - > the value is displayed in the UI 2. Later I change my mind and browse for another main class but this time I decide to have none.  There are two problems: - the dialog does not allow to click OK if nothing is selected = > an option in  the API should allow me to specify this. - probably deeper in the platform: if single selection (- > SWT.SINGLE) is chosen  then the UI does not even allow to unselect the currently selected element. Dani, is this additional functionality required by the JAR package to browse  for the main class? Not to browse, but to unselect. It would be strange to have a clear button next  to a field that shows the value after browsing for it. Clients of the API should be able to specify whether no selection is a valid  choice or not. In my opinion this is an API defect. Claude, please investigate if additional API is possible Won't fix for now. A workaround for this is done in the export packager.
Platform	[runtime] Exception is hidden when plugin class is not found This problem occurs when the plugin class as specified in the plugin.xml file cannot be loaded.  A useful exception is thrown (e.g., class not found), but then an attempt to create a Status object is made in which the plugin id is verified.  Since the plugin was never created, this fails, and the useful error message is masked.  This stack trace should clarify what I mean:  java.lang.IllegalArgumentException: at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)         at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:41) at org.eclipse.core.runtime.Status.setPlugin(Status.java:156)         at org.eclipse.core.runtime.Status. < init > (Status.java:64)         at org.eclipse.ui.internal.dialogs.WorkbenchWizardNode$2.handleException (WorkbenchWizardNode.java:96)         at org.eclipse.core.internal.runtime.InternalPlatform.handleException(In ternalPlatform.java:439)         at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatfo rm.java:841)         at org.eclipse.core.runtime.Platform.run(Platform.java:416) Do you have reproducable steps for this? Here is the stack trace that I am  getting: !ENTRY org.eclipse.core.runtime 4 2 Nov 07, 2002 13:54:45.76 !MESSAGE Plug-in org.eclipse.core.tools.spy was unable to load class org.eclipse.core.tools.spy.SpyPlugin2. !STACK 0 java.lang.ClassNotFoundException: org.eclipse.core.tools.spy.SpyPlugin2  Stack trace: java/lang/Throwable. < init > ()V    java/lang/Throwable. < init > (Ljava/lang/String;)V    org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass (Ljava/lang/String;Z)Ljava/lang/Class;    java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation() V    org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin (Ljava/lang/String;)V org/eclipse/core/internal/plugins/PluginClassLoader.internalFindClassParentsSel f (Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z) Ljava/lang/Class;    org/eclipse/core/internal/boot/DelegatingURLClassLoader.findClassParentsSelf (Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z) Ljava/lang/Class; org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass (Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lj ava/util/Vector;Z)Ljava/lang/Class;    org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass (Ljava/lang/String;Z)Ljava/lang/Class;    java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension (Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEl ement;Ljava/lang/String;)Ljava/lang/Object;    org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtim e/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object; org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtensio n(Ljava/lang/String;)Ljava/lang/Object;    org/eclipse/ui/internal/WorkbenchPlugin$1.run()V org/eclipse/swt/custom/BusyIndicator.showWhile (Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V org/eclipse/ui/internal/WorkbenchPlugin.createExtension (Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;) Ljava/lang/Object;    org/eclipse/ui/internal/registry/ViewDescriptor.createView() Lorg/eclipse/ui/IViewPart;    org/eclipse/ui/internal/ViewFactory$1.run()V org/eclipse/core/internal/runtime/InternalPlatform.run (Lorg/eclipse/core/runtime/ISafeRunnable;)V org/eclipse/core/runtime/Platform.run (Lorg/eclipse/core/runtime/ISafeRunnable;)V org/eclipse/ui/internal/ViewFactory.restoreView (Lorg/eclipse/ui/IViewReference;)Lorg/eclipse/core/runtime/IStatus; org/eclipse/ui/internal/Perspective.showView(Ljava/lang/String;) Lorg/eclipse/ui/IViewPart; org/eclipse/ui/internal/WorkbenchPage.busyShowView(Ljava/lang/String;Z) Lorg/eclipse/ui/IViewPart; org/eclipse/ui/internal/WorkbenchPage.access$7 (Lorg/eclipse/ui/internal/WorkbenchPage;Ljava/lang/String;Z) Lorg/eclipse/ui/IViewPart;    org/eclipse/ui/internal/WorkbenchPage$12.run()V org/eclipse/swt/custom/BusyIndicator.showWhile (Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V org/eclipse/ui/internal/WorkbenchPage.showView(Ljava/lang/String;Z) Lorg/eclipse/ui/IViewPart; org/eclipse/ui/internal/WorkbenchPage.showView(Ljava/lang/String;) Lorg/eclipse/ui/IViewPart; org/eclipse/ui/internal/ShowViewMenu.showOther()V    org/eclipse/ui/internal/ShowViewMenu.access$0 (Lorg/eclipse/ui/internal/ShowViewMenu;)V    org/eclipse/ui/internal/ShowViewMenu$2.run()V org/eclipse/jface/action/Action.runWithEvent (Lorg/eclipse/swt/widgets/Event;)V org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection (Lorg/eclipse/swt/widgets/Event;)V org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent (Lorg/eclipse/swt/widgets/Event;)V org/eclipse/jface/action/ActionContributionItem.access$0 (Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Even t;)V    org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent (Lorg/eclipse/swt/widgets/Event;)V    org/eclipse/swt/widgets/EventTable.sendEvent (Lorg/eclipse/swt/widgets/Event;)V    org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V org/eclipse/swt/widgets/Display.runDeferredEvents()Z    org/eclipse/swt/widgets/Display.readAndDispatch()Z org/eclipse/ui/internal/Workbench.runEventLoop()V    org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object; org/eclipse/core/internal/boot/InternalBootLoader.run (Ljava/lang/String;Ljava/net/URL;Ljava/lang/String; [Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;    org/eclipse/core/boot/BootLoader.run (Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;) Ljava/lang/Object; EclipseRuntimeLauncher.main([Ljava/lang/String;)V No further information from originator.  Please reopen this bug if you have  more information on how it can be reproduced.
JDT	Smoke 20: Rendering of methods different in Class Hierarchy / Outliner (1FZOKGK) MA (8/14/00 6:09:15 PM)  1. open java.lang object form rt.jar with correct source annotation 2. activate static methods in the class hierrachy viewer  3. the hierarhcy viewer renders a method < clinit > , which is not shown in the outliner  MA (8/14/00 6:09:20 PM) I think, static initializers should be rendered which a human readable name, also in source files  NOTES: KUM (8/15/00 6:11:17 PM) < clinit > are compiler generated initializers. They are different from the initializer code which can be  placed directly into the source of a class such as class X {     { // initializer per instance     } static {       // class initializer }    } Such initializers show up in the outline and in the method view. < clinit > shouldn't show up in the  type viewer's method list.  EG (8/31/00 8:00:37 PM) agreed, synthetic initializers should be hidden  MA (11/7/00 6:05:24 PM) filtered out in TypeHierarchy > 25  AK (11/16/00 4:30:18 PM) not fixed  initializers show up only in the outliner now (so it's changed since KUM wrote the comment above)  EG (12/5/00 1:05:46 PM) consider once we are on new SEF DM (1/29/01 12:34:40 PM)  Verified -- > not fixed  The problem is now also in the Ouline view and the problem is even worse in my opinion because the default constructor is now rendered as if it  would be real (i.e. explicitly defined in the class). Test Case: java.applet.Applet.class   == > synthetic members should be shown but recognizable as such.   MINOR PROBLEM - NOT FOR WEDNESDAY MA (20.08.2001 17:23:13)  Initializers were not rendered in the type hierarchy. added in 200 Can't see constructors in outline for class files. moved to ' active ' PRODUCT VERSION:  Jabiru 20 closing Reopened 20020115: When looking at java.lang.String in Hierarchy view, it shows < clinit > . However, in outliner < clinit > is not shown. we should consolidate the filters used in the outliner and the type hierarchy. fixed this in the MethodViewerFilter > 20115 Verified. < clinit > no longer apears in hierarchy view. > 20122 JRT.
Platform	Buttons on all of the Team Preference Pages are too small None of the Team Preference pages are using the JFace button sizing support so  as a result they are always smaller than the others in Eclipse - this is very noticable if you have large font settings. Fixed.
JDT	nls: incorrect value generated for ' {0} ' it generates \ ' {0} ' (but only if it's the last thing in the value, i think) fixed
Platform	API: Subclassing MarkerRulerAction (1GGLSQP) org.eclipse.ui.texteditor.MarkerRulerAction is documented as not meant to be subclass in the API documentation. However it is subclassed in org.eclipse.jdt.internal.ui.javaeditor.BreakpointRulerAction.  Additionally, it appears that MarkerRulerAction defines some useful base functionality so that it is possible to get a working breakpoint ruler action for a simple language plugin just by overriding addMarker. SUGGESTED CHANGES: One of the following: 1. Revise the API documentation to describe MarkerRulerAction as subclassable 2. Refactor MarkerRulerAction into AbstractMarkerRulerAction, leaving out addMarker to be defined by subclasses. Make a new MarkerRulerAction as a subclass of AbstractMarkerRulerAction.  Document AbstractMarkerRulerAction as subclassable but MarkerRulerAction as non-subclassable. DS (7/10/01 1:37:25 PM)  Sent email to KH. DW (7/18/01 8:52:50 AM)  moved to JUI. PRODUCT VERSION: 125 Post 2.0 Must be reconsidered as implementation changed.
Platform	cvs and team pref pages - button ui glitches CVS  1. ' add variables ' buttons have incorrect size - see buttons on other  preference pages 2. ' Browse ' button - incorrect size, missing ' ... ' and missing mnemonic  Team 3. all buttons have incorrect sizes 4. the 2 buttons on the ' ignored resources ' page should be aligned to the top  of the table (see: java/classpath variables page) 4 aplies also to 3 buttons on the ' Team ' page Fixed all.
Platform	Widget disposed opening " Switch to Editor " dialog Build 20020602 (F2)  I haven't been able to reproduce this.  Here is some related info:  - I was in a new workbench, in the resources perspective - I had recently opened every view and then reset the perspective - I was playing with show/hide editors, and observing the layout changes for different view configurations. - At some point during this, I hit Ctrl+Shift+W to open recent editors.  This is when I got the widget is disposed error.  I couldn't reproduce, but maybe the  stack trace has enough information to enable investigation... Looks like it occurred when the active view was being deactivated. Probably a dup of 19144 since you opened Update Manager's Preview view.  *** This bug has been marked as a duplicate of 19144 ***
JDT	new non-nls strings not noticed on typing maybe a jcore bug  20021016 set the non-nls error level to ' warning ' public class As {  static void y(){ System.out.println( " ssadasdasdasdasd " );  } } now, split the string by pressing enter inside it. you now have 2 non-nlsed string, and only 1 is marked as such by a wiggly. When splitting another time, i.e., ending up with three non externalized  strings, the first and the last are reported but not the one in the middle. Moving to core. *** This bug has been marked as a duplicate of 25298 ***
Platform	pessimistic provider breaks product specific views Our product has several custom views, when using the pessimistic filesystem  provider we encounter problems that stop our views from working. The problem appears to be in the getProvider method below. Adding a guard against a null project resolves this issue. private PessimisticFilesystemProvider getProvider(IResource resource) {  // Guard against a null project IProject project= resource.getProject();  if (project == null) return null; return (PessimisticFilesystemProvider)   RepositoryProvider.getProvider(project, PessimisticFilesystemProviderPlugin.NATURE_ID); } I will this null pointer issue in my next release.  Just so that we are clear, the pessimistic provider assumes that every resource has a project.  If you have implemented the IResource tree on  your own, and your resources do not have projects, the pessimistic provider is not going to be able to manage your resources. Sorry for the typo, the first line should read:  I will address this null pointer issue in my next release. For our product every resource has a project. Some of our views provide a  logical view of the resources, not a physical view of the filessystem and that's how we encountered this bug. So, in the case of our product your  assumption holds true. Resolving fixed, sent latest build to platform-vcm. This is still broken using the 20021112 version of the pessimistic provider.   You can recreate this error using Eclipse only.  Create a Simple project in the Navigator view.  Select the project and choose Go Into.  You'll get the  following exception.  This is because the object being passed to decorateText() is a WorkspaceRoot.  WorkspaceRoot.getProject() returns null, which  RepositoryProvider.getProvider() doesn't handle.  WorkspaceRoot is an IResource.  java.lang.NullPointerException at org.eclipse.team.core.RepositoryProvider.getProvider (RepositoryProvider.java:374) at  org.eclipse.team.examples.pessimistic.ui.PessimisticDecorator.getProvider (PessimisticDecorator.java:81)  at org.eclipse.team.examples.pessimistic.ui.PessimisticDecorator.decorateText (PessimisticDecorator.java:51) at org.eclipse.ui.internal.DecoratorDefinition.decorateText (DecoratorDefinition.java:251) at org.eclipse.ui.internal.DecoratorManager.decorateText (DecoratorManager.java:112) at org.eclipse.jface.viewers.DecoratingLabelProvider.getText (DecoratingLabelProvider.java:102) at org.eclipse.ui.views.framelist.TreeFrame. < init > (TreeFrame.java:49)  at org.eclipse.ui.views.framelist.TreeViewerFrameSource.createFrame (TreeViewerFrameSource.java:55)  at org.eclipse.ui.views.navigator.NavigatorFrameSource.createFrame (NavigatorFrameSource.java:33)  at org.eclipse.ui.views.framelist.TreeViewerFrameSource.getCurrentFrame (TreeViewerFrameSource.java:79)  at org.eclipse.ui.views.framelist.TreeViewerFrameSource.getFrame (TreeViewerFrameSource.java:93) at org.eclipse.ui.views.framelist.FrameList.updateCurrentFrame (FrameList.java:212) at org.eclipse.ui.views.framelist.FrameList.setCurrent (FrameList.java:182) at org.eclipse.ui.views.framelist.FrameList.gotoFrame (FrameList.java:158) at org.eclipse.ui.views.framelist.GoIntoAction.run(GoIntoAction.java:43)  at org.eclipse.jface.action.Action.runWithEvent(Action.java:749) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:407) at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent (ActionContributionItem.java:361) at org.eclipse.jface.action.ActionContributionItem.access$0 (ActionContributionItem.java:352) at  org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent (ActionContributionItem.java:47)  at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1343) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:831)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432) at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24) The workspace root cannot be shared via a repository provider, however, the decorator should be able to handle null providers.  Thanks for the heads up. I have been unable to reproduce this problem.  But, after reading the code, it is obvious that if a IWorkspaceRoot is ever passed into the decorator, it will fail.  I will include this fix in my Friday, Nov. 22, build.
JDT	Stale packages view after moving compilation units Create the Example project JUnit.  1) move ActiveTestSuite.java from junit.extension to the junit package using the move action 2) the junit package doesn't show up in the packages view  The delta we are getting from JCore is correct, but it looks like the JavaModel isn't up to date. When asking calling hasChildren() on " junit " false is returned. Smells like we did not close the affected element when adding the moved child. Problem was only when moving a cu from/to a package that was the pre/suffix of  the original package. The delta processor was creating the wrong element, thus not updating the java  model. (this wrong element was not showing up for the client since the delta created by the operation was fired). *** Bug 7070 has been marked as a duplicate of this bug. ***
JDT	Checking out a project from the repository overwriting an existing binary does not update the binary projects filter [filters] build F2  1) import a binary plug-in 2) in the navigator select the filter binary projects option 3) check out the same project from the repository 4) the project does not show up in the navigator as if it was a binary project PDE works correctly in this case. Just go to the pull-down and disable the  binary project filter. The project will show up and if you have binary decorators turned on, you will notice that it does not have a decorator  (this is important because binary decorator and binary project filter use the same method to determine if a project is a binary plug-in project). Now  enable the binary filter again - you will notice that it will stay visible. The problem is likely in that the Packages view didn't refresh on resource  changes. Moving to JDT UI. Verified. Candidate for F4 need to investigate what kind of deltas we receive when a project changes from  binary to source no action for 2.0 reopen to fix The resource delta reports model and project as changed. It reports files that were there before replacing as having changed. The delta also contains additions and removals. The problem is that if CONTENT changes we normally assume that it does not affect filtering (otherwise we would have to refresh the viewer upon each delta). The binary filter uses internal state which is not covered by the resource delta. Adding a resource listener and acting to it is not possible for the BinaryProjectFilter since it is contributed via XML and has no access to its viewer. Also there's no special resource delta to catch a replace of a project. If we would get an add and a remove then it would work. 1) Adding a resource listener and acting to it is not possible for the BinaryProjectFilter for another reason: ViewerFilter does not have a life cycle and therefore it would not be possible to remove the listener once the filter gets removed from the viewer. If this changes in the future the BinaryProjectFilter could fix the problem. 2) It is not fully true that the delta does not contain the information whether the project description has changed or not: the project's resource delta kind contains the flag IResourceDelta.DESCRIPTION but unfortunately this is not contained in the Java element delta. However this information would not help to cleanly solve the problem (see 3). 3) The content provider would have to assume that there is a filter which depends on the project description. This is not ok. The general approach i.e. assuming that a resource content change could trigger a refilter is not feasible since it would mean to refilter on every resource change. Removing target milestone and defer problem (LATER). needs more steps than one to change the owner of a later PR needs more steps than one to change the owner of a later PR *** Bug 25139 has been marked as a duplicate of this bug. ***
Platform	Incorrect infopop on Import (from File System) wizard On the 1/25 driver for Windows...  Open the import wizard, select File System then click Next. On the ' import from  file system ' page, press F1. The infopop for exporting resources to the file  system, rather than the importing from the file system, comes up. Replicated in 20020114 Resolved in 0612
Platform	Variables View re-positions on each step (1GETE8F) DW (6/4/2001 4:08:07 PM)  118 - Linux If I expand the variables view tree such that the scroll bar is visible,  on each step, the variables view updates but re-positions to the top of the tree.  DW (6/4/2001 4:23:58 PM) It appears the variables view is switching to reveal the selected item  which is the root of the tree by default. DW (6/5/01 6:56:53 PM)  Not critical. Note that on NT, the tree does not reveal the selection. Moving to ITPUI. Inconsistent viewer behavior between platforms.  KH (6/6/2001 4:11:14 PM) Moving to SWT for comment.    McQ (26/06/2001 9:23:47 AM) - Are the calling showItem with null? Does this behave differently on   Windows than on Linux. Please investigate if this problem still exists. Assigning back to SWT - incorrectly reassigned to Jared B. Please check if this has been fixed and mark PR as either FIXED or  LATER as appropriate. Still occurs in some circumstances.  Deferring... Reopening... The scrolling behaviour that results from invoking the different flavours of  setSelection(*) are now consistent between Tree, Table and List.  This has been verified on win32 and motif, and gtk and photon will be taken care of soon.  Darin, note that the correct widget behaviour is to scroll whenever a setSelection method is invoked, so the Motif behaviour was actually the correct  one.  Therefore the behaviour that you originally described as happening on Motif will now happen on win32 as well, so you'll have to change the debugger's  implementation accordingly.
Platform	Can't run in the linux which choose Simplified Chinese as the Default Local setting My OS is Mandrake 8.2, choosing Simplified Chinese as the Default Local Setting. And JDK1.4 was installed. I can not start eclipse at all. I find this " bug " (maybe it is a bug of eclipse, maybe it is a bug of JDK) in all the versions of eclipse released since last December (for the earlier versions, I nerver try) and in both of RedHat 7.2 and Mandrake 8.2 (not try in other release of Linux). But, when I chose English as the default local setting, eclipse worked quite well, even I chose Simplified Chinese as the local setting of my account. I guess there are some problems about fonts in JDK  or Eclipse. The following is the output of the error:  [zlj@r228 eclipse] $ ./eclipse Warning: Cannot convert string " -default-ming-light-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-r-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-light-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-helvetica-light-r-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-bold-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-bold-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-light-i-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-o-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-light-i-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-*-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-*-o-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-helvetica-light-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-light-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-r-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-light-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-helvetica-light-r-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-bold-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-bold-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-light-i-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-o-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-light-i-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-*-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-*-o-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-helvetica-light-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct An unexpected exception has been detected in native code outside the VM. Unexpected Signal : 11 occurred at PC=0x4C967F0C Function=XmRenderTableAddRenditions+0x40 Library=./libXm.so.2 Current Java thread:         at org.eclipse.swt.internal.motif.OS.XmRenderTableAddRenditions(Native Method)         - locked < 0x484f75f0 > (a java.lang.Class)         at org.eclipse. swt.graphics.GC.createRenderTable(GC.java:1021)         at org.eclipse.swt.graphics.GC.textExtent(GC.java:2475) at org.eclipse.swt.custom.CTabItem.preferredHeight(CTabItem.java:393)         at org.eclipse.swt.custom.CTabFolder.getTabHeight(CTabFolder.java:633) at org.eclipse.swt.custom.CTabFolder.layoutItems(CTabFolder.java:918)         at org.eclipse.swt.custom.CTabItem.setText(CTabItem.java:496) at org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:241) at org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:217) at org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:177) at org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:88) at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:558)         at org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1151) at org.eclipse.ui.internal.WorkbenchWindow$5.run(WorkbenchWindow.java:939)         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:926) at org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(WorkbenchWindow.java:287) at org.eclipse.ui.internal.WorkbenchWindow$4.run(WorkbenchWindow.java:704)         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56) at org.eclipse.ui.internal.WorkbenchWindow.openPage(WorkbenchWindow.java:701)         at org.eclipse.ui.internal.Workbench.openFirstTimeWindow(Workbench.java:491) at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:560)         at org.eclipse.ui.internal.Workbench.init(Workbench.java:407) at org.eclipse.ui.internal.Workbench.run(Workbench.java:702)         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)         at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:196)         at org.eclipse.core.launcher.Main.run(Main.java:555) at org.eclipse.core.launcher.Main.main(Main.java:396)  Dynamic libraries: 08048000-0804d000 r-xp 00000000 03:09 248962     /usr/java/j2sdk1.4.0/bin/java 0804d000-0804e000 rw-p 00004000 03:09 248962     /usr/java/j2sdk1.4.0/bin/java 40000000-40014000 r-xp 00000000 03:09 96778      /lib/ld-2.2.4.so 40014000-40015000 rw-p 00013000 03:09 96778      /lib/ld-2.2.4.so 40016000-4001f000 r-xp 00000000 03:09 265140     /usr/java/j2sdk1.4.0/jre/lib/i386/native_threads/libhpi.so 4001f000-40020000 rw-p 00008000 03:09 265140     /usr/java/j2sdk1.4.0/jre/lib/i386/native_threads/libhpi.so 40020000-40021000 r--p 00000000 03:09 213375     /usr/share/locale/zh_CN.GB2312/LC_IDENTIFICATION 40021000-40022000 r--p 00000000 03:09 213374     /usr/share/locale/zh_CN.GB2312/LC_MEASUREMENT 40022000-40023000 r--p 00000000 03:09 213368     /usr/share/locale/zh_CN.GB2312/LC_TELEPHONE 40023000-40024000 r--p 00000000 03:09 213376     /usr/share/locale/zh_CN.GB2312/LC_ADDRESS 40024000-40032000 r-xp 00000000 03:09 96824      /lib/libpthread-0.9.so 40032000-4003a000 rw-p 0000d000 03:09 96824      /lib/libpthread-0.9.so 4003a000-4003c000 r-xp 00000000 03:09 96792      /lib/libdl-2.2.4.so 4003c000-4003d000 rw-p 00001000 03:09 96792      /lib/libdl-2.2.4.so 4003d000-4016f000 r-xp 00000000 03:09 96788      /lib/libc-2.2.4.so 4016f000-40175000 rw-p 00131000 03:09 96788      /lib/libc-2.2.4.so 4017a000-4043d000 r-xp 00000000 03:09 55460      /usr/java/j2sdk1.4.0/jre/lib/i386/client/libjvm.so 4043d000-40585000 rw-p 002c2000 03:09 55460      /usr/java/j2sdk1.4.0/jre/lib/i386/client/libjvm.so 40599000-405ab000 r-xp 00000000 03:09 96797      /lib/libnsl-2.2.4.so 405ab000-405ad000 rw-p 00011000 03:09 96797      /lib/libnsl-2.2.4.so 405af000-405e8000 r-xp 00000000 03:09 177717     /usr/lib/libstdc++-3-libc6.2-2-2.10.0.so 405e8000-405f9000 rw-p 00038000 03:09 177717     /usr/lib/libstdc++-3-libc6.2-2-2.10.0.so 405fc000-4061d000 r-xp 00000000 03:09 96794      /lib/libm-2.2.4.so 4061d000-4061e000 rw-p 00020000 03:09 96794      /lib/libm-2.2.4.so 4061e000-4062f000 r-xp 00000000 03:09 39369      /usr/java/j2sdk1.4.0/jre/lib/i386/libverify.so 4062f000-40631000 rw-p 00010000 03:09 39369      /usr/java/j2sdk1.4.0/jre/lib/i386/libverify.so 40631000-40652000 r-xp 00000000 03:09 39357      /usr/java/j2sdk1.4.0/jre/lib/i386/libjava.so 40652000-40654000 rw-p 00020000 03:09 39357      /usr/java/j2sdk1.4.0/jre/lib/i386/libjava.so 40655000-40669000 r-xp 00000000 03:09 39370      /usr/java/j2sdk1.4.0/jre/lib/i386/libzip.so 40669000-4066c000 rw-p 00013000 03:09 39370      /usr/java/j2sdk1.4.0/jre/lib/i386/libzip.so 4066c000-41ce4000 r--s 00000000 03:09 281282     /usr/java/j2sdk1.4.0/jre/lib/rt.jar 41d26000-41d3d000 r--s 00000000 03:09 281283 /usr/java/j2sdk1.4.0/jre/lib/sunrsasign.jar 41d3d000-41dab000 r--s 00000000 03:09 281276 /usr/java/j2sdk1.4.0/jre/lib/jsse.jar 41dab000-41dbe000 r--s 00000000 03:09 281275 /usr/java/j2sdk1.4.0/jre/lib/jce.jar 41dbe000-4203f000 r--s 00000000 03:09 281264 /usr/java/j2sdk1.4.0/jre/lib/charsets.jar 440e7000-440e8000 r--p 00000000 03:09 213371 /usr/share/locale/zh_CN.GB2312/LC_NAME 440e8000-440e9000 r--p 00000000 03:09 213369 /usr/share/locale/zh_CN.GB2312/LC_PAPER 440e9000-440ea000 r--p 00000000 03:09 213373 /usr/share/locale/zh_CN.GB2312/LC_MESSAGES/SYS_LC_MESSAGES 440ea000-440eb000 r--p 00000000 03:09 213372 /usr/share/locale/zh_CN.GB2312/LC_MONETARY 440eb000-440ec000 r--p 00000000 03:09 213367 /usr/share/locale/zh_CN.GB2312/LC_TIME 440ec000-440ed000 r--p 00000000 03:09 213370 /usr/share/locale/zh_CN.GB2312/LC_NUMERIC 440ed000-440ef000 r--s 00000000 03:09 55453 /usr/java/j2sdk1.4.0/jre/lib/ext/dnsns.jar 4c170000-4c1a2000 r--p 00000000 03:09 294057     /usr/share/locale/zh/LC_CTYPE 4c1a2000-4c1c9000 r--p 00000000 03:09 294056     /usr/share/locale/zh/LC_COLLATE4c1c9000-4c1d7000 r--s 00000000 03:09 55454 /usr/java/j2sdk1.4.0/jre/lib/ext/ldapsec.jar 4c1d7000-4c1e0000 r-xp 00000000 03:09 96813      /lib/libnss_files-2.2.4.so 4c1e0000-4c1e1000 rw-p 00008000 03:09 96813      /lib/libnss_files-2.2.4.so 4c20c000-4c2af000 r--s 00000000 03:09 55455 /usr/java/j2sdk1.4.0/jre/lib/ext/localedata.jar 4c2af000-4c2cc000 r--s 00000000 03:09 55456 /usr/java/j2sdk1.4.0/jre/lib/ext/sunjce_provider.jar 4c2cc000-4c2d0000 r--s 00000000 03:09 297536     /home/zlj/eclipse/startup.jar 4c2d0000-4c2e2000 r--s 00000000 03:09 297179     /home/zlj/eclipse/plugins/org.eclipse.core.boot/boot.jar 4c2e2000-4c313000 r--s 00000000 03:09 297193     /home/zlj/eclipse/plugins/org.eclipse.core.runtime/runtime.jar 4c313000-4c4cc000 r--s 00000000 03:09 168502     /home/zlj/eclipse/plugins/org.apache.xerces/xerces.jar 4c4cc000-4c738000 r--s 00000000 03:09 71509      /home/zlj/eclipse/plugins/org.eclipse.ui/workbench.jar 4c738000-4c7b1000 r--s 00000000 03:09 152277     /home/zlj/eclipse/plugins/org.eclipse.core.resources/resources.jar 4c7b1000-4c7b4000 r-xp 00000000 03:09 177453     /usr/lib/gconv/EUC-CN.so 4c7b4000-4c7b5000 rw-p 00002000 03:09 177453     /usr/lib/gconv/EUC-CN.so 4c7b5000-4c7b6000 r-xp 00000000 03:09 210228     /usr/X11R6/lib/X11/locale/common/xlocale.so.2 4c7b6000-4c7b7000 rw-p 00000000 03:09 210228     /usr/X11R6/lib/X11/locale/common/xlocale.so.2 4c7b7000-4c7bd000 r-xp 00000000 03:09 210227     /usr/X11R6/lib/X11/locale/common/xlibi18n.so.2 4c7bd000-4c7be000 rw-p 00005000 03:09 210227     /usr/X11R6/lib/X11/locale/common/xlibi18n.so.2 4c7bf000-4c7cd000 r-xp 00000000 03:09 242396     /usr/X11R6/lib/libXext.so.6.4 4c7cd000-4c7ce000 rw-p 0000d000 03:09 242396     /usr/X11R6/lib/libXext.so.6.4 4c7ce000-4c7d5000 r-xp 00000000 03:09 242408     /usr/X11R6/lib/libXp.so.6.2 4c7d5000-4c7d6000 rw-p 00006000 03:09 242408     /usr/ X11R6/lib/libXp.so.6.2 4c7d6000-4c7de000 r-xp 00000000 03:09 242386     /usr/X11R6/lib/libSM.so.6.0 4c7de000-4c7df000 rw-p 00007000 03:09 242386     /usr/X11R6/lib/libSM.so.6.0 4c7fb000-4c840000 r-xp 00000000 03:09 297205 /home/zlj/eclipse/plugins/org.eclipse.swt/os/linux/x86/libswt-motif-2031.so 4c840000-4c843000 rw-p 00044000 03:09 297205 /home/zlj/eclipse/plugins/org.eclipse.swt/os/linux/x86/libswt-motif-2031.so 4c844000-4c9c8000 r-xp 00000000 03:09 297537     /home/zlj/eclipse/libXm.so.2.1 4c9c8000-4c9db000 rw-p 00183000 03:09 297537     /home/zlj/eclipse/libXm.so.2.1 4c9dc000-4ca2a000 r-xp 00000000 03:09 242414     /usr/X11R6/lib/libXt.so.6.0 4ca2a000-4ca2e000 rw-p 0004d000 03:09 242414     /usr/X11R6/lib/libXt.so.6.0 4ca34000-4ca4e000 r--s 00000000 03:09 249049 /home/zlj/eclipse/plugins/org.eclipse.help/help.jar 4ca4e000-4cb2b000 r--s 00000000 03:09 297199 /home/zlj/eclipse/plugins/org.eclipse.swt/ws/motif/swt.jar 4cb2b000-4cbef000 r-xp 00000000 03:09 242388     /usr/X11R6/lib/libX11.so.6.2 4cbef000-4cbf2000 rw-p 000c3000 03:09 242388     /usr/X11R6/lib/libX11.so.6.2 4cbf2000-4cc06000 r-xp 00000000 03:09 242382     /usr/X11R6/lib/libICE.so.6.3 4cc06000-4cc07000 rw-p 00013000 03:09 242382     /usr/X11R6/lib/libICE.so.6.3 4cc09000-4cc19000 r-xp 00000000 03:09 177594     /usr/lib/gconv/libGB.so 4cc19000-4cc1a000 rw-p 0000f000 03:09 177594     /usr/lib/gconv/libGB.so 4cc1a000-4cc34000 r-xp 00000000 03:09 210224 /usr/X11R6/lib/X11/locale/common/ximcp.so.2 4cc34000-4cc37000 rw-p 00019000 03:09 210224 /usr/X11R6/lib/X11/locale/common/ximcp.so.2 4cc37000-4cc6a000 r--s 00000000 00:05 393224     /SYSV00000000 (deleted) 4cc6a000-4cdab000 r--s 00000000 03:09 184589     /home/zlj/eclipse/plugins/org.eclipse.pde/pde.jar 4cdab000-4ce20000 r--s 00000000 03:09 71692      /home/zlj/eclipse/plugins/org.eclipse.team.cvs.ui/teamcvsui.jar 4cec5000-4cf0c000 r--s 00000000 03:09 168461     /home/zlj/eclipse/plugins/org.eclipse.update.ui/updateui.jar Local Time = Sun Apr 14 03:27:39 2002 Elapsed Time = 22 # # The exception above was detected in native code outside the VM # # Java VM: Java HotSpot(TM) Client VM (1.4.0-b92 mixed mode) # # An error report file has been saved as hs_err_pid2900.log. # Please refer to the file for further information. # Warning: Cannot convert string " -default-ming-light-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-r-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-light-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-helvetica-light-r-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-bold-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-bold-r-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-light-i-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -default-ming-*-o-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-light-i-normal-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-*-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-ming-*-o-*-*-*-160-75-75-*-*-*-* " to type FontStruct Warning: Cannot convert string " -*-helvetica-light-i-*-*-*-160-75-75-*-*-*-* " to type FontStruct [zlj@r228 eclipse]$ GG to discuss with SSQ. ZHAO,  Please could you run " xlsfonts " in a shell and make sure that those fonts are installed on your system? Also could you run " locale " on both configurations and post the output to this PR? I am not sure what is different when running Simplified Chinise as the Default Local Setting that would cause this problem.  Thanks! Silenio Closing report since locale-related problems in swt motif should be fixed as of  the M3 build, which should be finished tomorrow.  If the problem persists for you using the M3 then please reopen the report.
JDT	would like to be able to configure color for the oveview ruler ' dots ' their color is hard-wired now Is also an accessibility issue. Done.
Platform	Placement of " Reset Toolbar Layout " Build 20020612b  The third group of actions in the Window menu are all related to managing perspectives, except for " Reset Toolbar Layout " in the middle of that group.  It  seems that action would be more appropriately grouped next to " Lock the  Toolbars " in the second group. Agree. Candidate for F4. High usability value, very low risk (moving one line of code). Julian also recommends this placement. Fix released in WorkbenchActionBuilder. Simon and Eduardo, could you please double-check and verify it? Checked by Simon Checked by Eduardo. Marking as fixed.
JDT	use workbench element list selection dialog We reference ElementListSelectionDialog in many places (from internal JUI). The  workbench now offers a similar dialog that we should use instead. Fix all references to this.  As well, we should create utility for an " all packages " dialog, which we use in  several places (Exception breakpoint property page, Step filter preference page, add imports action in snippet editor).  Created to fix some internal reference problems listed in bug# 6360. All of our classes use the workbench element list selection dialog. Created utility method on JDIDebugUIPlugin to create the " All packages Dialog " . Please verify. Verified.
Platform	NullPointerException from org.eclipse.debug.core.Launch.isTerminated() method I'm using IBM WebSphere Studio Application Developer v4.0.3 on a Windows 2000  machine. I can't seem to start WSAD's built-in WebSphere test environment due  to an underlying error from Eclipse.  Any suggestions? Log: Mon Jul 01 18:56:16 GMT+01:00 2002 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop. Log: Mon Jul 01 18:56:16 GMT+01:00 2002 4 org.eclipse.ui 0 java.lang.NullPointerException java.lang.NullPointerException  at org.eclipse.debug.core.Launch.isTerminated(Launch.java:184) at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText (DelegatingModelPresentation.java:388) at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:88)  at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem (AbstractTreeViewer.java:352)  at org.eclipse.jface.viewers.StructuredViewer.updateItem (StructuredViewer.java:887)  at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem (AbstractTreeViewer.java:256)  at org.eclipse.jface.viewers.AbstractTreeViewer.add (AbstractTreeViewer.java:130)  at org.eclipse.jface.viewers.AbstractTreeViewer.add (AbstractTreeViewer.java:163)  at org.eclipse.debug.internal.ui.DebugContentProvider.insert (DebugContentProvider.java:191)  at org.eclipse.debug.internal.ui.ProcessesContentProvider$1.run (ProcessesContentProvider.java:50)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:26) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:85) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1260)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1095) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:673)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:656) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:442) at org.eclipse.core.launcher.Main.main(Main.java:315) Log: Mon Jul 01 18:56:17 GMT+01:00 2002 4 org.eclipse.core.runtime 0 Unhandled exception caught in event loop. org.eclipse.jface.util.Assert$AssertionFailedException: null argument; at org.eclipse.jface.util.Assert.isNotNull(Assert.java:133)  at org.eclipse.jface.util.Assert.isNotNull(Assert.java:110) at org.eclipse.jface.viewers.StructuredSelection. < init > (StructuredSelection.java:54)  at org.eclipse.debug.internal.ui.LaunchesView.autoExpand (LaunchesView.java:51)  at org.eclipse.debug.internal.ui.DebugUIPlugin$1.run (DebugUIPlugin.java:166)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:26) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:85) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1260)  at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1095) at org.eclipse.jface.window.Window.runEventLoop(Window.java:536)  at org.eclipse.jface.window.Window.open(Window.java:523) at org.eclipse.jface.dialogs.MessageDialog.openError (MessageDialog.java:318) at org.eclipse.ui.internal.Workbench.handleExceptionInEventLoop (Workbench.java:362) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:676)  at org.eclipse.ui.internal.Workbench.run(Workbench.java:656) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)  at java.lang.reflect.Method.invoke(Native Method) at org.eclipse.core.launcher.Main.basicRun(Main.java:151)  at org.eclipse.core.launcher.Main.run(Main.java:442) at org.eclipse.core.launcher.Main.main(Main.java:315) Log: Mon Jul 01 18:56:17 GMT+01:00 2002 4 org.eclipse.core.runtime 0 null argument; org.eclipse.jface.util.Assert$AssertionFailedException: null argument; at org.eclipse.jface.util.Assert.isNotNull(Assert.java:133)  at org.eclipse.jface.util.Assert.isNotNull(Assert.java:110) at org.eclipse.jface.viewers.StructuredSelection. < init > (StructuredSelection.java:54)  at org.eclipse.debug.internal.ui.LaunchesView.autoExpand (LaunchesView.java:51)  at org.eclipse.debug.internal.ui.DebugUIPlugin$1.run (DebugUIPlugin.java:166)  at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:26) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages (Synchronizer.java:85) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1260)  at org.ecl ipse.swt.widgets.Display.readAndDispatch(Display.java:1095)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:536) at org.eclipse.jface.window.Window.open(Window.java:523)  at org.eclipse.jface.dialogs.MessageDialog.openError (MessageDialog.java:318)  at org.eclipse.ui.internal.Workbench.handleExceptionInEventLoop (Workbench.java:362)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:676) at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:442)  at org.eclipse.core.launcher.Main.main(Main.java:315) Log: Mon Jul 01 18:56:23 GMT+01:00 2002 4 org.eclipse.core.runtime 0 Unhandled exception caught in event loop. java.lang.NullPointerException  at org.eclipse.debug.core.Launch.isTerminated(Launch.java:184) at org.eclipse.debug.core.Launch.canTerminate(Launch.java:111)  at org.eclipse.debug.internal.ui.TerminateActionDelegate.isEnabledFor (TerminateActionDelegate.java:36)  at org.eclipse.debug.internal.ui.ControlActionDelegate.getEnableStateForSelection (ControlActionDelegate.java:64) at org.eclipse.debug.internal.ui.ControlActionDelegate.selectionChanged (ControlActionDelegate.java:155) at org.eclipse.debug.internal.ui.ControlAction.selectionChanged (ControlAction.java:52) at org.eclipse.debug.internal.ui.LaunchesView.updateButtons (LaunchesView.java:224) at org.eclipse.debug.internal.ui.LaunchesView.selectionChanged (LaunchesView.java:203) at org.eclipse.jface.viewers.Viewer.fireSelectionChanged (Viewer.java:147) at org.eclipse.jface.viewers.StructuredViewer.updateSelection (StructuredViewer.java:907) at org.eclipse.jface.viewers.StructuredViewer.handleSelect (StructuredViewer.java:463) at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetSelected (AbstractTreeViewer.java:624) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:83) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1282) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1092)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:536) at org.eclipse.jface.window.Window.open(Window.java:523)  at org.eclipse.jface.dialogs.MessageDialog.openError (MessageDialog.java:318)  at org.eclipse.ui.internal.Workbench.handleExceptionInEventLoop (Workbench.java:362)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:676) at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:442)  at org.eclipse.core.launcher.Main.main(Main.java:315) Log: Mon Jul 01 18:56:24 GMT+01:00 2002 4 org.eclipse.core.runtime 0 java.lang.NullPointerException java.lang.NullPointerException  at org.eclipse.debug.core.Launch.isTerminated(Launch.java:184) at org.eclipse.debug.core.Launch.canTerminate(Launch.java:111)  at org.eclipse.debug.internal.ui.TerminateActionDelegate.isEnabledFor (TerminateActionDelegate.java:36)  at org.eclipse.debug.internal.ui.ControlActionDelegate.getEnableStateForSelection (ControlActionDelegate.java:64) at org.eclipse.debug.internal.ui.ControlActionDelegate.selectionChanged (ControlActionDelegate.java:155) at org.eclipse.debug.internal.ui.ControlAction.selectionChanged (ControlAction.java:52) at org.eclipse.debug.internal.ui.LaunchesView.updateButtons (LaunchesView.java:224) at org.eclipse.debug.internal.ui.LaunchesView.selectionChanged (LaunchesView.java:203) at org.eclipse.jface.viewers.Viewer.fireSelectionChanged (Viewer.java:147) at org.eclipse.jface.viewers.StructuredViewer.updateSelection (StructuredViewer.java:907) at org.eclipse.jface.viewers.StructuredViewer.handleSelect (StructuredViewer.java:463) at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetSelected (AbstractTreeViewer.java:624) at org.eclipse.swt.widgets.TypedListener.handleEvent (TypedListener.java:83) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java (Compiled Code)) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634)  at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1282) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1092)  at org.eclipse.jface.window.Window.runEventLoop(Window.java:536) at org.eclipse.jface.window.Window.open(Window.java:523)  at org.eclipse.jface.dialogs.MessageDialog.openError (MessageDialog.java:318)  at org.eclipse.ui.internal.Workbench.handleExceptionInEventLoop (Workbench.java:362)  at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:676) at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)  at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:815)  at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285) at java.lang.reflect.Method.invoke(Native Method)  at org.eclipse.core.launcher.Main.basicRun(Main.java:151) at org.eclipse.core.launcher.Main.run(Main.java:442)  at org.eclipse.core.launcher.Main.main(Main.java:315) What version of Eclipse is being used? Is this actually an R1.0 bug (as noted  in the " version " above? Can this bug be closed? Looking at the 2.1 code, it looks NPE safe. Closing this bug (appears to be a  1.0 bug report, which is no longer supported).
JDT	OpenOnSelection unable to perform in single-type import Build 20020312  When selecting any of the type simple name in the imports of the following unit, no selection is computed.  [package p1; import javax.swing.JTable; import javax.swing.table.DefaultTableModel; import javax.swing.table.TableModel;  public class X {  public class AA extends JTable {   public AA(TableModel model) {    super(new TestModel()); }  } public class TestModel extends DefaultTableModel  { } } ] accumulated qualified results was not accepted.  Fixed. *** Bug 11340 has been marked as a duplicate of this bug. ***
JDT	Adding missing source folder doesn't remove warning (1GGCC4P) 1. Create Java project with no source folder  2. Change .classpath as follows: [ < ?xml version= " 1.0 " encoding= " UTF-8 " ? > < classpath > < classpathentry kind= " var " path= " JRE_LIB " rootpath= " JRE_SRCROOT " sourcepath= " JRE_SRC " / > < classpathentry kind= " src " path= " src " / > < classpathentry kind= " output " path= " bin " / > < /classpath > ]  Observe: The project has a warning saying that the folder src is missing as expected. 3. In the navigator, create folder src  Observe: The warning is still showing. NOTES: PRODUCT VERSION:  SDK 0.125+ Added a classpath marker refresh in pre_auto_build if autobuild is off. Fixed.
